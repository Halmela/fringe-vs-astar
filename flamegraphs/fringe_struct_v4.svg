<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="886" onload="init(evt)" viewBox="0 0 2560 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="869.00"> </text><svg id="frames" x="10" width="2540" total_samples="10155"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.11%)</title><rect x="0.0000%" y="805" width="0.1083%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="11"/><text x="0.1172%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.09%)</title><rect x="0.0197%" y="789" width="0.0886%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="9"/><text x="0.1369%" y="799.50"></text></g><g><title>_int_free (16 samples, 0.16%)</title><rect x="0.1182%" y="789" width="0.1576%" height="15" fill="rgb(221,193,54)" fg:x="12" fg:w="16"/><text x="0.2354%" y="799.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="0.2757%" y="789" width="0.0394%" height="15" fill="rgb(248,212,6)" fg:x="28" fg:w="4"/><text x="0.3929%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="0.3151%" y="789" width="0.0591%" height="15" fill="rgb(208,68,35)" fg:x="32" fg:w="6"/><text x="0.4323%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="0.3348%" y="773" width="0.0394%" height="15" fill="rgb(232,128,0)" fg:x="34" fg:w="4"/><text x="0.4520%" y="783.50"></text></g><g><title>[[heap]] (28 samples, 0.28%)</title><rect x="0.1083%" y="805" width="0.2757%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="28"/><text x="0.2255%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="0.3840%" y="789" width="0.0197%" height="15" fill="rgb(228,23,34)" fg:x="39" fg:w="2"/><text x="0.5012%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="0.3840%" y="773" width="0.0197%" height="15" fill="rgb(218,30,26)" fg:x="39" fg:w="2"/><text x="0.5012%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.02%)</title><rect x="0.3840%" y="757" width="0.0197%" height="15" fill="rgb(220,122,19)" fg:x="39" fg:w="2"/><text x="0.5012%" y="767.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (2 samples, 0.02%)</title><rect x="0.3840%" y="741" width="0.0197%" height="15" fill="rgb(250,228,42)" fg:x="39" fg:w="2"/><text x="0.5012%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.02%)</title><rect x="0.3840%" y="725" width="0.0197%" height="15" fill="rgb(240,193,28)" fg:x="39" fg:w="2"/><text x="0.5012%" y="735.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="0.4037%" y="789" width="0.0197%" height="15" fill="rgb(216,20,37)" fg:x="41" fg:w="2"/><text x="0.5209%" y="799.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.04%)</title><rect x="0.4234%" y="789" width="0.0394%" height="15" fill="rgb(206,188,39)" fg:x="43" fg:w="4"/><text x="0.5406%" y="799.50"></text></g><g><title>__rdl_realloc (5 samples, 0.05%)</title><rect x="0.4628%" y="789" width="0.0492%" height="15" fill="rgb(217,207,13)" fg:x="47" fg:w="5"/><text x="0.5800%" y="799.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="0.5121%" y="789" width="0.0295%" height="15" fill="rgb(231,73,38)" fg:x="52" fg:w="3"/><text x="0.6293%" y="799.50"></text></g><g><title>[[stack]] (21 samples, 0.21%)</title><rect x="0.3840%" y="805" width="0.2068%" height="15" fill="rgb(225,20,46)" fg:x="39" fg:w="21"/><text x="0.5012%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (5 samples, 0.05%)</title><rect x="0.5416%" y="789" width="0.0492%" height="15" fill="rgb(210,31,41)" fg:x="55" fg:w="5"/><text x="0.6588%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (5 samples, 0.05%)</title><rect x="0.5416%" y="773" width="0.0492%" height="15" fill="rgb(221,200,47)" fg:x="55" fg:w="5"/><text x="0.6588%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="0.5416%" y="757" width="0.0492%" height="15" fill="rgb(226,26,5)" fg:x="55" fg:w="5"/><text x="0.6588%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="0.5416%" y="741" width="0.0492%" height="15" fill="rgb(249,33,26)" fg:x="55" fg:w="5"/><text x="0.6588%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (5 samples, 0.05%)</title><rect x="0.5416%" y="725" width="0.0492%" height="15" fill="rgb(235,183,28)" fg:x="55" fg:w="5"/><text x="0.6588%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (5 samples, 0.05%)</title><rect x="0.5416%" y="709" width="0.0492%" height="15" fill="rgb(221,5,38)" fg:x="55" fg:w="5"/><text x="0.6588%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (5 samples, 0.05%)</title><rect x="0.5416%" y="693" width="0.0492%" height="15" fill="rgb(247,18,42)" fg:x="55" fg:w="5"/><text x="0.6588%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="0.5416%" y="677" width="0.0492%" height="15" fill="rgb(241,131,45)" fg:x="55" fg:w="5"/><text x="0.6588%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="0.5416%" y="661" width="0.0492%" height="15" fill="rgb(249,31,29)" fg:x="55" fg:w="5"/><text x="0.6588%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="0.5416%" y="645" width="0.0492%" height="15" fill="rgb(225,111,53)" fg:x="55" fg:w="5"/><text x="0.6588%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.07%)</title><rect x="0.5908%" y="789" width="0.0689%" height="15" fill="rgb(238,160,17)" fg:x="60" fg:w="7"/><text x="0.7080%" y="799.50"></text></g><g><title>__GI___libc_free (13 samples, 0.13%)</title><rect x="0.6598%" y="789" width="0.1280%" height="15" fill="rgb(214,148,48)" fg:x="67" fg:w="13"/><text x="0.7770%" y="799.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.07%)</title><rect x="0.7878%" y="789" width="0.0689%" height="15" fill="rgb(232,36,49)" fg:x="80" fg:w="7"/><text x="0.9050%" y="799.50"></text></g><g><title>[anon] (32 samples, 0.32%)</title><rect x="0.5908%" y="805" width="0.3151%" height="15" fill="rgb(209,103,24)" fg:x="60" fg:w="32"/><text x="0.7080%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.05%)</title><rect x="0.8567%" y="789" width="0.0492%" height="15" fill="rgb(229,88,8)" fg:x="87" fg:w="5"/><text x="0.9739%" y="799.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="0.9060%" y="789" width="0.0295%" height="15" fill="rgb(213,181,19)" fg:x="92" fg:w="3"/><text x="1.0231%" y="799.50"></text></g><g><title>_int_free (15 samples, 0.15%)</title><rect x="0.9355%" y="789" width="0.1477%" height="15" fill="rgb(254,191,54)" fg:x="95" fg:w="15"/><text x="1.0527%" y="799.50"></text></g><g><title>[fringe-vs-astar] (24 samples, 0.24%)</title><rect x="0.9060%" y="805" width="0.2363%" height="15" fill="rgb(241,83,37)" fg:x="92" fg:w="24"/><text x="1.0231%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="1.0832%" y="789" width="0.0591%" height="15" fill="rgb(233,36,39)" fg:x="110" fg:w="6"/><text x="1.2004%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.06%)</title><rect x="1.0832%" y="773" width="0.0591%" height="15" fill="rgb(226,3,54)" fg:x="110" fg:w="6"/><text x="1.2004%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.06%)</title><rect x="1.0832%" y="757" width="0.0591%" height="15" fill="rgb(245,192,40)" fg:x="110" fg:w="6"/><text x="1.2004%" y="767.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.06%)</title><rect x="1.0832%" y="741" width="0.0591%" height="15" fill="rgb(238,167,29)" fg:x="110" fg:w="6"/><text x="1.2004%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="1.1423%" y="789" width="0.0197%" height="15" fill="rgb(232,182,51)" fg:x="116" fg:w="2"/><text x="1.2595%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="1.1423%" y="773" width="0.0197%" height="15" fill="rgb(231,60,39)" fg:x="116" fg:w="2"/><text x="1.2595%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="1.1423%" y="757" width="0.0197%" height="15" fill="rgb(208,69,12)" fg:x="116" fg:w="2"/><text x="1.2595%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="1.1423%" y="741" width="0.0197%" height="15" fill="rgb(235,93,37)" fg:x="116" fg:w="2"/><text x="1.2595%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="1.1423%" y="725" width="0.0197%" height="15" fill="rgb(213,116,39)" fg:x="116" fg:w="2"/><text x="1.2595%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.02%)</title><rect x="1.1423%" y="709" width="0.0197%" height="15" fill="rgb(222,207,29)" fg:x="116" fg:w="2"/><text x="1.2595%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="1.1423%" y="693" width="0.0197%" height="15" fill="rgb(206,96,30)" fg:x="116" fg:w="2"/><text x="1.2595%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="1.1423%" y="677" width="0.0197%" height="15" fill="rgb(218,138,4)" fg:x="116" fg:w="2"/><text x="1.2595%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="1.1423%" y="661" width="0.0197%" height="15" fill="rgb(250,191,14)" fg:x="116" fg:w="2"/><text x="1.2595%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="1.1620%" y="789" width="0.0689%" height="15" fill="rgb(239,60,40)" fg:x="118" fg:w="7"/><text x="1.2792%" y="799.50"></text></g><g><title>__GI___libc_free (12 samples, 0.12%)</title><rect x="1.2309%" y="789" width="0.1182%" height="15" fill="rgb(206,27,48)" fg:x="125" fg:w="12"/><text x="1.3481%" y="799.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.06%)</title><rect x="1.3491%" y="789" width="0.0591%" height="15" fill="rgb(225,35,8)" fg:x="137" fg:w="6"/><text x="1.4663%" y="799.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="1.4082%" y="789" width="0.0295%" height="15" fill="rgb(250,213,24)" fg:x="143" fg:w="3"/><text x="1.5254%" y="799.50"></text></g><g><title>__rdl_realloc (4 samples, 0.04%)</title><rect x="1.4476%" y="789" width="0.0394%" height="15" fill="rgb(247,123,22)" fg:x="147" fg:w="4"/><text x="1.5648%" y="799.50"></text></g><g><title>_int_free (10 samples, 0.10%)</title><rect x="1.4870%" y="789" width="0.0985%" height="15" fill="rgb(231,138,38)" fg:x="151" fg:w="10"/><text x="1.6041%" y="799.50"></text></g><g><title>_int_malloc (9 samples, 0.09%)</title><rect x="1.5854%" y="789" width="0.0886%" height="15" fill="rgb(231,145,46)" fg:x="161" fg:w="9"/><text x="1.7026%" y="799.50"></text></g><g><title>_int_realloc (21 samples, 0.21%)</title><rect x="1.6741%" y="789" width="0.2068%" height="15" fill="rgb(251,118,11)" fg:x="170" fg:w="21"/><text x="1.7912%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.05%)</title><rect x="1.8808%" y="789" width="0.0492%" height="15" fill="rgb(217,147,25)" fg:x="191" fg:w="5"/><text x="1.9980%" y="799.50"></text></g><g><title>[unknown] (84 samples, 0.83%)</title><rect x="1.1423%" y="805" width="0.8272%" height="15" fill="rgb(247,81,37)" fg:x="116" fg:w="84"/><text x="1.2595%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="1.9301%" y="789" width="0.0394%" height="15" fill="rgb(209,12,38)" fg:x="196" fg:w="4"/><text x="2.0473%" y="799.50"></text></g><g><title>_IO_wide_data_0 (8 samples, 0.08%)</title><rect x="1.9695%" y="805" width="0.0788%" height="15" fill="rgb(227,1,9)" fg:x="200" fg:w="8"/><text x="2.0867%" y="815.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="1.9695%" y="789" width="0.0788%" height="15" fill="rgb(248,47,43)" fg:x="200" fg:w="8"/><text x="2.0867%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (2 samples, 0.02%)</title><rect x="2.2157%" y="613" width="0.0197%" height="15" fill="rgb(221,10,30)" fg:x="225" fg:w="2"/><text x="2.3328%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.02%)</title><rect x="2.2157%" y="597" width="0.0197%" height="15" fill="rgb(210,229,1)" fg:x="225" fg:w="2"/><text x="2.3328%" y="607.50"></text></g><g><title>__folio_throttle_swaprate (5 samples, 0.05%)</title><rect x="2.9050%" y="469" width="0.0492%" height="15" fill="rgb(222,148,37)" fg:x="295" fg:w="5"/><text x="3.0222%" y="479.50"></text></g><g><title>blk_cgroup_congested (3 samples, 0.03%)</title><rect x="2.9247%" y="453" width="0.0295%" height="15" fill="rgb(234,67,33)" fg:x="297" fg:w="3"/><text x="3.0419%" y="463.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.03%)</title><rect x="2.9739%" y="453" width="0.0295%" height="15" fill="rgb(247,98,35)" fg:x="302" fg:w="3"/><text x="3.0911%" y="463.50"></text></g><g><title>__rcu_read_unlock (23 samples, 0.23%)</title><rect x="3.0034%" y="453" width="0.2265%" height="15" fill="rgb(247,138,52)" fg:x="305" fg:w="23"/><text x="3.1206%" y="463.50"></text></g><g><title>__count_memcg_events (5 samples, 0.05%)</title><rect x="3.2693%" y="437" width="0.0492%" height="15" fill="rgb(213,79,30)" fg:x="332" fg:w="5"/><text x="3.3865%" y="447.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.02%)</title><rect x="3.2989%" y="421" width="0.0197%" height="15" fill="rgb(246,177,23)" fg:x="335" fg:w="2"/><text x="3.4161%" y="431.50"></text></g><g><title>charge_memcg (23 samples, 0.23%)</title><rect x="3.2299%" y="453" width="0.2265%" height="15" fill="rgb(230,62,27)" fg:x="328" fg:w="23"/><text x="3.3471%" y="463.50"></text></g><g><title>try_charge_memcg (14 samples, 0.14%)</title><rect x="3.3186%" y="437" width="0.1379%" height="15" fill="rgb(216,154,8)" fg:x="337" fg:w="14"/><text x="3.4357%" y="447.50"></text></g><g><title>consume_stock (2 samples, 0.02%)</title><rect x="3.4367%" y="421" width="0.0197%" height="15" fill="rgb(244,35,45)" fg:x="349" fg:w="2"/><text x="3.5539%" y="431.50"></text></g><g><title>get_mem_cgroup_from_mm (13 samples, 0.13%)</title><rect x="3.4564%" y="453" width="0.1280%" height="15" fill="rgb(251,115,12)" fg:x="351" fg:w="13"/><text x="3.5736%" y="463.50"></text></g><g><title>__mem_cgroup_charge (67 samples, 0.66%)</title><rect x="2.9542%" y="469" width="0.6598%" height="15" fill="rgb(240,54,50)" fg:x="300" fg:w="67"/><text x="3.0714%" y="479.50"></text></g><g><title>try_charge_memcg (2 samples, 0.02%)</title><rect x="3.5943%" y="453" width="0.0197%" height="15" fill="rgb(233,84,52)" fg:x="365" fg:w="2"/><text x="3.7115%" y="463.50"></text></g><g><title>lru_add_fn (9 samples, 0.09%)</title><rect x="3.7026%" y="421" width="0.0886%" height="15" fill="rgb(207,117,47)" fg:x="376" fg:w="9"/><text x="3.8198%" y="431.50"></text></g><g><title>lru_gen_add_folio (7 samples, 0.07%)</title><rect x="3.7223%" y="405" width="0.0689%" height="15" fill="rgb(249,43,39)" fg:x="378" fg:w="7"/><text x="3.8395%" y="415.50"></text></g><g><title>folio_add_lru_vma (18 samples, 0.18%)</title><rect x="3.6435%" y="469" width="0.1773%" height="15" fill="rgb(209,38,44)" fg:x="370" fg:w="18"/><text x="3.7607%" y="479.50"></text></g><g><title>folio_add_lru (18 samples, 0.18%)</title><rect x="3.6435%" y="453" width="0.1773%" height="15" fill="rgb(236,212,23)" fg:x="370" fg:w="18"/><text x="3.7607%" y="463.50"></text></g><g><title>folio_batch_move_lru (15 samples, 0.15%)</title><rect x="3.6731%" y="437" width="0.1477%" height="15" fill="rgb(242,79,21)" fg:x="373" fg:w="15"/><text x="3.7903%" y="447.50"></text></g><g><title>release_pages (3 samples, 0.03%)</title><rect x="3.7912%" y="421" width="0.0295%" height="15" fill="rgb(211,96,35)" fg:x="385" fg:w="3"/><text x="3.9084%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.03%)</title><rect x="3.8208%" y="453" width="0.0295%" height="15" fill="rgb(253,215,40)" fg:x="388" fg:w="3"/><text x="3.9380%" y="463.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.03%)</title><rect x="3.8208%" y="437" width="0.0295%" height="15" fill="rgb(211,81,21)" fg:x="388" fg:w="3"/><text x="3.9380%" y="447.50"></text></g><g><title>folio_add_new_anon_rmap (4 samples, 0.04%)</title><rect x="3.8208%" y="469" width="0.0394%" height="15" fill="rgb(208,190,38)" fg:x="388" fg:w="4"/><text x="3.9380%" y="479.50"></text></g><g><title>inc_mm_counter (4 samples, 0.04%)</title><rect x="3.8602%" y="469" width="0.0394%" height="15" fill="rgb(235,213,38)" fg:x="392" fg:w="4"/><text x="3.9774%" y="479.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.03%)</title><rect x="3.8700%" y="453" width="0.0295%" height="15" fill="rgb(237,122,38)" fg:x="393" fg:w="3"/><text x="3.9872%" y="463.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.02%)</title><rect x="3.9685%" y="405" width="0.0197%" height="15" fill="rgb(244,218,35)" fg:x="403" fg:w="2"/><text x="4.0857%" y="415.50"></text></g><g><title>clear_page_erms (5 samples, 0.05%)</title><rect x="3.9882%" y="405" width="0.0492%" height="15" fill="rgb(240,68,47)" fg:x="405" fg:w="5"/><text x="4.1054%" y="415.50"></text></g><g><title>do_anonymous_page (121 samples, 1.19%)</title><rect x="2.8951%" y="485" width="1.1915%" height="15" fill="rgb(210,16,53)" fg:x="294" fg:w="121"/><text x="3.0123%" y="495.50">do..</text></g><g><title>vma_alloc_folio (18 samples, 0.18%)</title><rect x="3.9094%" y="469" width="0.1773%" height="15" fill="rgb(235,124,12)" fg:x="397" fg:w="18"/><text x="4.0266%" y="479.50"></text></g><g><title>__folio_alloc (16 samples, 0.16%)</title><rect x="3.9291%" y="453" width="0.1576%" height="15" fill="rgb(224,169,11)" fg:x="399" fg:w="16"/><text x="4.0463%" y="463.50"></text></g><g><title>__alloc_pages (16 samples, 0.16%)</title><rect x="3.9291%" y="437" width="0.1576%" height="15" fill="rgb(250,166,2)" fg:x="399" fg:w="16"/><text x="4.0463%" y="447.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.14%)</title><rect x="3.9488%" y="421" width="0.1379%" height="15" fill="rgb(242,216,29)" fg:x="401" fg:w="14"/><text x="4.0660%" y="431.50"></text></g><g><title>rmqueue (5 samples, 0.05%)</title><rect x="4.0374%" y="405" width="0.0492%" height="15" fill="rgb(230,116,27)" fg:x="410" fg:w="5"/><text x="4.1546%" y="415.50"></text></g><g><title>__rmqueue_pcplist (4 samples, 0.04%)</title><rect x="4.0473%" y="389" width="0.0394%" height="15" fill="rgb(228,99,48)" fg:x="411" fg:w="4"/><text x="4.1645%" y="399.50"></text></g><g><title>rmqueue_bulk (3 samples, 0.03%)</title><rect x="4.0571%" y="373" width="0.0295%" height="15" fill="rgb(253,11,6)" fg:x="412" fg:w="3"/><text x="4.1743%" y="383.50"></text></g><g><title>handle_pte_fault (125 samples, 1.23%)</title><rect x="2.8754%" y="501" width="1.2309%" height="15" fill="rgb(247,143,39)" fg:x="292" fg:w="125"/><text x="2.9926%" y="511.50">ha..</text></g><g><title>__handle_mm_fault (131 samples, 1.29%)</title><rect x="2.8262%" y="517" width="1.2900%" height="15" fill="rgb(236,97,10)" fg:x="287" fg:w="131"/><text x="2.9434%" y="527.50">__..</text></g><g><title>count_memcg_events.constprop.0 (3 samples, 0.03%)</title><rect x="4.1162%" y="517" width="0.0295%" height="15" fill="rgb(233,208,19)" fg:x="418" fg:w="3"/><text x="4.2334%" y="527.50"></text></g><g><title>__count_memcg_events (3 samples, 0.03%)</title><rect x="4.1162%" y="501" width="0.0295%" height="15" fill="rgb(216,164,2)" fg:x="418" fg:w="3"/><text x="4.2334%" y="511.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.02%)</title><rect x="4.1260%" y="485" width="0.0197%" height="15" fill="rgb(220,129,5)" fg:x="419" fg:w="2"/><text x="4.2432%" y="495.50"></text></g><g><title>handle_mm_fault (137 samples, 1.35%)</title><rect x="2.8163%" y="533" width="1.3491%" height="15" fill="rgb(242,17,10)" fg:x="286" fg:w="137"/><text x="2.9335%" y="543.50">ha..</text></g><g><title>lock_vma_under_rcu (4 samples, 0.04%)</title><rect x="4.1654%" y="533" width="0.0394%" height="15" fill="rgb(242,107,0)" fg:x="423" fg:w="4"/><text x="4.2826%" y="543.50"></text></g><g><title>mas_walk (3 samples, 0.03%)</title><rect x="4.1753%" y="517" width="0.0295%" height="15" fill="rgb(251,28,31)" fg:x="424" fg:w="3"/><text x="4.2925%" y="527.50"></text></g><g><title>mtree_range_walk (3 samples, 0.03%)</title><rect x="4.1753%" y="501" width="0.0295%" height="15" fill="rgb(233,223,10)" fg:x="424" fg:w="3"/><text x="4.2925%" y="511.50"></text></g><g><title>do_user_addr_fault (144 samples, 1.42%)</title><rect x="2.7967%" y="549" width="1.4180%" height="15" fill="rgb(215,21,27)" fg:x="284" fg:w="144"/><text x="2.9138%" y="559.50">do_..</text></g><g><title>asm_exc_page_fault (145 samples, 1.43%)</title><rect x="2.7967%" y="581" width="1.4279%" height="15" fill="rgb(232,23,21)" fg:x="284" fg:w="145"/><text x="2.9138%" y="591.50">asm..</text></g><g><title>exc_page_fault (145 samples, 1.43%)</title><rect x="2.7967%" y="565" width="1.4279%" height="15" fill="rgb(244,5,23)" fg:x="284" fg:w="145"/><text x="2.9138%" y="575.50">exc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (214 samples, 2.11%)</title><rect x="2.2354%" y="613" width="2.1073%" height="15" fill="rgb(226,81,46)" fg:x="227" fg:w="214"/><text x="2.3525%" y="623.50">alloc..</text></g><g><title>core::ptr::write (192 samples, 1.89%)</title><rect x="2.4520%" y="597" width="1.8907%" height="15" fill="rgb(247,70,30)" fg:x="249" fg:w="192"/><text x="2.5692%" y="607.50">core..</text></g><g><title>sync_regs (11 samples, 0.11%)</title><rect x="4.2344%" y="581" width="0.1083%" height="15" fill="rgb(212,68,19)" fg:x="430" fg:w="11"/><text x="4.3516%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.06%)</title><rect x="4.3427%" y="613" width="0.0591%" height="15" fill="rgb(240,187,13)" fg:x="441" fg:w="6"/><text x="4.4599%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.06%)</title><rect x="4.3427%" y="597" width="0.0591%" height="15" fill="rgb(223,113,26)" fg:x="441" fg:w="6"/><text x="4.4599%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.06%)</title><rect x="4.3427%" y="581" width="0.0591%" height="15" fill="rgb(206,192,2)" fg:x="441" fg:w="6"/><text x="4.4599%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (8 samples, 0.08%)</title><rect x="4.4510%" y="517" width="0.0788%" height="15" fill="rgb(241,108,4)" fg:x="452" fg:w="8"/><text x="4.5682%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (8 samples, 0.08%)</title><rect x="4.4510%" y="501" width="0.0788%" height="15" fill="rgb(247,173,49)" fg:x="452" fg:w="8"/><text x="4.5682%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.04%)</title><rect x="4.4904%" y="485" width="0.0394%" height="15" fill="rgb(224,114,35)" fg:x="456" fg:w="4"/><text x="4.6076%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (4 samples, 0.04%)</title><rect x="4.4904%" y="469" width="0.0394%" height="15" fill="rgb(245,159,27)" fg:x="456" fg:w="4"/><text x="4.6076%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (4 samples, 0.04%)</title><rect x="4.4904%" y="453" width="0.0394%" height="15" fill="rgb(245,172,44)" fg:x="456" fg:w="4"/><text x="4.6076%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.31%)</title><rect x="4.5396%" y="453" width="0.3053%" height="15" fill="rgb(236,23,11)" fg:x="461" fg:w="31"/><text x="4.6568%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.12%)</title><rect x="4.7267%" y="437" width="0.1182%" height="15" fill="rgb(205,117,38)" fg:x="480" fg:w="12"/><text x="4.8439%" y="447.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.32%)</title><rect x="4.5396%" y="469" width="0.3250%" height="15" fill="rgb(237,72,25)" fg:x="461" fg:w="33"/><text x="4.6568%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="4.8449%" y="453" width="0.0197%" height="15" fill="rgb(244,70,9)" fg:x="492" fg:w="2"/><text x="4.9621%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.03%)</title><rect x="4.8646%" y="453" width="0.0295%" height="15" fill="rgb(217,125,39)" fg:x="494" fg:w="3"/><text x="4.9818%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (3 samples, 0.03%)</title><rect x="4.8646%" y="437" width="0.0295%" height="15" fill="rgb(235,36,10)" fg:x="494" fg:w="3"/><text x="4.9818%" y="447.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="4.8646%" y="421" width="0.0295%" height="15" fill="rgb(251,123,47)" fg:x="494" fg:w="3"/><text x="4.9818%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (22 samples, 0.22%)</title><rect x="4.8646%" y="469" width="0.2166%" height="15" fill="rgb(221,13,13)" fg:x="494" fg:w="22"/><text x="4.9818%" y="479.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (19 samples, 0.19%)</title><rect x="4.8941%" y="453" width="0.1871%" height="15" fill="rgb(238,131,9)" fg:x="497" fg:w="19"/><text x="5.0113%" y="463.50"></text></g><g><title>fringe_vs_astar::xy_to_index (18 samples, 0.18%)</title><rect x="4.9040%" y="437" width="0.1773%" height="15" fill="rgb(211,50,8)" fg:x="498" fg:w="18"/><text x="5.0212%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (66 samples, 0.65%)</title><rect x="4.4510%" y="549" width="0.6499%" height="15" fill="rgb(245,182,24)" fg:x="452" fg:w="66"/><text x="4.5682%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (66 samples, 0.65%)</title><rect x="4.4510%" y="533" width="0.6499%" height="15" fill="rgb(242,14,37)" fg:x="452" fg:w="66"/><text x="4.5682%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (57 samples, 0.56%)</title><rect x="4.5396%" y="517" width="0.5613%" height="15" fill="rgb(246,228,12)" fg:x="461" fg:w="57"/><text x="4.6568%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 0.56%)</title><rect x="4.5396%" y="501" width="0.5613%" height="15" fill="rgb(213,55,15)" fg:x="461" fg:w="57"/><text x="4.6568%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 0.56%)</title><rect x="4.5396%" y="485" width="0.5613%" height="15" fill="rgb(209,9,3)" fg:x="461" fg:w="57"/><text x="4.6568%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.02%)</title><rect x="5.0812%" y="469" width="0.0197%" height="15" fill="rgb(230,59,30)" fg:x="516" fg:w="2"/><text x="5.1984%" y="479.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="5.0812%" y="453" width="0.0197%" height="15" fill="rgb(209,121,21)" fg:x="516" fg:w="2"/><text x="5.1984%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="5.0812%" y="437" width="0.0197%" height="15" fill="rgb(220,109,13)" fg:x="516" fg:w="2"/><text x="5.1984%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="5.0812%" y="421" width="0.0197%" height="15" fill="rgb(232,18,1)" fg:x="516" fg:w="2"/><text x="5.1984%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.06%)</title><rect x="5.1009%" y="549" width="0.0591%" height="15" fill="rgb(215,41,42)" fg:x="518" fg:w="6"/><text x="5.2181%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.06%)</title><rect x="5.1009%" y="533" width="0.0591%" height="15" fill="rgb(224,123,36)" fg:x="518" fg:w="6"/><text x="5.2181%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.06%)</title><rect x="5.1009%" y="517" width="0.0591%" height="15" fill="rgb(240,125,3)" fg:x="518" fg:w="6"/><text x="5.2181%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (6 samples, 0.06%)</title><rect x="5.1009%" y="501" width="0.0591%" height="15" fill="rgb(205,98,50)" fg:x="518" fg:w="6"/><text x="5.2181%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (6 samples, 0.06%)</title><rect x="5.1009%" y="485" width="0.0591%" height="15" fill="rgb(205,185,37)" fg:x="518" fg:w="6"/><text x="5.2181%" y="495.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.03%)</title><rect x="6.1743%" y="405" width="0.0295%" height="15" fill="rgb(238,207,15)" fg:x="627" fg:w="3"/><text x="6.2915%" y="415.50"></text></g><g><title>alloc_perturb (4 samples, 0.04%)</title><rect x="6.2038%" y="405" width="0.0394%" height="15" fill="rgb(213,199,42)" fg:x="630" fg:w="4"/><text x="6.3210%" y="415.50"></text></g><g><title>down_read_trylock (2 samples, 0.02%)</title><rect x="6.3122%" y="357" width="0.0197%" height="15" fill="rgb(235,201,11)" fg:x="641" fg:w="2"/><text x="6.4293%" y="367.50"></text></g><g><title>__pte_offset_map (2 samples, 0.02%)</title><rect x="6.4008%" y="309" width="0.0197%" height="15" fill="rgb(207,46,11)" fg:x="650" fg:w="2"/><text x="6.5180%" y="319.50"></text></g><g><title>__folio_throttle_swaprate (5 samples, 0.05%)</title><rect x="6.4697%" y="293" width="0.0492%" height="15" fill="rgb(241,35,35)" fg:x="657" fg:w="5"/><text x="6.5869%" y="303.50"></text></g><g><title>blk_cgroup_congested (4 samples, 0.04%)</title><rect x="6.4796%" y="277" width="0.0394%" height="15" fill="rgb(243,32,47)" fg:x="658" fg:w="4"/><text x="6.5968%" y="287.50"></text></g><g><title>__rcu_read_unlock (28 samples, 0.28%)</title><rect x="6.5879%" y="277" width="0.2757%" height="15" fill="rgb(247,202,23)" fg:x="669" fg:w="28"/><text x="6.7051%" y="287.50"></text></g><g><title>__count_memcg_events (10 samples, 0.10%)</title><rect x="6.8932%" y="261" width="0.0985%" height="15" fill="rgb(219,102,11)" fg:x="700" fg:w="10"/><text x="7.0103%" y="271.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.04%)</title><rect x="6.9522%" y="245" width="0.0394%" height="15" fill="rgb(243,110,44)" fg:x="706" fg:w="4"/><text x="7.0694%" y="255.50"></text></g><g><title>consume_stock (3 samples, 0.03%)</title><rect x="7.0704%" y="245" width="0.0295%" height="15" fill="rgb(222,74,54)" fg:x="718" fg:w="3"/><text x="7.1876%" y="255.50"></text></g><g><title>charge_memcg (25 samples, 0.25%)</title><rect x="6.8636%" y="277" width="0.2462%" height="15" fill="rgb(216,99,12)" fg:x="697" fg:w="25"/><text x="6.9808%" y="287.50"></text></g><g><title>try_charge_memcg (12 samples, 0.12%)</title><rect x="6.9916%" y="261" width="0.1182%" height="15" fill="rgb(226,22,26)" fg:x="710" fg:w="12"/><text x="7.1088%" y="271.50"></text></g><g><title>get_mem_cgroup_from_mm (10 samples, 0.10%)</title><rect x="7.1098%" y="277" width="0.0985%" height="15" fill="rgb(217,163,10)" fg:x="722" fg:w="10"/><text x="7.2270%" y="287.50"></text></g><g><title>memcg_check_events (2 samples, 0.02%)</title><rect x="7.2083%" y="277" width="0.0197%" height="15" fill="rgb(213,25,53)" fg:x="732" fg:w="2"/><text x="7.3255%" y="287.50"></text></g><g><title>__mem_cgroup_charge (73 samples, 0.72%)</title><rect x="6.5190%" y="293" width="0.7189%" height="15" fill="rgb(252,105,26)" fg:x="662" fg:w="73"/><text x="6.6361%" y="303.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.02%)</title><rect x="7.2477%" y="293" width="0.0197%" height="15" fill="rgb(220,39,43)" fg:x="736" fg:w="2"/><text x="7.3648%" y="303.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="7.2674%" y="293" width="0.0197%" height="15" fill="rgb(229,68,48)" fg:x="738" fg:w="2"/><text x="7.3845%" y="303.50"></text></g><g><title>lru_add_fn (12 samples, 0.12%)</title><rect x="7.3461%" y="245" width="0.1182%" height="15" fill="rgb(252,8,32)" fg:x="746" fg:w="12"/><text x="7.4633%" y="255.50"></text></g><g><title>lru_gen_add_folio (8 samples, 0.08%)</title><rect x="7.3855%" y="229" width="0.0788%" height="15" fill="rgb(223,20,43)" fg:x="750" fg:w="8"/><text x="7.5027%" y="239.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.02%)</title><rect x="7.4446%" y="213" width="0.0197%" height="15" fill="rgb(229,81,49)" fg:x="756" fg:w="2"/><text x="7.5618%" y="223.50"></text></g><g><title>folio_batch_move_lru (16 samples, 0.16%)</title><rect x="7.3166%" y="261" width="0.1576%" height="15" fill="rgb(236,28,36)" fg:x="743" fg:w="16"/><text x="7.4338%" y="271.50"></text></g><g><title>folio_add_lru_vma (20 samples, 0.20%)</title><rect x="7.2969%" y="293" width="0.1969%" height="15" fill="rgb(249,185,26)" fg:x="741" fg:w="20"/><text x="7.4141%" y="303.50"></text></g><g><title>folio_add_lru (20 samples, 0.20%)</title><rect x="7.2969%" y="277" width="0.1969%" height="15" fill="rgb(249,174,33)" fg:x="741" fg:w="20"/><text x="7.4141%" y="287.50"></text></g><g><title>lru_add_fn (2 samples, 0.02%)</title><rect x="7.4742%" y="261" width="0.0197%" height="15" fill="rgb(233,201,37)" fg:x="759" fg:w="2"/><text x="7.5913%" y="271.50"></text></g><g><title>folio_add_new_anon_rmap (8 samples, 0.08%)</title><rect x="7.4938%" y="293" width="0.0788%" height="15" fill="rgb(221,78,26)" fg:x="761" fg:w="8"/><text x="7.6110%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (6 samples, 0.06%)</title><rect x="7.5135%" y="277" width="0.0591%" height="15" fill="rgb(250,127,30)" fg:x="763" fg:w="6"/><text x="7.6307%" y="287.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.04%)</title><rect x="7.5332%" y="261" width="0.0394%" height="15" fill="rgb(230,49,44)" fg:x="765" fg:w="4"/><text x="7.6504%" y="271.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.02%)</title><rect x="7.5529%" y="245" width="0.0197%" height="15" fill="rgb(229,67,23)" fg:x="767" fg:w="2"/><text x="7.6701%" y="255.50"></text></g><g><title>inc_mm_counter (4 samples, 0.04%)</title><rect x="7.5726%" y="293" width="0.0394%" height="15" fill="rgb(249,83,47)" fg:x="769" fg:w="4"/><text x="7.6898%" y="303.50"></text></g><g><title>percpu_counter_add_batch (4 samples, 0.04%)</title><rect x="7.5726%" y="277" width="0.0394%" height="15" fill="rgb(215,43,3)" fg:x="769" fg:w="4"/><text x="7.6898%" y="287.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.02%)</title><rect x="7.6514%" y="245" width="0.0197%" height="15" fill="rgb(238,154,13)" fg:x="777" fg:w="2"/><text x="7.7686%" y="255.50"></text></g><g><title>_raw_spin_trylock (3 samples, 0.03%)</title><rect x="7.7203%" y="229" width="0.0295%" height="15" fill="rgb(219,56,2)" fg:x="784" fg:w="3"/><text x="7.8375%" y="239.50"></text></g><g><title>clear_page_erms (3 samples, 0.03%)</title><rect x="7.7499%" y="229" width="0.0295%" height="15" fill="rgb(233,0,4)" fg:x="787" fg:w="3"/><text x="7.8671%" y="239.50"></text></g><g><title>__rmqueue_pcplist (16 samples, 0.16%)</title><rect x="7.8090%" y="213" width="0.1576%" height="15" fill="rgb(235,30,7)" fg:x="793" fg:w="16"/><text x="7.9261%" y="223.50"></text></g><g><title>rmqueue_bulk (15 samples, 0.15%)</title><rect x="7.8188%" y="197" width="0.1477%" height="15" fill="rgb(250,79,13)" fg:x="794" fg:w="15"/><text x="7.9360%" y="207.50"></text></g><g><title>get_page_from_freelist (31 samples, 0.31%)</title><rect x="7.6711%" y="245" width="0.3053%" height="15" fill="rgb(211,146,34)" fg:x="779" fg:w="31"/><text x="7.7883%" y="255.50"></text></g><g><title>rmqueue (20 samples, 0.20%)</title><rect x="7.7794%" y="229" width="0.1969%" height="15" fill="rgb(228,22,38)" fg:x="790" fg:w="20"/><text x="7.8966%" y="239.50"></text></g><g><title>__folio_alloc (35 samples, 0.34%)</title><rect x="7.6416%" y="277" width="0.3447%" height="15" fill="rgb(235,168,5)" fg:x="776" fg:w="35"/><text x="7.7587%" y="287.50"></text></g><g><title>__alloc_pages (35 samples, 0.34%)</title><rect x="7.6416%" y="261" width="0.3447%" height="15" fill="rgb(221,155,16)" fg:x="776" fg:w="35"/><text x="7.7587%" y="271.50"></text></g><g><title>do_anonymous_page (160 samples, 1.58%)</title><rect x="6.4205%" y="309" width="1.5756%" height="15" fill="rgb(215,215,53)" fg:x="652" fg:w="160"/><text x="6.5377%" y="319.50">do_..</text></g><g><title>vma_alloc_folio (38 samples, 0.37%)</title><rect x="7.6219%" y="293" width="0.3742%" height="15" fill="rgb(223,4,10)" fg:x="774" fg:w="38"/><text x="7.7390%" y="303.50"></text></g><g><title>__handle_mm_fault (172 samples, 1.69%)</title><rect x="6.3417%" y="341" width="1.6937%" height="15" fill="rgb(234,103,6)" fg:x="644" fg:w="172"/><text x="6.4589%" y="351.50">__ha..</text></g><g><title>handle_pte_fault (167 samples, 1.64%)</title><rect x="6.3909%" y="325" width="1.6445%" height="15" fill="rgb(227,97,0)" fg:x="649" fg:w="167"/><text x="6.5081%" y="335.50">han..</text></g><g><title>handle_mm_fault (175 samples, 1.72%)</title><rect x="6.3319%" y="357" width="1.7233%" height="15" fill="rgb(234,150,53)" fg:x="643" fg:w="175"/><text x="6.4490%" y="367.50">hand..</text></g><g><title>lock_vma_under_rcu (8 samples, 0.08%)</title><rect x="8.0551%" y="357" width="0.0788%" height="15" fill="rgb(228,201,54)" fg:x="818" fg:w="8"/><text x="8.1723%" y="367.50"></text></g><g><title>mas_walk (5 samples, 0.05%)</title><rect x="8.0847%" y="341" width="0.0492%" height="15" fill="rgb(222,22,37)" fg:x="821" fg:w="5"/><text x="8.2019%" y="351.50"></text></g><g><title>mtree_range_walk (4 samples, 0.04%)</title><rect x="8.0945%" y="325" width="0.0394%" height="15" fill="rgb(237,53,32)" fg:x="822" fg:w="4"/><text x="8.2117%" y="335.50"></text></g><g><title>do_user_addr_fault (190 samples, 1.87%)</title><rect x="6.2925%" y="373" width="1.8710%" height="15" fill="rgb(233,25,53)" fg:x="639" fg:w="190"/><text x="6.4097%" y="383.50">do_u..</text></g><g><title>up_read (3 samples, 0.03%)</title><rect x="8.1339%" y="357" width="0.0295%" height="15" fill="rgb(210,40,34)" fg:x="826" fg:w="3"/><text x="8.2511%" y="367.50"></text></g><g><title>asm_exc_page_fault (196 samples, 1.93%)</title><rect x="6.2432%" y="405" width="1.9301%" height="15" fill="rgb(241,220,44)" fg:x="634" fg:w="196"/><text x="6.3604%" y="415.50">asm_..</text></g><g><title>exc_page_fault (193 samples, 1.90%)</title><rect x="6.2728%" y="389" width="1.9005%" height="15" fill="rgb(235,28,35)" fg:x="637" fg:w="193"/><text x="6.3900%" y="399.50">exc_..</text></g><g><title>sync_regs (18 samples, 0.18%)</title><rect x="8.1930%" y="405" width="0.1773%" height="15" fill="rgb(210,56,17)" fg:x="832" fg:w="18"/><text x="8.3102%" y="415.50"></text></g><g><title>mas_store_prealloc (2 samples, 0.02%)</title><rect x="8.3703%" y="229" width="0.0197%" height="15" fill="rgb(224,130,29)" fg:x="850" fg:w="2"/><text x="8.4874%" y="239.50"></text></g><g><title>perf_event_mmap (2 samples, 0.02%)</title><rect x="8.3900%" y="229" width="0.0197%" height="15" fill="rgb(235,212,8)" fg:x="852" fg:w="2"/><text x="8.5071%" y="239.50"></text></g><g><title>__glibc_morecore (5 samples, 0.05%)</title><rect x="8.3703%" y="389" width="0.0492%" height="15" fill="rgb(223,33,50)" fg:x="850" fg:w="5"/><text x="8.4874%" y="399.50"></text></g><g><title>__GI___sbrk (5 samples, 0.05%)</title><rect x="8.3703%" y="373" width="0.0492%" height="15" fill="rgb(219,149,13)" fg:x="850" fg:w="5"/><text x="8.4874%" y="383.50"></text></g><g><title>__GI___sbrk (5 samples, 0.05%)</title><rect x="8.3703%" y="357" width="0.0492%" height="15" fill="rgb(250,156,29)" fg:x="850" fg:w="5"/><text x="8.4874%" y="367.50"></text></g><g><title>__brk (5 samples, 0.05%)</title><rect x="8.3703%" y="341" width="0.0492%" height="15" fill="rgb(216,193,19)" fg:x="850" fg:w="5"/><text x="8.4874%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="8.3703%" y="325" width="0.0492%" height="15" fill="rgb(216,135,14)" fg:x="850" fg:w="5"/><text x="8.4874%" y="335.50"></text></g><g><title>do_syscall_64 (5 samples, 0.05%)</title><rect x="8.3703%" y="309" width="0.0492%" height="15" fill="rgb(241,47,5)" fg:x="850" fg:w="5"/><text x="8.4874%" y="319.50"></text></g><g><title>x64_sys_call (5 samples, 0.05%)</title><rect x="8.3703%" y="293" width="0.0492%" height="15" fill="rgb(233,42,35)" fg:x="850" fg:w="5"/><text x="8.4874%" y="303.50"></text></g><g><title>__x64_sys_brk (5 samples, 0.05%)</title><rect x="8.3703%" y="277" width="0.0492%" height="15" fill="rgb(231,13,6)" fg:x="850" fg:w="5"/><text x="8.4874%" y="287.50"></text></g><g><title>__do_sys_brk (5 samples, 0.05%)</title><rect x="8.3703%" y="261" width="0.0492%" height="15" fill="rgb(207,181,40)" fg:x="850" fg:w="5"/><text x="8.4874%" y="271.50"></text></g><g><title>do_brk_flags (5 samples, 0.05%)</title><rect x="8.3703%" y="245" width="0.0492%" height="15" fill="rgb(254,173,49)" fg:x="850" fg:w="5"/><text x="8.4874%" y="255.50"></text></g><g><title>do_anonymous_page (2 samples, 0.02%)</title><rect x="8.4195%" y="293" width="0.0197%" height="15" fill="rgb(221,1,38)" fg:x="855" fg:w="2"/><text x="8.5367%" y="303.50"></text></g><g><title>_int_malloc (319 samples, 3.14%)</title><rect x="5.3077%" y="421" width="3.1413%" height="15" fill="rgb(206,124,46)" fg:x="539" fg:w="319"/><text x="5.4249%" y="431.50">_int_mall..</text></g><g><title>sysmalloc (8 samples, 0.08%)</title><rect x="8.3703%" y="405" width="0.0788%" height="15" fill="rgb(249,21,11)" fg:x="850" fg:w="8"/><text x="8.4874%" y="415.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.03%)</title><rect x="8.4195%" y="389" width="0.0295%" height="15" fill="rgb(222,201,40)" fg:x="855" fg:w="3"/><text x="8.5367%" y="399.50"></text></g><g><title>exc_page_fault (3 samples, 0.03%)</title><rect x="8.4195%" y="373" width="0.0295%" height="15" fill="rgb(235,61,29)" fg:x="855" fg:w="3"/><text x="8.5367%" y="383.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.03%)</title><rect x="8.4195%" y="357" width="0.0295%" height="15" fill="rgb(219,207,3)" fg:x="855" fg:w="3"/><text x="8.5367%" y="367.50"></text></g><g><title>handle_mm_fault (3 samples, 0.03%)</title><rect x="8.4195%" y="341" width="0.0295%" height="15" fill="rgb(222,56,46)" fg:x="855" fg:w="3"/><text x="8.5367%" y="351.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.03%)</title><rect x="8.4195%" y="325" width="0.0295%" height="15" fill="rgb(239,76,54)" fg:x="855" fg:w="3"/><text x="8.5367%" y="335.50"></text></g><g><title>handle_pte_fault (3 samples, 0.03%)</title><rect x="8.4195%" y="309" width="0.0295%" height="15" fill="rgb(231,124,27)" fg:x="855" fg:w="3"/><text x="8.5367%" y="319.50"></text></g><g><title>__GI___libc_malloc (332 samples, 3.27%)</title><rect x="5.2093%" y="437" width="3.2693%" height="15" fill="rgb(249,195,6)" fg:x="529" fg:w="332"/><text x="5.3264%" y="447.50">__GI___li..</text></g><g><title>checked_request2size (2 samples, 0.02%)</title><rect x="8.4589%" y="421" width="0.0197%" height="15" fill="rgb(237,174,47)" fg:x="859" fg:w="2"/><text x="8.5761%" y="431.50"></text></g><g><title>__rdl_alloc (4 samples, 0.04%)</title><rect x="8.4786%" y="437" width="0.0394%" height="15" fill="rgb(206,201,31)" fg:x="861" fg:w="4"/><text x="8.5958%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (420 samples, 4.14%)</title><rect x="4.4018%" y="613" width="4.1359%" height="15" fill="rgb(231,57,52)" fg:x="447" fg:w="420"/><text x="4.5190%" y="623.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (420 samples, 4.14%)</title><rect x="4.4018%" y="597" width="4.1359%" height="15" fill="rgb(248,177,22)" fg:x="447" fg:w="420"/><text x="4.5190%" y="607.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (420 samples, 4.14%)</title><rect x="4.4018%" y="581" width="4.1359%" height="15" fill="rgb(215,211,37)" fg:x="447" fg:w="420"/><text x="4.5190%" y="591.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (420 samples, 4.14%)</title><rect x="4.4018%" y="565" width="4.1359%" height="15" fill="rgb(241,128,51)" fg:x="447" fg:w="420"/><text x="4.5190%" y="575.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (343 samples, 3.38%)</title><rect x="5.1600%" y="549" width="3.3776%" height="15" fill="rgb(227,165,31)" fg:x="524" fg:w="343"/><text x="5.2772%" y="559.50">alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (343 samples, 3.38%)</title><rect x="5.1600%" y="533" width="3.3776%" height="15" fill="rgb(228,167,24)" fg:x="524" fg:w="343"/><text x="5.2772%" y="543.50">alloc::vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (341 samples, 3.36%)</title><rect x="5.1797%" y="517" width="3.3580%" height="15" fill="rgb(228,143,12)" fg:x="526" fg:w="341"/><text x="5.2969%" y="527.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (340 samples, 3.35%)</title><rect x="5.1896%" y="501" width="3.3481%" height="15" fill="rgb(249,149,8)" fg:x="527" fg:w="340"/><text x="5.3067%" y="511.50">alloc::raw..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (338 samples, 3.33%)</title><rect x="5.2093%" y="485" width="3.3284%" height="15" fill="rgb(243,35,44)" fg:x="529" fg:w="338"/><text x="5.3264%" y="495.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::Global::alloc_impl (338 samples, 3.33%)</title><rect x="5.2093%" y="469" width="3.3284%" height="15" fill="rgb(246,89,9)" fg:x="529" fg:w="338"/><text x="5.3264%" y="479.50">alloc::all..</text></g><g><title>alloc::alloc::alloc (338 samples, 3.33%)</title><rect x="5.2093%" y="453" width="3.3284%" height="15" fill="rgb(233,213,13)" fg:x="529" fg:w="338"/><text x="5.3264%" y="463.50">alloc::all..</text></g><g><title>core::iter::traits::iterator::Iterator::map (6 samples, 0.06%)</title><rect x="8.5377%" y="613" width="0.0591%" height="15" fill="rgb(233,141,41)" fg:x="867" fg:w="6"/><text x="8.6549%" y="623.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (6 samples, 0.06%)</title><rect x="8.5377%" y="597" width="0.0591%" height="15" fill="rgb(239,167,4)" fg:x="867" fg:w="6"/><text x="8.6549%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="8.6164%" y="533" width="0.0197%" height="15" fill="rgb(209,217,16)" fg:x="875" fg:w="2"/><text x="8.7336%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="8.6164%" y="517" width="0.0197%" height="15" fill="rgb(219,88,35)" fg:x="875" fg:w="2"/><text x="8.7336%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="8.6164%" y="501" width="0.0197%" height="15" fill="rgb(220,193,23)" fg:x="875" fg:w="2"/><text x="8.7336%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="8.6164%" y="485" width="0.0197%" height="15" fill="rgb(230,90,52)" fg:x="875" fg:w="2"/><text x="8.7336%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="8.6164%" y="469" width="0.0197%" height="15" fill="rgb(252,106,19)" fg:x="875" fg:w="2"/><text x="8.7336%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.02%)</title><rect x="8.6164%" y="453" width="0.0197%" height="15" fill="rgb(206,74,20)" fg:x="875" fg:w="2"/><text x="8.7336%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="8.6164%" y="437" width="0.0197%" height="15" fill="rgb(230,138,44)" fg:x="875" fg:w="2"/><text x="8.7336%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="8.6164%" y="421" width="0.0197%" height="15" fill="rgb(235,182,43)" fg:x="875" fg:w="2"/><text x="8.7336%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="8.6164%" y="405" width="0.0197%" height="15" fill="rgb(242,16,51)" fg:x="875" fg:w="2"/><text x="8.7336%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="8.6164%" y="389" width="0.0197%" height="15" fill="rgb(248,9,4)" fg:x="875" fg:w="2"/><text x="8.7336%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="8.6164%" y="373" width="0.0197%" height="15" fill="rgb(210,31,22)" fg:x="875" fg:w="2"/><text x="8.7336%" y="383.50"></text></g><g><title>_int_free (39 samples, 0.38%)</title><rect x="8.6854%" y="517" width="0.3840%" height="15" fill="rgb(239,54,39)" fg:x="882" fg:w="39"/><text x="8.8026%" y="527.50"></text></g><g><title>__GI___libc_free (49 samples, 0.48%)</title><rect x="8.6361%" y="533" width="0.4825%" height="15" fill="rgb(230,99,41)" fg:x="877" fg:w="49"/><text x="8.7533%" y="543.50"></text></g><g><title>arena_for_chunk (5 samples, 0.05%)</title><rect x="9.0694%" y="517" width="0.0492%" height="15" fill="rgb(253,106,12)" fg:x="921" fg:w="5"/><text x="9.1866%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (56 samples, 0.55%)</title><rect x="8.6164%" y="549" width="0.5515%" height="15" fill="rgb(213,46,41)" fg:x="875" fg:w="56"/><text x="8.7336%" y="559.50"></text></g><g><title>__rust_dealloc (4 samples, 0.04%)</title><rect x="9.1285%" y="533" width="0.0394%" height="15" fill="rgb(215,133,35)" fg:x="927" fg:w="4"/><text x="9.2457%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.57%)</title><rect x="8.6164%" y="565" width="0.5711%" height="15" fill="rgb(213,28,5)" fg:x="875" fg:w="58"/><text x="8.7336%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (2 samples, 0.02%)</title><rect x="9.1679%" y="549" width="0.0197%" height="15" fill="rgb(215,77,49)" fg:x="931" fg:w="2"/><text x="9.2851%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (61 samples, 0.60%)</title><rect x="8.5968%" y="613" width="0.6007%" height="15" fill="rgb(248,100,22)" fg:x="873" fg:w="61"/><text x="8.7139%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (61 samples, 0.60%)</title><rect x="8.5968%" y="597" width="0.6007%" height="15" fill="rgb(208,67,9)" fg:x="873" fg:w="61"/><text x="8.7139%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.60%)</title><rect x="8.5968%" y="581" width="0.6007%" height="15" fill="rgb(219,133,21)" fg:x="873" fg:w="61"/><text x="8.7139%" y="591.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (16 samples, 0.16%)</title><rect x="9.1974%" y="613" width="0.1576%" height="15" fill="rgb(246,46,29)" fg:x="934" fg:w="16"/><text x="9.3146%" y="623.50"></text></g><g><title>checked_request2size (11 samples, 0.11%)</title><rect x="10.0246%" y="517" width="0.1083%" height="15" fill="rgb(246,185,52)" fg:x="1018" fg:w="11"/><text x="10.1418%" y="527.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.46%)</title><rect x="9.8178%" y="533" width="0.4628%" height="15" fill="rgb(252,136,11)" fg:x="997" fg:w="47"/><text x="9.9350%" y="543.50"></text></g><g><title>tcache_get (15 samples, 0.15%)</title><rect x="10.1329%" y="517" width="0.1477%" height="15" fill="rgb(219,138,53)" fg:x="1029" fg:w="15"/><text x="10.2501%" y="527.50"></text></g><g><title>__rdl_alloc (8 samples, 0.08%)</title><rect x="10.2806%" y="533" width="0.0788%" height="15" fill="rgb(211,51,23)" fg:x="1044" fg:w="8"/><text x="10.3978%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (61 samples, 0.60%)</title><rect x="9.7784%" y="597" width="0.6007%" height="15" fill="rgb(247,221,28)" fg:x="993" fg:w="61"/><text x="9.8956%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.60%)</title><rect x="9.7784%" y="581" width="0.6007%" height="15" fill="rgb(251,222,45)" fg:x="993" fg:w="61"/><text x="9.8956%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.60%)</title><rect x="9.7784%" y="565" width="0.6007%" height="15" fill="rgb(217,162,53)" fg:x="993" fg:w="61"/><text x="9.8956%" y="575.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.60%)</title><rect x="9.7784%" y="549" width="0.6007%" height="15" fill="rgb(229,93,14)" fg:x="993" fg:w="61"/><text x="9.8956%" y="559.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="10.3594%" y="533" width="0.0197%" height="15" fill="rgb(209,67,49)" fg:x="1052" fg:w="2"/><text x="10.4766%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (3 samples, 0.03%)</title><rect x="10.3791%" y="597" width="0.0295%" height="15" fill="rgb(213,87,29)" fg:x="1054" fg:w="3"/><text x="10.4963%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.03%)</title><rect x="10.3791%" y="581" width="0.0295%" height="15" fill="rgb(205,151,52)" fg:x="1054" fg:w="3"/><text x="10.4963%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="10.3791%" y="565" width="0.0295%" height="15" fill="rgb(253,215,39)" fg:x="1054" fg:w="3"/><text x="10.4963%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.03%)</title><rect x="10.3791%" y="549" width="0.0295%" height="15" fill="rgb(221,220,41)" fg:x="1054" fg:w="3"/><text x="10.4963%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (5 samples, 0.05%)</title><rect x="10.4087%" y="597" width="0.0492%" height="15" fill="rgb(218,133,21)" fg:x="1057" fg:w="5"/><text x="10.5259%" y="607.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (5 samples, 0.05%)</title><rect x="10.4087%" y="581" width="0.0492%" height="15" fill="rgb(221,193,43)" fg:x="1057" fg:w="5"/><text x="10.5259%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.08%)</title><rect x="10.4579%" y="549" width="0.0788%" height="15" fill="rgb(240,128,52)" fg:x="1062" fg:w="8"/><text x="10.5751%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.07%)</title><rect x="10.6647%" y="517" width="0.0689%" height="15" fill="rgb(253,114,12)" fg:x="1083" fg:w="7"/><text x="10.7819%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="10.8419%" y="501" width="0.0197%" height="15" fill="rgb(215,223,47)" fg:x="1101" fg:w="2"/><text x="10.9591%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="10.8616%" y="453" width="0.0492%" height="15" fill="rgb(248,225,23)" fg:x="1103" fg:w="5"/><text x="10.9788%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.09%)</title><rect x="10.9109%" y="293" width="0.0886%" height="15" fill="rgb(250,108,0)" fg:x="1108" fg:w="9"/><text x="11.0281%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.11%)</title><rect x="11.0290%" y="277" width="0.1083%" height="15" fill="rgb(228,208,7)" fg:x="1120" fg:w="11"/><text x="11.1462%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.15%)</title><rect x="10.9995%" y="293" width="0.1477%" height="15" fill="rgb(244,45,10)" fg:x="1117" fg:w="15"/><text x="11.1167%" y="303.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.25%)</title><rect x="10.9109%" y="309" width="0.2462%" height="15" fill="rgb(207,125,25)" fg:x="1108" fg:w="25"/><text x="11.0281%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (37 samples, 0.36%)</title><rect x="10.9109%" y="437" width="0.3644%" height="15" fill="rgb(210,195,18)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (37 samples, 0.36%)</title><rect x="10.9109%" y="421" width="0.3644%" height="15" fill="rgb(249,80,12)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.36%)</title><rect x="10.9109%" y="405" width="0.3644%" height="15" fill="rgb(221,65,9)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.36%)</title><rect x="10.9109%" y="389" width="0.3644%" height="15" fill="rgb(235,49,36)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.36%)</title><rect x="10.9109%" y="373" width="0.3644%" height="15" fill="rgb(225,32,20)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 0.36%)</title><rect x="10.9109%" y="357" width="0.3644%" height="15" fill="rgb(215,141,46)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (37 samples, 0.36%)</title><rect x="10.9109%" y="341" width="0.3644%" height="15" fill="rgb(250,160,47)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37 samples, 0.36%)</title><rect x="10.9109%" y="325" width="0.3644%" height="15" fill="rgb(216,222,40)" fg:x="1108" fg:w="37"/><text x="11.0281%" y="335.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (12 samples, 0.12%)</title><rect x="11.1571%" y="309" width="0.1182%" height="15" fill="rgb(234,217,39)" fg:x="1133" fg:w="12"/><text x="11.2743%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (12 samples, 0.12%)</title><rect x="11.1571%" y="293" width="0.1182%" height="15" fill="rgb(207,178,40)" fg:x="1133" fg:w="12"/><text x="11.2743%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (12 samples, 0.12%)</title><rect x="11.1571%" y="277" width="0.1182%" height="15" fill="rgb(221,136,13)" fg:x="1133" fg:w="12"/><text x="11.2743%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 0.17%)</title><rect x="11.2752%" y="437" width="0.1674%" height="15" fill="rgb(249,199,10)" fg:x="1145" fg:w="17"/><text x="11.3924%" y="447.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (55 samples, 0.54%)</title><rect x="10.9109%" y="453" width="0.5416%" height="15" fill="rgb(249,222,13)" fg:x="1108" fg:w="55"/><text x="11.0281%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="11.4525%" y="293" width="0.0492%" height="15" fill="rgb(244,185,38)" fg:x="1163" fg:w="5"/><text x="11.5697%" y="303.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.13%)</title><rect x="11.4525%" y="309" width="0.1280%" height="15" fill="rgb(236,202,9)" fg:x="1163" fg:w="13"/><text x="11.5697%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="11.5017%" y="293" width="0.0788%" height="15" fill="rgb(250,229,37)" fg:x="1168" fg:w="8"/><text x="11.6189%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="11.5411%" y="277" width="0.0394%" height="15" fill="rgb(206,174,23)" fg:x="1172" fg:w="4"/><text x="11.6583%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.83%)</title><rect x="10.8616%" y="501" width="0.8272%" height="15" fill="rgb(211,33,43)" fg:x="1103" fg:w="84"/><text x="10.9788%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.83%)</title><rect x="10.8616%" y="485" width="0.8272%" height="15" fill="rgb(245,58,50)" fg:x="1103" fg:w="84"/><text x="10.9788%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (84 samples, 0.83%)</title><rect x="10.8616%" y="469" width="0.8272%" height="15" fill="rgb(244,68,36)" fg:x="1103" fg:w="84"/><text x="10.9788%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (24 samples, 0.24%)</title><rect x="11.4525%" y="453" width="0.2363%" height="15" fill="rgb(232,229,15)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (24 samples, 0.24%)</title><rect x="11.4525%" y="437" width="0.2363%" height="15" fill="rgb(254,30,23)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.24%)</title><rect x="11.4525%" y="421" width="0.2363%" height="15" fill="rgb(235,160,14)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.24%)</title><rect x="11.4525%" y="405" width="0.2363%" height="15" fill="rgb(212,155,44)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.24%)</title><rect x="11.4525%" y="389" width="0.2363%" height="15" fill="rgb(226,2,50)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.24%)</title><rect x="11.4525%" y="373" width="0.2363%" height="15" fill="rgb(234,177,6)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.24%)</title><rect x="11.4525%" y="357" width="0.2363%" height="15" fill="rgb(217,24,9)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (24 samples, 0.24%)</title><rect x="11.4525%" y="341" width="0.2363%" height="15" fill="rgb(220,13,46)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.24%)</title><rect x="11.4525%" y="325" width="0.2363%" height="15" fill="rgb(239,221,27)" fg:x="1163" fg:w="24"/><text x="11.5697%" y="335.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (11 samples, 0.11%)</title><rect x="11.5805%" y="309" width="0.1083%" height="15" fill="rgb(222,198,25)" fg:x="1176" fg:w="11"/><text x="11.6977%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (11 samples, 0.11%)</title><rect x="11.5805%" y="293" width="0.1083%" height="15" fill="rgb(211,99,13)" fg:x="1176" fg:w="11"/><text x="11.6977%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (11 samples, 0.11%)</title><rect x="11.5805%" y="277" width="0.1083%" height="15" fill="rgb(232,111,31)" fg:x="1176" fg:w="11"/><text x="11.6977%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="11.8070%" y="437" width="0.0295%" height="15" fill="rgb(245,82,37)" fg:x="1199" fg:w="3"/><text x="11.9242%" y="447.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.6619232558988000832 (5 samples, 0.05%)</title><rect x="11.8365%" y="437" width="0.0492%" height="15" fill="rgb(227,149,46)" fg:x="1202" fg:w="5"/><text x="11.9537%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.04%)</title><rect x="11.8858%" y="437" width="0.0394%" height="15" fill="rgb(218,36,50)" fg:x="1207" fg:w="4"/><text x="12.0030%" y="447.50"></text></g><g><title>__memcpy_evex_unaligned_erms (16 samples, 0.16%)</title><rect x="12.2009%" y="341" width="0.1576%" height="15" fill="rgb(226,80,48)" fg:x="1239" fg:w="16"/><text x="12.3181%" y="351.50"></text></g><g><title>_int_free (16 samples, 0.16%)</title><rect x="12.3584%" y="341" width="0.1576%" height="15" fill="rgb(238,224,15)" fg:x="1255" fg:w="16"/><text x="12.4756%" y="351.50"></text></g><g><title>tcache_put (3 samples, 0.03%)</title><rect x="12.4865%" y="325" width="0.0295%" height="15" fill="rgb(241,136,10)" fg:x="1268" fg:w="3"/><text x="12.6036%" y="335.50"></text></g><g><title>alloc_perturb (5 samples, 0.05%)</title><rect x="13.0379%" y="325" width="0.0492%" height="15" fill="rgb(208,32,45)" fg:x="1324" fg:w="5"/><text x="13.1551%" y="335.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.02%)</title><rect x="13.0871%" y="213" width="0.0197%" height="15" fill="rgb(207,135,9)" fg:x="1329" fg:w="2"/><text x="13.2043%" y="223.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.04%)</title><rect x="13.0871%" y="325" width="0.0394%" height="15" fill="rgb(206,86,44)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="335.50"></text></g><g><title>exc_page_fault (4 samples, 0.04%)</title><rect x="13.0871%" y="309" width="0.0394%" height="15" fill="rgb(245,177,15)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="319.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.04%)</title><rect x="13.0871%" y="293" width="0.0394%" height="15" fill="rgb(206,64,50)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="303.50"></text></g><g><title>handle_mm_fault (4 samples, 0.04%)</title><rect x="13.0871%" y="277" width="0.0394%" height="15" fill="rgb(234,36,40)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="287.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.04%)</title><rect x="13.0871%" y="261" width="0.0394%" height="15" fill="rgb(213,64,8)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="271.50"></text></g><g><title>handle_pte_fault (4 samples, 0.04%)</title><rect x="13.0871%" y="245" width="0.0394%" height="15" fill="rgb(210,75,36)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="255.50"></text></g><g><title>do_anonymous_page (4 samples, 0.04%)</title><rect x="13.0871%" y="229" width="0.0394%" height="15" fill="rgb(229,88,21)" fg:x="1329" fg:w="4"/><text x="13.2043%" y="239.50"></text></g><g><title>checked_request2size (3 samples, 0.03%)</title><rect x="13.1265%" y="325" width="0.0295%" height="15" fill="rgb(252,204,47)" fg:x="1333" fg:w="3"/><text x="13.2437%" y="335.50"></text></g><g><title>_int_malloc (71 samples, 0.70%)</title><rect x="12.5160%" y="341" width="0.6992%" height="15" fill="rgb(208,77,27)" fg:x="1271" fg:w="71"/><text x="12.6332%" y="351.50"></text></g><g><title>tcache_put (6 samples, 0.06%)</title><rect x="13.1561%" y="325" width="0.0591%" height="15" fill="rgb(221,76,26)" fg:x="1336" fg:w="6"/><text x="13.2733%" y="335.50"></text></g><g><title>_int_realloc (119 samples, 1.17%)</title><rect x="12.0630%" y="357" width="1.1718%" height="15" fill="rgb(225,139,18)" fg:x="1225" fg:w="119"/><text x="12.1802%" y="367.50">_i..</text></g><g><title>memcpy@@GLIBC_2.14@plt (2 samples, 0.02%)</title><rect x="13.2152%" y="341" width="0.0197%" height="15" fill="rgb(230,137,11)" fg:x="1342" fg:w="2"/><text x="13.3324%" y="351.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="13.2349%" y="357" width="0.0295%" height="15" fill="rgb(212,28,1)" fg:x="1344" fg:w="3"/><text x="13.3520%" y="367.50"></text></g><g><title>__GI___libc_realloc (141 samples, 1.39%)</title><rect x="11.9350%" y="373" width="1.3885%" height="15" fill="rgb(248,164,17)" fg:x="1212" fg:w="141"/><text x="12.0522%" y="383.50">__G..</text></g><g><title>checked_request2size (6 samples, 0.06%)</title><rect x="13.2644%" y="357" width="0.0591%" height="15" fill="rgb(222,171,42)" fg:x="1347" fg:w="6"/><text x="13.3816%" y="367.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="13.3235%" y="373" width="0.0197%" height="15" fill="rgb(243,84,45)" fg:x="1353" fg:w="2"/><text x="13.4407%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (145 samples, 1.43%)</title><rect x="11.9350%" y="421" width="1.4279%" height="15" fill="rgb(252,49,23)" fg:x="1212" fg:w="145"/><text x="12.0522%" y="431.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (145 samples, 1.43%)</title><rect x="11.9350%" y="405" width="1.4279%" height="15" fill="rgb(215,19,7)" fg:x="1212" fg:w="145"/><text x="12.0522%" y="415.50">all..</text></g><g><title>alloc::alloc::realloc (145 samples, 1.43%)</title><rect x="11.9350%" y="389" width="1.4279%" height="15" fill="rgb(238,81,41)" fg:x="1212" fg:w="145"/><text x="12.0522%" y="399.50">all..</text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="13.3432%" y="373" width="0.0197%" height="15" fill="rgb(210,199,37)" fg:x="1355" fg:w="2"/><text x="13.4604%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.6619232558988000832 (2 samples, 0.02%)</title><rect x="13.3629%" y="421" width="0.0197%" height="15" fill="rgb(244,192,49)" fg:x="1357" fg:w="2"/><text x="13.4801%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (150 samples, 1.48%)</title><rect x="11.9252%" y="437" width="1.4771%" height="15" fill="rgb(226,211,11)" fg:x="1211" fg:w="150"/><text x="12.0423%" y="447.50">all..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="13.3826%" y="421" width="0.0197%" height="15" fill="rgb(236,162,54)" fg:x="1359" fg:w="2"/><text x="13.4998%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.03%)</title><rect x="13.4023%" y="437" width="0.0295%" height="15" fill="rgb(220,229,9)" fg:x="1361" fg:w="3"/><text x="13.5195%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.03%)</title><rect x="13.4023%" y="421" width="0.0295%" height="15" fill="rgb(250,87,22)" fg:x="1361" fg:w="3"/><text x="13.5195%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (179 samples, 1.76%)</title><rect x="11.6888%" y="501" width="1.7627%" height="15" fill="rgb(239,43,17)" fg:x="1187" fg:w="179"/><text x="11.8060%" y="511.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (179 samples, 1.76%)</title><rect x="11.6888%" y="485" width="1.7627%" height="15" fill="rgb(231,177,25)" fg:x="1187" fg:w="179"/><text x="11.8060%" y="495.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (173 samples, 1.70%)</title><rect x="11.7479%" y="469" width="1.7036%" height="15" fill="rgb(219,179,1)" fg:x="1193" fg:w="173"/><text x="11.8651%" y="479.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (173 samples, 1.70%)</title><rect x="11.7479%" y="453" width="1.7036%" height="15" fill="rgb(238,219,53)" fg:x="1193" fg:w="173"/><text x="11.8651%" y="463.50">allo..</text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="13.4318%" y="437" width="0.0197%" height="15" fill="rgb(232,167,36)" fg:x="1364" fg:w="2"/><text x="13.5490%" y="447.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="13.4318%" y="421" width="0.0197%" height="15" fill="rgb(244,19,51)" fg:x="1364" fg:w="2"/><text x="13.5490%" y="431.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.02%)</title><rect x="13.4318%" y="405" width="0.0197%" height="15" fill="rgb(224,6,22)" fg:x="1364" fg:w="2"/><text x="13.5490%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (11 samples, 0.11%)</title><rect x="13.4515%" y="501" width="0.1083%" height="15" fill="rgb(224,145,5)" fg:x="1366" fg:w="11"/><text x="13.5687%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="13.5598%" y="453" width="0.0295%" height="15" fill="rgb(234,130,49)" fg:x="1377" fg:w="3"/><text x="13.6770%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (9 samples, 0.09%)</title><rect x="13.5598%" y="501" width="0.0886%" height="15" fill="rgb(254,6,2)" fg:x="1377" fg:w="9"/><text x="13.6770%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (9 samples, 0.09%)</title><rect x="13.5598%" y="485" width="0.0886%" height="15" fill="rgb(208,96,46)" fg:x="1377" fg:w="9"/><text x="13.6770%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (9 samples, 0.09%)</title><rect x="13.5598%" y="469" width="0.0886%" height="15" fill="rgb(239,3,39)" fg:x="1377" fg:w="9"/><text x="13.6770%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="453" width="0.0591%" height="15" fill="rgb(233,210,1)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="437" width="0.0591%" height="15" fill="rgb(244,137,37)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="421" width="0.0591%" height="15" fill="rgb(240,136,2)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="405" width="0.0591%" height="15" fill="rgb(239,18,37)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="389" width="0.0591%" height="15" fill="rgb(218,185,22)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="373" width="0.0591%" height="15" fill="rgb(225,218,4)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="357" width="0.0591%" height="15" fill="rgb(230,182,32)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="367.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="13.5894%" y="341" width="0.0591%" height="15" fill="rgb(242,56,43)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (6 samples, 0.06%)</title><rect x="13.5894%" y="325" width="0.0591%" height="15" fill="rgb(233,99,24)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="13.5894%" y="309" width="0.0591%" height="15" fill="rgb(234,209,42)" fg:x="1380" fg:w="6"/><text x="13.7066%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (321 samples, 3.16%)</title><rect x="10.6647%" y="533" width="3.1610%" height="15" fill="rgb(227,7,12)" fg:x="1083" fg:w="321"/><text x="10.7819%" y="543.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (314 samples, 3.09%)</title><rect x="10.7336%" y="517" width="3.0921%" height="15" fill="rgb(245,203,43)" fg:x="1090" fg:w="314"/><text x="10.8508%" y="527.50">alloc::ve..</text></g><g><title>core::ptr::write (18 samples, 0.18%)</title><rect x="13.6484%" y="501" width="0.1773%" height="15" fill="rgb(238,205,33)" fg:x="1386" fg:w="18"/><text x="13.7656%" y="511.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="13.8355%" y="341" width="0.0591%" height="15" fill="rgb(231,56,7)" fg:x="1405" fg:w="6"/><text x="13.9527%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="13.8355%" y="325" width="0.0591%" height="15" fill="rgb(244,186,29)" fg:x="1405" fg:w="6"/><text x="13.9527%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="13.8257%" y="517" width="0.0788%" height="15" fill="rgb(234,111,31)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (8 samples, 0.08%)</title><rect x="13.8257%" y="501" width="0.0788%" height="15" fill="rgb(241,149,10)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="511.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (8 samples, 0.08%)</title><rect x="13.8257%" y="485" width="0.0788%" height="15" fill="rgb(249,206,44)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (8 samples, 0.08%)</title><rect x="13.8257%" y="469" width="0.0788%" height="15" fill="rgb(251,153,30)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.08%)</title><rect x="13.8257%" y="453" width="0.0788%" height="15" fill="rgb(239,152,38)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.08%)</title><rect x="13.8257%" y="437" width="0.0788%" height="15" fill="rgb(249,139,47)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.08%)</title><rect x="13.8257%" y="421" width="0.0788%" height="15" fill="rgb(244,64,35)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.08%)</title><rect x="13.8257%" y="405" width="0.0788%" height="15" fill="rgb(216,46,15)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.08%)</title><rect x="13.8257%" y="389" width="0.0788%" height="15" fill="rgb(250,74,19)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (8 samples, 0.08%)</title><rect x="13.8257%" y="373" width="0.0788%" height="15" fill="rgb(249,42,33)" fg:x="1404" fg:w="8"/><text x="13.9429%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.07%)</title><rect x="13.8355%" y="357" width="0.0689%" height="15" fill="rgb(242,149,17)" fg:x="1405" fg:w="7"/><text x="13.9527%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.11%)</title><rect x="13.8257%" y="533" width="0.1083%" height="15" fill="rgb(244,29,21)" fg:x="1404" fg:w="11"/><text x="13.9429%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.03%)</title><rect x="13.9045%" y="517" width="0.0295%" height="15" fill="rgb(220,130,37)" fg:x="1412" fg:w="3"/><text x="14.0217%" y="527.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12 samples, 0.12%)</title><rect x="13.9340%" y="533" width="0.1182%" height="15" fill="rgb(211,67,2)" fg:x="1415" fg:w="12"/><text x="14.0512%" y="543.50"></text></g><g><title>checked_request2size (6 samples, 0.06%)</title><rect x="14.1802%" y="405" width="0.0591%" height="15" fill="rgb(235,68,52)" fg:x="1440" fg:w="6"/><text x="14.2974%" y="415.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.24%)</title><rect x="14.0522%" y="421" width="0.2363%" height="15" fill="rgb(246,142,3)" fg:x="1427" fg:w="24"/><text x="14.1694%" y="431.50"></text></g><g><title>tcache_get (5 samples, 0.05%)</title><rect x="14.2393%" y="405" width="0.0492%" height="15" fill="rgb(241,25,7)" fg:x="1446" fg:w="5"/><text x="14.3565%" y="415.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="14.2984%" y="421" width="0.0197%" height="15" fill="rgb(242,119,39)" fg:x="1452" fg:w="2"/><text x="14.4156%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.28%)</title><rect x="14.0522%" y="533" width="0.2757%" height="15" fill="rgb(241,98,45)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.28%)</title><rect x="14.0522%" y="517" width="0.2757%" height="15" fill="rgb(254,28,30)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.28%)</title><rect x="14.0522%" y="501" width="0.2757%" height="15" fill="rgb(241,142,54)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (28 samples, 0.28%)</title><rect x="14.0522%" y="485" width="0.2757%" height="15" fill="rgb(222,85,15)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.28%)</title><rect x="14.0522%" y="469" width="0.2757%" height="15" fill="rgb(210,85,47)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.28%)</title><rect x="14.0522%" y="453" width="0.2757%" height="15" fill="rgb(224,206,25)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="463.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.28%)</title><rect x="14.0522%" y="437" width="0.2757%" height="15" fill="rgb(243,201,19)" fg:x="1427" fg:w="28"/><text x="14.1694%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (399 samples, 3.93%)</title><rect x="10.4579%" y="597" width="3.9291%" height="15" fill="rgb(236,59,4)" fg:x="1062" fg:w="399"/><text x="10.5751%" y="607.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (399 samples, 3.93%)</title><rect x="10.4579%" y="581" width="3.9291%" height="15" fill="rgb(254,179,45)" fg:x="1062" fg:w="399"/><text x="10.5751%" y="591.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (399 samples, 3.93%)</title><rect x="10.4579%" y="565" width="3.9291%" height="15" fill="rgb(226,14,10)" fg:x="1062" fg:w="399"/><text x="10.5751%" y="575.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (391 samples, 3.85%)</title><rect x="10.5367%" y="549" width="3.8503%" height="15" fill="rgb(244,27,41)" fg:x="1070" fg:w="391"/><text x="10.6539%" y="559.50">&lt;alloc::vec..</text></g><g><title>core::ptr::write (6 samples, 0.06%)</title><rect x="14.3279%" y="533" width="0.0591%" height="15" fill="rgb(235,35,32)" fg:x="1455" fg:w="6"/><text x="14.4451%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (6 samples, 0.06%)</title><rect x="14.3968%" y="597" width="0.0591%" height="15" fill="rgb(218,68,31)" fg:x="1462" fg:w="6"/><text x="14.5140%" y="607.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (6 samples, 0.06%)</title><rect x="14.3968%" y="581" width="0.0591%" height="15" fill="rgb(207,120,37)" fg:x="1462" fg:w="6"/><text x="14.5140%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (2 samples, 0.02%)</title><rect x="14.4559%" y="597" width="0.0197%" height="15" fill="rgb(227,98,0)" fg:x="1468" fg:w="2"/><text x="14.5731%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8 samples, 0.08%)</title><rect x="14.4756%" y="597" width="0.0788%" height="15" fill="rgb(207,7,3)" fg:x="1470" fg:w="8"/><text x="14.5928%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (8 samples, 0.08%)</title><rect x="14.4756%" y="581" width="0.0788%" height="15" fill="rgb(206,98,19)" fg:x="1470" fg:w="8"/><text x="14.5928%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.08%)</title><rect x="14.4756%" y="565" width="0.0788%" height="15" fill="rgb(217,5,26)" fg:x="1470" fg:w="8"/><text x="14.5928%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (8 samples, 0.08%)</title><rect x="14.4756%" y="549" width="0.0788%" height="15" fill="rgb(235,190,38)" fg:x="1470" fg:w="8"/><text x="14.5928%" y="559.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (8 samples, 0.08%)</title><rect x="14.4756%" y="533" width="0.0788%" height="15" fill="rgb(247,86,24)" fg:x="1470" fg:w="8"/><text x="14.5928%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.05%)</title><rect x="14.5052%" y="517" width="0.0492%" height="15" fill="rgb(205,101,16)" fg:x="1473" fg:w="5"/><text x="14.6224%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.05%)</title><rect x="14.5052%" y="501" width="0.0492%" height="15" fill="rgb(246,168,33)" fg:x="1473" fg:w="5"/><text x="14.6224%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.05%)</title><rect x="14.5052%" y="485" width="0.0492%" height="15" fill="rgb(231,114,1)" fg:x="1473" fg:w="5"/><text x="14.6224%" y="495.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (2 samples, 0.02%)</title><rect x="14.5544%" y="565" width="0.0197%" height="15" fill="rgb(207,184,53)" fg:x="1478" fg:w="2"/><text x="14.6716%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.09%)</title><rect x="14.5544%" y="597" width="0.0886%" height="15" fill="rgb(224,95,51)" fg:x="1478" fg:w="9"/><text x="14.6716%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (9 samples, 0.09%)</title><rect x="14.5544%" y="581" width="0.0886%" height="15" fill="rgb(212,188,45)" fg:x="1478" fg:w="9"/><text x="14.6716%" y="591.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (7 samples, 0.07%)</title><rect x="14.5741%" y="565" width="0.0689%" height="15" fill="rgb(223,154,38)" fg:x="1480" fg:w="7"/><text x="14.6913%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.04%)</title><rect x="14.6036%" y="549" width="0.0394%" height="15" fill="rgb(251,22,52)" fg:x="1483" fg:w="4"/><text x="14.7208%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.04%)</title><rect x="14.6036%" y="533" width="0.0394%" height="15" fill="rgb(229,209,22)" fg:x="1483" fg:w="4"/><text x="14.7208%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.04%)</title><rect x="14.6036%" y="517" width="0.0394%" height="15" fill="rgb(234,138,34)" fg:x="1483" fg:w="4"/><text x="14.7208%" y="527.50"></text></g><g><title>_int_free (39 samples, 0.38%)</title><rect x="14.7809%" y="501" width="0.3840%" height="15" fill="rgb(212,95,11)" fg:x="1501" fg:w="39"/><text x="14.8981%" y="511.50"></text></g><g><title>tcache_put (7 samples, 0.07%)</title><rect x="15.0960%" y="485" width="0.0689%" height="15" fill="rgb(240,179,47)" fg:x="1533" fg:w="7"/><text x="15.2132%" y="495.50"></text></g><g><title>__GI___libc_free (50 samples, 0.49%)</title><rect x="14.7021%" y="517" width="0.4924%" height="15" fill="rgb(240,163,11)" fg:x="1493" fg:w="50"/><text x="14.8193%" y="527.50"></text></g><g><title>arena_for_chunk (3 samples, 0.03%)</title><rect x="15.1649%" y="501" width="0.0295%" height="15" fill="rgb(236,37,12)" fg:x="1540" fg:w="3"/><text x="15.2821%" y="511.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.04%)</title><rect x="15.1945%" y="517" width="0.0394%" height="15" fill="rgb(232,164,16)" fg:x="1543" fg:w="4"/><text x="15.3117%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (63 samples, 0.62%)</title><rect x="14.6430%" y="597" width="0.6204%" height="15" fill="rgb(244,205,15)" fg:x="1487" fg:w="63"/><text x="14.7602%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (63 samples, 0.62%)</title><rect x="14.6430%" y="581" width="0.6204%" height="15" fill="rgb(223,117,47)" fg:x="1487" fg:w="63"/><text x="14.7602%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.62%)</title><rect x="14.6430%" y="565" width="0.6204%" height="15" fill="rgb(244,107,35)" fg:x="1487" fg:w="63"/><text x="14.7602%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.56%)</title><rect x="14.7021%" y="549" width="0.5613%" height="15" fill="rgb(205,140,8)" fg:x="1493" fg:w="57"/><text x="14.8193%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.56%)</title><rect x="14.7021%" y="533" width="0.5613%" height="15" fill="rgb(228,84,46)" fg:x="1493" fg:w="57"/><text x="14.8193%" y="543.50"></text></g><g><title>__rust_dealloc (3 samples, 0.03%)</title><rect x="15.2339%" y="517" width="0.0295%" height="15" fill="rgb(254,188,9)" fg:x="1547" fg:w="3"/><text x="15.3511%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (616 samples, 6.07%)</title><rect x="9.3550%" y="613" width="6.0660%" height="15" fill="rgb(206,112,54)" fg:x="950" fg:w="616"/><text x="9.4722%" y="623.50">fringe_vs_astar::st..</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (16 samples, 0.16%)</title><rect x="15.2634%" y="597" width="0.1576%" height="15" fill="rgb(216,84,49)" fg:x="1550" fg:w="16"/><text x="15.3806%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.06%)</title><rect x="15.3619%" y="581" width="0.0591%" height="15" fill="rgb(214,194,35)" fg:x="1560" fg:w="6"/><text x="15.4791%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.06%)</title><rect x="15.3619%" y="565" width="0.0591%" height="15" fill="rgb(249,28,3)" fg:x="1560" fg:w="6"/><text x="15.4791%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.06%)</title><rect x="15.3619%" y="549" width="0.0591%" height="15" fill="rgb(222,56,52)" fg:x="1560" fg:w="6"/><text x="15.4791%" y="559.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,361 samples, 13.40%)</title><rect x="2.0483%" y="645" width="13.4023%" height="15" fill="rgb(245,217,50)" fg:x="208" fg:w="1361"/><text x="2.1654%" y="655.50">fringe_vs_astar::structures::graph::graph_buil..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,361 samples, 13.40%)</title><rect x="2.0483%" y="629" width="13.4023%" height="15" fill="rgb(213,201,24)" fg:x="208" fg:w="1361"/><text x="2.1654%" y="639.50">fringe_vs_astar::structures::graph::AdjacencyL..</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (3 samples, 0.03%)</title><rect x="15.4210%" y="613" width="0.0295%" height="15" fill="rgb(248,116,28)" fg:x="1566" fg:w="3"/><text x="15.5382%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.03%)</title><rect x="15.4210%" y="597" width="0.0295%" height="15" fill="rgb(219,72,43)" fg:x="1566" fg:w="3"/><text x="15.5382%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.03%)</title><rect x="15.4210%" y="581" width="0.0295%" height="15" fill="rgb(209,138,14)" fg:x="1566" fg:w="3"/><text x="15.5382%" y="591.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.03%)</title><rect x="15.4210%" y="565" width="0.0295%" height="15" fill="rgb(222,18,33)" fg:x="1566" fg:w="3"/><text x="15.5382%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.08%)</title><rect x="15.4899%" y="501" width="0.0788%" height="15" fill="rgb(213,199,7)" fg:x="1573" fg:w="8"/><text x="15.6071%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="15.5687%" y="469" width="0.0197%" height="15" fill="rgb(250,110,10)" fg:x="1581" fg:w="2"/><text x="15.6859%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="15.5687%" y="453" width="0.0197%" height="15" fill="rgb(248,123,6)" fg:x="1581" fg:w="2"/><text x="15.6859%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (12 samples, 0.12%)</title><rect x="15.5884%" y="469" width="0.1182%" height="15" fill="rgb(206,91,31)" fg:x="1583" fg:w="12"/><text x="15.7056%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.24%)</title><rect x="15.4899%" y="517" width="0.2363%" height="15" fill="rgb(211,154,13)" fg:x="1573" fg:w="24"/><text x="15.6071%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.16%)</title><rect x="15.5687%" y="501" width="0.1576%" height="15" fill="rgb(225,148,7)" fg:x="1581" fg:w="16"/><text x="15.6859%" y="511.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (16 samples, 0.16%)</title><rect x="15.5687%" y="485" width="0.1576%" height="15" fill="rgb(220,160,43)" fg:x="1581" fg:w="16"/><text x="15.6859%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="15.7065%" y="469" width="0.0197%" height="15" fill="rgb(213,52,39)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (2 samples, 0.02%)</title><rect x="15.7065%" y="453" width="0.0197%" height="15" fill="rgb(243,137,7)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="15.7065%" y="437" width="0.0197%" height="15" fill="rgb(230,79,13)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="15.7065%" y="421" width="0.0197%" height="15" fill="rgb(247,105,23)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="15.7065%" y="405" width="0.0197%" height="15" fill="rgb(223,179,41)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.02%)</title><rect x="15.7065%" y="389" width="0.0197%" height="15" fill="rgb(218,9,34)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="15.7065%" y="373" width="0.0197%" height="15" fill="rgb(222,106,8)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="15.7065%" y="357" width="0.0197%" height="15" fill="rgb(211,220,0)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="15.7065%" y="341" width="0.0197%" height="15" fill="rgb(229,52,16)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="351.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="15.7065%" y="325" width="0.0197%" height="15" fill="rgb(212,155,18)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="335.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="15.7065%" y="309" width="0.0197%" height="15" fill="rgb(242,21,14)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="319.50"></text></g><g><title>systrim (2 samples, 0.02%)</title><rect x="15.7065%" y="293" width="0.0197%" height="15" fill="rgb(222,19,48)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="303.50"></text></g><g><title>__glibc_morecore (2 samples, 0.02%)</title><rect x="15.7065%" y="277" width="0.0197%" height="15" fill="rgb(232,45,27)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="287.50"></text></g><g><title>__GI___sbrk (2 samples, 0.02%)</title><rect x="15.7065%" y="261" width="0.0197%" height="15" fill="rgb(249,103,42)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="271.50"></text></g><g><title>__GI___sbrk (2 samples, 0.02%)</title><rect x="15.7065%" y="245" width="0.0197%" height="15" fill="rgb(246,81,33)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="255.50"></text></g><g><title>__brk (2 samples, 0.02%)</title><rect x="15.7065%" y="229" width="0.0197%" height="15" fill="rgb(252,33,42)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="15.7065%" y="213" width="0.0197%" height="15" fill="rgb(209,212,41)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="223.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="15.7065%" y="197" width="0.0197%" height="15" fill="rgb(207,154,6)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="207.50"></text></g><g><title>x64_sys_call (2 samples, 0.02%)</title><rect x="15.7065%" y="181" width="0.0197%" height="15" fill="rgb(223,64,47)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="191.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.02%)</title><rect x="15.7065%" y="165" width="0.0197%" height="15" fill="rgb(211,161,38)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="175.50"></text></g><g><title>__do_sys_brk (2 samples, 0.02%)</title><rect x="15.7065%" y="149" width="0.0197%" height="15" fill="rgb(219,138,40)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="159.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.02%)</title><rect x="15.7065%" y="133" width="0.0197%" height="15" fill="rgb(241,228,46)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="143.50"></text></g><g><title>unmap_region (2 samples, 0.02%)</title><rect x="15.7065%" y="117" width="0.0197%" height="15" fill="rgb(223,209,38)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="127.50"></text></g><g><title>unmap_vmas (2 samples, 0.02%)</title><rect x="15.7065%" y="101" width="0.0197%" height="15" fill="rgb(236,164,45)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="111.50"></text></g><g><title>unmap_single_vma (2 samples, 0.02%)</title><rect x="15.7065%" y="85" width="0.0197%" height="15" fill="rgb(231,15,5)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="95.50"></text></g><g><title>unmap_page_range (2 samples, 0.02%)</title><rect x="15.7065%" y="69" width="0.0197%" height="15" fill="rgb(252,35,15)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="79.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.02%)</title><rect x="15.7065%" y="53" width="0.0197%" height="15" fill="rgb(248,181,18)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="63.50"></text></g><g><title>zap_pte_range (2 samples, 0.02%)</title><rect x="15.7065%" y="37" width="0.0197%" height="15" fill="rgb(233,39,42)" fg:x="1595" fg:w="2"/><text x="15.8237%" y="47.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="15.7656%" y="341" width="0.0197%" height="15" fill="rgb(238,110,33)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="351.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="15.7656%" y="325" width="0.0197%" height="15" fill="rgb(233,195,10)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="335.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="15.7656%" y="309" width="0.0197%" height="15" fill="rgb(254,105,3)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="319.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="15.7656%" y="293" width="0.0197%" height="15" fill="rgb(221,225,9)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="303.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="15.7656%" y="277" width="0.0197%" height="15" fill="rgb(224,227,45)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="287.50"></text></g><g><title>handle_pte_fault (2 samples, 0.02%)</title><rect x="15.7656%" y="261" width="0.0197%" height="15" fill="rgb(229,198,43)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="271.50"></text></g><g><title>do_anonymous_page (2 samples, 0.02%)</title><rect x="15.7656%" y="245" width="0.0197%" height="15" fill="rgb(206,209,35)" fg:x="1601" fg:w="2"/><text x="15.8828%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.07%)</title><rect x="15.7262%" y="517" width="0.0689%" height="15" fill="rgb(245,195,53)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.07%)</title><rect x="15.7262%" y="501" width="0.0689%" height="15" fill="rgb(240,92,26)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.07%)</title><rect x="15.7262%" y="485" width="0.0689%" height="15" fill="rgb(207,40,23)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.07%)</title><rect x="15.7262%" y="469" width="0.0689%" height="15" fill="rgb(223,111,35)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="15.7262%" y="453" width="0.0689%" height="15" fill="rgb(229,147,28)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.07%)</title><rect x="15.7262%" y="437" width="0.0689%" height="15" fill="rgb(211,29,28)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.07%)</title><rect x="15.7262%" y="421" width="0.0689%" height="15" fill="rgb(228,72,33)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="431.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.07%)</title><rect x="15.7262%" y="405" width="0.0689%" height="15" fill="rgb(205,214,31)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="415.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.07%)</title><rect x="15.7262%" y="389" width="0.0689%" height="15" fill="rgb(224,111,15)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="399.50"></text></g><g><title>_int_realloc (7 samples, 0.07%)</title><rect x="15.7262%" y="373" width="0.0689%" height="15" fill="rgb(253,21,26)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.07%)</title><rect x="15.7262%" y="357" width="0.0689%" height="15" fill="rgb(245,139,43)" fg:x="1597" fg:w="7"/><text x="15.8434%" y="367.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (38 samples, 0.37%)</title><rect x="15.4505%" y="629" width="0.3742%" height="15" fill="rgb(252,170,7)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.37%)</title><rect x="15.4505%" y="613" width="0.3742%" height="15" fill="rgb(231,118,14)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.37%)</title><rect x="15.4505%" y="597" width="0.3742%" height="15" fill="rgb(238,83,0)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.37%)</title><rect x="15.4505%" y="581" width="0.3742%" height="15" fill="rgb(221,39,39)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.37%)</title><rect x="15.4505%" y="565" width="0.3742%" height="15" fill="rgb(222,119,46)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 0.37%)</title><rect x="15.4505%" y="549" width="0.3742%" height="15" fill="rgb(222,165,49)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (38 samples, 0.37%)</title><rect x="15.4505%" y="533" width="0.3742%" height="15" fill="rgb(219,113,52)" fg:x="1569" fg:w="38"/><text x="15.5677%" y="543.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="15.7952%" y="517" width="0.0295%" height="15" fill="rgb(214,7,15)" fg:x="1604" fg:w="3"/><text x="15.9124%" y="527.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="15.8050%" y="501" width="0.0197%" height="15" fill="rgb(235,32,4)" fg:x="1605" fg:w="2"/><text x="15.9222%" y="511.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="15.8050%" y="485" width="0.0197%" height="15" fill="rgb(238,90,54)" fg:x="1605" fg:w="2"/><text x="15.9222%" y="495.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="15.8346%" y="261" width="0.0197%" height="15" fill="rgb(213,208,19)" fg:x="1608" fg:w="2"/><text x="15.9518%" y="271.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="15.8346%" y="245" width="0.0197%" height="15" fill="rgb(233,156,4)" fg:x="1608" fg:w="2"/><text x="15.9518%" y="255.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="15.8346%" y="229" width="0.0197%" height="15" fill="rgb(207,194,5)" fg:x="1608" fg:w="2"/><text x="15.9518%" y="239.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="15.8346%" y="213" width="0.0197%" height="15" fill="rgb(206,111,30)" fg:x="1608" fg:w="2"/><text x="15.9518%" y="223.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="15.8346%" y="197" width="0.0197%" height="15" fill="rgb(243,70,54)" fg:x="1608" fg:w="2"/><text x="15.9518%" y="207.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (4 samples, 0.04%)</title><rect x="15.8247%" y="629" width="0.0394%" height="15" fill="rgb(242,28,8)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.04%)</title><rect x="15.8247%" y="613" width="0.0394%" height="15" fill="rgb(219,106,18)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="15.8247%" y="597" width="0.0394%" height="15" fill="rgb(244,222,10)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="15.8247%" y="581" width="0.0394%" height="15" fill="rgb(236,179,52)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="15.8247%" y="565" width="0.0394%" height="15" fill="rgb(213,23,39)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="15.8247%" y="549" width="0.0394%" height="15" fill="rgb(238,48,10)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.04%)</title><rect x="15.8247%" y="533" width="0.0394%" height="15" fill="rgb(251,196,23)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="15.8247%" y="517" width="0.0394%" height="15" fill="rgb(250,152,24)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="527.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="15.8247%" y="501" width="0.0394%" height="15" fill="rgb(209,150,17)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="511.50"></text></g><g><title>std::io::BufRead::read_line (4 samples, 0.04%)</title><rect x="15.8247%" y="485" width="0.0394%" height="15" fill="rgb(234,202,34)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="495.50"></text></g><g><title>std::io::append_to_string (4 samples, 0.04%)</title><rect x="15.8247%" y="469" width="0.0394%" height="15" fill="rgb(253,148,53)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="479.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (4 samples, 0.04%)</title><rect x="15.8247%" y="453" width="0.0394%" height="15" fill="rgb(218,129,16)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="463.50"></text></g><g><title>std::io::read_until (4 samples, 0.04%)</title><rect x="15.8247%" y="437" width="0.0394%" height="15" fill="rgb(216,85,19)" fg:x="1607" fg:w="4"/><text x="15.9419%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.03%)</title><rect x="15.8346%" y="421" width="0.0295%" height="15" fill="rgb(235,228,7)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="15.8346%" y="405" width="0.0295%" height="15" fill="rgb(245,175,0)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="15.8346%" y="389" width="0.0295%" height="15" fill="rgb(208,168,36)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="15.8346%" y="373" width="0.0295%" height="15" fill="rgb(246,171,24)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="15.8346%" y="357" width="0.0295%" height="15" fill="rgb(215,142,24)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="15.8346%" y="341" width="0.0295%" height="15" fill="rgb(250,187,7)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="15.8346%" y="325" width="0.0295%" height="15" fill="rgb(228,66,33)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.6619232558988000832 (3 samples, 0.03%)</title><rect x="15.8346%" y="309" width="0.0295%" height="15" fill="rgb(234,215,21)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="319.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="15.8346%" y="293" width="0.0295%" height="15" fill="rgb(222,191,20)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="303.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="15.8346%" y="277" width="0.0295%" height="15" fill="rgb(245,79,54)" fg:x="1608" fg:w="3"/><text x="15.9518%" y="287.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.12%)</title><rect x="15.8838%" y="325" width="0.1182%" height="15" fill="rgb(240,10,37)" fg:x="1613" fg:w="12"/><text x="16.0010%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.12%)</title><rect x="15.8838%" y="309" width="0.1182%" height="15" fill="rgb(214,192,32)" fg:x="1613" fg:w="12"/><text x="16.0010%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.14%)</title><rect x="15.8838%" y="341" width="0.1379%" height="15" fill="rgb(209,36,54)" fg:x="1613" fg:w="14"/><text x="16.0010%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="16.0020%" y="325" width="0.0197%" height="15" fill="rgb(220,10,11)" fg:x="1625" fg:w="2"/><text x="16.1192%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="16.0020%" y="309" width="0.0197%" height="15" fill="rgb(221,106,17)" fg:x="1625" fg:w="2"/><text x="16.1192%" y="319.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="16.0020%" y="293" width="0.0197%" height="15" fill="rgb(251,142,44)" fg:x="1625" fg:w="2"/><text x="16.1192%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="16.0217%" y="341" width="0.0295%" height="15" fill="rgb(238,13,15)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="16.0217%" y="325" width="0.0295%" height="15" fill="rgb(208,107,27)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="16.0217%" y="309" width="0.0295%" height="15" fill="rgb(205,136,37)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="16.0217%" y="293" width="0.0295%" height="15" fill="rgb(250,205,27)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="16.0217%" y="277" width="0.0295%" height="15" fill="rgb(210,80,43)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.03%)</title><rect x="16.0217%" y="261" width="0.0295%" height="15" fill="rgb(247,160,36)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.03%)</title><rect x="16.0217%" y="245" width="0.0295%" height="15" fill="rgb(234,13,49)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="255.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.03%)</title><rect x="16.0217%" y="229" width="0.0295%" height="15" fill="rgb(234,122,0)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="239.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="16.0217%" y="213" width="0.0295%" height="15" fill="rgb(207,146,38)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="223.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="16.0217%" y="197" width="0.0295%" height="15" fill="rgb(207,177,25)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="207.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="16.0217%" y="181" width="0.0295%" height="15" fill="rgb(211,178,42)" fg:x="1627" fg:w="3"/><text x="16.1389%" y="191.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="16.0315%" y="165" width="0.0197%" height="15" fill="rgb(230,69,54)" fg:x="1628" fg:w="2"/><text x="16.1487%" y="175.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="16.0315%" y="149" width="0.0197%" height="15" fill="rgb(214,135,41)" fg:x="1628" fg:w="2"/><text x="16.1487%" y="159.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="16.0315%" y="133" width="0.0197%" height="15" fill="rgb(237,67,25)" fg:x="1628" fg:w="2"/><text x="16.1487%" y="143.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="16.0315%" y="117" width="0.0197%" height="15" fill="rgb(222,189,50)" fg:x="1628" fg:w="2"/><text x="16.1487%" y="127.50"></text></g><g><title>fringe_vs_astar::context::Context::new (1,429 samples, 14.07%)</title><rect x="2.0483%" y="661" width="14.0719%" height="15" fill="rgb(245,148,34)" fg:x="208" fg:w="1429"/><text x="2.1654%" y="671.50">fringe_vs_astar::context::Context::new</text></g><g><title>fringe_vs_astar::structures::map::map_builder (68 samples, 0.67%)</title><rect x="15.4505%" y="645" width="0.6696%" height="15" fill="rgb(222,29,6)" fg:x="1569" fg:w="68"/><text x="15.5677%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map (26 samples, 0.26%)</title><rect x="15.8641%" y="629" width="0.2560%" height="15" fill="rgb(221,189,43)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.26%)</title><rect x="15.8641%" y="613" width="0.2560%" height="15" fill="rgb(207,36,27)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.26%)</title><rect x="15.8641%" y="597" width="0.2560%" height="15" fill="rgb(217,90,24)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.26%)</title><rect x="15.8641%" y="581" width="0.2560%" height="15" fill="rgb(224,66,35)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.26%)</title><rect x="15.8641%" y="565" width="0.2560%" height="15" fill="rgb(221,13,50)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.26%)</title><rect x="15.8641%" y="549" width="0.2560%" height="15" fill="rgb(236,68,49)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (26 samples, 0.26%)</title><rect x="15.8641%" y="533" width="0.2560%" height="15" fill="rgb(229,146,28)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.26%)</title><rect x="15.8641%" y="517" width="0.2560%" height="15" fill="rgb(225,31,38)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.26%)</title><rect x="15.8641%" y="501" width="0.2560%" height="15" fill="rgb(250,208,3)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.26%)</title><rect x="15.8641%" y="485" width="0.2560%" height="15" fill="rgb(246,54,23)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (26 samples, 0.26%)</title><rect x="15.8641%" y="469" width="0.2560%" height="15" fill="rgb(243,76,11)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="479.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (26 samples, 0.26%)</title><rect x="15.8641%" y="453" width="0.2560%" height="15" fill="rgb(245,21,50)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.26%)</title><rect x="15.8641%" y="437" width="0.2560%" height="15" fill="rgb(228,9,43)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.26%)</title><rect x="15.8641%" y="421" width="0.2560%" height="15" fill="rgb(208,100,47)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.26%)</title><rect x="15.8641%" y="405" width="0.2560%" height="15" fill="rgb(232,26,8)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.26%)</title><rect x="15.8641%" y="389" width="0.2560%" height="15" fill="rgb(216,166,38)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.26%)</title><rect x="15.8641%" y="373" width="0.2560%" height="15" fill="rgb(251,202,51)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (26 samples, 0.26%)</title><rect x="15.8641%" y="357" width="0.2560%" height="15" fill="rgb(254,216,34)" fg:x="1611" fg:w="26"/><text x="15.9813%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (7 samples, 0.07%)</title><rect x="16.0512%" y="341" width="0.0689%" height="15" fill="rgb(251,32,27)" fg:x="1630" fg:w="7"/><text x="16.1684%" y="351.50"></text></g><g><title>malloc_consolidate (16 samples, 0.16%)</title><rect x="17.3412%" y="453" width="0.1576%" height="15" fill="rgb(208,127,28)" fg:x="1761" fg:w="16"/><text x="17.4584%" y="463.50"></text></g><g><title>unlink_chunk (7 samples, 0.07%)</title><rect x="17.4298%" y="437" width="0.0689%" height="15" fill="rgb(224,137,22)" fg:x="1770" fg:w="7"/><text x="17.5470%" y="447.50"></text></g><g><title>_int_free (117 samples, 1.15%)</title><rect x="16.4845%" y="469" width="1.1521%" height="15" fill="rgb(254,70,32)" fg:x="1674" fg:w="117"/><text x="16.6017%" y="479.50">_i..</text></g><g><title>unlink_chunk (14 samples, 0.14%)</title><rect x="17.4988%" y="453" width="0.1379%" height="15" fill="rgb(229,75,37)" fg:x="1777" fg:w="14"/><text x="17.6160%" y="463.50"></text></g><g><title>__GI___libc_free (126 samples, 1.24%)</title><rect x="16.4057%" y="485" width="1.2408%" height="15" fill="rgb(252,64,23)" fg:x="1666" fg:w="126"/><text x="16.5229%" y="495.50">__..</text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="17.6465%" y="485" width="0.0197%" height="15" fill="rgb(232,162,48)" fg:x="1792" fg:w="2"/><text x="17.7637%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (130 samples, 1.28%)</title><rect x="16.4057%" y="501" width="1.2802%" height="15" fill="rgb(246,160,12)" fg:x="1666" fg:w="130"/><text x="16.5229%" y="511.50">al..</text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="17.6662%" y="485" width="0.0197%" height="15" fill="rgb(247,166,0)" fg:x="1794" fg:w="2"/><text x="17.7834%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (133 samples, 1.31%)</title><rect x="16.4057%" y="517" width="1.3097%" height="15" fill="rgb(249,219,21)" fg:x="1666" fg:w="133"/><text x="16.5229%" y="527.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (3 samples, 0.03%)</title><rect x="17.6859%" y="501" width="0.0295%" height="15" fill="rgb(205,209,3)" fg:x="1796" fg:w="3"/><text x="17.8031%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 1.68%)</title><rect x="16.1201%" y="597" width="1.6839%" height="15" fill="rgb(243,44,1)" fg:x="1637" fg:w="171"/><text x="16.2373%" y="607.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (171 samples, 1.68%)</title><rect x="16.1201%" y="581" width="1.6839%" height="15" fill="rgb(206,159,16)" fg:x="1637" fg:w="171"/><text x="16.2373%" y="591.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (171 samples, 1.68%)</title><rect x="16.1201%" y="565" width="1.6839%" height="15" fill="rgb(244,77,30)" fg:x="1637" fg:w="171"/><text x="16.2373%" y="575.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (171 samples, 1.68%)</title><rect x="16.1201%" y="549" width="1.6839%" height="15" fill="rgb(218,69,12)" fg:x="1637" fg:w="171"/><text x="16.2373%" y="559.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (171 samples, 1.68%)</title><rect x="16.1201%" y="533" width="1.6839%" height="15" fill="rgb(212,87,7)" fg:x="1637" fg:w="171"/><text x="16.2373%" y="543.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (9 samples, 0.09%)</title><rect x="17.7154%" y="517" width="0.0886%" height="15" fill="rgb(245,114,25)" fg:x="1799" fg:w="9"/><text x="17.8326%" y="527.50"></text></g><g><title>_compound_head (2 samples, 0.02%)</title><rect x="17.8237%" y="309" width="0.0197%" height="15" fill="rgb(210,61,42)" fg:x="1810" fg:w="2"/><text x="17.9409%" y="319.50"></text></g><g><title>page_remove_rmap (6 samples, 0.06%)</title><rect x="17.8828%" y="293" width="0.0591%" height="15" fill="rgb(211,52,33)" fg:x="1816" fg:w="6"/><text x="18.0000%" y="303.50"></text></g><g><title>__free_one_page (2 samples, 0.02%)</title><rect x="17.9911%" y="181" width="0.0197%" height="15" fill="rgb(234,58,33)" fg:x="1827" fg:w="2"/><text x="18.1083%" y="191.50"></text></g><g><title>free_unref_page_list (4 samples, 0.04%)</title><rect x="17.9813%" y="229" width="0.0394%" height="15" fill="rgb(220,115,36)" fg:x="1826" fg:w="4"/><text x="18.0985%" y="239.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.03%)</title><rect x="17.9911%" y="213" width="0.0295%" height="15" fill="rgb(243,153,54)" fg:x="1827" fg:w="3"/><text x="18.1083%" y="223.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.03%)</title><rect x="17.9911%" y="197" width="0.0295%" height="15" fill="rgb(251,47,18)" fg:x="1827" fg:w="3"/><text x="18.1083%" y="207.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.02%)</title><rect x="18.0502%" y="213" width="0.0197%" height="15" fill="rgb(242,102,42)" fg:x="1833" fg:w="2"/><text x="18.1674%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (199 samples, 1.96%)</title><rect x="16.1201%" y="629" width="1.9596%" height="15" fill="rgb(234,31,38)" fg:x="1637" fg:w="199"/><text x="16.2373%" y="639.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (199 samples, 1.96%)</title><rect x="16.1201%" y="613" width="1.9596%" height="15" fill="rgb(221,117,51)" fg:x="1637" fg:w="199"/><text x="16.2373%" y="623.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (28 samples, 0.28%)</title><rect x="17.8040%" y="597" width="0.2757%" height="15" fill="rgb(212,20,18)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.28%)</title><rect x="17.8040%" y="581" width="0.2757%" height="15" fill="rgb(245,133,36)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.28%)</title><rect x="17.8040%" y="565" width="0.2757%" height="15" fill="rgb(212,6,19)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.28%)</title><rect x="17.8040%" y="549" width="0.2757%" height="15" fill="rgb(218,1,36)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="559.50"></text></g><g><title>__GI___libc_free (28 samples, 0.28%)</title><rect x="17.8040%" y="533" width="0.2757%" height="15" fill="rgb(246,84,54)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="543.50"></text></g><g><title>__GI___munmap (28 samples, 0.28%)</title><rect x="17.8040%" y="517" width="0.2757%" height="15" fill="rgb(242,110,6)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.28%)</title><rect x="17.8040%" y="501" width="0.2757%" height="15" fill="rgb(214,47,5)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="511.50"></text></g><g><title>do_syscall_64 (28 samples, 0.28%)</title><rect x="17.8040%" y="485" width="0.2757%" height="15" fill="rgb(218,159,25)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="495.50"></text></g><g><title>x64_sys_call (28 samples, 0.28%)</title><rect x="17.8040%" y="469" width="0.2757%" height="15" fill="rgb(215,211,28)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="479.50"></text></g><g><title>__x64_sys_munmap (28 samples, 0.28%)</title><rect x="17.8040%" y="453" width="0.2757%" height="15" fill="rgb(238,59,32)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="463.50"></text></g><g><title>__vm_munmap (28 samples, 0.28%)</title><rect x="17.8040%" y="437" width="0.2757%" height="15" fill="rgb(226,82,3)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="447.50"></text></g><g><title>do_vmi_munmap (28 samples, 0.28%)</title><rect x="17.8040%" y="421" width="0.2757%" height="15" fill="rgb(240,164,32)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="431.50"></text></g><g><title>do_vmi_align_munmap (28 samples, 0.28%)</title><rect x="17.8040%" y="405" width="0.2757%" height="15" fill="rgb(232,46,7)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="415.50"></text></g><g><title>unmap_region (28 samples, 0.28%)</title><rect x="17.8040%" y="389" width="0.2757%" height="15" fill="rgb(229,129,53)" fg:x="1808" fg:w="28"/><text x="17.9212%" y="399.50"></text></g><g><title>unmap_vmas (27 samples, 0.27%)</title><rect x="17.8139%" y="373" width="0.2659%" height="15" fill="rgb(234,188,29)" fg:x="1809" fg:w="27"/><text x="17.9311%" y="383.50"></text></g><g><title>unmap_single_vma (27 samples, 0.27%)</title><rect x="17.8139%" y="357" width="0.2659%" height="15" fill="rgb(246,141,4)" fg:x="1809" fg:w="27"/><text x="17.9311%" y="367.50"></text></g><g><title>unmap_page_range (27 samples, 0.27%)</title><rect x="17.8139%" y="341" width="0.2659%" height="15" fill="rgb(229,23,39)" fg:x="1809" fg:w="27"/><text x="17.9311%" y="351.50"></text></g><g><title>zap_pmd_range.isra.0 (27 samples, 0.27%)</title><rect x="17.8139%" y="325" width="0.2659%" height="15" fill="rgb(206,12,3)" fg:x="1809" fg:w="27"/><text x="17.9311%" y="335.50"></text></g><g><title>zap_pte_range (23 samples, 0.23%)</title><rect x="17.8533%" y="309" width="0.2265%" height="15" fill="rgb(252,226,20)" fg:x="1813" fg:w="23"/><text x="17.9705%" y="319.50"></text></g><g><title>tlb_flush_mmu (14 samples, 0.14%)</title><rect x="17.9419%" y="293" width="0.1379%" height="15" fill="rgb(216,123,35)" fg:x="1822" fg:w="14"/><text x="18.0591%" y="303.50"></text></g><g><title>tlb_batch_pages_flush (14 samples, 0.14%)</title><rect x="17.9419%" y="277" width="0.1379%" height="15" fill="rgb(212,68,40)" fg:x="1822" fg:w="14"/><text x="18.0591%" y="287.50"></text></g><g><title>free_pages_and_swap_cache (14 samples, 0.14%)</title><rect x="17.9419%" y="261" width="0.1379%" height="15" fill="rgb(254,125,32)" fg:x="1822" fg:w="14"/><text x="18.0591%" y="271.50"></text></g><g><title>release_pages (13 samples, 0.13%)</title><rect x="17.9517%" y="245" width="0.1280%" height="15" fill="rgb(253,97,22)" fg:x="1823" fg:w="13"/><text x="18.0689%" y="255.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.06%)</title><rect x="18.0207%" y="229" width="0.0591%" height="15" fill="rgb(241,101,14)" fg:x="1830" fg:w="6"/><text x="18.1379%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (201 samples, 1.98%)</title><rect x="16.1201%" y="645" width="1.9793%" height="15" fill="rgb(238,103,29)" fg:x="1637" fg:w="201"/><text x="16.2373%" y="655.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::ArrayMap&gt; (2 samples, 0.02%)</title><rect x="18.0798%" y="629" width="0.0197%" height="15" fill="rgb(233,195,47)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.02%)</title><rect x="18.0798%" y="613" width="0.0197%" height="15" fill="rgb(246,218,30)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.02%)</title><rect x="18.0798%" y="597" width="0.0197%" height="15" fill="rgb(219,145,47)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="18.0798%" y="581" width="0.0197%" height="15" fill="rgb(243,12,26)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="18.0798%" y="565" width="0.0197%" height="15" fill="rgb(214,87,16)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="18.0798%" y="549" width="0.0197%" height="15" fill="rgb(208,99,42)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="18.0798%" y="533" width="0.0197%" height="15" fill="rgb(253,99,2)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="543.50"></text></g><g><title>__GI___munmap (2 samples, 0.02%)</title><rect x="18.0798%" y="517" width="0.0197%" height="15" fill="rgb(220,168,23)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="18.0798%" y="501" width="0.0197%" height="15" fill="rgb(242,38,24)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="511.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="18.0798%" y="485" width="0.0197%" height="15" fill="rgb(225,182,9)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="495.50"></text></g><g><title>x64_sys_call (2 samples, 0.02%)</title><rect x="18.0798%" y="469" width="0.0197%" height="15" fill="rgb(243,178,37)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="479.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.02%)</title><rect x="18.0798%" y="453" width="0.0197%" height="15" fill="rgb(232,139,19)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="463.50"></text></g><g><title>__vm_munmap (2 samples, 0.02%)</title><rect x="18.0798%" y="437" width="0.0197%" height="15" fill="rgb(225,201,24)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="447.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.02%)</title><rect x="18.0798%" y="421" width="0.0197%" height="15" fill="rgb(221,47,46)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="431.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.02%)</title><rect x="18.0798%" y="405" width="0.0197%" height="15" fill="rgb(249,23,13)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="415.50"></text></g><g><title>unmap_region (2 samples, 0.02%)</title><rect x="18.0798%" y="389" width="0.0197%" height="15" fill="rgb(219,9,5)" fg:x="1836" fg:w="2"/><text x="18.1970%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.03%)</title><rect x="18.0995%" y="517" width="0.0295%" height="15" fill="rgb(254,171,16)" fg:x="1838" fg:w="3"/><text x="18.2166%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.03%)</title><rect x="18.0995%" y="501" width="0.0295%" height="15" fill="rgb(230,171,20)" fg:x="1838" fg:w="3"/><text x="18.2166%" y="511.50"></text></g><g><title>__rcu_read_unlock (33 samples, 0.32%)</title><rect x="18.7395%" y="373" width="0.3250%" height="15" fill="rgb(210,71,41)" fg:x="1903" fg:w="33"/><text x="18.8567%" y="383.50"></text></g><g><title>__count_memcg_events (10 samples, 0.10%)</title><rect x="19.1039%" y="357" width="0.0985%" height="15" fill="rgb(206,173,20)" fg:x="1940" fg:w="10"/><text x="19.2211%" y="367.50"></text></g><g><title>cgroup_rstat_updated (5 samples, 0.05%)</title><rect x="19.1531%" y="341" width="0.0492%" height="15" fill="rgb(233,88,34)" fg:x="1945" fg:w="5"/><text x="19.2703%" y="351.50"></text></g><g><title>charge_memcg (24 samples, 0.24%)</title><rect x="19.0645%" y="373" width="0.2363%" height="15" fill="rgb(223,209,46)" fg:x="1936" fg:w="24"/><text x="19.1817%" y="383.50"></text></g><g><title>try_charge_memcg (9 samples, 0.09%)</title><rect x="19.2122%" y="357" width="0.0886%" height="15" fill="rgb(250,43,18)" fg:x="1951" fg:w="9"/><text x="19.3294%" y="367.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.05%)</title><rect x="19.3008%" y="373" width="0.0492%" height="15" fill="rgb(208,13,10)" fg:x="1960" fg:w="5"/><text x="19.4180%" y="383.50"></text></g><g><title>memcg_check_events (2 samples, 0.02%)</title><rect x="19.3501%" y="373" width="0.0197%" height="15" fill="rgb(212,200,36)" fg:x="1965" fg:w="2"/><text x="19.4673%" y="383.50"></text></g><g><title>__mem_cgroup_charge (68 samples, 0.67%)</title><rect x="18.7100%" y="389" width="0.6696%" height="15" fill="rgb(225,90,30)" fg:x="1900" fg:w="68"/><text x="18.8272%" y="399.50"></text></g><g><title>__pte_offset_map_lock (5 samples, 0.05%)</title><rect x="19.4092%" y="389" width="0.0492%" height="15" fill="rgb(236,182,39)" fg:x="1971" fg:w="5"/><text x="19.5263%" y="399.50"></text></g><g><title>__pte_offset_map (2 samples, 0.02%)</title><rect x="19.4387%" y="373" width="0.0197%" height="15" fill="rgb(212,144,35)" fg:x="1974" fg:w="2"/><text x="19.5559%" y="383.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="19.4682%" y="389" width="0.0197%" height="15" fill="rgb(228,63,44)" fg:x="1977" fg:w="2"/><text x="19.5854%" y="399.50"></text></g><g><title>charge_memcg (2 samples, 0.02%)</title><rect x="19.4879%" y="389" width="0.0197%" height="15" fill="rgb(228,109,6)" fg:x="1979" fg:w="2"/><text x="19.6051%" y="399.50"></text></g><g><title>lru_add_fn (8 samples, 0.08%)</title><rect x="19.5667%" y="341" width="0.0788%" height="15" fill="rgb(238,117,24)" fg:x="1987" fg:w="8"/><text x="19.6839%" y="351.50"></text></g><g><title>lru_gen_add_folio (4 samples, 0.04%)</title><rect x="19.6061%" y="325" width="0.0394%" height="15" fill="rgb(242,26,26)" fg:x="1991" fg:w="4"/><text x="19.7233%" y="335.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.02%)</title><rect x="19.6258%" y="309" width="0.0197%" height="15" fill="rgb(221,92,48)" fg:x="1993" fg:w="2"/><text x="19.7430%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="19.6258%" y="293" width="0.0197%" height="15" fill="rgb(209,209,32)" fg:x="1993" fg:w="2"/><text x="19.7430%" y="303.50"></text></g><g><title>folio_batch_move_lru (12 samples, 0.12%)</title><rect x="19.5372%" y="357" width="0.1182%" height="15" fill="rgb(221,70,22)" fg:x="1984" fg:w="12"/><text x="19.6544%" y="367.50"></text></g><g><title>folio_add_lru_vma (16 samples, 0.16%)</title><rect x="19.5076%" y="389" width="0.1576%" height="15" fill="rgb(248,145,5)" fg:x="1981" fg:w="16"/><text x="19.6248%" y="399.50"></text></g><g><title>folio_add_lru (16 samples, 0.16%)</title><rect x="19.5076%" y="373" width="0.1576%" height="15" fill="rgb(226,116,26)" fg:x="1981" fg:w="16"/><text x="19.6248%" y="383.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.02%)</title><rect x="19.6750%" y="357" width="0.0197%" height="15" fill="rgb(244,5,17)" fg:x="1998" fg:w="2"/><text x="19.7922%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="19.6750%" y="341" width="0.0197%" height="15" fill="rgb(252,159,33)" fg:x="1998" fg:w="2"/><text x="19.7922%" y="351.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.05%)</title><rect x="19.6652%" y="389" width="0.0492%" height="15" fill="rgb(206,71,0)" fg:x="1997" fg:w="5"/><text x="19.7824%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.04%)</title><rect x="19.6750%" y="373" width="0.0394%" height="15" fill="rgb(233,118,54)" fg:x="1998" fg:w="4"/><text x="19.7922%" y="383.50"></text></g><g><title>inc_mm_counter (3 samples, 0.03%)</title><rect x="19.7243%" y="389" width="0.0295%" height="15" fill="rgb(234,83,48)" fg:x="2003" fg:w="3"/><text x="19.8415%" y="399.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.02%)</title><rect x="19.7341%" y="373" width="0.0197%" height="15" fill="rgb(228,3,54)" fg:x="2004" fg:w="2"/><text x="19.8513%" y="383.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.02%)</title><rect x="19.8031%" y="341" width="0.0197%" height="15" fill="rgb(226,155,13)" fg:x="2011" fg:w="2"/><text x="19.9202%" y="351.50"></text></g><g><title>_raw_spin_trylock (4 samples, 0.04%)</title><rect x="19.8720%" y="325" width="0.0394%" height="15" fill="rgb(241,28,37)" fg:x="2018" fg:w="4"/><text x="19.9892%" y="335.50"></text></g><g><title>clear_page_erms (6 samples, 0.06%)</title><rect x="19.9212%" y="325" width="0.0591%" height="15" fill="rgb(233,93,10)" fg:x="2023" fg:w="6"/><text x="20.0384%" y="335.50"></text></g><g><title>__rmqueue_pcplist (10 samples, 0.10%)</title><rect x="20.0197%" y="309" width="0.0985%" height="15" fill="rgb(225,113,19)" fg:x="2033" fg:w="10"/><text x="20.1369%" y="319.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.08%)</title><rect x="20.0394%" y="293" width="0.0788%" height="15" fill="rgb(241,2,18)" fg:x="2035" fg:w="8"/><text x="20.1566%" y="303.50"></text></g><g><title>get_page_from_freelist (32 samples, 0.32%)</title><rect x="19.8227%" y="341" width="0.3151%" height="15" fill="rgb(228,207,21)" fg:x="2013" fg:w="32"/><text x="19.9399%" y="351.50"></text></g><g><title>rmqueue (16 samples, 0.16%)</title><rect x="19.9803%" y="325" width="0.1576%" height="15" fill="rgb(213,211,35)" fg:x="2029" fg:w="16"/><text x="20.0975%" y="335.50"></text></g><g><title>__alloc_pages (39 samples, 0.38%)</title><rect x="19.7834%" y="357" width="0.3840%" height="15" fill="rgb(209,83,10)" fg:x="2009" fg:w="39"/><text x="19.9005%" y="367.50"></text></g><g><title>rmqueue (2 samples, 0.02%)</title><rect x="20.1477%" y="341" width="0.0197%" height="15" fill="rgb(209,164,1)" fg:x="2046" fg:w="2"/><text x="20.2649%" y="351.50"></text></g><g><title>__folio_alloc (41 samples, 0.40%)</title><rect x="19.7834%" y="373" width="0.4037%" height="15" fill="rgb(213,184,43)" fg:x="2009" fg:w="41"/><text x="19.9005%" y="383.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.02%)</title><rect x="20.1674%" y="357" width="0.0197%" height="15" fill="rgb(231,61,34)" fg:x="2048" fg:w="2"/><text x="20.2846%" y="367.50"></text></g><g><title>do_anonymous_page (154 samples, 1.52%)</title><rect x="18.6805%" y="405" width="1.5165%" height="15" fill="rgb(235,75,3)" fg:x="1897" fg:w="154"/><text x="18.7976%" y="415.50">do_..</text></g><g><title>vma_alloc_folio (44 samples, 0.43%)</title><rect x="19.7637%" y="389" width="0.4333%" height="15" fill="rgb(220,106,47)" fg:x="2007" fg:w="44"/><text x="19.8809%" y="399.50"></text></g><g><title>pte_offset_map_nolock (2 samples, 0.02%)</title><rect x="20.1969%" y="405" width="0.0197%" height="15" fill="rgb(210,196,33)" fg:x="2051" fg:w="2"/><text x="20.3141%" y="415.50"></text></g><g><title>__handle_mm_fault (163 samples, 1.61%)</title><rect x="18.6214%" y="437" width="1.6051%" height="15" fill="rgb(229,154,42)" fg:x="1891" fg:w="163"/><text x="18.7386%" y="447.50">__h..</text></g><g><title>handle_pte_fault (158 samples, 1.56%)</title><rect x="18.6706%" y="421" width="1.5559%" height="15" fill="rgb(228,114,26)" fg:x="1896" fg:w="158"/><text x="18.7878%" y="431.50">han..</text></g><g><title>handle_mm_fault (166 samples, 1.63%)</title><rect x="18.6115%" y="453" width="1.6347%" height="15" fill="rgb(208,144,1)" fg:x="1890" fg:w="166"/><text x="18.7287%" y="463.50">han..</text></g><g><title>lock_vma_under_rcu (8 samples, 0.08%)</title><rect x="20.2462%" y="453" width="0.0788%" height="15" fill="rgb(239,112,37)" fg:x="2056" fg:w="8"/><text x="20.3634%" y="463.50"></text></g><g><title>mas_walk (6 samples, 0.06%)</title><rect x="20.2659%" y="437" width="0.0591%" height="15" fill="rgb(210,96,50)" fg:x="2058" fg:w="6"/><text x="20.3831%" y="447.50"></text></g><g><title>mtree_range_walk (6 samples, 0.06%)</title><rect x="20.2659%" y="421" width="0.0591%" height="15" fill="rgb(222,178,2)" fg:x="2058" fg:w="6"/><text x="20.3831%" y="431.50"></text></g><g><title>do_user_addr_fault (179 samples, 1.76%)</title><rect x="18.5721%" y="469" width="1.7627%" height="15" fill="rgb(226,74,18)" fg:x="1886" fg:w="179"/><text x="18.6893%" y="479.50">do_u..</text></g><g><title>asm_exc_page_fault (182 samples, 1.79%)</title><rect x="18.5524%" y="501" width="1.7922%" height="15" fill="rgb(225,67,54)" fg:x="1884" fg:w="182"/><text x="18.6696%" y="511.50">asm_..</text></g><g><title>exc_page_fault (181 samples, 1.78%)</title><rect x="18.5623%" y="485" width="1.7824%" height="15" fill="rgb(251,92,32)" fg:x="1885" fg:w="181"/><text x="18.6795%" y="495.50">exc_..</text></g><g><title>error_entry (2 samples, 0.02%)</title><rect x="20.3447%" y="501" width="0.0197%" height="15" fill="rgb(228,149,22)" fg:x="2066" fg:w="2"/><text x="20.4618%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (253 samples, 2.49%)</title><rect x="18.0995%" y="597" width="2.4914%" height="15" fill="rgb(243,54,13)" fg:x="1838" fg:w="253"/><text x="18.2166%" y="607.50">fringe_..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::new (253 samples, 2.49%)</title><rect x="18.0995%" y="581" width="2.4914%" height="15" fill="rgb(243,180,28)" fg:x="1838" fg:w="253"/><text x="18.2166%" y="591.50">fringe_..</text></g><g><title>alloc::vec::from_elem (253 samples, 2.49%)</title><rect x="18.0995%" y="565" width="2.4914%" height="15" fill="rgb(208,167,24)" fg:x="1838" fg:w="253"/><text x="18.2166%" y="575.50">alloc::..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (253 samples, 2.49%)</title><rect x="18.0995%" y="549" width="2.4914%" height="15" fill="rgb(245,73,45)" fg:x="1838" fg:w="253"/><text x="18.2166%" y="559.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (253 samples, 2.49%)</title><rect x="18.0995%" y="533" width="2.4914%" height="15" fill="rgb(237,203,48)" fg:x="1838" fg:w="253"/><text x="18.2166%" y="543.50">alloc::..</text></g><g><title>core::ptr::write (250 samples, 2.46%)</title><rect x="18.1290%" y="517" width="2.4618%" height="15" fill="rgb(211,197,16)" fg:x="1841" fg:w="250"/><text x="18.2462%" y="527.50">core::..</text></g><g><title>sync_regs (23 samples, 0.23%)</title><rect x="20.3644%" y="501" width="0.2265%" height="15" fill="rgb(243,99,51)" fg:x="2068" fg:w="23"/><text x="20.4815%" y="511.50"></text></g><g><title>page_remove_rmap (3 samples, 0.03%)</title><rect x="28.9020%" y="213" width="0.0295%" height="15" fill="rgb(215,123,29)" fg:x="2935" fg:w="3"/><text x="29.0192%" y="223.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.02%)</title><rect x="28.9119%" y="197" width="0.0197%" height="15" fill="rgb(239,186,37)" fg:x="2936" fg:w="2"/><text x="29.0291%" y="207.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.02%)</title><rect x="28.9119%" y="181" width="0.0197%" height="15" fill="rgb(252,136,39)" fg:x="2936" fg:w="2"/><text x="29.0291%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="28.9119%" y="165" width="0.0197%" height="15" fill="rgb(223,213,32)" fg:x="2936" fg:w="2"/><text x="29.0291%" y="175.50"></text></g><g><title>free_unref_page_commit (9 samples, 0.09%)</title><rect x="28.9710%" y="133" width="0.0886%" height="15" fill="rgb(233,115,5)" fg:x="2942" fg:w="9"/><text x="29.0881%" y="143.50"></text></g><g><title>free_pcppages_bulk (8 samples, 0.08%)</title><rect x="28.9808%" y="117" width="0.0788%" height="15" fill="rgb(207,226,44)" fg:x="2943" fg:w="8"/><text x="29.0980%" y="127.50"></text></g><g><title>__free_one_page (4 samples, 0.04%)</title><rect x="29.0202%" y="101" width="0.0394%" height="15" fill="rgb(208,126,0)" fg:x="2947" fg:w="4"/><text x="29.1374%" y="111.50"></text></g><g><title>free_unref_page_list (10 samples, 0.10%)</title><rect x="28.9710%" y="149" width="0.0985%" height="15" fill="rgb(244,66,21)" fg:x="2942" fg:w="10"/><text x="29.0881%" y="159.50"></text></g><g><title>free_pages_and_swap_cache (21 samples, 0.21%)</title><rect x="28.9316%" y="181" width="0.2068%" height="15" fill="rgb(222,97,12)" fg:x="2938" fg:w="21"/><text x="29.0487%" y="191.50"></text></g><g><title>release_pages (20 samples, 0.20%)</title><rect x="28.9414%" y="165" width="0.1969%" height="15" fill="rgb(219,213,19)" fg:x="2939" fg:w="20"/><text x="29.0586%" y="175.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (7 samples, 0.07%)</title><rect x="29.0694%" y="149" width="0.0689%" height="15" fill="rgb(252,169,30)" fg:x="2952" fg:w="7"/><text x="29.1866%" y="159.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::construct_path (27 samples, 0.27%)</title><rect x="28.8823%" y="581" width="0.2659%" height="15" fill="rgb(206,32,51)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringe::FringeSearch&gt; (27 samples, 0.27%)</title><rect x="28.8823%" y="565" width="0.2659%" height="15" fill="rgb(250,172,42)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringe::cache::Cache&gt; (27 samples, 0.27%)</title><rect x="28.8823%" y="549" width="0.2659%" height="15" fill="rgb(209,34,43)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::algorithms::fringe::cache::CacheValue&gt;&gt; (27 samples, 0.27%)</title><rect x="28.8823%" y="533" width="0.2659%" height="15" fill="rgb(223,11,35)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::algorithms::fringe::cache::CacheValue&gt;&gt; (27 samples, 0.27%)</title><rect x="28.8823%" y="517" width="0.2659%" height="15" fill="rgb(251,219,26)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.27%)</title><rect x="28.8823%" y="501" width="0.2659%" height="15" fill="rgb(231,119,3)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.27%)</title><rect x="28.8823%" y="485" width="0.2659%" height="15" fill="rgb(216,97,11)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.27%)</title><rect x="28.8823%" y="469" width="0.2659%" height="15" fill="rgb(223,59,9)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="479.50"></text></g><g><title>__GI___libc_free (27 samples, 0.27%)</title><rect x="28.8823%" y="453" width="0.2659%" height="15" fill="rgb(233,93,31)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="463.50"></text></g><g><title>__GI___munmap (27 samples, 0.27%)</title><rect x="28.8823%" y="437" width="0.2659%" height="15" fill="rgb(239,81,33)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.27%)</title><rect x="28.8823%" y="421" width="0.2659%" height="15" fill="rgb(213,120,34)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="431.50"></text></g><g><title>do_syscall_64 (27 samples, 0.27%)</title><rect x="28.8823%" y="405" width="0.2659%" height="15" fill="rgb(243,49,53)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="415.50"></text></g><g><title>x64_sys_call (27 samples, 0.27%)</title><rect x="28.8823%" y="389" width="0.2659%" height="15" fill="rgb(247,216,33)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="399.50"></text></g><g><title>__x64_sys_munmap (27 samples, 0.27%)</title><rect x="28.8823%" y="373" width="0.2659%" height="15" fill="rgb(226,26,14)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="383.50"></text></g><g><title>__vm_munmap (27 samples, 0.27%)</title><rect x="28.8823%" y="357" width="0.2659%" height="15" fill="rgb(215,49,53)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="367.50"></text></g><g><title>do_vmi_munmap (27 samples, 0.27%)</title><rect x="28.8823%" y="341" width="0.2659%" height="15" fill="rgb(245,162,40)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="351.50"></text></g><g><title>do_vmi_align_munmap (27 samples, 0.27%)</title><rect x="28.8823%" y="325" width="0.2659%" height="15" fill="rgb(229,68,17)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="335.50"></text></g><g><title>unmap_region (27 samples, 0.27%)</title><rect x="28.8823%" y="309" width="0.2659%" height="15" fill="rgb(213,182,10)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="319.50"></text></g><g><title>unmap_vmas (27 samples, 0.27%)</title><rect x="28.8823%" y="293" width="0.2659%" height="15" fill="rgb(245,125,30)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="303.50"></text></g><g><title>unmap_single_vma (27 samples, 0.27%)</title><rect x="28.8823%" y="277" width="0.2659%" height="15" fill="rgb(232,202,2)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="287.50"></text></g><g><title>unmap_page_range (27 samples, 0.27%)</title><rect x="28.8823%" y="261" width="0.2659%" height="15" fill="rgb(237,140,51)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="271.50"></text></g><g><title>zap_pmd_range.isra.0 (27 samples, 0.27%)</title><rect x="28.8823%" y="245" width="0.2659%" height="15" fill="rgb(236,157,25)" fg:x="2933" fg:w="27"/><text x="28.9995%" y="255.50"></text></g><g><title>zap_pte_range (25 samples, 0.25%)</title><rect x="28.9020%" y="229" width="0.2462%" height="15" fill="rgb(219,209,0)" fg:x="2935" fg:w="25"/><text x="29.0192%" y="239.50"></text></g><g><title>tlb_flush_mmu (22 samples, 0.22%)</title><rect x="28.9316%" y="213" width="0.2166%" height="15" fill="rgb(240,116,54)" fg:x="2938" fg:w="22"/><text x="29.0487%" y="223.50"></text></g><g><title>tlb_batch_pages_flush (22 samples, 0.22%)</title><rect x="28.9316%" y="197" width="0.2166%" height="15" fill="rgb(216,10,36)" fg:x="2938" fg:w="22"/><text x="29.0487%" y="207.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (115 samples, 1.13%)</title><rect x="29.5913%" y="453" width="1.1324%" height="15" fill="rgb(222,72,44)" fg:x="3005" fg:w="115"/><text x="29.7085%" y="463.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (115 samples, 1.13%)</title><rect x="29.5913%" y="437" width="1.1324%" height="15" fill="rgb(232,159,9)" fg:x="3005" fg:w="115"/><text x="29.7085%" y="447.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (115 samples, 1.13%)</title><rect x="29.5913%" y="421" width="1.1324%" height="15" fill="rgb(210,39,32)" fg:x="3005" fg:w="115"/><text x="29.7085%" y="431.50">al..</text></g><g><title>core::ptr::write (115 samples, 1.13%)</title><rect x="29.5913%" y="405" width="1.1324%" height="15" fill="rgb(216,194,45)" fg:x="3005" fg:w="115"/><text x="29.7085%" y="415.50">co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (162 samples, 1.60%)</title><rect x="29.1482%" y="469" width="1.5953%" height="15" fill="rgb(218,18,35)" fg:x="2960" fg:w="162"/><text x="29.2654%" y="479.50">&lt;co..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::copied::copy_fold&lt;u32,(),core::iter::traits::iterator::Iterator::for_each::call&lt;u32,alloc::vec::Vec&lt;u32&gt;::extend_trusted&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;u32&gt;&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="30.7238%" y="453" width="0.0197%" height="15" fill="rgb(207,83,51)" fg:x="3120" fg:w="2"/><text x="30.8410%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;u32,alloc::vec::Vec&lt;u32&gt;::extend_trusted&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;u32&gt;&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="30.7238%" y="437" width="0.0197%" height="15" fill="rgb(225,63,43)" fg:x="3120" fg:w="2"/><text x="30.8410%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;::extend_trusted&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;u32&gt;&gt;&gt;::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="30.7238%" y="421" width="0.0197%" height="15" fill="rgb(207,57,36)" fg:x="3120" fg:w="2"/><text x="30.8410%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (2 samples, 0.02%)</title><rect x="30.7238%" y="405" width="0.0197%" height="15" fill="rgb(216,99,33)" fg:x="3120" fg:w="2"/><text x="30.8410%" y="415.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="30.7238%" y="389" width="0.0197%" height="15" fill="rgb(225,42,16)" fg:x="3120" fg:w="2"/><text x="30.8410%" y="399.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::prepare_next_iteration (267 samples, 2.63%)</title><rect x="29.1482%" y="581" width="2.6292%" height="15" fill="rgb(220,201,45)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="591.50">fringe_..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (267 samples, 2.63%)</title><rect x="29.1482%" y="565" width="2.6292%" height="15" fill="rgb(225,33,4)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="575.50">fringe_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (267 samples, 2.63%)</title><rect x="29.1482%" y="549" width="2.6292%" height="15" fill="rgb(224,33,50)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="559.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (267 samples, 2.63%)</title><rect x="29.1482%" y="533" width="2.6292%" height="15" fill="rgb(246,198,51)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="543.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (267 samples, 2.63%)</title><rect x="29.1482%" y="517" width="2.6292%" height="15" fill="rgb(205,22,4)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="527.50">alloc::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (267 samples, 2.63%)</title><rect x="29.1482%" y="501" width="2.6292%" height="15" fill="rgb(206,3,8)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="511.50">core::i..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (267 samples, 2.63%)</title><rect x="29.1482%" y="485" width="2.6292%" height="15" fill="rgb(251,23,15)" fg:x="2960" fg:w="267"/><text x="29.2654%" y="495.50">&lt;core::..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (105 samples, 1.03%)</title><rect x="30.7435%" y="469" width="1.0340%" height="15" fill="rgb(252,88,28)" fg:x="3122" fg:w="105"/><text x="30.8607%" y="479.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.04%)</title><rect x="32.7622%" y="485" width="0.0394%" height="15" fill="rgb(212,127,14)" fg:x="3327" fg:w="4"/><text x="32.8794%" y="495.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (4 samples, 0.04%)</title><rect x="32.7622%" y="469" width="0.0394%" height="15" fill="rgb(247,145,37)" fg:x="3327" fg:w="4"/><text x="32.8794%" y="479.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_now (4 samples, 0.04%)</title><rect x="32.7622%" y="453" width="0.0394%" height="15" fill="rgb(209,117,53)" fg:x="3327" fg:w="4"/><text x="32.8794%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.04%)</title><rect x="32.7622%" y="437" width="0.0394%" height="15" fill="rgb(212,90,42)" fg:x="3327" fg:w="4"/><text x="32.8794%" y="447.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (16 samples, 0.16%)</title><rect x="32.8016%" y="469" width="0.1576%" height="15" fill="rgb(218,164,37)" fg:x="3331" fg:w="16"/><text x="32.9188%" y="479.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (7 samples, 0.07%)</title><rect x="35.9330%" y="453" width="0.0689%" height="15" fill="rgb(246,65,34)" fg:x="3649" fg:w="7"/><text x="36.0502%" y="463.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u32&gt;::try_from (7 samples, 0.07%)</title><rect x="35.9330%" y="437" width="0.0689%" height="15" fill="rgb(231,100,33)" fg:x="3649" fg:w="7"/><text x="36.0502%" y="447.50"></text></g><g><title>&lt;fringe_vs_astar::algorithms::fringe::cache::Cache as core::ops::index::Index&lt;u32&gt;&gt;::index (10 samples, 0.10%)</title><rect x="36.0020%" y="453" width="0.0985%" height="15" fill="rgb(228,126,14)" fg:x="3656" fg:w="10"/><text x="36.1192%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.10%)</title><rect x="36.0020%" y="437" width="0.0985%" height="15" fill="rgb(215,173,21)" fg:x="3656" fg:w="10"/><text x="36.1192%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.10%)</title><rect x="36.0020%" y="421" width="0.0985%" height="15" fill="rgb(210,6,40)" fg:x="3656" fg:w="10"/><text x="36.1192%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.10%)</title><rect x="36.0020%" y="405" width="0.0985%" height="15" fill="rgb(212,48,18)" fg:x="3656" fg:w="10"/><text x="36.1192%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.04%)</title><rect x="36.1595%" y="245" width="0.0394%" height="15" fill="rgb(230,214,11)" fg:x="3672" fg:w="4"/><text x="36.2767%" y="255.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.04%)</title><rect x="36.1595%" y="229" width="0.0394%" height="15" fill="rgb(254,105,39)" fg:x="3672" fg:w="4"/><text x="36.2767%" y="239.50"></text></g><g><title>x86_pmu_enable (4 samples, 0.04%)</title><rect x="36.1595%" y="213" width="0.0394%" height="15" fill="rgb(245,158,5)" fg:x="3672" fg:w="4"/><text x="36.2767%" y="223.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 0.04%)</title><rect x="36.1595%" y="197" width="0.0394%" height="15" fill="rgb(249,208,11)" fg:x="3672" fg:w="4"/><text x="36.2767%" y="207.50"></text></g><g><title>native_write_msr (4 samples, 0.04%)</title><rect x="36.1595%" y="181" width="0.0394%" height="15" fill="rgb(210,39,28)" fg:x="3672" fg:w="4"/><text x="36.2767%" y="191.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.05%)</title><rect x="36.1595%" y="389" width="0.0492%" height="15" fill="rgb(211,56,53)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.05%)</title><rect x="36.1595%" y="373" width="0.0492%" height="15" fill="rgb(226,201,30)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="383.50"></text></g><g><title>irqentry_exit (5 samples, 0.05%)</title><rect x="36.1595%" y="357" width="0.0492%" height="15" fill="rgb(239,101,34)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="367.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.05%)</title><rect x="36.1595%" y="341" width="0.0492%" height="15" fill="rgb(226,209,5)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="351.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.05%)</title><rect x="36.1595%" y="325" width="0.0492%" height="15" fill="rgb(250,105,47)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="335.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.05%)</title><rect x="36.1595%" y="309" width="0.0492%" height="15" fill="rgb(230,72,3)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="319.50"></text></g><g><title>schedule (5 samples, 0.05%)</title><rect x="36.1595%" y="293" width="0.0492%" height="15" fill="rgb(232,218,39)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="303.50"></text></g><g><title>__schedule (5 samples, 0.05%)</title><rect x="36.1595%" y="277" width="0.0492%" height="15" fill="rgb(248,166,6)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="287.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.05%)</title><rect x="36.1595%" y="261" width="0.0492%" height="15" fill="rgb(247,89,20)" fg:x="3672" fg:w="5"/><text x="36.2767%" y="271.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (13 samples, 0.13%)</title><rect x="36.1103%" y="405" width="0.1280%" height="15" fill="rgb(248,130,54)" fg:x="3667" fg:w="13"/><text x="36.2275%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (3 samples, 0.03%)</title><rect x="36.2088%" y="389" width="0.0295%" height="15" fill="rgb(234,196,4)" fg:x="3677" fg:w="3"/><text x="36.3260%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (355 samples, 3.50%)</title><rect x="32.7523%" y="549" width="3.4958%" height="15" fill="rgb(250,143,31)" fg:x="3326" fg:w="355"/><text x="32.8695%" y="559.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (355 samples, 3.50%)</title><rect x="32.7523%" y="533" width="3.4958%" height="15" fill="rgb(211,110,34)" fg:x="3326" fg:w="355"/><text x="32.8695%" y="543.50">&lt;core::ite..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (355 samples, 3.50%)</title><rect x="32.7523%" y="517" width="3.4958%" height="15" fill="rgb(215,124,48)" fg:x="3326" fg:w="355"/><text x="32.8695%" y="527.50">&lt;core::sli..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (354 samples, 3.49%)</title><rect x="32.7622%" y="501" width="3.4860%" height="15" fill="rgb(216,46,13)" fg:x="3327" fg:w="354"/><text x="32.8794%" y="511.50">core::iter..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (350 samples, 3.45%)</title><rect x="32.8016%" y="485" width="3.4466%" height="15" fill="rgb(205,184,25)" fg:x="3331" fg:w="350"/><text x="32.9188%" y="495.50">fringe_vs_..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::check (334 samples, 3.29%)</title><rect x="32.9591%" y="469" width="3.2890%" height="15" fill="rgb(228,1,10)" fg:x="3347" fg:w="334"/><text x="33.0763%" y="479.50">fringe_vs..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::update (15 samples, 0.15%)</title><rect x="36.1004%" y="453" width="0.1477%" height="15" fill="rgb(213,116,27)" fg:x="3666" fg:w="15"/><text x="36.2176%" y="463.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::get_heuristic (14 samples, 0.14%)</title><rect x="36.1103%" y="437" width="0.1379%" height="15" fill="rgb(241,95,50)" fg:x="3667" fg:w="14"/><text x="36.2275%" y="447.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Heuristic::get (14 samples, 0.14%)</title><rect x="36.1103%" y="421" width="0.1379%" height="15" fill="rgb(238,48,32)" fg:x="3667" fg:w="14"/><text x="36.2275%" y="431.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors (458 samples, 4.51%)</title><rect x="31.7774%" y="565" width="4.5101%" height="15" fill="rgb(235,113,49)" fg:x="3227" fg:w="458"/><text x="31.8946%" y="575.50">fringe_vs_asta..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::neighbors (4 samples, 0.04%)</title><rect x="36.2482%" y="549" width="0.0394%" height="15" fill="rgb(205,127,43)" fg:x="3681" fg:w="4"/><text x="36.3653%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="36.2678%" y="533" width="0.0197%" height="15" fill="rgb(250,162,2)" fg:x="3683" fg:w="2"/><text x="36.3850%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="36.2678%" y="517" width="0.0197%" height="15" fill="rgb(220,13,41)" fg:x="3683" fg:w="2"/><text x="36.3850%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="36.2678%" y="501" width="0.0197%" height="15" fill="rgb(249,221,25)" fg:x="3683" fg:w="2"/><text x="36.3850%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (5 samples, 0.05%)</title><rect x="36.2875%" y="565" width="0.0492%" height="15" fill="rgb(215,208,19)" fg:x="3685" fg:w="5"/><text x="36.4047%" y="575.50"></text></g><g><title>&lt;fringe_vs_astar::algorithms::fringe::cache::Cache as core::ops::index::Index&lt;u32&gt;&gt;::index (787 samples, 7.75%)</title><rect x="66.1940%" y="549" width="7.7499%" height="15" fill="rgb(236,175,2)" fg:x="6722" fg:w="787"/><text x="66.3112%" y="559.50">&lt;fringe_vs_astar::algorith..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (778 samples, 7.66%)</title><rect x="66.2826%" y="533" width="7.6613%" height="15" fill="rgb(241,52,2)" fg:x="6731" fg:w="778"/><text x="66.3998%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (778 samples, 7.66%)</title><rect x="66.2826%" y="517" width="7.6613%" height="15" fill="rgb(248,140,14)" fg:x="6731" fg:w="778"/><text x="66.3998%" y="527.50">core::slice::index::&lt;impl..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (778 samples, 7.66%)</title><rect x="66.2826%" y="501" width="7.6613%" height="15" fill="rgb(253,22,42)" fg:x="6731" fg:w="778"/><text x="66.3998%" y="511.50">&lt;usize as core::slice::in..</text></g><g><title>__hrtimer_run_queues (3 samples, 0.03%)</title><rect x="73.9537%" y="485" width="0.0295%" height="15" fill="rgb(234,61,47)" fg:x="7510" fg:w="3"/><text x="74.0709%" y="495.50"></text></g><g><title>tick_sched_timer (3 samples, 0.03%)</title><rect x="73.9537%" y="469" width="0.0295%" height="15" fill="rgb(208,226,15)" fg:x="7510" fg:w="3"/><text x="74.0709%" y="479.50"></text></g><g><title>tick_sched_handle (3 samples, 0.03%)</title><rect x="73.9537%" y="453" width="0.0295%" height="15" fill="rgb(217,221,4)" fg:x="7510" fg:w="3"/><text x="74.0709%" y="463.50"></text></g><g><title>update_process_times (3 samples, 0.03%)</title><rect x="73.9537%" y="437" width="0.0295%" height="15" fill="rgb(212,174,34)" fg:x="7510" fg:w="3"/><text x="74.0709%" y="447.50"></text></g><g><title>scheduler_tick (2 samples, 0.02%)</title><rect x="73.9636%" y="421" width="0.0197%" height="15" fill="rgb(253,83,4)" fg:x="7511" fg:w="2"/><text x="74.0808%" y="431.50"></text></g><g><title>__sysvec_apic_timer_interrupt (5 samples, 0.05%)</title><rect x="73.9439%" y="517" width="0.0492%" height="15" fill="rgb(250,195,49)" fg:x="7509" fg:w="5"/><text x="74.0611%" y="527.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.04%)</title><rect x="73.9537%" y="501" width="0.0394%" height="15" fill="rgb(241,192,25)" fg:x="7510" fg:w="4"/><text x="74.0709%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::check_estimate (3,825 samples, 37.67%)</title><rect x="36.3368%" y="565" width="37.6662%" height="15" fill="rgb(208,124,10)" fg:x="3690" fg:w="3825"/><text x="36.4540%" y="575.50">fringe_vs_astar::algorithms::fringe::cache::Cache::check_estimate</text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.06%)</title><rect x="73.9439%" y="549" width="0.0591%" height="15" fill="rgb(222,33,0)" fg:x="7509" fg:w="6"/><text x="74.0611%" y="559.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.06%)</title><rect x="73.9439%" y="533" width="0.0591%" height="15" fill="rgb(234,209,28)" fg:x="7509" fg:w="6"/><text x="74.0611%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="90.1329%" y="533" width="0.0197%" height="15" fill="rgb(224,11,23)" fg:x="9153" fg:w="2"/><text x="90.2501%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="90.1329%" y="517" width="0.0197%" height="15" fill="rgb(232,99,1)" fg:x="9153" fg:w="2"/><text x="90.2501%" y="527.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_node (5,934 samples, 58.43%)</title><rect x="31.7774%" y="581" width="58.4343%" height="15" fill="rgb(237,95,45)" fg:x="3227" fg:w="5934"/><text x="31.8946%" y="591.50">fringe_vs_astar::algorithms::fringe::FringeSearch::process_node</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (1,646 samples, 16.21%)</title><rect x="74.0030%" y="565" width="16.2088%" height="15" fill="rgb(208,109,11)" fg:x="7515" fg:w="1646"/><text x="74.1201%" y="575.50">fringe_vs_astar::structures::fringe::Fringe::push_later</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,646 samples, 16.21%)</title><rect x="74.0030%" y="549" width="16.2088%" height="15" fill="rgb(216,190,48)" fg:x="7515" fg:w="1646"/><text x="74.1201%" y="559.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (6 samples, 0.06%)</title><rect x="90.1526%" y="533" width="0.0591%" height="15" fill="rgb(251,171,36)" fg:x="9155" fg:w="6"/><text x="90.2698%" y="543.50"></text></g><g><title>_start (9,783 samples, 96.34%)</title><rect x="2.0483%" y="805" width="96.3368%" height="15" fill="rgb(230,62,22)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="815.50">_start</text></g><g><title>__libc_start_main_impl (9,783 samples, 96.34%)</title><rect x="2.0483%" y="789" width="96.3368%" height="15" fill="rgb(225,114,35)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="799.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (9,783 samples, 96.34%)</title><rect x="2.0483%" y="773" width="96.3368%" height="15" fill="rgb(215,118,42)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="783.50">__libc_start_call_main</text></g><g><title>main (9,783 samples, 96.34%)</title><rect x="2.0483%" y="757" width="96.3368%" height="15" fill="rgb(243,119,21)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (9,783 samples, 96.34%)</title><rect x="2.0483%" y="741" width="96.3368%" height="15" fill="rgb(252,177,53)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (9,783 samples, 96.34%)</title><rect x="2.0483%" y="725" width="96.3368%" height="15" fill="rgb(237,209,29)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="735.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9,783 samples, 96.34%)</title><rect x="2.0483%" y="709" width="96.3368%" height="15" fill="rgb(212,65,23)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (9,783 samples, 96.34%)</title><rect x="2.0483%" y="693" width="96.3368%" height="15" fill="rgb(230,222,46)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="703.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (9,783 samples, 96.34%)</title><rect x="2.0483%" y="677" width="96.3368%" height="15" fill="rgb(215,135,32)" fg:x="208" fg:w="9783"/><text x="2.1654%" y="687.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (8,354 samples, 82.26%)</title><rect x="16.1201%" y="661" width="82.2649%" height="15" fill="rgb(246,101,22)" fg:x="1637" fg:w="8354"/><text x="16.2373%" y="671.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::context::Context::solve_mode (8,153 samples, 80.29%)</title><rect x="18.0995%" y="645" width="80.2856%" height="15" fill="rgb(206,107,13)" fg:x="1838" fg:w="8153"/><text x="18.2166%" y="655.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (8,153 samples, 80.29%)</title><rect x="18.0995%" y="629" width="80.2856%" height="15" fill="rgb(250,100,44)" fg:x="1838" fg:w="8153"/><text x="18.2166%" y="639.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::context::Context::timed_fringe (8,153 samples, 80.29%)</title><rect x="18.0995%" y="613" width="80.2856%" height="15" fill="rgb(231,147,38)" fg:x="1838" fg:w="8153"/><text x="18.2166%" y="623.50">fringe_vs_astar::context::Context::timed_fringe</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (7,900 samples, 77.79%)</title><rect x="20.5908%" y="597" width="77.7942%" height="15" fill="rgb(229,8,40)" fg:x="2091" fg:w="7900"/><text x="20.7080%" y="607.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (830 samples, 8.17%)</title><rect x="90.2117%" y="581" width="8.1733%" height="15" fill="rgb(221,135,30)" fg:x="9161" fg:w="830"/><text x="90.3289%" y="591.50">fringe_vs_astar::structures..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (830 samples, 8.17%)</title><rect x="90.2117%" y="565" width="8.1733%" height="15" fill="rgb(249,193,18)" fg:x="9161" fg:w="830"/><text x="90.3289%" y="575.50">alloc::vec::Vec&lt;T,A&gt;::pop</text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="98.3555%" y="549" width="0.0295%" height="15" fill="rgb(209,133,39)" fg:x="9988" fg:w="3"/><text x="98.4727%" y="559.50"></text></g><g><title>asm_exc_page_fault (97 samples, 0.96%)</title><rect x="98.3850%" y="805" width="0.9552%" height="15" fill="rgb(232,100,14)" fg:x="9991" fg:w="97"/><text x="98.5022%" y="815.50">a..</text></g><g><title>_compound_head (2 samples, 0.02%)</title><rect x="99.3698%" y="581" width="0.0197%" height="15" fill="rgb(224,185,1)" fg:x="10091" fg:w="2"/><text x="99.4870%" y="591.50"></text></g><g><title>page_remove_rmap (8 samples, 0.08%)</title><rect x="99.3993%" y="565" width="0.0788%" height="15" fill="rgb(223,139,8)" fg:x="10094" fg:w="8"/><text x="99.5165%" y="575.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.03%)</title><rect x="99.4485%" y="549" width="0.0295%" height="15" fill="rgb(232,213,38)" fg:x="10099" fg:w="3"/><text x="99.5657%" y="559.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.03%)</title><rect x="99.4485%" y="533" width="0.0295%" height="15" fill="rgb(207,94,22)" fg:x="10099" fg:w="3"/><text x="99.5657%" y="543.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.02%)</title><rect x="99.4584%" y="517" width="0.0197%" height="15" fill="rgb(219,183,54)" fg:x="10100" fg:w="2"/><text x="99.5756%" y="527.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.02%)</title><rect x="99.5076%" y="501" width="0.0197%" height="15" fill="rgb(216,185,54)" fg:x="10105" fg:w="2"/><text x="99.6248%" y="511.50"></text></g><g><title>free_unref_page_commit (7 samples, 0.07%)</title><rect x="99.5372%" y="485" width="0.0689%" height="15" fill="rgb(254,217,39)" fg:x="10108" fg:w="7"/><text x="99.6544%" y="495.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.07%)</title><rect x="99.5372%" y="469" width="0.0689%" height="15" fill="rgb(240,178,23)" fg:x="10108" fg:w="7"/><text x="99.6544%" y="479.50"></text></g><g><title>__free_one_page (7 samples, 0.07%)</title><rect x="99.5372%" y="453" width="0.0689%" height="15" fill="rgb(218,11,47)" fg:x="10108" fg:w="7"/><text x="99.6544%" y="463.50"></text></g><g><title>free_unref_page_list (10 samples, 0.10%)</title><rect x="99.5273%" y="501" width="0.0985%" height="15" fill="rgb(218,51,51)" fg:x="10107" fg:w="10"/><text x="99.6445%" y="511.50"></text></g><g><title>free_unref_page_prepare (2 samples, 0.02%)</title><rect x="99.6061%" y="485" width="0.0197%" height="15" fill="rgb(238,126,27)" fg:x="10115" fg:w="2"/><text x="99.7233%" y="495.50"></text></g><g><title>free_pages_and_swap_cache (22 samples, 0.22%)</title><rect x="99.4781%" y="533" width="0.2166%" height="15" fill="rgb(249,202,22)" fg:x="10102" fg:w="22"/><text x="99.5953%" y="543.50"></text></g><g><title>release_pages (22 samples, 0.22%)</title><rect x="99.4781%" y="517" width="0.2166%" height="15" fill="rgb(254,195,49)" fg:x="10102" fg:w="22"/><text x="99.5953%" y="527.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (7 samples, 0.07%)</title><rect x="99.6258%" y="501" width="0.0689%" height="15" fill="rgb(208,123,14)" fg:x="10117" fg:w="7"/><text x="99.7430%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (39 samples, 0.38%)</title><rect x="99.3402%" y="805" width="0.3840%" height="15" fill="rgb(224,200,8)" fg:x="10088" fg:w="39"/><text x="99.4574%" y="815.50"></text></g><g><title>do_syscall_64 (39 samples, 0.38%)</title><rect x="99.3402%" y="789" width="0.3840%" height="15" fill="rgb(217,61,36)" fg:x="10088" fg:w="39"/><text x="99.4574%" y="799.50"></text></g><g><title>x64_sys_call (39 samples, 0.38%)</title><rect x="99.3402%" y="773" width="0.3840%" height="15" fill="rgb(206,35,45)" fg:x="10088" fg:w="39"/><text x="99.4574%" y="783.50"></text></g><g><title>__x64_sys_exit_group (38 samples, 0.37%)</title><rect x="99.3501%" y="757" width="0.3742%" height="15" fill="rgb(217,65,33)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="767.50"></text></g><g><title>do_group_exit (38 samples, 0.37%)</title><rect x="99.3501%" y="741" width="0.3742%" height="15" fill="rgb(222,158,48)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="751.50"></text></g><g><title>do_exit (38 samples, 0.37%)</title><rect x="99.3501%" y="725" width="0.3742%" height="15" fill="rgb(254,2,54)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="735.50"></text></g><g><title>exit_mm (38 samples, 0.37%)</title><rect x="99.3501%" y="709" width="0.3742%" height="15" fill="rgb(250,143,38)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="719.50"></text></g><g><title>mmput (38 samples, 0.37%)</title><rect x="99.3501%" y="693" width="0.3742%" height="15" fill="rgb(248,25,0)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="703.50"></text></g><g><title>__mmput (38 samples, 0.37%)</title><rect x="99.3501%" y="677" width="0.3742%" height="15" fill="rgb(206,152,27)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="687.50"></text></g><g><title>exit_mmap (38 samples, 0.37%)</title><rect x="99.3501%" y="661" width="0.3742%" height="15" fill="rgb(240,77,30)" fg:x="10089" fg:w="38"/><text x="99.4673%" y="671.50"></text></g><g><title>unmap_vmas (37 samples, 0.36%)</title><rect x="99.3599%" y="645" width="0.3644%" height="15" fill="rgb(231,5,3)" fg:x="10090" fg:w="37"/><text x="99.4771%" y="655.50"></text></g><g><title>unmap_single_vma (37 samples, 0.36%)</title><rect x="99.3599%" y="629" width="0.3644%" height="15" fill="rgb(207,226,32)" fg:x="10090" fg:w="37"/><text x="99.4771%" y="639.50"></text></g><g><title>unmap_page_range (37 samples, 0.36%)</title><rect x="99.3599%" y="613" width="0.3644%" height="15" fill="rgb(222,207,47)" fg:x="10090" fg:w="37"/><text x="99.4771%" y="623.50"></text></g><g><title>zap_pmd_range.isra.0 (37 samples, 0.36%)</title><rect x="99.3599%" y="597" width="0.3644%" height="15" fill="rgb(229,115,45)" fg:x="10090" fg:w="37"/><text x="99.4771%" y="607.50"></text></g><g><title>zap_pte_range (34 samples, 0.33%)</title><rect x="99.3895%" y="581" width="0.3348%" height="15" fill="rgb(224,191,6)" fg:x="10093" fg:w="34"/><text x="99.5067%" y="591.50"></text></g><g><title>tlb_flush_mmu (25 samples, 0.25%)</title><rect x="99.4781%" y="565" width="0.2462%" height="15" fill="rgb(230,227,24)" fg:x="10102" fg:w="25"/><text x="99.5953%" y="575.50"></text></g><g><title>tlb_batch_pages_flush (25 samples, 0.25%)</title><rect x="99.4781%" y="549" width="0.2462%" height="15" fill="rgb(228,80,19)" fg:x="10102" fg:w="25"/><text x="99.5953%" y="559.50"></text></g><g><title>free_swap_cache (3 samples, 0.03%)</title><rect x="99.6947%" y="533" width="0.0295%" height="15" fill="rgb(247,229,0)" fg:x="10124" fg:w="3"/><text x="99.8119%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.08%)</title><rect x="99.7243%" y="789" width="0.0788%" height="15" fill="rgb(237,194,15)" fg:x="10127" fg:w="8"/><text x="99.8415%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.08%)</title><rect x="99.7243%" y="773" width="0.0788%" height="15" fill="rgb(219,203,20)" fg:x="10127" fg:w="8"/><text x="99.8415%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (3 samples, 0.03%)</title><rect x="99.8031%" y="789" width="0.0295%" height="15" fill="rgb(234,128,8)" fg:x="10135" fg:w="3"/><text x="99.9202%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (3 samples, 0.03%)</title><rect x="99.8031%" y="773" width="0.0295%" height="15" fill="rgb(248,202,8)" fg:x="10135" fg:w="3"/><text x="99.9202%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="99.8031%" y="757" width="0.0295%" height="15" fill="rgb(206,104,37)" fg:x="10135" fg:w="3"/><text x="99.9202%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="99.8031%" y="741" width="0.0295%" height="15" fill="rgb(223,8,27)" fg:x="10135" fg:w="3"/><text x="99.9202%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="99.8031%" y="725" width="0.0295%" height="15" fill="rgb(216,217,28)" fg:x="10135" fg:w="3"/><text x="99.9202%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.06%)</title><rect x="99.8326%" y="773" width="0.0591%" height="15" fill="rgb(249,199,1)" fg:x="10138" fg:w="6"/><text x="99.9498%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.06%)</title><rect x="99.8326%" y="757" width="0.0591%" height="15" fill="rgb(240,85,17)" fg:x="10138" fg:w="6"/><text x="99.9498%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.06%)</title><rect x="99.8326%" y="741" width="0.0591%" height="15" fill="rgb(206,108,45)" fg:x="10138" fg:w="6"/><text x="99.9498%" y="751.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.06%)</title><rect x="99.8326%" y="725" width="0.0591%" height="15" fill="rgb(245,210,41)" fg:x="10138" fg:w="6"/><text x="99.9498%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="99.8917%" y="773" width="0.0197%" height="15" fill="rgb(206,13,37)" fg:x="10144" fg:w="2"/><text x="100.0089%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="99.8917%" y="757" width="0.0197%" height="15" fill="rgb(250,61,18)" fg:x="10144" fg:w="2"/><text x="100.0089%" y="767.50"></text></g><g><title>fringe-vs-astar (10,150 samples, 99.95%)</title><rect x="0.0000%" y="821" width="99.9508%" height="15" fill="rgb(235,172,48)" fg:x="0" fg:w="10150"/><text x="0.1172%" y="831.50">fringe-vs-astar</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (23 samples, 0.23%)</title><rect x="99.7243%" y="805" width="0.2265%" height="15" fill="rgb(249,201,17)" fg:x="10127" fg:w="23"/><text x="99.8415%" y="815.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (12 samples, 0.12%)</title><rect x="99.8326%" y="789" width="0.1182%" height="15" fill="rgb(219,208,6)" fg:x="10138" fg:w="12"/><text x="99.9498%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="99.9114%" y="773" width="0.0394%" height="15" fill="rgb(248,31,23)" fg:x="10146" fg:w="4"/><text x="100.0286%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="99.9114%" y="757" width="0.0394%" height="15" fill="rgb(245,15,42)" fg:x="10146" fg:w="4"/><text x="100.0286%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="99.9114%" y="741" width="0.0394%" height="15" fill="rgb(222,217,39)" fg:x="10146" fg:w="4"/><text x="100.0286%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="99.9114%" y="725" width="0.0394%" height="15" fill="rgb(210,219,27)" fg:x="10146" fg:w="4"/><text x="100.0286%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="99.9114%" y="709" width="0.0394%" height="15" fill="rgb(252,166,36)" fg:x="10146" fg:w="4"/><text x="100.0286%" y="719.50"></text></g><g><title>all (10,155 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(245,132,34)" fg:x="0" fg:w="10155"/><text x="0.1172%" y="847.50"></text></g><g><title>perf-exec (5 samples, 0.05%)</title><rect x="99.9508%" y="821" width="0.0492%" height="15" fill="rgb(236,54,3)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="99.9508%" y="805" width="0.0492%" height="15" fill="rgb(241,173,43)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="815.50"></text></g><g><title>do_syscall_64 (5 samples, 0.05%)</title><rect x="99.9508%" y="789" width="0.0492%" height="15" fill="rgb(215,190,9)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="799.50"></text></g><g><title>x64_sys_call (5 samples, 0.05%)</title><rect x="99.9508%" y="773" width="0.0492%" height="15" fill="rgb(242,101,16)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="783.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.05%)</title><rect x="99.9508%" y="757" width="0.0492%" height="15" fill="rgb(223,190,21)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="767.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.05%)</title><rect x="99.9508%" y="741" width="0.0492%" height="15" fill="rgb(215,228,25)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="751.50"></text></g><g><title>bprm_execve (5 samples, 0.05%)</title><rect x="99.9508%" y="725" width="0.0492%" height="15" fill="rgb(225,36,22)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="735.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.05%)</title><rect x="99.9508%" y="709" width="0.0492%" height="15" fill="rgb(251,106,46)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="719.50"></text></g><g><title>exec_binprm (5 samples, 0.05%)</title><rect x="99.9508%" y="693" width="0.0492%" height="15" fill="rgb(208,90,1)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="703.50"></text></g><g><title>search_binary_handler (5 samples, 0.05%)</title><rect x="99.9508%" y="677" width="0.0492%" height="15" fill="rgb(243,10,4)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="687.50"></text></g><g><title>load_elf_binary (5 samples, 0.05%)</title><rect x="99.9508%" y="661" width="0.0492%" height="15" fill="rgb(212,137,27)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="671.50"></text></g><g><title>begin_new_exec (5 samples, 0.05%)</title><rect x="99.9508%" y="645" width="0.0492%" height="15" fill="rgb(231,220,49)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="655.50"></text></g><g><title>perf_event_exec (5 samples, 0.05%)</title><rect x="99.9508%" y="629" width="0.0492%" height="15" fill="rgb(237,96,20)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="639.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.05%)</title><rect x="99.9508%" y="613" width="0.0492%" height="15" fill="rgb(239,229,30)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="623.50"></text></g><g><title>ctx_resched (5 samples, 0.05%)</title><rect x="99.9508%" y="597" width="0.0492%" height="15" fill="rgb(219,65,33)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="607.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.05%)</title><rect x="99.9508%" y="581" width="0.0492%" height="15" fill="rgb(243,134,7)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="591.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.05%)</title><rect x="99.9508%" y="565" width="0.0492%" height="15" fill="rgb(216,177,54)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="575.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.05%)</title><rect x="99.9508%" y="549" width="0.0492%" height="15" fill="rgb(211,160,20)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="559.50"></text></g><g><title>native_write_msr (5 samples, 0.05%)</title><rect x="99.9508%" y="533" width="0.0492%" height="15" fill="rgb(239,85,39)" fg:x="10150" fg:w="5"/><text x="100.0680%" y="543.50"></text></g></svg></svg>