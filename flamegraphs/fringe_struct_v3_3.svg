<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="1094" onload="init(evt)" viewBox="0 0 2560 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1077.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="1077.00"> </text><svg id="frames" x="10" width="2540" total_samples="6722"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="0.0595%" y="981" width="0.0446%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="3"/><text x="0.1767%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="0.0595%" y="965" width="0.0446%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="3"/><text x="0.1767%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="0.0595%" y="949" width="0.0446%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="3"/><text x="0.1767%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="0.0595%" y="933" width="0.0446%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="3"/><text x="0.1767%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.15%)</title><rect x="0.0000%" y="1013" width="0.1488%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="10"/><text x="0.1172%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.13%)</title><rect x="0.0149%" y="997" width="0.1339%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="9"/><text x="0.1321%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.04%)</title><rect x="0.1041%" y="981" width="0.0446%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="3"/><text x="0.2213%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="0.1041%" y="965" width="0.0446%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="3"/><text x="0.2213%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="0.1041%" y="949" width="0.0446%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="3"/><text x="0.2213%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.04%)</title><rect x="0.1041%" y="933" width="0.0446%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="3"/><text x="0.2213%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="0.1041%" y="917" width="0.0446%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="3"/><text x="0.2213%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="0.1041%" y="901" width="0.0446%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="3"/><text x="0.2213%" y="911.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="0.1041%" y="885" width="0.0446%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="3"/><text x="0.2213%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="0.1488%" y="997" width="0.0149%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="1"/><text x="0.2660%" y="1007.50"></text></g><g><title>_int_free (5 samples, 0.07%)</title><rect x="0.1636%" y="997" width="0.0744%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="5"/><text x="0.2808%" y="1007.50"></text></g><g><title>[[heap]] (9 samples, 0.13%)</title><rect x="0.1488%" y="1013" width="0.1339%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="9"/><text x="0.2660%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="0.2380%" y="997" width="0.0446%" height="15" fill="rgb(225,20,46)" fg:x="16" fg:w="3"/><text x="0.3552%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="0.2380%" y="981" width="0.0446%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="3"/><text x="0.3552%" y="991.50"></text></g><g><title>__GI___libc_free (2 samples, 0.03%)</title><rect x="0.2827%" y="997" width="0.0298%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="2"/><text x="0.3998%" y="1007.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.12%)</title><rect x="0.3124%" y="997" width="0.1190%" height="15" fill="rgb(226,26,5)" fg:x="21" fg:w="8"/><text x="0.4296%" y="1007.50"></text></g><g><title>__rdl_realloc (2 samples, 0.03%)</title><rect x="0.4314%" y="997" width="0.0298%" height="15" fill="rgb(249,33,26)" fg:x="29" fg:w="2"/><text x="0.5486%" y="1007.50"></text></g><g><title>_int_free (22 samples, 0.33%)</title><rect x="0.4612%" y="997" width="0.3273%" height="15" fill="rgb(235,183,28)" fg:x="31" fg:w="22"/><text x="0.5784%" y="1007.50"></text></g><g><title>[[stack]] (35 samples, 0.52%)</title><rect x="0.2827%" y="1013" width="0.5207%" height="15" fill="rgb(221,5,38)" fg:x="19" fg:w="35"/><text x="0.3998%" y="1023.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.01%)</title><rect x="0.7885%" y="997" width="0.0149%" height="15" fill="rgb(247,18,42)" fg:x="53" fg:w="1"/><text x="0.9056%" y="1007.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_node (1 samples, 0.01%)</title><rect x="0.7885%" y="981" width="0.0149%" height="15" fill="rgb(241,131,45)" fg:x="53" fg:w="1"/><text x="0.9056%" y="991.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (1 samples, 0.01%)</title><rect x="0.7885%" y="965" width="0.0149%" height="15" fill="rgb(249,31,29)" fg:x="53" fg:w="1"/><text x="0.9056%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="0.7885%" y="949" width="0.0149%" height="15" fill="rgb(225,111,53)" fg:x="53" fg:w="1"/><text x="0.9056%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.27%)</title><rect x="0.8033%" y="997" width="0.2678%" height="15" fill="rgb(238,160,17)" fg:x="54" fg:w="18"/><text x="0.9205%" y="1007.50"></text></g><g><title>__GI___libc_free (13 samples, 0.19%)</title><rect x="1.0711%" y="997" width="0.1934%" height="15" fill="rgb(214,148,48)" fg:x="72" fg:w="13"/><text x="1.1883%" y="1007.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.12%)</title><rect x="1.2645%" y="997" width="0.1190%" height="15" fill="rgb(232,36,49)" fg:x="85" fg:w="8"/><text x="1.3817%" y="1007.50"></text></g><g><title>_int_free (2 samples, 0.03%)</title><rect x="1.3835%" y="997" width="0.0298%" height="15" fill="rgb(209,103,24)" fg:x="93" fg:w="2"/><text x="1.5007%" y="1007.50"></text></g><g><title>[anon] (46 samples, 0.68%)</title><rect x="0.8033%" y="1013" width="0.6843%" height="15" fill="rgb(229,88,8)" fg:x="54" fg:w="46"/><text x="0.9205%" y="1023.50"></text></g><g><title>unlink_chunk (5 samples, 0.07%)</title><rect x="1.4133%" y="997" width="0.0744%" height="15" fill="rgb(213,181,19)" fg:x="95" fg:w="5"/><text x="1.5305%" y="1007.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="1.4877%" y="997" width="0.0446%" height="15" fill="rgb(254,191,54)" fg:x="100" fg:w="3"/><text x="1.6048%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.12%)</title><rect x="1.5323%" y="997" width="0.1190%" height="15" fill="rgb(241,83,37)" fg:x="103" fg:w="8"/><text x="1.6495%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.12%)</title><rect x="1.5323%" y="981" width="0.1190%" height="15" fill="rgb(233,36,39)" fg:x="103" fg:w="8"/><text x="1.6495%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.12%)</title><rect x="1.5323%" y="965" width="0.1190%" height="15" fill="rgb(226,3,54)" fg:x="103" fg:w="8"/><text x="1.6495%" y="975.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.12%)</title><rect x="1.5323%" y="949" width="0.1190%" height="15" fill="rgb(245,192,40)" fg:x="103" fg:w="8"/><text x="1.6495%" y="959.50"></text></g><g><title>[fringe-vs-astar] (13 samples, 0.19%)</title><rect x="1.4877%" y="1013" width="0.1934%" height="15" fill="rgb(238,167,29)" fg:x="100" fg:w="13"/><text x="1.6048%" y="1023.50"></text></g><g><title>unlink_chunk (2 samples, 0.03%)</title><rect x="1.6513%" y="997" width="0.0298%" height="15" fill="rgb(232,182,51)" fg:x="111" fg:w="2"/><text x="1.7685%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="1.7406%" y="965" width="0.0446%" height="15" fill="rgb(231,60,39)" fg:x="117" fg:w="3"/><text x="1.8577%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="1.7406%" y="949" width="0.0446%" height="15" fill="rgb(208,69,12)" fg:x="117" fg:w="3"/><text x="1.8577%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="1.7406%" y="933" width="0.0446%" height="15" fill="rgb(235,93,37)" fg:x="117" fg:w="3"/><text x="1.8577%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.04%)</title><rect x="1.7406%" y="917" width="0.0446%" height="15" fill="rgb(213,116,39)" fg:x="117" fg:w="3"/><text x="1.8577%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="1.7406%" y="901" width="0.0446%" height="15" fill="rgb(222,207,29)" fg:x="117" fg:w="3"/><text x="1.8577%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="1.7406%" y="885" width="0.0446%" height="15" fill="rgb(206,96,30)" fg:x="117" fg:w="3"/><text x="1.8577%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (3 samples, 0.04%)</title><rect x="1.7406%" y="869" width="0.0446%" height="15" fill="rgb(218,138,4)" fg:x="117" fg:w="3"/><text x="1.8577%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (3 samples, 0.04%)</title><rect x="1.7406%" y="853" width="0.0446%" height="15" fill="rgb(250,191,14)" fg:x="117" fg:w="3"/><text x="1.8577%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.04%)</title><rect x="1.7406%" y="837" width="0.0446%" height="15" fill="rgb(239,60,40)" fg:x="117" fg:w="3"/><text x="1.8577%" y="847.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (3 samples, 0.04%)</title><rect x="1.7406%" y="821" width="0.0446%" height="15" fill="rgb(206,27,48)" fg:x="117" fg:w="3"/><text x="1.8577%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="1.7852%" y="917" width="0.0149%" height="15" fill="rgb(225,35,8)" fg:x="120" fg:w="1"/><text x="1.9024%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.07%)</title><rect x="1.7852%" y="965" width="0.0744%" height="15" fill="rgb(250,213,24)" fg:x="120" fg:w="5"/><text x="1.9024%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.07%)</title><rect x="1.7852%" y="949" width="0.0744%" height="15" fill="rgb(247,123,22)" fg:x="120" fg:w="5"/><text x="1.9024%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.07%)</title><rect x="1.7852%" y="933" width="0.0744%" height="15" fill="rgb(231,138,38)" fg:x="120" fg:w="5"/><text x="1.9024%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.06%)</title><rect x="1.8001%" y="917" width="0.0595%" height="15" fill="rgb(231,145,46)" fg:x="121" fg:w="4"/><text x="1.9172%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 0.06%)</title><rect x="1.8001%" y="901" width="0.0595%" height="15" fill="rgb(251,118,11)" fg:x="121" fg:w="4"/><text x="1.9172%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4 samples, 0.06%)</title><rect x="1.8001%" y="885" width="0.0595%" height="15" fill="rgb(217,147,25)" fg:x="121" fg:w="4"/><text x="1.9172%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.06%)</title><rect x="1.8001%" y="869" width="0.0595%" height="15" fill="rgb(247,81,37)" fg:x="121" fg:w="4"/><text x="1.9172%" y="879.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (4 samples, 0.06%)</title><rect x="1.8001%" y="853" width="0.0595%" height="15" fill="rgb(209,12,38)" fg:x="121" fg:w="4"/><text x="1.9172%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.30%)</title><rect x="1.6810%" y="997" width="0.2975%" height="15" fill="rgb(227,1,9)" fg:x="113" fg:w="20"/><text x="1.7982%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.24%)</title><rect x="1.7406%" y="981" width="0.2380%" height="15" fill="rgb(248,47,43)" fg:x="117" fg:w="16"/><text x="1.8577%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.12%)</title><rect x="1.8596%" y="965" width="0.1190%" height="15" fill="rgb(221,10,30)" fg:x="125" fg:w="8"/><text x="1.9768%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.12%)</title><rect x="1.8596%" y="949" width="0.1190%" height="15" fill="rgb(210,229,1)" fg:x="125" fg:w="8"/><text x="1.9768%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.12%)</title><rect x="1.8596%" y="933" width="0.1190%" height="15" fill="rgb(222,148,37)" fg:x="125" fg:w="8"/><text x="1.9768%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.12%)</title><rect x="1.8596%" y="917" width="0.1190%" height="15" fill="rgb(234,67,33)" fg:x="125" fg:w="8"/><text x="1.9768%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.12%)</title><rect x="1.8596%" y="901" width="0.1190%" height="15" fill="rgb(247,98,35)" fg:x="125" fg:w="8"/><text x="1.9768%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.12%)</title><rect x="1.8596%" y="885" width="0.1190%" height="15" fill="rgb(247,138,52)" fg:x="125" fg:w="8"/><text x="1.9768%" y="895.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.12%)</title><rect x="1.8596%" y="869" width="0.1190%" height="15" fill="rgb(213,79,30)" fg:x="125" fg:w="8"/><text x="1.9768%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.15%)</title><rect x="1.9786%" y="997" width="0.1488%" height="15" fill="rgb(246,177,23)" fg:x="133" fg:w="10"/><text x="2.0958%" y="1007.50"></text></g><g><title>__GI___libc_free (9 samples, 0.13%)</title><rect x="2.1273%" y="997" width="0.1339%" height="15" fill="rgb(230,62,27)" fg:x="143" fg:w="9"/><text x="2.2445%" y="1007.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.15%)</title><rect x="2.2612%" y="997" width="0.1488%" height="15" fill="rgb(216,154,8)" fg:x="152" fg:w="10"/><text x="2.3784%" y="1007.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.06%)</title><rect x="2.4100%" y="997" width="0.0595%" height="15" fill="rgb(244,35,45)" fg:x="162" fg:w="4"/><text x="2.5272%" y="1007.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.03%)</title><rect x="2.4695%" y="997" width="0.0298%" height="15" fill="rgb(251,115,12)" fg:x="166" fg:w="2"/><text x="2.5867%" y="1007.50"></text></g><g><title>__rdl_realloc (4 samples, 0.06%)</title><rect x="2.4993%" y="997" width="0.0595%" height="15" fill="rgb(240,54,50)" fg:x="168" fg:w="4"/><text x="2.6164%" y="1007.50"></text></g><g><title>_int_free (8 samples, 0.12%)</title><rect x="2.5588%" y="997" width="0.1190%" height="15" fill="rgb(233,84,52)" fg:x="172" fg:w="8"/><text x="2.6759%" y="1007.50"></text></g><g><title>_int_malloc (9 samples, 0.13%)</title><rect x="2.6778%" y="997" width="0.1339%" height="15" fill="rgb(207,117,47)" fg:x="180" fg:w="9"/><text x="2.7950%" y="1007.50"></text></g><g><title>_int_realloc (18 samples, 0.27%)</title><rect x="2.8117%" y="997" width="0.2678%" height="15" fill="rgb(249,43,39)" fg:x="189" fg:w="18"/><text x="2.9289%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="3.0794%" y="997" width="0.0149%" height="15" fill="rgb(209,38,44)" fg:x="207" fg:w="1"/><text x="3.1966%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="3.0943%" y="997" width="0.0149%" height="15" fill="rgb(236,212,23)" fg:x="208" fg:w="1"/><text x="3.2115%" y="1007.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::prepare_next_iteration (1 samples, 0.01%)</title><rect x="3.1092%" y="981" width="0.0149%" height="15" fill="rgb(242,79,21)" fg:x="209" fg:w="1"/><text x="3.2264%" y="991.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (1 samples, 0.01%)</title><rect x="3.1092%" y="965" width="0.0149%" height="15" fill="rgb(211,96,35)" fg:x="209" fg:w="1"/><text x="3.2264%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="3.1092%" y="949" width="0.0149%" height="15" fill="rgb(253,215,40)" fg:x="209" fg:w="1"/><text x="3.2264%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="3.1092%" y="933" width="0.0149%" height="15" fill="rgb(211,81,21)" fg:x="209" fg:w="1"/><text x="3.2264%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="3.1092%" y="917" width="0.0149%" height="15" fill="rgb(208,190,38)" fg:x="209" fg:w="1"/><text x="3.2264%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="3.1092%" y="901" width="0.0149%" height="15" fill="rgb(235,213,38)" fg:x="209" fg:w="1"/><text x="3.2264%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="3.1092%" y="885" width="0.0149%" height="15" fill="rgb(237,122,38)" fg:x="209" fg:w="1"/><text x="3.2264%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="3.1092%" y="869" width="0.0149%" height="15" fill="rgb(244,218,35)" fg:x="209" fg:w="1"/><text x="3.2264%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="3.1241%" y="965" width="0.0298%" height="15" fill="rgb(240,68,47)" fg:x="210" fg:w="2"/><text x="3.2413%" y="975.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.03%)</title><rect x="3.1241%" y="949" width="0.0298%" height="15" fill="rgb(210,16,53)" fg:x="210" fg:w="2"/><text x="3.2413%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.03%)</title><rect x="3.1241%" y="933" width="0.0298%" height="15" fill="rgb(235,124,12)" fg:x="210" fg:w="2"/><text x="3.2413%" y="943.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::check_estimate (1 samples, 0.01%)</title><rect x="3.1538%" y="965" width="0.0149%" height="15" fill="rgb(224,169,11)" fg:x="212" fg:w="1"/><text x="3.2710%" y="975.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::in_fringe (2 samples, 0.03%)</title><rect x="3.1687%" y="965" width="0.0298%" height="15" fill="rgb(250,166,2)" fg:x="213" fg:w="2"/><text x="3.2859%" y="975.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors (1 samples, 0.01%)</title><rect x="3.1985%" y="965" width="0.0149%" height="15" fill="rgb(242,216,29)" fg:x="215" fg:w="1"/><text x="3.3156%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(&amp;usize,f64)&gt;&gt; (1 samples, 0.01%)</title><rect x="3.1985%" y="949" width="0.0149%" height="15" fill="rgb(230,116,27)" fg:x="215" fg:w="1"/><text x="3.3156%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.1985%" y="933" width="0.0149%" height="15" fill="rgb(228,99,48)" fg:x="215" fg:w="1"/><text x="3.3156%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(&amp;usize,f64),alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="3.1985%" y="917" width="0.0149%" height="15" fill="rgb(253,11,6)" fg:x="215" fg:w="1"/><text x="3.3156%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.1985%" y="901" width="0.0149%" height="15" fill="rgb(247,143,39)" fg:x="215" fg:w="1"/><text x="3.3156%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;usize,f64)&gt;&gt; (1 samples, 0.01%)</title><rect x="3.1985%" y="885" width="0.0149%" height="15" fill="rgb(236,97,10)" fg:x="215" fg:w="1"/><text x="3.3156%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.1985%" y="869" width="0.0149%" height="15" fill="rgb(233,208,19)" fg:x="215" fg:w="1"/><text x="3.3156%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="3.1985%" y="853" width="0.0149%" height="15" fill="rgb(216,164,2)" fg:x="215" fg:w="1"/><text x="3.3156%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="3.1985%" y="837" width="0.0149%" height="15" fill="rgb(220,129,5)" fg:x="215" fg:w="1"/><text x="3.3156%" y="847.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_node (8 samples, 0.12%)</title><rect x="3.1241%" y="981" width="0.1190%" height="15" fill="rgb(242,17,10)" fg:x="210" fg:w="8"/><text x="3.2413%" y="991.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (2 samples, 0.03%)</title><rect x="3.2133%" y="965" width="0.0298%" height="15" fill="rgb(242,107,0)" fg:x="216" fg:w="2"/><text x="3.3305%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.03%)</title><rect x="3.2133%" y="949" width="0.0298%" height="15" fill="rgb(251,28,31)" fg:x="216" fg:w="2"/><text x="3.3305%" y="959.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.01%)</title><rect x="3.2431%" y="981" width="0.0149%" height="15" fill="rgb(233,223,10)" fg:x="218" fg:w="1"/><text x="3.3603%" y="991.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (11 samples, 0.16%)</title><rect x="3.1092%" y="997" width="0.1636%" height="15" fill="rgb(215,21,27)" fg:x="209" fg:w="11"/><text x="3.2264%" y="1007.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (1 samples, 0.01%)</title><rect x="3.2580%" y="981" width="0.0149%" height="15" fill="rgb(232,23,21)" fg:x="219" fg:w="1"/><text x="3.3751%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="3.2580%" y="965" width="0.0149%" height="15" fill="rgb(244,5,23)" fg:x="219" fg:w="1"/><text x="3.3751%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.06%)</title><rect x="3.2728%" y="965" width="0.0595%" height="15" fill="rgb(226,81,46)" fg:x="220" fg:w="4"/><text x="3.3900%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.06%)</title><rect x="3.2728%" y="949" width="0.0595%" height="15" fill="rgb(247,70,30)" fg:x="220" fg:w="4"/><text x="3.3900%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.09%)</title><rect x="3.3323%" y="965" width="0.0893%" height="15" fill="rgb(212,68,19)" fg:x="224" fg:w="6"/><text x="3.4495%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.09%)</title><rect x="3.3323%" y="949" width="0.0893%" height="15" fill="rgb(240,187,13)" fg:x="224" fg:w="6"/><text x="3.4495%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="3.3323%" y="933" width="0.0893%" height="15" fill="rgb(223,113,26)" fg:x="224" fg:w="6"/><text x="3.4495%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.09%)</title><rect x="3.3323%" y="917" width="0.0893%" height="15" fill="rgb(206,192,2)" fg:x="224" fg:w="6"/><text x="3.4495%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.09%)</title><rect x="3.3323%" y="901" width="0.0893%" height="15" fill="rgb(241,108,4)" fg:x="224" fg:w="6"/><text x="3.4495%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.10%)</title><rect x="3.4216%" y="949" width="0.1041%" height="15" fill="rgb(247,173,49)" fg:x="230" fg:w="7"/><text x="3.5388%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.10%)</title><rect x="3.4216%" y="933" width="0.1041%" height="15" fill="rgb(224,114,35)" fg:x="230" fg:w="7"/><text x="3.5388%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.10%)</title><rect x="3.4216%" y="917" width="0.1041%" height="15" fill="rgb(245,159,27)" fg:x="230" fg:w="7"/><text x="3.5388%" y="927.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.10%)</title><rect x="3.4216%" y="901" width="0.1041%" height="15" fill="rgb(245,172,44)" fg:x="230" fg:w="7"/><text x="3.5388%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="3.5257%" y="949" width="0.0446%" height="15" fill="rgb(236,23,11)" fg:x="237" fg:w="3"/><text x="3.6429%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="3.5257%" y="933" width="0.0446%" height="15" fill="rgb(205,117,38)" fg:x="237" fg:w="3"/><text x="3.6429%" y="943.50"></text></g><g><title>[unknown] (137 samples, 2.04%)</title><rect x="1.6810%" y="1013" width="2.0381%" height="15" fill="rgb(237,72,25)" fg:x="113" fg:w="137"/><text x="1.7982%" y="1023.50">[unkn..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (30 samples, 0.45%)</title><rect x="3.2728%" y="997" width="0.4463%" height="15" fill="rgb(244,70,9)" fg:x="220" fg:w="30"/><text x="3.3900%" y="1007.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (30 samples, 0.45%)</title><rect x="3.2728%" y="981" width="0.4463%" height="15" fill="rgb(217,125,39)" fg:x="220" fg:w="30"/><text x="3.3900%" y="991.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (20 samples, 0.30%)</title><rect x="3.4216%" y="965" width="0.2975%" height="15" fill="rgb(235,36,10)" fg:x="230" fg:w="20"/><text x="3.5388%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.15%)</title><rect x="3.5704%" y="949" width="0.1488%" height="15" fill="rgb(251,123,47)" fg:x="240" fg:w="10"/><text x="3.6876%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.15%)</title><rect x="3.5704%" y="933" width="0.1488%" height="15" fill="rgb(221,13,13)" fg:x="240" fg:w="10"/><text x="3.6876%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.15%)</title><rect x="3.5704%" y="917" width="0.1488%" height="15" fill="rgb(238,131,9)" fg:x="240" fg:w="10"/><text x="3.6876%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.15%)</title><rect x="3.5704%" y="901" width="0.1488%" height="15" fill="rgb(211,50,8)" fg:x="240" fg:w="10"/><text x="3.6876%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.15%)</title><rect x="3.5704%" y="885" width="0.1488%" height="15" fill="rgb(245,182,24)" fg:x="240" fg:w="10"/><text x="3.6876%" y="895.50"></text></g><g><title>_IO_wide_data_0 (10 samples, 0.15%)</title><rect x="3.7191%" y="1013" width="0.1488%" height="15" fill="rgb(242,14,37)" fg:x="250" fg:w="10"/><text x="3.8363%" y="1023.50"></text></g><g><title>_int_malloc (10 samples, 0.15%)</title><rect x="3.7191%" y="997" width="0.1488%" height="15" fill="rgb(246,228,12)" fg:x="250" fg:w="10"/><text x="3.8363%" y="1007.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.01%)</title><rect x="3.8679%" y="1013" width="0.0149%" height="15" fill="rgb(213,55,15)" fg:x="260" fg:w="1"/><text x="3.9851%" y="1023.50"></text></g><g><title>_int_free (10 samples, 0.15%)</title><rect x="3.8828%" y="1013" width="0.1488%" height="15" fill="rgb(209,9,3)" fg:x="261" fg:w="10"/><text x="4.0000%" y="1023.50"></text></g><g><title>free_perturb (1 samples, 0.01%)</title><rect x="6.0547%" y="645" width="0.0149%" height="15" fill="rgb(230,59,30)" fg:x="407" fg:w="1"/><text x="6.1719%" y="655.50"></text></g><g><title>malloc_consolidate (13 samples, 0.19%)</title><rect x="6.0696%" y="645" width="0.1934%" height="15" fill="rgb(209,121,21)" fg:x="408" fg:w="13"/><text x="6.1868%" y="655.50"></text></g><g><title>unlink_chunk (4 samples, 0.06%)</title><rect x="6.2035%" y="629" width="0.0595%" height="15" fill="rgb(220,109,13)" fg:x="417" fg:w="4"/><text x="6.3207%" y="639.50"></text></g><g><title>_int_free (131 samples, 1.95%)</title><rect x="4.4630%" y="661" width="1.9488%" height="15" fill="rgb(232,18,1)" fg:x="300" fg:w="131"/><text x="4.5801%" y="671.50">_int_..</text></g><g><title>unlink_chunk (10 samples, 0.15%)</title><rect x="6.2630%" y="645" width="0.1488%" height="15" fill="rgb(215,41,42)" fg:x="421" fg:w="10"/><text x="6.3802%" y="655.50"></text></g><g><title>__GI___libc_free (144 samples, 2.14%)</title><rect x="4.3291%" y="677" width="2.1422%" height="15" fill="rgb(224,123,36)" fg:x="291" fg:w="144"/><text x="4.4463%" y="687.50">__GI_..</text></g><g><title>arena_for_chunk (4 samples, 0.06%)</title><rect x="6.4118%" y="661" width="0.0595%" height="15" fill="rgb(240,125,3)" fg:x="431" fg:w="4"/><text x="6.5290%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (152 samples, 2.26%)</title><rect x="4.2844%" y="693" width="2.2612%" height="15" fill="rgb(205,98,50)" fg:x="288" fg:w="152"/><text x="4.4016%" y="703.50">alloc:..</text></g><g><title>__rdl_dealloc (5 samples, 0.07%)</title><rect x="6.4713%" y="677" width="0.0744%" height="15" fill="rgb(205,185,37)" fg:x="435" fg:w="5"/><text x="6.5885%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (154 samples, 2.29%)</title><rect x="4.2844%" y="709" width="2.2910%" height="15" fill="rgb(238,207,15)" fg:x="288" fg:w="154"/><text x="4.4016%" y="719.50">&lt;alloc..</text></g><g><title>fringe_vs_astar::context::Context::run (2 samples, 0.03%)</title><rect x="6.5457%" y="693" width="0.0298%" height="15" fill="rgb(213,199,42)" fg:x="440" fg:w="2"/><text x="6.6629%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188 samples, 2.80%)</title><rect x="4.0315%" y="789" width="2.7968%" height="15" fill="rgb(235,201,11)" fg:x="271" fg:w="188"/><text x="4.1487%" y="799.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (188 samples, 2.80%)</title><rect x="4.0315%" y="773" width="2.7968%" height="15" fill="rgb(207,46,11)" fg:x="271" fg:w="188"/><text x="4.1487%" y="783.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (188 samples, 2.80%)</title><rect x="4.0315%" y="757" width="2.7968%" height="15" fill="rgb(241,35,35)" fg:x="271" fg:w="188"/><text x="4.1487%" y="767.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (188 samples, 2.80%)</title><rect x="4.0315%" y="741" width="2.7968%" height="15" fill="rgb(243,32,47)" fg:x="271" fg:w="188"/><text x="4.1487%" y="751.50">core::pt..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188 samples, 2.80%)</title><rect x="4.0315%" y="725" width="2.7968%" height="15" fill="rgb(247,202,23)" fg:x="271" fg:w="188"/><text x="4.1487%" y="735.50">&lt;alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (17 samples, 0.25%)</title><rect x="6.5754%" y="709" width="0.2529%" height="15" fill="rgb(219,102,11)" fg:x="442" fg:w="17"/><text x="6.6926%" y="719.50"></text></g><g><title>_compound_head (5 samples, 0.07%)</title><rect x="6.8283%" y="501" width="0.0744%" height="15" fill="rgb(243,110,44)" fg:x="459" fg:w="5"/><text x="6.9455%" y="511.50"></text></g><g><title>vm_normal_page (1 samples, 0.01%)</title><rect x="6.9027%" y="501" width="0.0149%" height="15" fill="rgb(222,74,54)" fg:x="464" fg:w="1"/><text x="7.0199%" y="511.50"></text></g><g><title>page_remove_rmap (2 samples, 0.03%)</title><rect x="6.9473%" y="485" width="0.0298%" height="15" fill="rgb(216,99,12)" fg:x="467" fg:w="2"/><text x="7.0645%" y="495.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="6.9622%" y="469" width="0.0149%" height="15" fill="rgb(226,22,26)" fg:x="468" fg:w="1"/><text x="7.0794%" y="479.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="6.9622%" y="453" width="0.0149%" height="15" fill="rgb(217,163,10)" fg:x="468" fg:w="1"/><text x="7.0794%" y="463.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="6.9622%" y="437" width="0.0149%" height="15" fill="rgb(213,25,53)" fg:x="468" fg:w="1"/><text x="7.0794%" y="447.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.03%)</title><rect x="7.0217%" y="421" width="0.0298%" height="15" fill="rgb(252,105,26)" fg:x="472" fg:w="2"/><text x="7.1389%" y="431.50"></text></g><g><title>uncharge_folio (2 samples, 0.03%)</title><rect x="7.0217%" y="405" width="0.0298%" height="15" fill="rgb(220,39,43)" fg:x="472" fg:w="2"/><text x="7.1389%" y="415.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.01%)</title><rect x="7.0515%" y="421" width="0.0149%" height="15" fill="rgb(229,68,48)" fg:x="474" fg:w="1"/><text x="7.1687%" y="431.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="7.0515%" y="405" width="0.0149%" height="15" fill="rgb(252,8,32)" fg:x="474" fg:w="1"/><text x="7.1687%" y="415.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="7.0515%" y="389" width="0.0149%" height="15" fill="rgb(223,20,43)" fg:x="474" fg:w="1"/><text x="7.1687%" y="399.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.01%)</title><rect x="7.0663%" y="421" width="0.0149%" height="15" fill="rgb(229,81,49)" fg:x="475" fg:w="1"/><text x="7.1835%" y="431.50"></text></g><g><title>__free_one_page (1 samples, 0.01%)</title><rect x="7.0961%" y="373" width="0.0149%" height="15" fill="rgb(236,28,36)" fg:x="477" fg:w="1"/><text x="7.2133%" y="383.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.04%)</title><rect x="7.0812%" y="405" width="0.0446%" height="15" fill="rgb(249,185,26)" fg:x="476" fg:w="3"/><text x="7.1984%" y="415.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.04%)</title><rect x="7.0812%" y="389" width="0.0446%" height="15" fill="rgb(249,174,33)" fg:x="476" fg:w="3"/><text x="7.1984%" y="399.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.01%)</title><rect x="7.1110%" y="373" width="0.0149%" height="15" fill="rgb(233,201,37)" fg:x="478" fg:w="1"/><text x="7.2282%" y="383.50"></text></g><g><title>free_unref_page_list (4 samples, 0.06%)</title><rect x="7.0812%" y="421" width="0.0595%" height="15" fill="rgb(221,78,26)" fg:x="476" fg:w="4"/><text x="7.1984%" y="431.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.01%)</title><rect x="7.1259%" y="405" width="0.0149%" height="15" fill="rgb(250,127,30)" fg:x="479" fg:w="1"/><text x="7.2430%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (17 samples, 0.25%)</title><rect x="6.9771%" y="453" width="0.2529%" height="15" fill="rgb(230,49,44)" fg:x="469" fg:w="17"/><text x="7.0943%" y="463.50"></text></g><g><title>release_pages (16 samples, 0.24%)</title><rect x="6.9920%" y="437" width="0.2380%" height="15" fill="rgb(229,67,23)" fg:x="470" fg:w="16"/><text x="7.1092%" y="447.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.09%)</title><rect x="7.1407%" y="421" width="0.0893%" height="15" fill="rgb(249,83,47)" fg:x="480" fg:w="6"/><text x="7.2579%" y="431.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="7.2002%" y="405" width="0.0298%" height="15" fill="rgb(215,43,3)" fg:x="484" fg:w="2"/><text x="7.3174%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="7.2002%" y="389" width="0.0298%" height="15" fill="rgb(238,154,13)" fg:x="484" fg:w="2"/><text x="7.3174%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (218 samples, 3.24%)</title><rect x="4.0315%" y="821" width="3.2431%" height="15" fill="rgb(219,56,2)" fg:x="271" fg:w="218"/><text x="4.1487%" y="831.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (218 samples, 3.24%)</title><rect x="4.0315%" y="805" width="3.2431%" height="15" fill="rgb(233,0,4)" fg:x="271" fg:w="218"/><text x="4.1487%" y="815.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (30 samples, 0.45%)</title><rect x="6.8283%" y="789" width="0.4463%" height="15" fill="rgb(235,30,7)" fg:x="459" fg:w="30"/><text x="6.9455%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.45%)</title><rect x="6.8283%" y="773" width="0.4463%" height="15" fill="rgb(250,79,13)" fg:x="459" fg:w="30"/><text x="6.9455%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.45%)</title><rect x="6.8283%" y="757" width="0.4463%" height="15" fill="rgb(211,146,34)" fg:x="459" fg:w="30"/><text x="6.9455%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.45%)</title><rect x="6.8283%" y="741" width="0.4463%" height="15" fill="rgb(228,22,38)" fg:x="459" fg:w="30"/><text x="6.9455%" y="751.50"></text></g><g><title>__GI___libc_free (30 samples, 0.45%)</title><rect x="6.8283%" y="725" width="0.4463%" height="15" fill="rgb(235,168,5)" fg:x="459" fg:w="30"/><text x="6.9455%" y="735.50"></text></g><g><title>__GI___munmap (30 samples, 0.45%)</title><rect x="6.8283%" y="709" width="0.4463%" height="15" fill="rgb(221,155,16)" fg:x="459" fg:w="30"/><text x="6.9455%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.45%)</title><rect x="6.8283%" y="693" width="0.4463%" height="15" fill="rgb(215,215,53)" fg:x="459" fg:w="30"/><text x="6.9455%" y="703.50"></text></g><g><title>do_syscall_64 (30 samples, 0.45%)</title><rect x="6.8283%" y="677" width="0.4463%" height="15" fill="rgb(223,4,10)" fg:x="459" fg:w="30"/><text x="6.9455%" y="687.50"></text></g><g><title>x64_sys_call (30 samples, 0.45%)</title><rect x="6.8283%" y="661" width="0.4463%" height="15" fill="rgb(234,103,6)" fg:x="459" fg:w="30"/><text x="6.9455%" y="671.50"></text></g><g><title>__x64_sys_munmap (30 samples, 0.45%)</title><rect x="6.8283%" y="645" width="0.4463%" height="15" fill="rgb(227,97,0)" fg:x="459" fg:w="30"/><text x="6.9455%" y="655.50"></text></g><g><title>__vm_munmap (30 samples, 0.45%)</title><rect x="6.8283%" y="629" width="0.4463%" height="15" fill="rgb(234,150,53)" fg:x="459" fg:w="30"/><text x="6.9455%" y="639.50"></text></g><g><title>do_vmi_munmap (30 samples, 0.45%)</title><rect x="6.8283%" y="613" width="0.4463%" height="15" fill="rgb(228,201,54)" fg:x="459" fg:w="30"/><text x="6.9455%" y="623.50"></text></g><g><title>do_vmi_align_munmap (30 samples, 0.45%)</title><rect x="6.8283%" y="597" width="0.4463%" height="15" fill="rgb(222,22,37)" fg:x="459" fg:w="30"/><text x="6.9455%" y="607.50"></text></g><g><title>unmap_region (30 samples, 0.45%)</title><rect x="6.8283%" y="581" width="0.4463%" height="15" fill="rgb(237,53,32)" fg:x="459" fg:w="30"/><text x="6.9455%" y="591.50"></text></g><g><title>unmap_vmas (30 samples, 0.45%)</title><rect x="6.8283%" y="565" width="0.4463%" height="15" fill="rgb(233,25,53)" fg:x="459" fg:w="30"/><text x="6.9455%" y="575.50"></text></g><g><title>unmap_single_vma (30 samples, 0.45%)</title><rect x="6.8283%" y="549" width="0.4463%" height="15" fill="rgb(210,40,34)" fg:x="459" fg:w="30"/><text x="6.9455%" y="559.50"></text></g><g><title>unmap_page_range (30 samples, 0.45%)</title><rect x="6.8283%" y="533" width="0.4463%" height="15" fill="rgb(241,220,44)" fg:x="459" fg:w="30"/><text x="6.9455%" y="543.50"></text></g><g><title>zap_pmd_range.isra.0 (30 samples, 0.45%)</title><rect x="6.8283%" y="517" width="0.4463%" height="15" fill="rgb(235,28,35)" fg:x="459" fg:w="30"/><text x="6.9455%" y="527.50"></text></g><g><title>zap_pte_range (24 samples, 0.36%)</title><rect x="6.9176%" y="501" width="0.3570%" height="15" fill="rgb(210,56,17)" fg:x="465" fg:w="24"/><text x="7.0348%" y="511.50"></text></g><g><title>tlb_flush_mmu (20 samples, 0.30%)</title><rect x="6.9771%" y="485" width="0.2975%" height="15" fill="rgb(224,130,29)" fg:x="469" fg:w="20"/><text x="7.0943%" y="495.50"></text></g><g><title>tlb_batch_pages_flush (20 samples, 0.30%)</title><rect x="6.9771%" y="469" width="0.2975%" height="15" fill="rgb(235,212,8)" fg:x="469" fg:w="20"/><text x="7.0943%" y="479.50"></text></g><g><title>free_swap_cache (3 samples, 0.04%)</title><rect x="7.2300%" y="453" width="0.0446%" height="15" fill="rgb(223,33,50)" fg:x="486" fg:w="3"/><text x="7.3472%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (219 samples, 3.26%)</title><rect x="4.0315%" y="837" width="3.2580%" height="15" fill="rgb(219,149,13)" fg:x="271" fg:w="219"/><text x="4.1487%" y="847.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::ArrayMap&gt; (1 samples, 0.01%)</title><rect x="7.2746%" y="821" width="0.0149%" height="15" fill="rgb(250,156,29)" fg:x="489" fg:w="1"/><text x="7.3918%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (1 samples, 0.01%)</title><rect x="7.2746%" y="805" width="0.0149%" height="15" fill="rgb(216,193,19)" fg:x="489" fg:w="1"/><text x="7.3918%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (1 samples, 0.01%)</title><rect x="7.2746%" y="789" width="0.0149%" height="15" fill="rgb(216,135,14)" fg:x="489" fg:w="1"/><text x="7.3918%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.2746%" y="773" width="0.0149%" height="15" fill="rgb(241,47,5)" fg:x="489" fg:w="1"/><text x="7.3918%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="7.2746%" y="757" width="0.0149%" height="15" fill="rgb(233,42,35)" fg:x="489" fg:w="1"/><text x="7.3918%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="7.2746%" y="741" width="0.0149%" height="15" fill="rgb(231,13,6)" fg:x="489" fg:w="1"/><text x="7.3918%" y="751.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="7.2746%" y="725" width="0.0149%" height="15" fill="rgb(207,181,40)" fg:x="489" fg:w="1"/><text x="7.3918%" y="735.50"></text></g><g><title>__GI___munmap (1 samples, 0.01%)</title><rect x="7.2746%" y="709" width="0.0149%" height="15" fill="rgb(254,173,49)" fg:x="489" fg:w="1"/><text x="7.3918%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="7.2746%" y="693" width="0.0149%" height="15" fill="rgb(221,1,38)" fg:x="489" fg:w="1"/><text x="7.3918%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="7.2746%" y="677" width="0.0149%" height="15" fill="rgb(206,124,46)" fg:x="489" fg:w="1"/><text x="7.3918%" y="687.50"></text></g><g><title>x64_sys_call (1 samples, 0.01%)</title><rect x="7.2746%" y="661" width="0.0149%" height="15" fill="rgb(249,21,11)" fg:x="489" fg:w="1"/><text x="7.3918%" y="671.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.01%)</title><rect x="7.2746%" y="645" width="0.0149%" height="15" fill="rgb(222,201,40)" fg:x="489" fg:w="1"/><text x="7.3918%" y="655.50"></text></g><g><title>__vm_munmap (1 samples, 0.01%)</title><rect x="7.2746%" y="629" width="0.0149%" height="15" fill="rgb(235,61,29)" fg:x="489" fg:w="1"/><text x="7.3918%" y="639.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.01%)</title><rect x="7.2746%" y="613" width="0.0149%" height="15" fill="rgb(219,207,3)" fg:x="489" fg:w="1"/><text x="7.3918%" y="623.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.01%)</title><rect x="7.2746%" y="597" width="0.0149%" height="15" fill="rgb(222,56,46)" fg:x="489" fg:w="1"/><text x="7.3918%" y="607.50"></text></g><g><title>unmap_region (1 samples, 0.01%)</title><rect x="7.2746%" y="581" width="0.0149%" height="15" fill="rgb(239,76,54)" fg:x="489" fg:w="1"/><text x="7.3918%" y="591.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.01%)</title><rect x="7.2746%" y="565" width="0.0149%" height="15" fill="rgb(231,124,27)" fg:x="489" fg:w="1"/><text x="7.3918%" y="575.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.01%)</title><rect x="7.2746%" y="549" width="0.0149%" height="15" fill="rgb(249,195,6)" fg:x="489" fg:w="1"/><text x="7.3918%" y="559.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="7.2746%" y="533" width="0.0149%" height="15" fill="rgb(237,174,47)" fg:x="489" fg:w="1"/><text x="7.3918%" y="543.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="7.2746%" y="517" width="0.0149%" height="15" fill="rgb(206,201,31)" fg:x="489" fg:w="1"/><text x="7.3918%" y="527.50"></text></g><g><title>free_unref_page_list (1 samples, 0.01%)</title><rect x="7.2746%" y="501" width="0.0149%" height="15" fill="rgb(231,57,52)" fg:x="489" fg:w="1"/><text x="7.3918%" y="511.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.01%)</title><rect x="7.2746%" y="485" width="0.0149%" height="15" fill="rgb(248,177,22)" fg:x="489" fg:w="1"/><text x="7.3918%" y="495.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.01%)</title><rect x="7.2746%" y="469" width="0.0149%" height="15" fill="rgb(215,211,37)" fg:x="489" fg:w="1"/><text x="7.3918%" y="479.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.01%)</title><rect x="7.3490%" y="629" width="0.0149%" height="15" fill="rgb(241,128,51)" fg:x="494" fg:w="1"/><text x="7.4662%" y="639.50"></text></g><g><title>__irqentry_text_end (2 samples, 0.03%)</title><rect x="7.8548%" y="613" width="0.0298%" height="15" fill="rgb(227,165,31)" fg:x="528" fg:w="2"/><text x="7.9720%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="7.9292%" y="597" width="0.0149%" height="15" fill="rgb(228,167,24)" fg:x="533" fg:w="1"/><text x="8.0464%" y="607.50"></text></g><g><title>access_error (1 samples, 0.01%)</title><rect x="7.9589%" y="581" width="0.0149%" height="15" fill="rgb(228,143,12)" fg:x="535" fg:w="1"/><text x="8.0761%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="8.0036%" y="565" width="0.0149%" height="15" fill="rgb(249,149,8)" fg:x="538" fg:w="1"/><text x="8.1208%" y="575.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="8.0184%" y="565" width="0.0149%" height="15" fill="rgb(243,35,44)" fg:x="539" fg:w="1"/><text x="8.1356%" y="575.50"></text></g><g><title>down_read_trylock (3 samples, 0.04%)</title><rect x="8.0333%" y="565" width="0.0446%" height="15" fill="rgb(246,89,9)" fg:x="540" fg:w="3"/><text x="8.1505%" y="575.50"></text></g><g><title>__count_memcg_events (1 samples, 0.01%)</title><rect x="8.0928%" y="549" width="0.0149%" height="15" fill="rgb(233,213,13)" fg:x="544" fg:w="1"/><text x="8.2100%" y="559.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="8.1821%" y="533" width="0.0149%" height="15" fill="rgb(233,141,41)" fg:x="550" fg:w="1"/><text x="8.2993%" y="543.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.01%)</title><rect x="8.2118%" y="517" width="0.0149%" height="15" fill="rgb(239,167,4)" fg:x="552" fg:w="1"/><text x="8.3290%" y="527.50"></text></g><g><title>__pte_offset_map (1 samples, 0.01%)</title><rect x="8.2267%" y="517" width="0.0149%" height="15" fill="rgb(209,217,16)" fg:x="553" fg:w="1"/><text x="8.3439%" y="527.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.03%)</title><rect x="8.2862%" y="501" width="0.0298%" height="15" fill="rgb(219,88,35)" fg:x="557" fg:w="2"/><text x="8.4034%" y="511.50"></text></g><g><title>blk_cgroup_congested (2 samples, 0.03%)</title><rect x="8.2862%" y="485" width="0.0298%" height="15" fill="rgb(220,193,23)" fg:x="557" fg:w="2"/><text x="8.4034%" y="495.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.03%)</title><rect x="8.3606%" y="485" width="0.0298%" height="15" fill="rgb(230,90,52)" fg:x="562" fg:w="2"/><text x="8.4778%" y="495.50"></text></g><g><title>__rcu_read_unlock (19 samples, 0.28%)</title><rect x="8.3904%" y="485" width="0.2827%" height="15" fill="rgb(252,106,19)" fg:x="564" fg:w="19"/><text x="8.5075%" y="495.50"></text></g><g><title>__count_memcg_events (8 samples, 0.12%)</title><rect x="8.7623%" y="469" width="0.1190%" height="15" fill="rgb(206,74,20)" fg:x="589" fg:w="8"/><text x="8.8795%" y="479.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.06%)</title><rect x="8.8218%" y="453" width="0.0595%" height="15" fill="rgb(230,138,44)" fg:x="593" fg:w="4"/><text x="8.9390%" y="463.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="8.8813%" y="469" width="0.0149%" height="15" fill="rgb(235,182,43)" fg:x="597" fg:w="1"/><text x="8.9985%" y="479.50"></text></g><g><title>consume_stock (2 samples, 0.03%)</title><rect x="8.8962%" y="469" width="0.0298%" height="15" fill="rgb(242,16,51)" fg:x="598" fg:w="2"/><text x="9.0133%" y="479.50"></text></g><g><title>charge_memcg (28 samples, 0.42%)</title><rect x="8.6730%" y="485" width="0.4165%" height="15" fill="rgb(248,9,4)" fg:x="583" fg:w="28"/><text x="8.7902%" y="495.50"></text></g><g><title>try_charge_memcg (11 samples, 0.16%)</title><rect x="8.9259%" y="469" width="0.1636%" height="15" fill="rgb(210,31,22)" fg:x="600" fg:w="11"/><text x="9.0431%" y="479.50"></text></g><g><title>get_mem_cgroup_from_mm (6 samples, 0.09%)</title><rect x="9.0896%" y="485" width="0.0893%" height="15" fill="rgb(239,54,39)" fg:x="611" fg:w="6"/><text x="9.2067%" y="495.50"></text></g><g><title>memcg_check_events (1 samples, 0.01%)</title><rect x="9.1788%" y="485" width="0.0149%" height="15" fill="rgb(230,99,41)" fg:x="617" fg:w="1"/><text x="9.2960%" y="495.50"></text></g><g><title>__mem_cgroup_charge (60 samples, 0.89%)</title><rect x="8.3160%" y="501" width="0.8926%" height="15" fill="rgb(253,106,12)" fg:x="559" fg:w="60"/><text x="8.4332%" y="511.50">_..</text></g><g><title>try_charge_memcg (1 samples, 0.01%)</title><rect x="9.1937%" y="485" width="0.0149%" height="15" fill="rgb(213,46,41)" fg:x="618" fg:w="1"/><text x="9.3109%" y="495.50"></text></g><g><title>__pte_alloc (2 samples, 0.03%)</title><rect x="9.2086%" y="501" width="0.0298%" height="15" fill="rgb(215,133,35)" fg:x="619" fg:w="2"/><text x="9.3258%" y="511.50"></text></g><g><title>pte_alloc_one (2 samples, 0.03%)</title><rect x="9.2086%" y="485" width="0.0298%" height="15" fill="rgb(213,28,5)" fg:x="619" fg:w="2"/><text x="9.3258%" y="495.50"></text></g><g><title>alloc_pages (2 samples, 0.03%)</title><rect x="9.2086%" y="469" width="0.0298%" height="15" fill="rgb(215,77,49)" fg:x="619" fg:w="2"/><text x="9.3258%" y="479.50"></text></g><g><title>__alloc_pages (2 samples, 0.03%)</title><rect x="9.2086%" y="453" width="0.0298%" height="15" fill="rgb(248,100,22)" fg:x="619" fg:w="2"/><text x="9.3258%" y="463.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.01%)</title><rect x="9.2234%" y="437" width="0.0149%" height="15" fill="rgb(208,67,9)" fg:x="620" fg:w="1"/><text x="9.3406%" y="447.50"></text></g><g><title>memcg_account_kmem (1 samples, 0.01%)</title><rect x="9.2234%" y="421" width="0.0149%" height="15" fill="rgb(219,133,21)" fg:x="620" fg:w="1"/><text x="9.3406%" y="431.50"></text></g><g><title>mod_memcg_state (1 samples, 0.01%)</title><rect x="9.2234%" y="405" width="0.0149%" height="15" fill="rgb(246,46,29)" fg:x="620" fg:w="1"/><text x="9.3406%" y="415.50"></text></g><g><title>__pte_offset_map_lock (5 samples, 0.07%)</title><rect x="9.2383%" y="501" width="0.0744%" height="15" fill="rgb(246,185,52)" fg:x="621" fg:w="5"/><text x="9.3555%" y="511.50"></text></g><g><title>__pte_offset_map (1 samples, 0.01%)</title><rect x="9.2978%" y="485" width="0.0149%" height="15" fill="rgb(252,136,11)" fg:x="625" fg:w="1"/><text x="9.4150%" y="495.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="9.3127%" y="501" width="0.0446%" height="15" fill="rgb(219,138,53)" fg:x="626" fg:w="3"/><text x="9.4299%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="9.4020%" y="453" width="0.0149%" height="15" fill="rgb(211,51,23)" fg:x="632" fg:w="1"/><text x="9.5192%" y="463.50"></text></g><g><title>free_unref_page_list (1 samples, 0.01%)</title><rect x="9.4168%" y="453" width="0.0149%" height="15" fill="rgb(247,221,28)" fg:x="633" fg:w="1"/><text x="9.5340%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="9.5359%" y="405" width="0.0149%" height="15" fill="rgb(251,222,45)" fg:x="641" fg:w="1"/><text x="9.6530%" y="415.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.04%)</title><rect x="9.5210%" y="421" width="0.0446%" height="15" fill="rgb(217,162,53)" fg:x="640" fg:w="3"/><text x="9.6382%" y="431.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="9.5507%" y="405" width="0.0149%" height="15" fill="rgb(229,93,14)" fg:x="642" fg:w="1"/><text x="9.6679%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="9.5656%" y="421" width="0.0149%" height="15" fill="rgb(209,67,49)" fg:x="643" fg:w="1"/><text x="9.6828%" y="431.50"></text></g><g><title>lru_add_fn (12 samples, 0.18%)</title><rect x="9.4317%" y="453" width="0.1785%" height="15" fill="rgb(213,87,29)" fg:x="634" fg:w="12"/><text x="9.5489%" y="463.50"></text></g><g><title>lru_gen_add_folio (10 samples, 0.15%)</title><rect x="9.4615%" y="437" width="0.1488%" height="15" fill="rgb(205,151,52)" fg:x="636" fg:w="10"/><text x="9.5787%" y="447.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.03%)</title><rect x="9.5805%" y="421" width="0.0298%" height="15" fill="rgb(253,215,39)" fg:x="644" fg:w="2"/><text x="9.6977%" y="431.50"></text></g><g><title>folio_add_lru_vma (19 samples, 0.28%)</title><rect x="9.3573%" y="501" width="0.2827%" height="15" fill="rgb(221,220,41)" fg:x="629" fg:w="19"/><text x="9.4745%" y="511.50"></text></g><g><title>folio_add_lru (19 samples, 0.28%)</title><rect x="9.3573%" y="485" width="0.2827%" height="15" fill="rgb(218,133,21)" fg:x="629" fg:w="19"/><text x="9.4745%" y="495.50"></text></g><g><title>folio_batch_move_lru (18 samples, 0.27%)</title><rect x="9.3722%" y="469" width="0.2678%" height="15" fill="rgb(221,193,43)" fg:x="630" fg:w="18"/><text x="9.4894%" y="479.50"></text></g><g><title>release_pages (2 samples, 0.03%)</title><rect x="9.6102%" y="453" width="0.0298%" height="15" fill="rgb(240,128,52)" fg:x="646" fg:w="2"/><text x="9.7274%" y="463.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="9.6549%" y="469" width="0.0298%" height="15" fill="rgb(253,114,12)" fg:x="649" fg:w="2"/><text x="9.7721%" y="479.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.03%)</title><rect x="9.6549%" y="453" width="0.0298%" height="15" fill="rgb(215,223,47)" fg:x="649" fg:w="2"/><text x="9.7721%" y="463.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.04%)</title><rect x="9.6549%" y="485" width="0.0446%" height="15" fill="rgb(248,225,23)" fg:x="649" fg:w="3"/><text x="9.7721%" y="495.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="9.6846%" y="469" width="0.0149%" height="15" fill="rgb(250,108,0)" fg:x="651" fg:w="1"/><text x="9.8018%" y="479.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.07%)</title><rect x="9.6400%" y="501" width="0.0744%" height="15" fill="rgb(228,208,7)" fg:x="648" fg:w="5"/><text x="9.7572%" y="511.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="9.6995%" y="485" width="0.0149%" height="15" fill="rgb(244,45,10)" fg:x="652" fg:w="1"/><text x="9.8167%" y="495.50"></text></g><g><title>inc_mm_counter (2 samples, 0.03%)</title><rect x="9.7144%" y="501" width="0.0298%" height="15" fill="rgb(207,125,25)" fg:x="653" fg:w="2"/><text x="9.8316%" y="511.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="9.7144%" y="485" width="0.0298%" height="15" fill="rgb(210,195,18)" fg:x="653" fg:w="2"/><text x="9.8316%" y="495.50"></text></g><g><title>pfn_pte (1 samples, 0.01%)</title><rect x="9.7441%" y="501" width="0.0149%" height="15" fill="rgb(249,80,12)" fg:x="655" fg:w="1"/><text x="9.8613%" y="511.50"></text></g><g><title>policy_node (2 samples, 0.03%)</title><rect x="9.7590%" y="501" width="0.0298%" height="15" fill="rgb(221,65,9)" fg:x="656" fg:w="2"/><text x="9.8762%" y="511.50"></text></g><g><title>policy_nodemask (1 samples, 0.01%)</title><rect x="9.7888%" y="501" width="0.0149%" height="15" fill="rgb(235,49,36)" fg:x="658" fg:w="1"/><text x="9.9059%" y="511.50"></text></g><g><title>__cond_resched (5 samples, 0.07%)</title><rect x="9.8780%" y="437" width="0.0744%" height="15" fill="rgb(225,32,20)" fg:x="664" fg:w="5"/><text x="9.9952%" y="447.50"></text></g><g><title>__schedule (5 samples, 0.07%)</title><rect x="9.8780%" y="421" width="0.0744%" height="15" fill="rgb(215,141,46)" fg:x="664" fg:w="5"/><text x="9.9952%" y="431.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.07%)</title><rect x="9.8780%" y="405" width="0.0744%" height="15" fill="rgb(250,160,47)" fg:x="664" fg:w="5"/><text x="9.9952%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.07%)</title><rect x="9.8780%" y="389" width="0.0744%" height="15" fill="rgb(216,222,40)" fg:x="664" fg:w="5"/><text x="9.9952%" y="399.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.07%)</title><rect x="9.8780%" y="373" width="0.0744%" height="15" fill="rgb(234,217,39)" fg:x="664" fg:w="5"/><text x="9.9952%" y="383.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="9.8780%" y="357" width="0.0744%" height="15" fill="rgb(207,178,40)" fg:x="664" fg:w="5"/><text x="9.9952%" y="367.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.07%)</title><rect x="9.8780%" y="341" width="0.0744%" height="15" fill="rgb(221,136,13)" fg:x="664" fg:w="5"/><text x="9.9952%" y="351.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="9.8780%" y="325" width="0.0744%" height="15" fill="rgb(249,199,10)" fg:x="664" fg:w="5"/><text x="9.9952%" y="335.50"></text></g><g><title>__drain_all_pages (5 samples, 0.07%)</title><rect x="9.9524%" y="437" width="0.0744%" height="15" fill="rgb(249,222,13)" fg:x="669" fg:w="5"/><text x="10.0696%" y="447.50"></text></g><g><title>drain_pages_zone (4 samples, 0.06%)</title><rect x="9.9673%" y="421" width="0.0595%" height="15" fill="rgb(244,185,38)" fg:x="670" fg:w="4"/><text x="10.0845%" y="431.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.04%)</title><rect x="9.9821%" y="405" width="0.0446%" height="15" fill="rgb(236,202,9)" fg:x="671" fg:w="3"/><text x="10.0993%" y="415.50"></text></g><g><title>__free_one_page (3 samples, 0.04%)</title><rect x="9.9821%" y="389" width="0.0446%" height="15" fill="rgb(250,229,37)" fg:x="671" fg:w="3"/><text x="10.0993%" y="399.50"></text></g><g><title>clear_page_erms (3 samples, 0.04%)</title><rect x="10.0417%" y="421" width="0.0446%" height="15" fill="rgb(206,174,23)" fg:x="675" fg:w="3"/><text x="10.1588%" y="431.50"></text></g><g><title>post_alloc_hook (2 samples, 0.03%)</title><rect x="10.0863%" y="421" width="0.0298%" height="15" fill="rgb(211,33,43)" fg:x="678" fg:w="2"/><text x="10.2035%" y="431.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.13%)</title><rect x="10.0268%" y="437" width="0.1339%" height="15" fill="rgb(245,58,50)" fg:x="674" fg:w="9"/><text x="10.1440%" y="447.50"></text></g><g><title>rmqueue (3 samples, 0.04%)</title><rect x="10.1160%" y="421" width="0.0446%" height="15" fill="rgb(244,68,36)" fg:x="680" fg:w="3"/><text x="10.2332%" y="431.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.03%)</title><rect x="10.1309%" y="405" width="0.0298%" height="15" fill="rgb(232,229,15)" fg:x="681" fg:w="2"/><text x="10.2481%" y="415.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.01%)</title><rect x="10.1458%" y="389" width="0.0149%" height="15" fill="rgb(254,30,23)" fg:x="682" fg:w="1"/><text x="10.2630%" y="399.50"></text></g><g><title>lruvec_is_sizable (1 samples, 0.01%)</title><rect x="10.1607%" y="341" width="0.0149%" height="15" fill="rgb(235,160,14)" fg:x="683" fg:w="1"/><text x="10.2779%" y="351.50"></text></g><g><title>count_shadow_nodes (1 samples, 0.01%)</title><rect x="10.1755%" y="293" width="0.0149%" height="15" fill="rgb(212,155,44)" fg:x="684" fg:w="1"/><text x="10.2927%" y="303.50"></text></g><g><title>scan_shadow_nodes (1 samples, 0.01%)</title><rect x="10.1904%" y="293" width="0.0149%" height="15" fill="rgb(226,2,50)" fg:x="685" fg:w="1"/><text x="10.3076%" y="303.50"></text></g><g><title>list_lru_walk_one_irq (1 samples, 0.01%)</title><rect x="10.1904%" y="277" width="0.0149%" height="15" fill="rgb(234,177,6)" fg:x="685" fg:w="1"/><text x="10.3076%" y="287.50"></text></g><g><title>__list_lru_walk_one (1 samples, 0.01%)</title><rect x="10.1904%" y="261" width="0.0149%" height="15" fill="rgb(217,24,9)" fg:x="685" fg:w="1"/><text x="10.3076%" y="271.50"></text></g><g><title>shadow_lru_isolate (1 samples, 0.01%)</title><rect x="10.1904%" y="245" width="0.0149%" height="15" fill="rgb(220,13,46)" fg:x="685" fg:w="1"/><text x="10.3076%" y="255.50"></text></g><g><title>xa_delete_node (1 samples, 0.01%)</title><rect x="10.1904%" y="229" width="0.0149%" height="15" fill="rgb(239,221,27)" fg:x="685" fg:w="1"/><text x="10.3076%" y="239.50"></text></g><g><title>xas_store (1 samples, 0.01%)</title><rect x="10.1904%" y="213" width="0.0149%" height="15" fill="rgb(222,198,25)" fg:x="685" fg:w="1"/><text x="10.3076%" y="223.50"></text></g><g><title>xas_free_nodes (1 samples, 0.01%)</title><rect x="10.1904%" y="197" width="0.0149%" height="15" fill="rgb(211,99,13)" fg:x="685" fg:w="1"/><text x="10.3076%" y="207.50"></text></g><g><title>do_shrink_slab (3 samples, 0.04%)</title><rect x="10.1755%" y="309" width="0.0446%" height="15" fill="rgb(232,111,31)" fg:x="684" fg:w="3"/><text x="10.2927%" y="319.50"></text></g><g><title>super_cache_count (1 samples, 0.01%)</title><rect x="10.2053%" y="293" width="0.0149%" height="15" fill="rgb(245,82,37)" fg:x="686" fg:w="1"/><text x="10.3225%" y="303.50"></text></g><g><title>list_lru_count_one (1 samples, 0.01%)</title><rect x="10.2053%" y="277" width="0.0149%" height="15" fill="rgb(227,149,46)" fg:x="686" fg:w="1"/><text x="10.3225%" y="287.50"></text></g><g><title>shrink_slab (4 samples, 0.06%)</title><rect x="10.1755%" y="341" width="0.0595%" height="15" fill="rgb(218,36,50)" fg:x="684" fg:w="4"/><text x="10.2927%" y="351.50"></text></g><g><title>shrink_slab_memcg (4 samples, 0.06%)</title><rect x="10.1755%" y="325" width="0.0595%" height="15" fill="rgb(226,80,48)" fg:x="684" fg:w="4"/><text x="10.2927%" y="335.50"></text></g><g><title>idr_find (1 samples, 0.01%)</title><rect x="10.2202%" y="309" width="0.0149%" height="15" fill="rgb(238,224,15)" fg:x="687" fg:w="1"/><text x="10.3374%" y="319.50"></text></g><g><title>radix_tree_lookup (1 samples, 0.01%)</title><rect x="10.2202%" y="293" width="0.0149%" height="15" fill="rgb(241,136,10)" fg:x="687" fg:w="1"/><text x="10.3374%" y="303.50"></text></g><g><title>__radix_tree_lookup (1 samples, 0.01%)</title><rect x="10.2202%" y="277" width="0.0149%" height="15" fill="rgb(208,32,45)" fg:x="687" fg:w="1"/><text x="10.3374%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="10.3243%" y="229" width="0.0149%" height="15" fill="rgb(207,135,9)" fg:x="694" fg:w="1"/><text x="10.4415%" y="239.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="10.3243%" y="213" width="0.0149%" height="15" fill="rgb(206,86,44)" fg:x="694" fg:w="1"/><text x="10.4415%" y="223.50"></text></g><g><title>isolate_folios (8 samples, 0.12%)</title><rect x="10.2350%" y="309" width="0.1190%" height="15" fill="rgb(245,177,15)" fg:x="688" fg:w="8"/><text x="10.3522%" y="319.50"></text></g><g><title>scan_folios (8 samples, 0.12%)</title><rect x="10.2350%" y="293" width="0.1190%" height="15" fill="rgb(206,64,50)" fg:x="688" fg:w="8"/><text x="10.3522%" y="303.50"></text></g><g><title>sort_folio (2 samples, 0.03%)</title><rect x="10.3243%" y="277" width="0.0298%" height="15" fill="rgb(234,36,40)" fg:x="694" fg:w="2"/><text x="10.4415%" y="287.50"></text></g><g><title>folio_inc_gen (2 samples, 0.03%)</title><rect x="10.3243%" y="261" width="0.0298%" height="15" fill="rgb(213,64,8)" fg:x="694" fg:w="2"/><text x="10.4415%" y="271.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="10.3243%" y="245" width="0.0298%" height="15" fill="rgb(210,75,36)" fg:x="694" fg:w="2"/><text x="10.4415%" y="255.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="10.3392%" y="229" width="0.0149%" height="15" fill="rgb(229,88,21)" fg:x="695" fg:w="1"/><text x="10.4564%" y="239.50"></text></g><g><title>__cond_resched (5 samples, 0.07%)</title><rect x="10.3838%" y="293" width="0.0744%" height="15" fill="rgb(252,204,47)" fg:x="698" fg:w="5"/><text x="10.5010%" y="303.50"></text></g><g><title>__schedule (5 samples, 0.07%)</title><rect x="10.3838%" y="277" width="0.0744%" height="15" fill="rgb(208,77,27)" fg:x="698" fg:w="5"/><text x="10.5010%" y="287.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.07%)</title><rect x="10.3838%" y="261" width="0.0744%" height="15" fill="rgb(221,76,26)" fg:x="698" fg:w="5"/><text x="10.5010%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.07%)</title><rect x="10.3838%" y="245" width="0.0744%" height="15" fill="rgb(225,139,18)" fg:x="698" fg:w="5"/><text x="10.5010%" y="255.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.07%)</title><rect x="10.3838%" y="229" width="0.0744%" height="15" fill="rgb(230,137,11)" fg:x="698" fg:w="5"/><text x="10.5010%" y="239.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="10.3838%" y="213" width="0.0744%" height="15" fill="rgb(212,28,1)" fg:x="698" fg:w="5"/><text x="10.5010%" y="223.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.07%)</title><rect x="10.3838%" y="197" width="0.0744%" height="15" fill="rgb(248,164,17)" fg:x="698" fg:w="5"/><text x="10.5010%" y="207.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="10.3838%" y="181" width="0.0744%" height="15" fill="rgb(222,171,42)" fg:x="698" fg:w="5"/><text x="10.5010%" y="191.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="10.4582%" y="261" width="0.0149%" height="15" fill="rgb(243,84,45)" fg:x="703" fg:w="1"/><text x="10.5754%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="10.4582%" y="245" width="0.0149%" height="15" fill="rgb(252,49,23)" fg:x="703" fg:w="1"/><text x="10.5754%" y="255.50"></text></g><g><title>__remove_mapping (3 samples, 0.04%)</title><rect x="10.4582%" y="293" width="0.0446%" height="15" fill="rgb(215,19,7)" fg:x="703" fg:w="3"/><text x="10.5754%" y="303.50"></text></g><g><title>__delete_from_swap_cache (3 samples, 0.04%)</title><rect x="10.4582%" y="277" width="0.0446%" height="15" fill="rgb(238,81,41)" fg:x="703" fg:w="3"/><text x="10.5754%" y="287.50"></text></g><g><title>xas_store (2 samples, 0.03%)</title><rect x="10.4731%" y="261" width="0.0298%" height="15" fill="rgb(210,199,37)" fg:x="704" fg:w="2"/><text x="10.5903%" y="271.50"></text></g><g><title>xas_create (2 samples, 0.03%)</title><rect x="10.4731%" y="245" width="0.0298%" height="15" fill="rgb(244,192,49)" fg:x="704" fg:w="2"/><text x="10.5903%" y="255.50"></text></g><g><title>xas_descend (1 samples, 0.01%)</title><rect x="10.4880%" y="229" width="0.0149%" height="15" fill="rgb(226,211,11)" fg:x="705" fg:w="1"/><text x="10.6051%" y="239.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="10.5028%" y="293" width="0.0149%" height="15" fill="rgb(236,162,54)" fg:x="706" fg:w="1"/><text x="10.6200%" y="303.50"></text></g><g><title>add_to_swap_cache (1 samples, 0.01%)</title><rect x="10.5177%" y="277" width="0.0149%" height="15" fill="rgb(220,229,9)" fg:x="707" fg:w="1"/><text x="10.6349%" y="287.50"></text></g><g><title>add_to_swap (2 samples, 0.03%)</title><rect x="10.5177%" y="293" width="0.0298%" height="15" fill="rgb(250,87,22)" fg:x="707" fg:w="2"/><text x="10.6349%" y="303.50"></text></g><g><title>folio_alloc_swap (1 samples, 0.01%)</title><rect x="10.5326%" y="277" width="0.0149%" height="15" fill="rgb(239,43,17)" fg:x="708" fg:w="1"/><text x="10.6498%" y="287.50"></text></g><g><title>get_swap_pages (1 samples, 0.01%)</title><rect x="10.5326%" y="261" width="0.0149%" height="15" fill="rgb(231,177,25)" fg:x="708" fg:w="1"/><text x="10.6498%" y="271.50"></text></g><g><title>scan_swap_map_slots (1 samples, 0.01%)</title><rect x="10.5326%" y="245" width="0.0149%" height="15" fill="rgb(219,179,1)" fg:x="708" fg:w="1"/><text x="10.6498%" y="255.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="10.5326%" y="229" width="0.0149%" height="15" fill="rgb(238,219,53)" fg:x="708" fg:w="1"/><text x="10.6498%" y="239.50"></text></g><g><title>filemap_release_folio (1 samples, 0.01%)</title><rect x="10.5475%" y="293" width="0.0149%" height="15" fill="rgb(232,167,36)" fg:x="709" fg:w="1"/><text x="10.6646%" y="303.50"></text></g><g><title>ext4_release_folio (1 samples, 0.01%)</title><rect x="10.5475%" y="277" width="0.0149%" height="15" fill="rgb(244,19,51)" fg:x="709" fg:w="1"/><text x="10.6646%" y="287.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (1 samples, 0.01%)</title><rect x="10.5475%" y="261" width="0.0149%" height="15" fill="rgb(224,6,22)" fg:x="709" fg:w="1"/><text x="10.6646%" y="271.50"></text></g><g><title>drop_buffers.constprop.0 (1 samples, 0.01%)</title><rect x="10.5475%" y="245" width="0.0149%" height="15" fill="rgb(224,145,5)" fg:x="709" fg:w="1"/><text x="10.6646%" y="255.50"></text></g><g><title>anon_vma_interval_tree_iter_first (1 samples, 0.01%)</title><rect x="10.5623%" y="277" width="0.0149%" height="15" fill="rgb(234,130,49)" fg:x="710" fg:w="1"/><text x="10.6795%" y="287.50"></text></g><g><title>folio_referenced_one (1 samples, 0.01%)</title><rect x="10.5772%" y="261" width="0.0149%" height="15" fill="rgb(254,6,2)" fg:x="711" fg:w="1"/><text x="10.6944%" y="271.50"></text></g><g><title>page_vma_mapped_walk (1 samples, 0.01%)</title><rect x="10.5772%" y="245" width="0.0149%" height="15" fill="rgb(208,96,46)" fg:x="711" fg:w="1"/><text x="10.6944%" y="255.50"></text></g><g><title>map_pte (1 samples, 0.01%)</title><rect x="10.5772%" y="229" width="0.0149%" height="15" fill="rgb(239,3,39)" fg:x="711" fg:w="1"/><text x="10.6944%" y="239.50"></text></g><g><title>folio_referenced (4 samples, 0.06%)</title><rect x="10.5623%" y="293" width="0.0595%" height="15" fill="rgb(233,210,1)" fg:x="710" fg:w="4"/><text x="10.6795%" y="303.50"></text></g><g><title>rmap_walk_file (3 samples, 0.04%)</title><rect x="10.5772%" y="277" width="0.0446%" height="15" fill="rgb(244,137,37)" fg:x="711" fg:w="3"/><text x="10.6944%" y="287.50"></text></g><g><title>vma_interval_tree_iter_next (2 samples, 0.03%)</title><rect x="10.5921%" y="261" width="0.0298%" height="15" fill="rgb(240,136,2)" fg:x="712" fg:w="2"/><text x="10.7093%" y="271.50"></text></g><g><title>vma_interval_tree_subtree_search (2 samples, 0.03%)</title><rect x="10.5921%" y="245" width="0.0298%" height="15" fill="rgb(239,18,37)" fg:x="712" fg:w="2"/><text x="10.7093%" y="255.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="10.6218%" y="213" width="0.0149%" height="15" fill="rgb(218,185,22)" fg:x="714" fg:w="1"/><text x="10.7390%" y="223.50"></text></g><g><title>bio_associate_blkg (2 samples, 0.03%)</title><rect x="10.6218%" y="229" width="0.0298%" height="15" fill="rgb(225,218,4)" fg:x="714" fg:w="2"/><text x="10.7390%" y="239.50"></text></g><g><title>bio_associate_blkg_from_css (1 samples, 0.01%)</title><rect x="10.6367%" y="213" width="0.0149%" height="15" fill="rgb(230,182,32)" fg:x="715" fg:w="1"/><text x="10.7539%" y="223.50"></text></g><g><title>radix_tree_lookup (1 samples, 0.01%)</title><rect x="10.6367%" y="197" width="0.0149%" height="15" fill="rgb(242,56,43)" fg:x="715" fg:w="1"/><text x="10.7539%" y="207.50"></text></g><g><title>__radix_tree_lookup (1 samples, 0.01%)</title><rect x="10.6367%" y="181" width="0.0149%" height="15" fill="rgb(233,99,24)" fg:x="715" fg:w="1"/><text x="10.7539%" y="191.50"></text></g><g><title>bio_alloc_bioset (3 samples, 0.04%)</title><rect x="10.6218%" y="245" width="0.0446%" height="15" fill="rgb(234,209,42)" fg:x="714" fg:w="3"/><text x="10.7390%" y="255.50"></text></g><g><title>mempool_alloc (1 samples, 0.01%)</title><rect x="10.6516%" y="229" width="0.0149%" height="15" fill="rgb(227,7,12)" fg:x="716" fg:w="1"/><text x="10.7688%" y="239.50"></text></g><g><title>mempool_alloc_slab (1 samples, 0.01%)</title><rect x="10.6516%" y="213" width="0.0149%" height="15" fill="rgb(245,203,43)" fg:x="716" fg:w="1"/><text x="10.7688%" y="223.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="10.6516%" y="197" width="0.0149%" height="15" fill="rgb(238,205,33)" fg:x="716" fg:w="1"/><text x="10.7688%" y="207.50"></text></g><g><title>__folio_start_writeback (1 samples, 0.01%)</title><rect x="10.6665%" y="229" width="0.0149%" height="15" fill="rgb(231,56,7)" fg:x="717" fg:w="1"/><text x="10.7837%" y="239.50"></text></g><g><title>mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="10.6665%" y="213" width="0.0149%" height="15" fill="rgb(244,186,29)" fg:x="717" fg:w="1"/><text x="10.7837%" y="223.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="10.6665%" y="197" width="0.0149%" height="15" fill="rgb(234,111,31)" fg:x="717" fg:w="1"/><text x="10.7837%" y="207.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="10.6665%" y="181" width="0.0149%" height="15" fill="rgb(241,149,10)" fg:x="717" fg:w="1"/><text x="10.7837%" y="191.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="10.6665%" y="165" width="0.0149%" height="15" fill="rgb(249,206,44)" fg:x="717" fg:w="1"/><text x="10.7837%" y="175.50"></text></g><g><title>set_page_writeback (2 samples, 0.03%)</title><rect x="10.6665%" y="245" width="0.0298%" height="15" fill="rgb(251,153,30)" fg:x="717" fg:w="2"/><text x="10.7837%" y="255.50"></text></g><g><title>mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="10.6813%" y="229" width="0.0149%" height="15" fill="rgb(239,152,38)" fg:x="718" fg:w="1"/><text x="10.7985%" y="239.50"></text></g><g><title>__srcu_read_lock (1 samples, 0.01%)</title><rect x="10.7260%" y="149" width="0.0149%" height="15" fill="rgb(249,139,47)" fg:x="721" fg:w="1"/><text x="10.8432%" y="159.50"></text></g><g><title>alloc_tio (1 samples, 0.01%)</title><rect x="10.7409%" y="149" width="0.0149%" height="15" fill="rgb(244,64,35)" fg:x="722" fg:w="1"/><text x="10.8580%" y="159.50"></text></g><g><title>crypt_map (2 samples, 0.03%)</title><rect x="10.7557%" y="117" width="0.0298%" height="15" fill="rgb(216,46,15)" fg:x="723" fg:w="2"/><text x="10.8729%" y="127.50"></text></g><g><title>kcryptd_queue_crypt (1 samples, 0.01%)</title><rect x="10.7706%" y="101" width="0.0149%" height="15" fill="rgb(250,74,19)" fg:x="724" fg:w="1"/><text x="10.8878%" y="111.50"></text></g><g><title>queue_work_on (1 samples, 0.01%)</title><rect x="10.7706%" y="85" width="0.0149%" height="15" fill="rgb(249,42,33)" fg:x="724" fg:w="1"/><text x="10.8878%" y="95.50"></text></g><g><title>__queue_work (1 samples, 0.01%)</title><rect x="10.7706%" y="69" width="0.0149%" height="15" fill="rgb(242,149,17)" fg:x="724" fg:w="1"/><text x="10.8878%" y="79.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="10.7706%" y="53" width="0.0149%" height="15" fill="rgb(244,29,21)" fg:x="724" fg:w="1"/><text x="10.8878%" y="63.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="10.7706%" y="37" width="0.0149%" height="15" fill="rgb(220,130,37)" fg:x="724" fg:w="1"/><text x="10.8878%" y="47.50"></text></g><g><title>dm_submit_bio_remap (1 samples, 0.01%)</title><rect x="10.7855%" y="117" width="0.0149%" height="15" fill="rgb(211,67,2)" fg:x="725" fg:w="1"/><text x="10.9027%" y="127.50"></text></g><g><title>dm_start_io_acct (1 samples, 0.01%)</title><rect x="10.7855%" y="101" width="0.0149%" height="15" fill="rgb(235,68,52)" fg:x="725" fg:w="1"/><text x="10.9027%" y="111.50"></text></g><g><title>dm_io_acct (1 samples, 0.01%)</title><rect x="10.7855%" y="85" width="0.0149%" height="15" fill="rgb(246,142,3)" fg:x="725" fg:w="1"/><text x="10.9027%" y="95.50"></text></g><g><title>bdev_start_io_acct (1 samples, 0.01%)</title><rect x="10.7855%" y="69" width="0.0149%" height="15" fill="rgb(241,25,7)" fg:x="725" fg:w="1"/><text x="10.9027%" y="79.50"></text></g><g><title>__map_bio (4 samples, 0.06%)</title><rect x="10.7557%" y="133" width="0.0595%" height="15" fill="rgb(242,119,39)" fg:x="723" fg:w="4"/><text x="10.8729%" y="143.50"></text></g><g><title>linear_map (1 samples, 0.01%)</title><rect x="10.8004%" y="117" width="0.0149%" height="15" fill="rgb(241,98,45)" fg:x="726" fg:w="1"/><text x="10.9175%" y="127.50"></text></g><g><title>bio_associate_blkg (1 samples, 0.01%)</title><rect x="10.8004%" y="101" width="0.0149%" height="15" fill="rgb(254,28,30)" fg:x="726" fg:w="1"/><text x="10.9175%" y="111.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="10.8004%" y="85" width="0.0149%" height="15" fill="rgb(241,142,54)" fg:x="726" fg:w="1"/><text x="10.9175%" y="95.50"></text></g><g><title>dm_split_and_process_bio (5 samples, 0.07%)</title><rect x="10.7557%" y="149" width="0.0744%" height="15" fill="rgb(222,85,15)" fg:x="723" fg:w="5"/><text x="10.8729%" y="159.50"></text></g><g><title>bio_alloc_clone (1 samples, 0.01%)</title><rect x="10.8152%" y="133" width="0.0149%" height="15" fill="rgb(210,85,47)" fg:x="727" fg:w="1"/><text x="10.9324%" y="143.50"></text></g><g><title>pageout (15 samples, 0.22%)</title><rect x="10.6218%" y="293" width="0.2231%" height="15" fill="rgb(224,206,25)" fg:x="714" fg:w="15"/><text x="10.7390%" y="303.50"></text></g><g><title>swap_writepage (15 samples, 0.22%)</title><rect x="10.6218%" y="277" width="0.2231%" height="15" fill="rgb(243,201,19)" fg:x="714" fg:w="15"/><text x="10.7390%" y="287.50"></text></g><g><title>__swap_writepage (15 samples, 0.22%)</title><rect x="10.6218%" y="261" width="0.2231%" height="15" fill="rgb(236,59,4)" fg:x="714" fg:w="15"/><text x="10.7390%" y="271.50"></text></g><g><title>submit_bio (10 samples, 0.15%)</title><rect x="10.6962%" y="245" width="0.1488%" height="15" fill="rgb(254,179,45)" fg:x="719" fg:w="10"/><text x="10.8134%" y="255.50"></text></g><g><title>submit_bio_noacct (9 samples, 0.13%)</title><rect x="10.7111%" y="229" width="0.1339%" height="15" fill="rgb(226,14,10)" fg:x="720" fg:w="9"/><text x="10.8283%" y="239.50"></text></g><g><title>submit_bio_noacct_nocheck (8 samples, 0.12%)</title><rect x="10.7260%" y="213" width="0.1190%" height="15" fill="rgb(244,27,41)" fg:x="721" fg:w="8"/><text x="10.8432%" y="223.50"></text></g><g><title>__submit_bio_noacct (8 samples, 0.12%)</title><rect x="10.7260%" y="197" width="0.1190%" height="15" fill="rgb(235,35,32)" fg:x="721" fg:w="8"/><text x="10.8432%" y="207.50"></text></g><g><title>__submit_bio (8 samples, 0.12%)</title><rect x="10.7260%" y="181" width="0.1190%" height="15" fill="rgb(218,68,31)" fg:x="721" fg:w="8"/><text x="10.8432%" y="191.50"></text></g><g><title>dm_submit_bio (8 samples, 0.12%)</title><rect x="10.7260%" y="165" width="0.1190%" height="15" fill="rgb(207,120,37)" fg:x="721" fg:w="8"/><text x="10.8432%" y="175.50"></text></g><g><title>dm_table_find_target (1 samples, 0.01%)</title><rect x="10.8301%" y="149" width="0.0149%" height="15" fill="rgb(227,98,0)" fg:x="728" fg:w="1"/><text x="10.9473%" y="159.50"></text></g><g><title>try_to_free_pages (47 samples, 0.70%)</title><rect x="10.1607%" y="437" width="0.6992%" height="15" fill="rgb(207,7,3)" fg:x="683" fg:w="47"/><text x="10.2779%" y="447.50"></text></g><g><title>do_try_to_free_pages (47 samples, 0.70%)</title><rect x="10.1607%" y="421" width="0.6992%" height="15" fill="rgb(206,98,19)" fg:x="683" fg:w="47"/><text x="10.2779%" y="431.50"></text></g><g><title>shrink_zones.constprop.0 (47 samples, 0.70%)</title><rect x="10.1607%" y="405" width="0.6992%" height="15" fill="rgb(217,5,26)" fg:x="683" fg:w="47"/><text x="10.2779%" y="415.50"></text></g><g><title>shrink_node (47 samples, 0.70%)</title><rect x="10.1607%" y="389" width="0.6992%" height="15" fill="rgb(235,190,38)" fg:x="683" fg:w="47"/><text x="10.2779%" y="399.50"></text></g><g><title>shrink_many (47 samples, 0.70%)</title><rect x="10.1607%" y="373" width="0.6992%" height="15" fill="rgb(247,86,24)" fg:x="683" fg:w="47"/><text x="10.2779%" y="383.50"></text></g><g><title>shrink_one (47 samples, 0.70%)</title><rect x="10.1607%" y="357" width="0.6992%" height="15" fill="rgb(205,101,16)" fg:x="683" fg:w="47"/><text x="10.2779%" y="367.50"></text></g><g><title>try_to_shrink_lruvec (42 samples, 0.62%)</title><rect x="10.2350%" y="341" width="0.6248%" height="15" fill="rgb(246,168,33)" fg:x="688" fg:w="42"/><text x="10.3522%" y="351.50"></text></g><g><title>evict_folios (42 samples, 0.62%)</title><rect x="10.2350%" y="325" width="0.6248%" height="15" fill="rgb(231,114,1)" fg:x="688" fg:w="42"/><text x="10.3522%" y="335.50"></text></g><g><title>shrink_folio_list (34 samples, 0.51%)</title><rect x="10.3541%" y="309" width="0.5058%" height="15" fill="rgb(207,184,53)" fg:x="696" fg:w="34"/><text x="10.4712%" y="319.50"></text></g><g><title>try_to_unmap (1 samples, 0.01%)</title><rect x="10.8450%" y="293" width="0.0149%" height="15" fill="rgb(224,95,51)" fg:x="729" fg:w="1"/><text x="10.9622%" y="303.50"></text></g><g><title>rmap_walk_anon (1 samples, 0.01%)</title><rect x="10.8450%" y="277" width="0.0149%" height="15" fill="rgb(212,188,45)" fg:x="729" fg:w="1"/><text x="10.9622%" y="287.50"></text></g><g><title>try_to_unmap_one (1 samples, 0.01%)</title><rect x="10.8450%" y="261" width="0.0149%" height="15" fill="rgb(223,154,38)" fg:x="729" fg:w="1"/><text x="10.9622%" y="271.50"></text></g><g><title>page_vma_mapped_walk (1 samples, 0.01%)</title><rect x="10.8450%" y="245" width="0.0149%" height="15" fill="rgb(251,22,52)" fg:x="729" fg:w="1"/><text x="10.9622%" y="255.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (67 samples, 1.00%)</title><rect x="9.8780%" y="453" width="0.9967%" height="15" fill="rgb(229,209,22)" fg:x="664" fg:w="67"/><text x="9.9952%" y="463.50">_..</text></g><g><title>wake_all_kswapds (1 samples, 0.01%)</title><rect x="10.8599%" y="437" width="0.0149%" height="15" fill="rgb(234,138,34)" fg:x="730" fg:w="1"/><text x="10.9771%" y="447.50"></text></g><g><title>wakeup_kswapd (1 samples, 0.01%)</title><rect x="10.8599%" y="421" width="0.0149%" height="15" fill="rgb(212,95,11)" fg:x="730" fg:w="1"/><text x="10.9771%" y="431.50"></text></g><g><title>cpuset_node_allowed (1 samples, 0.01%)</title><rect x="10.8599%" y="405" width="0.0149%" height="15" fill="rgb(240,179,47)" fg:x="730" fg:w="1"/><text x="10.9771%" y="415.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.03%)</title><rect x="10.8747%" y="453" width="0.0298%" height="15" fill="rgb(240,163,11)" fg:x="731" fg:w="2"/><text x="10.9919%" y="463.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.01%)</title><rect x="10.9640%" y="437" width="0.0149%" height="15" fill="rgb(236,37,12)" fg:x="737" fg:w="1"/><text x="11.0812%" y="447.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.01%)</title><rect x="10.9789%" y="437" width="0.0149%" height="15" fill="rgb(232,164,16)" fg:x="738" fg:w="1"/><text x="11.0961%" y="447.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.01%)</title><rect x="10.9938%" y="437" width="0.0149%" height="15" fill="rgb(244,205,15)" fg:x="739" fg:w="1"/><text x="11.1109%" y="447.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.01%)</title><rect x="11.0086%" y="437" width="0.0149%" height="15" fill="rgb(223,117,47)" fg:x="740" fg:w="1"/><text x="11.1258%" y="447.50"></text></g><g><title>clear_page_erms (5 samples, 0.07%)</title><rect x="11.0235%" y="437" width="0.0744%" height="15" fill="rgb(244,107,35)" fg:x="741" fg:w="5"/><text x="11.1407%" y="447.50"></text></g><g><title>__alloc_pages (89 samples, 1.32%)</title><rect x="9.8483%" y="469" width="1.3240%" height="15" fill="rgb(205,140,8)" fg:x="662" fg:w="89"/><text x="9.9654%" y="479.50">__..</text></g><g><title>get_page_from_freelist (18 samples, 0.27%)</title><rect x="10.9045%" y="453" width="0.2678%" height="15" fill="rgb(228,84,46)" fg:x="733" fg:w="18"/><text x="11.0217%" y="463.50"></text></g><g><title>rmqueue (5 samples, 0.07%)</title><rect x="11.0979%" y="437" width="0.0744%" height="15" fill="rgb(254,188,9)" fg:x="746" fg:w="5"/><text x="11.2151%" y="447.50"></text></g><g><title>__rmqueue_pcplist (4 samples, 0.06%)</title><rect x="11.1128%" y="421" width="0.0595%" height="15" fill="rgb(206,112,54)" fg:x="747" fg:w="4"/><text x="11.2300%" y="431.50"></text></g><g><title>rmqueue_bulk (4 samples, 0.06%)</title><rect x="11.1128%" y="405" width="0.0595%" height="15" fill="rgb(216,84,49)" fg:x="747" fg:w="4"/><text x="11.2300%" y="415.50"></text></g><g><title>__folio_alloc (90 samples, 1.34%)</title><rect x="9.8483%" y="485" width="1.3389%" height="15" fill="rgb(214,194,35)" fg:x="662" fg:w="90"/><text x="9.9654%" y="495.50">__..</text></g><g><title>__next_zones_zonelist (1 samples, 0.01%)</title><rect x="11.1723%" y="469" width="0.0149%" height="15" fill="rgb(249,28,3)" fg:x="751" fg:w="1"/><text x="11.2895%" y="479.50"></text></g><g><title>do_anonymous_page (200 samples, 2.98%)</title><rect x="8.2416%" y="517" width="2.9753%" height="15" fill="rgb(222,56,52)" fg:x="554" fg:w="200"/><text x="8.3588%" y="527.50">do_anony..</text></g><g><title>vma_alloc_folio (95 samples, 1.41%)</title><rect x="9.8036%" y="501" width="1.4133%" height="15" fill="rgb(245,217,50)" fg:x="659" fg:w="95"/><text x="9.9208%" y="511.50">vma..</text></g><g><title>policy_node (2 samples, 0.03%)</title><rect x="11.1871%" y="485" width="0.0298%" height="15" fill="rgb(213,201,24)" fg:x="752" fg:w="2"/><text x="11.3043%" y="495.50"></text></g><g><title>folio_add_new_anon_rmap (2 samples, 0.03%)</title><rect x="11.2169%" y="517" width="0.0298%" height="15" fill="rgb(248,116,28)" fg:x="754" fg:w="2"/><text x="11.3341%" y="527.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.01%)</title><rect x="11.2467%" y="517" width="0.0149%" height="15" fill="rgb(219,72,43)" fg:x="756" fg:w="1"/><text x="11.3638%" y="527.50"></text></g><g><title>handle_pte_fault (207 samples, 3.08%)</title><rect x="8.1970%" y="533" width="3.0794%" height="15" fill="rgb(209,138,14)" fg:x="551" fg:w="207"/><text x="8.3142%" y="543.50">handle_pt..</text></g><g><title>vma_alloc_folio (1 samples, 0.01%)</title><rect x="11.2615%" y="517" width="0.0149%" height="15" fill="rgb(222,18,33)" fg:x="757" fg:w="1"/><text x="11.3787%" y="527.50"></text></g><g><title>__handle_mm_fault (215 samples, 3.20%)</title><rect x="8.1077%" y="549" width="3.1985%" height="15" fill="rgb(213,199,7)" fg:x="545" fg:w="215"/><text x="8.2249%" y="559.50">__handle_..</text></g><g><title>pmd_val (2 samples, 0.03%)</title><rect x="11.2764%" y="533" width="0.0298%" height="15" fill="rgb(250,110,10)" fg:x="758" fg:w="2"/><text x="11.3936%" y="543.50"></text></g><g><title>__count_memcg_events (3 samples, 0.04%)</title><rect x="11.3062%" y="533" width="0.0446%" height="15" fill="rgb(248,123,6)" fg:x="760" fg:w="3"/><text x="11.4233%" y="543.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="11.3210%" y="517" width="0.0298%" height="15" fill="rgb(206,91,31)" fg:x="761" fg:w="2"/><text x="11.4382%" y="527.50"></text></g><g><title>handle_mm_fault (221 samples, 3.29%)</title><rect x="8.0780%" y="565" width="3.2877%" height="15" fill="rgb(211,154,13)" fg:x="543" fg:w="221"/><text x="8.1951%" y="575.50">handle_mm..</text></g><g><title>count_memcg_events.constprop.0 (4 samples, 0.06%)</title><rect x="11.3062%" y="549" width="0.0595%" height="15" fill="rgb(225,148,7)" fg:x="760" fg:w="4"/><text x="11.4233%" y="559.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="11.3508%" y="533" width="0.0149%" height="15" fill="rgb(220,160,43)" fg:x="763" fg:w="1"/><text x="11.4680%" y="543.50"></text></g><g><title>lock_vma_under_rcu (7 samples, 0.10%)</title><rect x="11.3657%" y="565" width="0.1041%" height="15" fill="rgb(213,52,39)" fg:x="764" fg:w="7"/><text x="11.4829%" y="575.50"></text></g><g><title>mas_walk (6 samples, 0.09%)</title><rect x="11.3805%" y="549" width="0.0893%" height="15" fill="rgb(243,137,7)" fg:x="765" fg:w="6"/><text x="11.4977%" y="559.50"></text></g><g><title>mtree_range_walk (6 samples, 0.09%)</title><rect x="11.3805%" y="533" width="0.0893%" height="15" fill="rgb(230,79,13)" fg:x="765" fg:w="6"/><text x="11.4977%" y="543.50"></text></g><g><title>mas_walk (1 samples, 0.01%)</title><rect x="11.4698%" y="565" width="0.0149%" height="15" fill="rgb(247,105,23)" fg:x="771" fg:w="1"/><text x="11.5870%" y="575.50"></text></g><g><title>do_user_addr_fault (237 samples, 3.53%)</title><rect x="7.9738%" y="581" width="3.5257%" height="15" fill="rgb(223,179,41)" fg:x="536" fg:w="237"/><text x="8.0910%" y="591.50">do_user_ad..</text></g><g><title>up_read (1 samples, 0.01%)</title><rect x="11.4847%" y="565" width="0.0149%" height="15" fill="rgb(218,9,34)" fg:x="772" fg:w="1"/><text x="11.6019%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="11.4996%" y="581" width="0.0149%" height="15" fill="rgb(222,106,8)" fg:x="773" fg:w="1"/><text x="11.6167%" y="591.50"></text></g><g><title>irqentry_exit (2 samples, 0.03%)</title><rect x="11.5144%" y="581" width="0.0298%" height="15" fill="rgb(211,220,0)" fg:x="774" fg:w="2"/><text x="11.6316%" y="591.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.03%)</title><rect x="11.5144%" y="565" width="0.0298%" height="15" fill="rgb(229,52,16)" fg:x="774" fg:w="2"/><text x="11.6316%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.03%)</title><rect x="11.5144%" y="549" width="0.0298%" height="15" fill="rgb(212,155,18)" fg:x="774" fg:w="2"/><text x="11.6316%" y="559.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.01%)</title><rect x="11.5293%" y="533" width="0.0149%" height="15" fill="rgb(242,21,14)" fg:x="775" fg:w="1"/><text x="11.6465%" y="543.50"></text></g><g><title>asm_exc_page_fault (247 samples, 3.67%)</title><rect x="7.8846%" y="613" width="3.6745%" height="15" fill="rgb(222,19,48)" fg:x="530" fg:w="247"/><text x="8.0017%" y="623.50">asm_exc_pag..</text></g><g><title>exc_page_fault (243 samples, 3.61%)</title><rect x="7.9441%" y="597" width="3.6150%" height="15" fill="rgb(232,45,27)" fg:x="534" fg:w="243"/><text x="8.0613%" y="607.50">exc_page_fa..</text></g><g><title>up_read (1 samples, 0.01%)</title><rect x="11.5442%" y="581" width="0.0149%" height="15" fill="rgb(249,103,42)" fg:x="776" fg:w="1"/><text x="11.6614%" y="591.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (316 samples, 4.70%)</title><rect x="7.2895%" y="821" width="4.7010%" height="15" fill="rgb(246,81,33)" fg:x="490" fg:w="316"/><text x="7.4067%" y="831.50">fringe_vs_asta..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (316 samples, 4.70%)</title><rect x="7.2895%" y="805" width="4.7010%" height="15" fill="rgb(252,33,42)" fg:x="490" fg:w="316"/><text x="7.4067%" y="815.50">core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (316 samples, 4.70%)</title><rect x="7.2895%" y="789" width="4.7010%" height="15" fill="rgb(209,212,41)" fg:x="490" fg:w="316"/><text x="7.4067%" y="799.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (316 samples, 4.70%)</title><rect x="7.2895%" y="773" width="4.7010%" height="15" fill="rgb(207,154,6)" fg:x="490" fg:w="316"/><text x="7.4067%" y="783.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (316 samples, 4.70%)</title><rect x="7.2895%" y="757" width="4.7010%" height="15" fill="rgb(223,64,47)" fg:x="490" fg:w="316"/><text x="7.4067%" y="767.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (316 samples, 4.70%)</title><rect x="7.2895%" y="741" width="4.7010%" height="15" fill="rgb(211,161,38)" fg:x="490" fg:w="316"/><text x="7.4067%" y="751.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (316 samples, 4.70%)</title><rect x="7.2895%" y="725" width="4.7010%" height="15" fill="rgb(219,138,40)" fg:x="490" fg:w="316"/><text x="7.4067%" y="735.50">alloc::vec::Ve..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (316 samples, 4.70%)</title><rect x="7.2895%" y="709" width="4.7010%" height="15" fill="rgb(241,228,46)" fg:x="490" fg:w="316"/><text x="7.4067%" y="719.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (316 samples, 4.70%)</title><rect x="7.2895%" y="693" width="4.7010%" height="15" fill="rgb(223,209,38)" fg:x="490" fg:w="316"/><text x="7.4067%" y="703.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (316 samples, 4.70%)</title><rect x="7.2895%" y="677" width="4.7010%" height="15" fill="rgb(236,164,45)" fg:x="490" fg:w="316"/><text x="7.4067%" y="687.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (312 samples, 4.64%)</title><rect x="7.3490%" y="661" width="4.6415%" height="15" fill="rgb(231,15,5)" fg:x="494" fg:w="312"/><text x="7.4662%" y="671.50">&lt;core::iter::a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (312 samples, 4.64%)</title><rect x="7.3490%" y="645" width="4.6415%" height="15" fill="rgb(252,35,15)" fg:x="494" fg:w="312"/><text x="7.4662%" y="655.50">alloc::vec::Ve..</text></g><g><title>core::ptr::write (311 samples, 4.63%)</title><rect x="7.3639%" y="629" width="4.6266%" height="15" fill="rgb(248,181,18)" fg:x="495" fg:w="311"/><text x="7.4811%" y="639.50">core::ptr::wri..</text></g><g><title>sync_regs (29 samples, 0.43%)</title><rect x="11.5591%" y="613" width="0.4314%" height="15" fill="rgb(233,39,42)" fg:x="777" fg:w="29"/><text x="11.6762%" y="623.50"></text></g><g><title>_compound_head (10 samples, 0.15%)</title><rect x="12.0054%" y="469" width="0.1488%" height="15" fill="rgb(238,110,33)" fg:x="807" fg:w="10"/><text x="12.1225%" y="479.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.01%)</title><rect x="12.2136%" y="453" width="0.0149%" height="15" fill="rgb(233,195,10)" fg:x="821" fg:w="1"/><text x="12.3308%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="12.2880%" y="405" width="0.0298%" height="15" fill="rgb(254,105,3)" fg:x="826" fg:w="2"/><text x="12.4052%" y="415.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="12.3029%" y="389" width="0.0149%" height="15" fill="rgb(221,225,9)" fg:x="827" fg:w="1"/><text x="12.4201%" y="399.50"></text></g><g><title>page_remove_rmap (8 samples, 0.12%)</title><rect x="12.2285%" y="453" width="0.1190%" height="15" fill="rgb(224,227,45)" fg:x="822" fg:w="8"/><text x="12.3457%" y="463.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.06%)</title><rect x="12.2880%" y="437" width="0.0595%" height="15" fill="rgb(229,198,43)" fg:x="826" fg:w="4"/><text x="12.4052%" y="447.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.06%)</title><rect x="12.2880%" y="421" width="0.0595%" height="15" fill="rgb(206,209,35)" fg:x="826" fg:w="4"/><text x="12.4052%" y="431.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.03%)</title><rect x="12.3178%" y="405" width="0.0298%" height="15" fill="rgb(245,195,53)" fg:x="828" fg:w="2"/><text x="12.4350%" y="415.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.01%)</title><rect x="12.3624%" y="389" width="0.0149%" height="15" fill="rgb(240,92,26)" fg:x="831" fg:w="1"/><text x="12.4796%" y="399.50"></text></g><g><title>uncharge_folio (1 samples, 0.01%)</title><rect x="12.3624%" y="373" width="0.0149%" height="15" fill="rgb(207,40,23)" fg:x="831" fg:w="1"/><text x="12.4796%" y="383.50"></text></g><g><title>__free_one_page (8 samples, 0.12%)</title><rect x="12.4219%" y="341" width="0.1190%" height="15" fill="rgb(223,111,35)" fg:x="835" fg:w="8"/><text x="12.5391%" y="351.50"></text></g><g><title>free_unref_page_commit (11 samples, 0.16%)</title><rect x="12.3921%" y="373" width="0.1636%" height="15" fill="rgb(229,147,28)" fg:x="833" fg:w="11"/><text x="12.5093%" y="383.50"></text></g><g><title>free_pcppages_bulk (10 samples, 0.15%)</title><rect x="12.4070%" y="357" width="0.1488%" height="15" fill="rgb(211,29,28)" fg:x="834" fg:w="10"/><text x="12.5242%" y="367.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.01%)</title><rect x="12.5409%" y="341" width="0.0149%" height="15" fill="rgb(228,72,33)" fg:x="843" fg:w="1"/><text x="12.6581%" y="351.50"></text></g><g><title>free_unref_page_list (13 samples, 0.19%)</title><rect x="12.3773%" y="389" width="0.1934%" height="15" fill="rgb(205,214,31)" fg:x="832" fg:w="13"/><text x="12.4945%" y="399.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.01%)</title><rect x="12.5558%" y="373" width="0.0149%" height="15" fill="rgb(224,111,15)" fg:x="844" fg:w="1"/><text x="12.6730%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="12.6153%" y="357" width="0.0149%" height="15" fill="rgb(253,21,26)" fg:x="848" fg:w="1"/><text x="12.7325%" y="367.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="12.6153%" y="341" width="0.0149%" height="15" fill="rgb(245,139,43)" fg:x="848" fg:w="1"/><text x="12.7325%" y="351.50"></text></g><g><title>free_pages_and_swap_cache (20 samples, 0.30%)</title><rect x="12.3475%" y="421" width="0.2975%" height="15" fill="rgb(252,170,7)" fg:x="830" fg:w="20"/><text x="12.4647%" y="431.50"></text></g><g><title>release_pages (19 samples, 0.28%)</title><rect x="12.3624%" y="405" width="0.2827%" height="15" fill="rgb(231,118,14)" fg:x="831" fg:w="19"/><text x="12.4796%" y="415.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (5 samples, 0.07%)</title><rect x="12.5707%" y="389" width="0.0744%" height="15" fill="rgb(238,83,0)" fg:x="845" fg:w="5"/><text x="12.6879%" y="399.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="12.6153%" y="373" width="0.0298%" height="15" fill="rgb(221,39,39)" fg:x="848" fg:w="2"/><text x="12.7325%" y="383.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="12.6302%" y="357" width="0.0149%" height="15" fill="rgb(222,119,46)" fg:x="849" fg:w="1"/><text x="12.7474%" y="367.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::construct_path (45 samples, 0.67%)</title><rect x="11.9905%" y="805" width="0.6694%" height="15" fill="rgb(222,165,49)" fg:x="806" fg:w="45"/><text x="12.1077%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringe::FringeSearch&gt; (44 samples, 0.65%)</title><rect x="12.0054%" y="789" width="0.6546%" height="15" fill="rgb(219,113,52)" fg:x="807" fg:w="44"/><text x="12.1225%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::algorithms::fringe::CacheValue&gt;&gt; (44 samples, 0.65%)</title><rect x="12.0054%" y="773" width="0.6546%" height="15" fill="rgb(214,7,15)" fg:x="807" fg:w="44"/><text x="12.1225%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::algorithms::fringe::CacheValue&gt;&gt; (44 samples, 0.65%)</title><rect x="12.0054%" y="757" width="0.6546%" height="15" fill="rgb(235,32,4)" fg:x="807" fg:w="44"/><text x="12.1225%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.65%)</title><rect x="12.0054%" y="741" width="0.6546%" height="15" fill="rgb(238,90,54)" fg:x="807" fg:w="44"/><text x="12.1225%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (44 samples, 0.65%)</title><rect x="12.0054%" y="725" width="0.6546%" height="15" fill="rgb(213,208,19)" fg:x="807" fg:w="44"/><text x="12.1225%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (44 samples, 0.65%)</title><rect x="12.0054%" y="709" width="0.6546%" height="15" fill="rgb(233,156,4)" fg:x="807" fg:w="44"/><text x="12.1225%" y="719.50"></text></g><g><title>__GI___libc_free (44 samples, 0.65%)</title><rect x="12.0054%" y="693" width="0.6546%" height="15" fill="rgb(207,194,5)" fg:x="807" fg:w="44"/><text x="12.1225%" y="703.50"></text></g><g><title>__GI___munmap (44 samples, 0.65%)</title><rect x="12.0054%" y="677" width="0.6546%" height="15" fill="rgb(206,111,30)" fg:x="807" fg:w="44"/><text x="12.1225%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.65%)</title><rect x="12.0054%" y="661" width="0.6546%" height="15" fill="rgb(243,70,54)" fg:x="807" fg:w="44"/><text x="12.1225%" y="671.50"></text></g><g><title>do_syscall_64 (44 samples, 0.65%)</title><rect x="12.0054%" y="645" width="0.6546%" height="15" fill="rgb(242,28,8)" fg:x="807" fg:w="44"/><text x="12.1225%" y="655.50"></text></g><g><title>x64_sys_call (44 samples, 0.65%)</title><rect x="12.0054%" y="629" width="0.6546%" height="15" fill="rgb(219,106,18)" fg:x="807" fg:w="44"/><text x="12.1225%" y="639.50"></text></g><g><title>__x64_sys_munmap (44 samples, 0.65%)</title><rect x="12.0054%" y="613" width="0.6546%" height="15" fill="rgb(244,222,10)" fg:x="807" fg:w="44"/><text x="12.1225%" y="623.50"></text></g><g><title>__vm_munmap (44 samples, 0.65%)</title><rect x="12.0054%" y="597" width="0.6546%" height="15" fill="rgb(236,179,52)" fg:x="807" fg:w="44"/><text x="12.1225%" y="607.50"></text></g><g><title>do_vmi_munmap (44 samples, 0.65%)</title><rect x="12.0054%" y="581" width="0.6546%" height="15" fill="rgb(213,23,39)" fg:x="807" fg:w="44"/><text x="12.1225%" y="591.50"></text></g><g><title>do_vmi_align_munmap (44 samples, 0.65%)</title><rect x="12.0054%" y="565" width="0.6546%" height="15" fill="rgb(238,48,10)" fg:x="807" fg:w="44"/><text x="12.1225%" y="575.50"></text></g><g><title>unmap_region (44 samples, 0.65%)</title><rect x="12.0054%" y="549" width="0.6546%" height="15" fill="rgb(251,196,23)" fg:x="807" fg:w="44"/><text x="12.1225%" y="559.50"></text></g><g><title>unmap_vmas (44 samples, 0.65%)</title><rect x="12.0054%" y="533" width="0.6546%" height="15" fill="rgb(250,152,24)" fg:x="807" fg:w="44"/><text x="12.1225%" y="543.50"></text></g><g><title>unmap_single_vma (44 samples, 0.65%)</title><rect x="12.0054%" y="517" width="0.6546%" height="15" fill="rgb(209,150,17)" fg:x="807" fg:w="44"/><text x="12.1225%" y="527.50"></text></g><g><title>unmap_page_range (44 samples, 0.65%)</title><rect x="12.0054%" y="501" width="0.6546%" height="15" fill="rgb(234,202,34)" fg:x="807" fg:w="44"/><text x="12.1225%" y="511.50"></text></g><g><title>zap_pmd_range.isra.0 (44 samples, 0.65%)</title><rect x="12.0054%" y="485" width="0.6546%" height="15" fill="rgb(253,148,53)" fg:x="807" fg:w="44"/><text x="12.1225%" y="495.50"></text></g><g><title>zap_pte_range (34 samples, 0.51%)</title><rect x="12.1541%" y="469" width="0.5058%" height="15" fill="rgb(218,129,16)" fg:x="817" fg:w="34"/><text x="12.2713%" y="479.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.31%)</title><rect x="12.3475%" y="453" width="0.3124%" height="15" fill="rgb(216,85,19)" fg:x="830" fg:w="21"/><text x="12.4647%" y="463.50"></text></g><g><title>tlb_batch_pages_flush (21 samples, 0.31%)</title><rect x="12.3475%" y="437" width="0.3124%" height="15" fill="rgb(235,228,7)" fg:x="830" fg:w="21"/><text x="12.4647%" y="447.50"></text></g><g><title>free_swap_cache (1 samples, 0.01%)</title><rect x="12.6450%" y="421" width="0.0149%" height="15" fill="rgb(245,175,0)" fg:x="850" fg:w="1"/><text x="12.7622%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (139 samples, 2.07%)</title><rect x="12.6599%" y="693" width="2.0678%" height="15" fill="rgb(208,168,36)" fg:x="851" fg:w="139"/><text x="12.7771%" y="703.50">&lt;core..</text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (100 samples, 1.49%)</title><rect x="13.2401%" y="677" width="1.4877%" height="15" fill="rgb(246,171,24)" fg:x="890" fg:w="100"/><text x="13.3573%" y="687.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (100 samples, 1.49%)</title><rect x="13.2401%" y="661" width="1.4877%" height="15" fill="rgb(215,142,24)" fg:x="890" fg:w="100"/><text x="13.3573%" y="671.50">cor..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (100 samples, 1.49%)</title><rect x="13.2401%" y="645" width="1.4877%" height="15" fill="rgb(250,187,7)" fg:x="890" fg:w="100"/><text x="13.3573%" y="655.50">all..</text></g><g><title>core::ptr::write (100 samples, 1.49%)</title><rect x="13.2401%" y="629" width="1.4877%" height="15" fill="rgb(228,66,33)" fg:x="890" fg:w="100"/><text x="13.3573%" y="639.50">cor..</text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="14.7129%" y="613" width="0.0149%" height="15" fill="rgb(234,215,21)" fg:x="989" fg:w="1"/><text x="14.8301%" y="623.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="14.7129%" y="597" width="0.0149%" height="15" fill="rgb(222,191,20)" fg:x="989" fg:w="1"/><text x="14.8301%" y="607.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="14.7129%" y="581" width="0.0149%" height="15" fill="rgb(245,79,54)" fg:x="989" fg:w="1"/><text x="14.8301%" y="591.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.01%)</title><rect x="14.7129%" y="565" width="0.0149%" height="15" fill="rgb(240,10,37)" fg:x="989" fg:w="1"/><text x="14.8301%" y="575.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="14.7129%" y="549" width="0.0149%" height="15" fill="rgb(214,192,32)" fg:x="989" fg:w="1"/><text x="14.8301%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="14.7129%" y="533" width="0.0149%" height="15" fill="rgb(209,36,54)" fg:x="989" fg:w="1"/><text x="14.8301%" y="543.50"></text></g><g><title>acpi_irq (1 samples, 0.01%)</title><rect x="14.7129%" y="517" width="0.0149%" height="15" fill="rgb(220,10,11)" fg:x="989" fg:w="1"/><text x="14.8301%" y="527.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.01%)</title><rect x="14.7129%" y="501" width="0.0149%" height="15" fill="rgb(221,106,17)" fg:x="989" fg:w="1"/><text x="14.8301%" y="511.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.01%)</title><rect x="14.7129%" y="485" width="0.0149%" height="15" fill="rgb(251,142,44)" fg:x="989" fg:w="1"/><text x="14.8301%" y="495.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.01%)</title><rect x="14.7129%" y="469" width="0.0149%" height="15" fill="rgb(238,13,15)" fg:x="989" fg:w="1"/><text x="14.8301%" y="479.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.01%)</title><rect x="14.7129%" y="453" width="0.0149%" height="15" fill="rgb(208,107,27)" fg:x="989" fg:w="1"/><text x="14.8301%" y="463.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.01%)</title><rect x="14.7129%" y="437" width="0.0149%" height="15" fill="rgb(205,136,37)" fg:x="989" fg:w="1"/><text x="14.8301%" y="447.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::prepare_next_iteration (219 samples, 3.26%)</title><rect x="12.6599%" y="805" width="3.2580%" height="15" fill="rgb(250,205,27)" fg:x="851" fg:w="219"/><text x="12.7771%" y="815.50">fringe_vs..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (219 samples, 3.26%)</title><rect x="12.6599%" y="789" width="3.2580%" height="15" fill="rgb(210,80,43)" fg:x="851" fg:w="219"/><text x="12.7771%" y="799.50">fringe_vs..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (219 samples, 3.26%)</title><rect x="12.6599%" y="773" width="3.2580%" height="15" fill="rgb(247,160,36)" fg:x="851" fg:w="219"/><text x="12.7771%" y="783.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (219 samples, 3.26%)</title><rect x="12.6599%" y="757" width="3.2580%" height="15" fill="rgb(234,13,49)" fg:x="851" fg:w="219"/><text x="12.7771%" y="767.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (219 samples, 3.26%)</title><rect x="12.6599%" y="741" width="3.2580%" height="15" fill="rgb(234,122,0)" fg:x="851" fg:w="219"/><text x="12.7771%" y="751.50">alloc::ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (219 samples, 3.26%)</title><rect x="12.6599%" y="725" width="3.2580%" height="15" fill="rgb(207,146,38)" fg:x="851" fg:w="219"/><text x="12.7771%" y="735.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (219 samples, 3.26%)</title><rect x="12.6599%" y="709" width="3.2580%" height="15" fill="rgb(207,177,25)" fg:x="851" fg:w="219"/><text x="12.7771%" y="719.50">&lt;core::it..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (80 samples, 1.19%)</title><rect x="14.7278%" y="693" width="1.1901%" height="15" fill="rgb(211,178,42)" fg:x="990" fg:w="80"/><text x="14.8449%" y="703.50">fr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (290 samples, 4.31%)</title><rect x="16.2005%" y="789" width="4.3142%" height="15" fill="rgb(230,69,54)" fg:x="1089" fg:w="290"/><text x="16.3177%" y="799.50">&lt;alloc::vec::..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (290 samples, 4.31%)</title><rect x="16.2005%" y="773" width="4.3142%" height="15" fill="rgb(214,135,41)" fg:x="1089" fg:w="290"/><text x="16.3177%" y="783.50">core::slice::..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (290 samples, 4.31%)</title><rect x="16.2005%" y="757" width="4.3142%" height="15" fill="rgb(237,67,25)" fg:x="1089" fg:w="290"/><text x="16.3177%" y="767.50">&lt;usize as cor..</text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="20.5147%" y="789" width="0.0149%" height="15" fill="rgb(222,189,50)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="799.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="20.5147%" y="773" width="0.0149%" height="15" fill="rgb(245,148,34)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="783.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="20.5147%" y="757" width="0.0149%" height="15" fill="rgb(222,29,6)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="767.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.01%)</title><rect x="20.5147%" y="741" width="0.0149%" height="15" fill="rgb(221,189,43)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="751.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="20.5147%" y="725" width="0.0149%" height="15" fill="rgb(207,36,27)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="735.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="20.5147%" y="709" width="0.0149%" height="15" fill="rgb(217,90,24)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="719.50"></text></g><g><title>acpi_irq (1 samples, 0.01%)</title><rect x="20.5147%" y="693" width="0.0149%" height="15" fill="rgb(224,66,35)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="703.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.01%)</title><rect x="20.5147%" y="677" width="0.0149%" height="15" fill="rgb(221,13,50)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="687.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.01%)</title><rect x="20.5147%" y="661" width="0.0149%" height="15" fill="rgb(236,68,49)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="671.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.01%)</title><rect x="20.5147%" y="645" width="0.0149%" height="15" fill="rgb(229,146,28)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="655.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.01%)</title><rect x="20.5147%" y="629" width="0.0149%" height="15" fill="rgb(225,31,38)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="639.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.01%)</title><rect x="20.5147%" y="613" width="0.0149%" height="15" fill="rgb(250,208,3)" fg:x="1379" fg:w="1"/><text x="20.6319%" y="623.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.04%)</title><rect x="32.0589%" y="773" width="0.0446%" height="15" fill="rgb(246,54,23)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="783.50"></text></g><g><title>common_interrupt (3 samples, 0.04%)</title><rect x="32.0589%" y="757" width="0.0446%" height="15" fill="rgb(243,76,11)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="767.50"></text></g><g><title>__common_interrupt (3 samples, 0.04%)</title><rect x="32.0589%" y="741" width="0.0446%" height="15" fill="rgb(245,21,50)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="751.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.04%)</title><rect x="32.0589%" y="725" width="0.0446%" height="15" fill="rgb(228,9,43)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="735.50"></text></g><g><title>handle_irq_event (3 samples, 0.04%)</title><rect x="32.0589%" y="709" width="0.0446%" height="15" fill="rgb(208,100,47)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="719.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.04%)</title><rect x="32.0589%" y="693" width="0.0446%" height="15" fill="rgb(232,26,8)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="703.50"></text></g><g><title>acpi_irq (3 samples, 0.04%)</title><rect x="32.0589%" y="677" width="0.0446%" height="15" fill="rgb(216,166,38)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="687.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (3 samples, 0.04%)</title><rect x="32.0589%" y="661" width="0.0446%" height="15" fill="rgb(251,202,51)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="671.50"></text></g><g><title>acpi_ev_gpe_detect (3 samples, 0.04%)</title><rect x="32.0589%" y="645" width="0.0446%" height="15" fill="rgb(254,216,34)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="655.50"></text></g><g><title>acpi_ev_detect_gpe (3 samples, 0.04%)</title><rect x="32.0589%" y="629" width="0.0446%" height="15" fill="rgb(251,32,27)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="639.50"></text></g><g><title>acpi_hw_gpe_read (3 samples, 0.04%)</title><rect x="32.0589%" y="613" width="0.0446%" height="15" fill="rgb(208,127,28)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="623.50"></text></g><g><title>acpi_os_read_port (3 samples, 0.04%)</title><rect x="32.0589%" y="597" width="0.0446%" height="15" fill="rgb(224,137,22)" fg:x="2155" fg:w="3"/><text x="32.1761%" y="607.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="32.1035%" y="741" width="0.0298%" height="15" fill="rgb(254,70,32)" fg:x="2158" fg:w="2"/><text x="32.2207%" y="751.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="32.1184%" y="725" width="0.0149%" height="15" fill="rgb(229,75,37)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="735.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="32.1184%" y="709" width="0.0149%" height="15" fill="rgb(252,64,23)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="719.50"></text></g><g><title>tick_sched_timer (1 samples, 0.01%)</title><rect x="32.1184%" y="693" width="0.0149%" height="15" fill="rgb(232,162,48)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="703.50"></text></g><g><title>tick_sched_handle (1 samples, 0.01%)</title><rect x="32.1184%" y="677" width="0.0149%" height="15" fill="rgb(246,160,12)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="687.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="32.1184%" y="661" width="0.0149%" height="15" fill="rgb(247,166,0)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="671.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="32.1184%" y="645" width="0.0149%" height="15" fill="rgb(249,219,21)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="655.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="32.1184%" y="629" width="0.0149%" height="15" fill="rgb(205,209,3)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="639.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="32.1184%" y="613" width="0.0149%" height="15" fill="rgb(243,44,1)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="623.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="32.1184%" y="597" width="0.0149%" height="15" fill="rgb(206,159,16)" fg:x="2159" fg:w="1"/><text x="32.2356%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.10%)</title><rect x="32.1035%" y="773" width="0.1041%" height="15" fill="rgb(244,77,30)" fg:x="2158" fg:w="7"/><text x="32.2207%" y="783.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.10%)</title><rect x="32.1035%" y="757" width="0.1041%" height="15" fill="rgb(218,69,12)" fg:x="2158" fg:w="7"/><text x="32.2207%" y="767.50"></text></g><g><title>irqentry_exit (5 samples, 0.07%)</title><rect x="32.1333%" y="741" width="0.0744%" height="15" fill="rgb(212,87,7)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="751.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.07%)</title><rect x="32.1333%" y="725" width="0.0744%" height="15" fill="rgb(245,114,25)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="735.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.07%)</title><rect x="32.1333%" y="709" width="0.0744%" height="15" fill="rgb(210,61,42)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="719.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.07%)</title><rect x="32.1333%" y="693" width="0.0744%" height="15" fill="rgb(211,52,33)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="703.50"></text></g><g><title>schedule (5 samples, 0.07%)</title><rect x="32.1333%" y="677" width="0.0744%" height="15" fill="rgb(234,58,33)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="687.50"></text></g><g><title>__schedule (5 samples, 0.07%)</title><rect x="32.1333%" y="661" width="0.0744%" height="15" fill="rgb(220,115,36)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="671.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.07%)</title><rect x="32.1333%" y="645" width="0.0744%" height="15" fill="rgb(243,153,54)" fg:x="2160" fg:w="5"/><text x="32.2505%" y="655.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.06%)</title><rect x="32.1482%" y="629" width="0.0595%" height="15" fill="rgb(251,47,18)" fg:x="2161" fg:w="4"/><text x="32.2654%" y="639.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.06%)</title><rect x="32.1482%" y="613" width="0.0595%" height="15" fill="rgb(242,102,42)" fg:x="2161" fg:w="4"/><text x="32.2654%" y="623.50"></text></g><g><title>x86_pmu_enable (4 samples, 0.06%)</title><rect x="32.1482%" y="597" width="0.0595%" height="15" fill="rgb(234,31,38)" fg:x="2161" fg:w="4"/><text x="32.2654%" y="607.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 0.06%)</title><rect x="32.1482%" y="581" width="0.0595%" height="15" fill="rgb(221,117,51)" fg:x="2161" fg:w="4"/><text x="32.2654%" y="591.50"></text></g><g><title>native_write_msr (4 samples, 0.06%)</title><rect x="32.1482%" y="565" width="0.0595%" height="15" fill="rgb(212,20,18)" fg:x="2161" fg:w="4"/><text x="32.2654%" y="575.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.07%)</title><rect x="32.2077%" y="773" width="0.0744%" height="15" fill="rgb(245,133,36)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="783.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.07%)</title><rect x="32.2077%" y="757" width="0.0744%" height="15" fill="rgb(212,6,19)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="767.50"></text></g><g><title>irqentry_exit (5 samples, 0.07%)</title><rect x="32.2077%" y="741" width="0.0744%" height="15" fill="rgb(218,1,36)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="751.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.07%)</title><rect x="32.2077%" y="725" width="0.0744%" height="15" fill="rgb(246,84,54)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="735.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.07%)</title><rect x="32.2077%" y="709" width="0.0744%" height="15" fill="rgb(242,110,6)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="719.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.07%)</title><rect x="32.2077%" y="693" width="0.0744%" height="15" fill="rgb(214,47,5)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="703.50"></text></g><g><title>schedule (5 samples, 0.07%)</title><rect x="32.2077%" y="677" width="0.0744%" height="15" fill="rgb(218,159,25)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="687.50"></text></g><g><title>__schedule (5 samples, 0.07%)</title><rect x="32.2077%" y="661" width="0.0744%" height="15" fill="rgb(215,211,28)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="671.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.07%)</title><rect x="32.2077%" y="645" width="0.0744%" height="15" fill="rgb(238,59,32)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="655.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.07%)</title><rect x="32.2077%" y="629" width="0.0744%" height="15" fill="rgb(226,82,3)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="639.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.07%)</title><rect x="32.2077%" y="613" width="0.0744%" height="15" fill="rgb(240,164,32)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="623.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="32.2077%" y="597" width="0.0744%" height="15" fill="rgb(232,46,7)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="607.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.07%)</title><rect x="32.2077%" y="581" width="0.0744%" height="15" fill="rgb(229,129,53)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="591.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="32.2077%" y="565" width="0.0744%" height="15" fill="rgb(234,188,29)" fg:x="2165" fg:w="5"/><text x="32.3249%" y="575.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (8 samples, 0.12%)</title><rect x="41.3419%" y="741" width="0.1190%" height="15" fill="rgb(246,141,4)" fg:x="2779" fg:w="8"/><text x="41.4591%" y="751.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.01%)</title><rect x="41.4460%" y="725" width="0.0149%" height="15" fill="rgb(229,23,39)" fg:x="2786" fg:w="1"/><text x="41.5632%" y="735.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::h (619 samples, 9.21%)</title><rect x="32.2821%" y="773" width="9.2086%" height="15" fill="rgb(206,12,3)" fg:x="2170" fg:w="619"/><text x="32.3992%" y="783.50">fringe_vs_astar::algorithms::fr..</text></g><g><title>fringe_vs_astar::algorithms::fringe::Heuristic::get (10 samples, 0.15%)</title><rect x="41.3419%" y="757" width="0.1488%" height="15" fill="rgb(252,226,20)" fg:x="2779" fg:w="10"/><text x="41.4591%" y="767.50"></text></g><g><title>fringe_vs_astar::index_to_xy (2 samples, 0.03%)</title><rect x="41.4609%" y="741" width="0.0298%" height="15" fill="rgb(216,123,35)" fg:x="2787" fg:w="2"/><text x="41.5781%" y="751.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::check_estimate (1,411 samples, 20.99%)</title><rect x="20.5296%" y="789" width="20.9908%" height="15" fill="rgb(212,68,40)" fg:x="1380" fg:w="1411"/><text x="20.6468%" y="799.50">fringe_vs_astar::algorithms::fringe::FringeSearch::check_estimate</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (2 samples, 0.03%)</title><rect x="41.4906%" y="773" width="0.0298%" height="15" fill="rgb(254,125,32)" fg:x="2789" fg:w="2"/><text x="41.6078%" y="783.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::in_fringe (739 samples, 10.99%)</title><rect x="41.5204%" y="789" width="10.9938%" height="15" fill="rgb(253,97,22)" fg:x="2791" fg:w="739"/><text x="41.6376%" y="799.50">fringe_vs_astar::algorithms::fringe::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (301 samples, 4.48%)</title><rect x="48.0363%" y="773" width="4.4778%" height="15" fill="rgb(241,101,14)" fg:x="3229" fg:w="301"/><text x="48.1535%" y="783.50">&lt;alloc::vec::V..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (301 samples, 4.48%)</title><rect x="48.0363%" y="757" width="4.4778%" height="15" fill="rgb(238,103,29)" fg:x="3229" fg:w="301"/><text x="48.1535%" y="767.50">core::slice::i..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (301 samples, 4.48%)</title><rect x="48.0363%" y="741" width="4.4778%" height="15" fill="rgb(233,195,47)" fg:x="3229" fg:w="301"/><text x="48.1535%" y="751.50">&lt;usize as core..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.8976%" y="773" width="0.0149%" height="15" fill="rgb(246,218,30)" fg:x="3623" fg:w="1"/><text x="54.0148%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="53.8976%" y="757" width="0.0149%" height="15" fill="rgb(219,145,47)" fg:x="3623" fg:w="1"/><text x="54.0148%" y="767.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="53.8976%" y="741" width="0.0149%" height="15" fill="rgb(243,12,26)" fg:x="3623" fg:w="1"/><text x="54.0148%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="53.9720%" y="693" width="0.0149%" height="15" fill="rgb(214,87,16)" fg:x="3628" fg:w="1"/><text x="54.0892%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="54.0018%" y="629" width="0.0298%" height="15" fill="rgb(208,99,42)" fg:x="3630" fg:w="2"/><text x="54.1190%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.0464%" y="613" width="0.0149%" height="15" fill="rgb(253,99,2)" fg:x="3633" fg:w="1"/><text x="54.1636%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.06%)</title><rect x="54.4332%" y="549" width="0.0595%" height="15" fill="rgb(220,168,23)" fg:x="3659" fg:w="4"/><text x="54.5504%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.06%)</title><rect x="54.4332%" y="533" width="0.0595%" height="15" fill="rgb(242,38,24)" fg:x="3659" fg:w="4"/><text x="54.5504%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.06%)</title><rect x="54.4332%" y="517" width="0.0595%" height="15" fill="rgb(225,182,9)" fg:x="3659" fg:w="4"/><text x="54.5504%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (37 samples, 0.55%)</title><rect x="53.9720%" y="709" width="0.5504%" height="15" fill="rgb(243,178,37)" fg:x="3628" fg:w="37"/><text x="54.0892%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (36 samples, 0.54%)</title><rect x="53.9869%" y="693" width="0.5356%" height="15" fill="rgb(232,139,19)" fg:x="3629" fg:w="36"/><text x="54.1041%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.52%)</title><rect x="54.0018%" y="677" width="0.5207%" height="15" fill="rgb(225,201,24)" fg:x="3630" fg:w="35"/><text x="54.1190%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (35 samples, 0.52%)</title><rect x="54.0018%" y="661" width="0.5207%" height="15" fill="rgb(221,47,46)" fg:x="3630" fg:w="35"/><text x="54.1190%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.52%)</title><rect x="54.0018%" y="645" width="0.5207%" height="15" fill="rgb(249,23,13)" fg:x="3630" fg:w="35"/><text x="54.1190%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.49%)</title><rect x="54.0315%" y="629" width="0.4909%" height="15" fill="rgb(219,9,5)" fg:x="3632" fg:w="33"/><text x="54.1487%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (31 samples, 0.46%)</title><rect x="54.0613%" y="613" width="0.4612%" height="15" fill="rgb(254,171,16)" fg:x="3634" fg:w="31"/><text x="54.1785%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (31 samples, 0.46%)</title><rect x="54.0613%" y="597" width="0.4612%" height="15" fill="rgb(230,171,20)" fg:x="3634" fg:w="31"/><text x="54.1785%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.46%)</title><rect x="54.0613%" y="581" width="0.4612%" height="15" fill="rgb(210,71,41)" fg:x="3634" fg:w="31"/><text x="54.1785%" y="591.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (31 samples, 0.46%)</title><rect x="54.0613%" y="565" width="0.4612%" height="15" fill="rgb(206,173,20)" fg:x="3634" fg:w="31"/><text x="54.1785%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="54.4927%" y="549" width="0.0298%" height="15" fill="rgb(233,88,34)" fg:x="3663" fg:w="2"/><text x="54.6099%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.10%)</title><rect x="54.5225%" y="661" width="0.1041%" height="15" fill="rgb(223,209,46)" fg:x="3665" fg:w="7"/><text x="54.6397%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.6415%" y="645" width="0.0149%" height="15" fill="rgb(250,43,18)" fg:x="3673" fg:w="1"/><text x="54.7587%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="54.6415%" y="629" width="0.0149%" height="15" fill="rgb(208,13,10)" fg:x="3673" fg:w="1"/><text x="54.7587%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="57.2449%" y="581" width="0.0149%" height="15" fill="rgb(212,200,36)" fg:x="3848" fg:w="1"/><text x="57.3621%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="57.2449%" y="565" width="0.0149%" height="15" fill="rgb(225,90,30)" fg:x="3848" fg:w="1"/><text x="57.3621%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="57.2449%" y="549" width="0.0149%" height="15" fill="rgb(236,182,39)" fg:x="3848" fg:w="1"/><text x="57.3621%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 2.77%)</title><rect x="54.5225%" y="709" width="2.7670%" height="15" fill="rgb(212,144,35)" fg:x="3665" fg:w="186"/><text x="54.6397%" y="719.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find (186 samples, 2.77%)</title><rect x="54.5225%" y="693" width="2.7670%" height="15" fill="rgb(228,63,44)" fg:x="3665" fg:w="186"/><text x="54.6397%" y="703.50">core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (186 samples, 2.77%)</title><rect x="54.5225%" y="677" width="2.7670%" height="15" fill="rgb(228,109,6)" fg:x="3665" fg:w="186"/><text x="54.6397%" y="687.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (179 samples, 2.66%)</title><rect x="54.6266%" y="661" width="2.6629%" height="15" fill="rgb(238,117,24)" fg:x="3672" fg:w="179"/><text x="54.7438%" y="671.50">core::i..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (177 samples, 2.63%)</title><rect x="54.6564%" y="645" width="2.6331%" height="15" fill="rgb(242,26,26)" fg:x="3674" fg:w="177"/><text x="54.7735%" y="655.50">core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (177 samples, 2.63%)</title><rect x="54.6564%" y="629" width="2.6331%" height="15" fill="rgb(221,92,48)" fg:x="3674" fg:w="177"/><text x="54.7735%" y="639.50">core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (177 samples, 2.63%)</title><rect x="54.6564%" y="613" width="2.6331%" height="15" fill="rgb(209,209,32)" fg:x="3674" fg:w="177"/><text x="54.7735%" y="623.50">core::o..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (177 samples, 2.63%)</title><rect x="54.6564%" y="597" width="2.6331%" height="15" fill="rgb(221,70,22)" fg:x="3674" fg:w="177"/><text x="54.7735%" y="607.50">fringe_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="57.2597%" y="581" width="0.0298%" height="15" fill="rgb(248,145,5)" fg:x="3849" fg:w="2"/><text x="57.3769%" y="591.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="57.3490%" y="581" width="0.0149%" height="15" fill="rgb(226,116,26)" fg:x="3855" fg:w="1"/><text x="57.4662%" y="591.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.12%)</title><rect x="57.2895%" y="597" width="0.1190%" height="15" fill="rgb(244,5,17)" fg:x="3851" fg:w="8"/><text x="57.4067%" y="607.50"></text></g><g><title>tcache_get (3 samples, 0.04%)</title><rect x="57.3639%" y="581" width="0.0446%" height="15" fill="rgb(252,159,33)" fg:x="3856" fg:w="3"/><text x="57.4811%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="57.4085%" y="597" width="0.0149%" height="15" fill="rgb(206,71,0)" fg:x="3859" fg:w="1"/><text x="57.5257%" y="607.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="57.4234%" y="597" width="0.0149%" height="15" fill="rgb(233,118,54)" fg:x="3860" fg:w="1"/><text x="57.5406%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (238 samples, 3.54%)</title><rect x="53.9125%" y="773" width="3.5406%" height="15" fill="rgb(234,83,48)" fg:x="3624" fg:w="238"/><text x="54.0297%" y="783.50">core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (238 samples, 3.54%)</title><rect x="53.9125%" y="757" width="3.5406%" height="15" fill="rgb(228,3,54)" fg:x="3624" fg:w="238"/><text x="54.0297%" y="767.50">&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (238 samples, 3.54%)</title><rect x="53.9125%" y="741" width="3.5406%" height="15" fill="rgb(226,155,13)" fg:x="3624" fg:w="238"/><text x="54.0297%" y="751.50">&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (238 samples, 3.54%)</title><rect x="53.9125%" y="725" width="3.5406%" height="15" fill="rgb(241,28,37)" fg:x="3624" fg:w="238"/><text x="54.0297%" y="735.50">&lt;alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.16%)</title><rect x="57.2895%" y="709" width="0.1636%" height="15" fill="rgb(233,93,10)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.16%)</title><rect x="57.2895%" y="693" width="0.1636%" height="15" fill="rgb(225,113,19)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.16%)</title><rect x="57.2895%" y="677" width="0.1636%" height="15" fill="rgb(241,2,18)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (11 samples, 0.16%)</title><rect x="57.2895%" y="661" width="0.1636%" height="15" fill="rgb(228,207,21)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.16%)</title><rect x="57.2895%" y="645" width="0.1636%" height="15" fill="rgb(213,211,35)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.16%)</title><rect x="57.2895%" y="629" width="0.1636%" height="15" fill="rgb(209,83,10)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="639.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.16%)</title><rect x="57.2895%" y="613" width="0.1636%" height="15" fill="rgb(209,164,1)" fg:x="3851" fg:w="11"/><text x="57.4067%" y="623.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="57.4383%" y="597" width="0.0149%" height="15" fill="rgb(213,184,43)" fg:x="3861" fg:w="1"/><text x="57.5554%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (1 samples, 0.01%)</title><rect x="57.4531%" y="773" width="0.0149%" height="15" fill="rgb(231,61,34)" fg:x="3862" fg:w="1"/><text x="57.5703%" y="783.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (1 samples, 0.01%)</title><rect x="57.4531%" y="757" width="0.0149%" height="15" fill="rgb(235,75,3)" fg:x="3862" fg:w="1"/><text x="57.5703%" y="767.50"></text></g><g><title>_int_free (12 samples, 0.18%)</title><rect x="57.4829%" y="629" width="0.1785%" height="15" fill="rgb(220,106,47)" fg:x="3864" fg:w="12"/><text x="57.6001%" y="639.50"></text></g><g><title>unlink_chunk (1 samples, 0.01%)</title><rect x="57.6465%" y="613" width="0.0149%" height="15" fill="rgb(210,196,33)" fg:x="3875" fg:w="1"/><text x="57.7637%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(&amp;usize,f64)&gt;&gt; (14 samples, 0.21%)</title><rect x="57.4680%" y="773" width="0.2083%" height="15" fill="rgb(229,154,42)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.21%)</title><rect x="57.4680%" y="757" width="0.2083%" height="15" fill="rgb(228,114,26)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(&amp;usize,f64),alloc::alloc::Global&gt;&gt; (14 samples, 0.21%)</title><rect x="57.4680%" y="741" width="0.2083%" height="15" fill="rgb(208,144,1)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.21%)</title><rect x="57.4680%" y="725" width="0.2083%" height="15" fill="rgb(239,112,37)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;usize,f64)&gt;&gt; (14 samples, 0.21%)</title><rect x="57.4680%" y="709" width="0.2083%" height="15" fill="rgb(210,96,50)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.21%)</title><rect x="57.4680%" y="693" width="0.2083%" height="15" fill="rgb(222,178,2)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.21%)</title><rect x="57.4680%" y="677" width="0.2083%" height="15" fill="rgb(226,74,18)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.21%)</title><rect x="57.4680%" y="661" width="0.2083%" height="15" fill="rgb(225,67,54)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="671.50"></text></g><g><title>__GI___libc_free (14 samples, 0.21%)</title><rect x="57.4680%" y="645" width="0.2083%" height="15" fill="rgb(251,92,32)" fg:x="3863" fg:w="14"/><text x="57.5852%" y="655.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="57.6614%" y="629" width="0.0149%" height="15" fill="rgb(228,149,22)" fg:x="3876" fg:w="1"/><text x="57.7786%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.03%)</title><rect x="57.6763%" y="773" width="0.0298%" height="15" fill="rgb(243,54,13)" fg:x="3877" fg:w="2"/><text x="57.7935%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="57.6763%" y="757" width="0.0298%" height="15" fill="rgb(243,180,28)" fg:x="3877" fg:w="2"/><text x="57.7935%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.03%)</title><rect x="57.6763%" y="741" width="0.0298%" height="15" fill="rgb(208,167,24)" fg:x="3877" fg:w="2"/><text x="57.7935%" y="751.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_now (2 samples, 0.03%)</title><rect x="57.7060%" y="773" width="0.0298%" height="15" fill="rgb(245,73,45)" fg:x="3879" fg:w="2"/><text x="57.8232%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.03%)</title><rect x="57.7060%" y="757" width="0.0298%" height="15" fill="rgb(237,203,48)" fg:x="3879" fg:w="2"/><text x="57.8232%" y="767.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors (353 samples, 5.25%)</title><rect x="52.5141%" y="789" width="5.2514%" height="15" fill="rgb(211,197,16)" fg:x="3530" fg:w="353"/><text x="52.6313%" y="799.50">fringe_vs_astar:..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::neighbors (2 samples, 0.03%)</title><rect x="57.7358%" y="773" width="0.0298%" height="15" fill="rgb(243,99,51)" fg:x="3881" fg:w="2"/><text x="57.8530%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="57.7507%" y="757" width="0.0149%" height="15" fill="rgb(215,123,29)" fg:x="3882" fg:w="1"/><text x="57.8679%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="57.7507%" y="741" width="0.0149%" height="15" fill="rgb(239,186,37)" fg:x="3882" fg:w="1"/><text x="57.8679%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="57.7507%" y="725" width="0.0149%" height="15" fill="rgb(252,136,39)" fg:x="3882" fg:w="1"/><text x="57.8679%" y="735.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (2 samples, 0.03%)</title><rect x="57.7655%" y="789" width="0.0298%" height="15" fill="rgb(223,213,32)" fg:x="3883" fg:w="2"/><text x="57.8827%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="66.9592%" y="757" width="0.0298%" height="15" fill="rgb(233,115,5)" fg:x="4501" fg:w="2"/><text x="67.0764%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="66.9592%" y="741" width="0.0298%" height="15" fill="rgb(207,226,44)" fg:x="4501" fg:w="2"/><text x="67.0764%" y="751.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="66.9741%" y="725" width="0.0149%" height="15" fill="rgb(208,126,0)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="66.9741%" y="709" width="0.0149%" height="15" fill="rgb(244,66,21)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="719.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="66.9741%" y="693" width="0.0149%" height="15" fill="rgb(222,97,12)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="703.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="66.9741%" y="677" width="0.0149%" height="15" fill="rgb(219,213,19)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="687.50"></text></g><g><title>__do_softirq (1 samples, 0.01%)</title><rect x="66.9741%" y="661" width="0.0149%" height="15" fill="rgb(252,169,30)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="671.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="66.9741%" y="645" width="0.0149%" height="15" fill="rgb(206,32,51)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="655.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="66.9741%" y="629" width="0.0149%" height="15" fill="rgb(250,172,42)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="639.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="66.9741%" y="613" width="0.0149%" height="15" fill="rgb(209,34,43)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="623.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.01%)</title><rect x="66.9741%" y="597" width="0.0149%" height="15" fill="rgb(223,11,35)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="607.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="66.9741%" y="581" width="0.0149%" height="15" fill="rgb(251,219,26)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="591.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="66.9741%" y="565" width="0.0149%" height="15" fill="rgb(231,119,3)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="575.50"></text></g><g><title>acpi_irq (1 samples, 0.01%)</title><rect x="66.9741%" y="549" width="0.0149%" height="15" fill="rgb(216,97,11)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="559.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.01%)</title><rect x="66.9741%" y="533" width="0.0149%" height="15" fill="rgb(223,59,9)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="543.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.01%)</title><rect x="66.9741%" y="517" width="0.0149%" height="15" fill="rgb(233,93,31)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="527.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.01%)</title><rect x="66.9741%" y="501" width="0.0149%" height="15" fill="rgb(239,81,33)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="511.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.01%)</title><rect x="66.9741%" y="485" width="0.0149%" height="15" fill="rgb(213,120,34)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="495.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.01%)</title><rect x="66.9741%" y="469" width="0.0149%" height="15" fill="rgb(243,49,53)" fg:x="4502" fg:w="1"/><text x="67.0913%" y="479.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="66.9890%" y="757" width="0.0149%" height="15" fill="rgb(247,216,33)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="767.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="66.9890%" y="741" width="0.0149%" height="15" fill="rgb(226,26,14)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="751.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="66.9890%" y="725" width="0.0149%" height="15" fill="rgb(215,49,53)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="735.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.01%)</title><rect x="66.9890%" y="709" width="0.0149%" height="15" fill="rgb(245,162,40)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="719.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="66.9890%" y="693" width="0.0149%" height="15" fill="rgb(229,68,17)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="703.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="66.9890%" y="677" width="0.0149%" height="15" fill="rgb(213,182,10)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="687.50"></text></g><g><title>acpi_irq (1 samples, 0.01%)</title><rect x="66.9890%" y="661" width="0.0149%" height="15" fill="rgb(245,125,30)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="671.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.01%)</title><rect x="66.9890%" y="645" width="0.0149%" height="15" fill="rgb(232,202,2)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="655.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.01%)</title><rect x="66.9890%" y="629" width="0.0149%" height="15" fill="rgb(237,140,51)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="639.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.01%)</title><rect x="66.9890%" y="613" width="0.0149%" height="15" fill="rgb(236,157,25)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="623.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.01%)</title><rect x="66.9890%" y="597" width="0.0149%" height="15" fill="rgb(219,209,0)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="607.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.01%)</title><rect x="66.9890%" y="581" width="0.0149%" height="15" fill="rgb(240,116,54)" fg:x="4503" fg:w="1"/><text x="67.1062%" y="591.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_node (3,441 samples, 51.19%)</title><rect x="15.9179%" y="805" width="51.1901%" height="15" fill="rgb(216,10,36)" fg:x="1070" fg:w="3441"/><text x="16.0351%" y="815.50">fringe_vs_astar::algorithms::fringe::FringeSearch::process_node</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (626 samples, 9.31%)</title><rect x="57.7953%" y="789" width="9.3127%" height="15" fill="rgb(222,72,44)" fg:x="3885" fg:w="626"/><text x="57.9125%" y="799.50">fringe_vs_astar::structures::fr..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (626 samples, 9.31%)</title><rect x="57.7953%" y="773" width="9.3127%" height="15" fill="rgb(232,159,9)" fg:x="3885" fg:w="626"/><text x="57.9125%" y="783.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (7 samples, 0.10%)</title><rect x="67.0039%" y="757" width="0.1041%" height="15" fill="rgb(210,39,32)" fg:x="4504" fg:w="7"/><text x="67.1211%" y="767.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (285 samples, 4.24%)</title><rect x="67.1080%" y="805" width="4.2398%" height="15" fill="rgb(216,194,45)" fg:x="4511" fg:w="285"/><text x="67.2252%" y="815.50">fringe_vs_ast..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (6 samples, 0.09%)</title><rect x="75.8405%" y="773" width="0.0893%" height="15" fill="rgb(218,18,35)" fg:x="5098" fg:w="6"/><text x="75.9577%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.09%)</title><rect x="75.8405%" y="757" width="0.0893%" height="15" fill="rgb(207,83,51)" fg:x="5098" fg:w="6"/><text x="75.9577%" y="767.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (4,300 samples, 63.97%)</title><rect x="11.9905%" y="821" width="63.9691%" height="15" fill="rgb(225,63,43)" fg:x="806" fg:w="4300"/><text x="12.1077%" y="831.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (310 samples, 4.61%)</title><rect x="71.3478%" y="805" width="4.6117%" height="15" fill="rgb(207,57,36)" fg:x="4796" fg:w="310"/><text x="71.4650%" y="815.50">fringe_vs_asta..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (310 samples, 4.61%)</title><rect x="71.3478%" y="789" width="4.6117%" height="15" fill="rgb(216,99,33)" fg:x="4796" fg:w="310"/><text x="71.4650%" y="799.50">alloc::vec::Ve..</text></g><g><title>core::ptr::read (2 samples, 0.03%)</title><rect x="75.9298%" y="773" width="0.0298%" height="15" fill="rgb(225,42,16)" fg:x="5104" fg:w="2"/><text x="76.0470%" y="783.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (4,836 samples, 71.94%)</title><rect x="4.0315%" y="853" width="71.9429%" height="15" fill="rgb(220,201,45)" fg:x="271" fg:w="4836"/><text x="4.1487%" y="863.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (4,617 samples, 68.68%)</title><rect x="7.2895%" y="837" width="68.6849%" height="15" fill="rgb(225,33,4)" fg:x="490" fg:w="4617"/><text x="7.4067%" y="847.50">fringe_vs_astar::context::Context::solve</text></g><g><title>std::io::stdio::_print (1 samples, 0.01%)</title><rect x="75.9595%" y="821" width="0.0149%" height="15" fill="rgb(224,33,50)" fg:x="5106" fg:w="1"/><text x="76.0767%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (3 samples, 0.04%)</title><rect x="76.2571%" y="821" width="0.0446%" height="15" fill="rgb(246,198,51)" fg:x="5126" fg:w="3"/><text x="76.3743%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3 samples, 0.04%)</title><rect x="76.2571%" y="805" width="0.0446%" height="15" fill="rgb(205,22,4)" fg:x="5126" fg:w="3"/><text x="76.3743%" y="815.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.01%)</title><rect x="77.2538%" y="789" width="0.0149%" height="15" fill="rgb(206,3,8)" fg:x="5193" fg:w="1"/><text x="77.3710%" y="799.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="77.3133%" y="773" width="0.0149%" height="15" fill="rgb(251,23,15)" fg:x="5197" fg:w="1"/><text x="77.4305%" y="783.50"></text></g><g><title>down_read_trylock (4 samples, 0.06%)</title><rect x="77.3728%" y="741" width="0.0595%" height="15" fill="rgb(252,88,28)" fg:x="5201" fg:w="4"/><text x="77.4900%" y="751.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.03%)</title><rect x="77.5216%" y="677" width="0.0298%" height="15" fill="rgb(212,127,14)" fg:x="5211" fg:w="2"/><text x="77.6388%" y="687.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.01%)</title><rect x="77.5364%" y="661" width="0.0149%" height="15" fill="rgb(247,145,37)" fg:x="5212" fg:w="1"/><text x="77.6536%" y="671.50"></text></g><g><title>__rcu_read_unlock (20 samples, 0.30%)</title><rect x="77.5960%" y="661" width="0.2975%" height="15" fill="rgb(209,117,53)" fg:x="5216" fg:w="20"/><text x="77.7131%" y="671.50"></text></g><g><title>__count_memcg_events (6 samples, 0.09%)</title><rect x="77.8935%" y="645" width="0.0893%" height="15" fill="rgb(212,90,42)" fg:x="5236" fg:w="6"/><text x="78.0107%" y="655.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="77.9679%" y="629" width="0.0149%" height="15" fill="rgb(218,164,37)" fg:x="5241" fg:w="1"/><text x="78.0851%" y="639.50"></text></g><g><title>charge_memcg (17 samples, 0.25%)</title><rect x="77.8935%" y="661" width="0.2529%" height="15" fill="rgb(246,65,34)" fg:x="5236" fg:w="17"/><text x="78.0107%" y="671.50"></text></g><g><title>try_charge_memcg (11 samples, 0.16%)</title><rect x="77.9827%" y="645" width="0.1636%" height="15" fill="rgb(231,100,33)" fg:x="5242" fg:w="11"/><text x="78.0999%" y="655.50"></text></g><g><title>consume_stock (4 samples, 0.06%)</title><rect x="78.0869%" y="629" width="0.0595%" height="15" fill="rgb(228,126,14)" fg:x="5249" fg:w="4"/><text x="78.2041%" y="639.50"></text></g><g><title>get_mem_cgroup_from_mm (11 samples, 0.16%)</title><rect x="78.1464%" y="661" width="0.1636%" height="15" fill="rgb(215,173,21)" fg:x="5253" fg:w="11"/><text x="78.2636%" y="671.50"></text></g><g><title>__mem_cgroup_charge (52 samples, 0.77%)</title><rect x="77.5513%" y="677" width="0.7736%" height="15" fill="rgb(210,6,40)" fg:x="5213" fg:w="52"/><text x="77.6685%" y="687.50"></text></g><g><title>try_charge_memcg (1 samples, 0.01%)</title><rect x="78.3100%" y="661" width="0.0149%" height="15" fill="rgb(212,48,18)" fg:x="5264" fg:w="1"/><text x="78.4272%" y="671.50"></text></g><g><title>__pte_alloc (1 samples, 0.01%)</title><rect x="78.3249%" y="677" width="0.0149%" height="15" fill="rgb(230,214,11)" fg:x="5265" fg:w="1"/><text x="78.4421%" y="687.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="78.3249%" y="661" width="0.0149%" height="15" fill="rgb(254,105,39)" fg:x="5265" fg:w="1"/><text x="78.4421%" y="671.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="78.3398%" y="677" width="0.0149%" height="15" fill="rgb(245,158,5)" fg:x="5266" fg:w="1"/><text x="78.4570%" y="687.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="78.4290%" y="597" width="0.0298%" height="15" fill="rgb(249,208,11)" fg:x="5272" fg:w="2"/><text x="78.5462%" y="607.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="78.4439%" y="581" width="0.0149%" height="15" fill="rgb(210,39,28)" fg:x="5273" fg:w="1"/><text x="78.5611%" y="591.50"></text></g><g><title>lru_add_fn (5 samples, 0.07%)</title><rect x="78.3993%" y="629" width="0.0744%" height="15" fill="rgb(211,56,53)" fg:x="5270" fg:w="5"/><text x="78.5165%" y="639.50"></text></g><g><title>lru_gen_add_folio (4 samples, 0.06%)</title><rect x="78.4142%" y="613" width="0.0595%" height="15" fill="rgb(226,201,30)" fg:x="5271" fg:w="4"/><text x="78.5313%" y="623.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="78.4588%" y="597" width="0.0149%" height="15" fill="rgb(239,101,34)" fg:x="5274" fg:w="1"/><text x="78.5760%" y="607.50"></text></g><g><title>folio_add_lru_vma (10 samples, 0.15%)</title><rect x="78.3547%" y="677" width="0.1488%" height="15" fill="rgb(226,209,5)" fg:x="5267" fg:w="10"/><text x="78.4718%" y="687.50"></text></g><g><title>folio_add_lru (10 samples, 0.15%)</title><rect x="78.3547%" y="661" width="0.1488%" height="15" fill="rgb(250,105,47)" fg:x="5267" fg:w="10"/><text x="78.4718%" y="671.50"></text></g><g><title>folio_batch_move_lru (8 samples, 0.12%)</title><rect x="78.3844%" y="645" width="0.1190%" height="15" fill="rgb(230,72,3)" fg:x="5269" fg:w="8"/><text x="78.5016%" y="655.50"></text></g><g><title>release_pages (2 samples, 0.03%)</title><rect x="78.4737%" y="629" width="0.0298%" height="15" fill="rgb(232,218,39)" fg:x="5275" fg:w="2"/><text x="78.5909%" y="639.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.01%)</title><rect x="78.4885%" y="613" width="0.0149%" height="15" fill="rgb(248,166,6)" fg:x="5276" fg:w="1"/><text x="78.6057%" y="623.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.04%)</title><rect x="78.5034%" y="677" width="0.0446%" height="15" fill="rgb(247,89,20)" fg:x="5277" fg:w="3"/><text x="78.6206%" y="687.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.03%)</title><rect x="78.5183%" y="661" width="0.0298%" height="15" fill="rgb(248,130,54)" fg:x="5278" fg:w="2"/><text x="78.6355%" y="671.50"></text></g><g><title>inc_mm_counter (3 samples, 0.04%)</title><rect x="78.5481%" y="677" width="0.0446%" height="15" fill="rgb(234,196,4)" fg:x="5280" fg:w="3"/><text x="78.6652%" y="687.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.04%)</title><rect x="78.5481%" y="661" width="0.0446%" height="15" fill="rgb(250,143,31)" fg:x="5280" fg:w="3"/><text x="78.6652%" y="671.50"></text></g><g><title>pfn_pte (1 samples, 0.01%)</title><rect x="78.5927%" y="677" width="0.0149%" height="15" fill="rgb(211,110,34)" fg:x="5283" fg:w="1"/><text x="78.7099%" y="687.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.01%)</title><rect x="78.6819%" y="629" width="0.0149%" height="15" fill="rgb(215,124,48)" fg:x="5289" fg:w="1"/><text x="78.7991%" y="639.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.01%)</title><rect x="78.7414%" y="613" width="0.0149%" height="15" fill="rgb(216,46,13)" fg:x="5293" fg:w="1"/><text x="78.8586%" y="623.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.01%)</title><rect x="78.7563%" y="613" width="0.0149%" height="15" fill="rgb(205,184,25)" fg:x="5294" fg:w="1"/><text x="78.8735%" y="623.50"></text></g><g><title>_raw_spin_trylock (2 samples, 0.03%)</title><rect x="78.7712%" y="613" width="0.0298%" height="15" fill="rgb(228,1,10)" fg:x="5295" fg:w="2"/><text x="78.8884%" y="623.50"></text></g><g><title>clear_page_erms (3 samples, 0.04%)</title><rect x="78.8010%" y="613" width="0.0446%" height="15" fill="rgb(213,116,27)" fg:x="5297" fg:w="3"/><text x="78.9181%" y="623.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.01%)</title><rect x="78.8902%" y="581" width="0.0149%" height="15" fill="rgb(241,95,50)" fg:x="5303" fg:w="1"/><text x="79.0074%" y="591.50"></text></g><g><title>__rmqueue_pcplist (14 samples, 0.21%)</title><rect x="78.8605%" y="597" width="0.2083%" height="15" fill="rgb(238,48,32)" fg:x="5301" fg:w="14"/><text x="78.9776%" y="607.50"></text></g><g><title>rmqueue_bulk (11 samples, 0.16%)</title><rect x="78.9051%" y="581" width="0.1636%" height="15" fill="rgb(235,113,49)" fg:x="5304" fg:w="11"/><text x="79.0223%" y="591.50"></text></g><g><title>get_page_from_freelist (26 samples, 0.39%)</title><rect x="78.6968%" y="629" width="0.3868%" height="15" fill="rgb(205,127,43)" fg:x="5290" fg:w="26"/><text x="78.8140%" y="639.50"></text></g><g><title>rmqueue (16 samples, 0.24%)</title><rect x="78.8456%" y="613" width="0.2380%" height="15" fill="rgb(250,162,2)" fg:x="5300" fg:w="16"/><text x="78.9628%" y="623.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="79.0687%" y="597" width="0.0149%" height="15" fill="rgb(220,13,41)" fg:x="5315" fg:w="1"/><text x="79.1859%" y="607.50"></text></g><g><title>do_anonymous_page (108 samples, 1.61%)</title><rect x="77.4918%" y="693" width="1.6067%" height="15" fill="rgb(249,221,25)" fg:x="5209" fg:w="108"/><text x="77.6090%" y="703.50">do_..</text></g><g><title>vma_alloc_folio (33 samples, 0.49%)</title><rect x="78.6076%" y="677" width="0.4909%" height="15" fill="rgb(215,208,19)" fg:x="5284" fg:w="33"/><text x="78.7247%" y="687.50"></text></g><g><title>__folio_alloc (32 samples, 0.48%)</title><rect x="78.6224%" y="661" width="0.4760%" height="15" fill="rgb(236,175,2)" fg:x="5285" fg:w="32"/><text x="78.7396%" y="671.50"></text></g><g><title>__alloc_pages (32 samples, 0.48%)</title><rect x="78.6224%" y="645" width="0.4760%" height="15" fill="rgb(241,52,2)" fg:x="5285" fg:w="32"/><text x="78.7396%" y="655.50"></text></g><g><title>rmqueue (1 samples, 0.01%)</title><rect x="79.0836%" y="629" width="0.0149%" height="15" fill="rgb(248,140,14)" fg:x="5316" fg:w="1"/><text x="79.2008%" y="639.50"></text></g><g><title>handle_mm_fault (113 samples, 1.68%)</title><rect x="77.4323%" y="741" width="1.6810%" height="15" fill="rgb(253,22,42)" fg:x="5205" fg:w="113"/><text x="77.5495%" y="751.50">hand..</text></g><g><title>__handle_mm_fault (113 samples, 1.68%)</title><rect x="77.4323%" y="725" width="1.6810%" height="15" fill="rgb(234,61,47)" fg:x="5205" fg:w="113"/><text x="77.5495%" y="735.50">__ha..</text></g><g><title>handle_pte_fault (109 samples, 1.62%)</title><rect x="77.4918%" y="709" width="1.6215%" height="15" fill="rgb(208,226,15)" fg:x="5209" fg:w="109"/><text x="77.6090%" y="719.50">han..</text></g><g><title>vma_alloc_folio (1 samples, 0.01%)</title><rect x="79.0985%" y="693" width="0.0149%" height="15" fill="rgb(217,221,4)" fg:x="5317" fg:w="1"/><text x="79.2157%" y="703.50"></text></g><g><title>lock_vma_under_rcu (12 samples, 0.18%)</title><rect x="79.1134%" y="741" width="0.1785%" height="15" fill="rgb(212,174,34)" fg:x="5318" fg:w="12"/><text x="79.2305%" y="751.50"></text></g><g><title>mas_walk (11 samples, 0.16%)</title><rect x="79.1282%" y="725" width="0.1636%" height="15" fill="rgb(253,83,4)" fg:x="5319" fg:w="11"/><text x="79.2454%" y="735.50"></text></g><g><title>mtree_range_walk (10 samples, 0.15%)</title><rect x="79.1431%" y="709" width="0.1488%" height="15" fill="rgb(250,195,49)" fg:x="5320" fg:w="10"/><text x="79.2603%" y="719.50"></text></g><g><title>asm_exc_page_fault (137 samples, 2.04%)</title><rect x="77.2687%" y="789" width="2.0381%" height="15" fill="rgb(241,192,25)" fg:x="5194" fg:w="137"/><text x="77.3859%" y="799.50">asm_e..</text></g><g><title>exc_page_fault (133 samples, 1.98%)</title><rect x="77.3282%" y="773" width="1.9786%" height="15" fill="rgb(208,124,10)" fg:x="5198" fg:w="133"/><text x="77.4454%" y="783.50">exc_p..</text></g><g><title>do_user_addr_fault (132 samples, 1.96%)</title><rect x="77.3431%" y="757" width="1.9637%" height="15" fill="rgb(222,33,0)" fg:x="5199" fg:w="132"/><text x="77.4602%" y="767.50">do_us..</text></g><g><title>up_read (1 samples, 0.01%)</title><rect x="79.2919%" y="741" width="0.0149%" height="15" fill="rgb(234,209,28)" fg:x="5330" fg:w="1"/><text x="79.4091%" y="751.50"></text></g><g><title>error_entry (2 samples, 0.03%)</title><rect x="79.3068%" y="789" width="0.0298%" height="15" fill="rgb(224,11,23)" fg:x="5331" fg:w="2"/><text x="79.4239%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (217 samples, 3.23%)</title><rect x="76.3017%" y="821" width="3.2282%" height="15" fill="rgb(232,99,1)" fg:x="5129" fg:w="217"/><text x="76.4189%" y="831.50">alloc::ve..</text></g><g><title>core::ptr::write (199 samples, 2.96%)</title><rect x="76.5695%" y="805" width="2.9604%" height="15" fill="rgb(237,95,45)" fg:x="5147" fg:w="199"/><text x="76.6867%" y="815.50">core::pt..</text></g><g><title>sync_regs (13 samples, 0.19%)</title><rect x="79.3365%" y="789" width="0.1934%" height="15" fill="rgb(208,109,11)" fg:x="5333" fg:w="13"/><text x="79.4537%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.12%)</title><rect x="79.5299%" y="821" width="0.1190%" height="15" fill="rgb(216,190,48)" fg:x="5346" fg:w="8"/><text x="79.6471%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.12%)</title><rect x="79.5299%" y="805" width="0.1190%" height="15" fill="rgb(251,171,36)" fg:x="5346" fg:w="8"/><text x="79.6471%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.12%)</title><rect x="79.5299%" y="789" width="0.1190%" height="15" fill="rgb(230,62,22)" fg:x="5346" fg:w="8"/><text x="79.6471%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.04%)</title><rect x="79.8126%" y="725" width="0.0446%" height="15" fill="rgb(225,114,35)" fg:x="5365" fg:w="3"/><text x="79.9297%" y="735.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.04%)</title><rect x="79.8126%" y="709" width="0.0446%" height="15" fill="rgb(215,118,42)" fg:x="5365" fg:w="3"/><text x="79.9297%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.04%)</title><rect x="79.8126%" y="693" width="0.0446%" height="15" fill="rgb(243,119,21)" fg:x="5365" fg:w="3"/><text x="79.9297%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (3 samples, 0.04%)</title><rect x="79.8126%" y="677" width="0.0446%" height="15" fill="rgb(252,177,53)" fg:x="5365" fg:w="3"/><text x="79.9297%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.04%)</title><rect x="79.8126%" y="661" width="0.0446%" height="15" fill="rgb(237,209,29)" fg:x="5365" fg:w="3"/><text x="79.9297%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.57%)</title><rect x="79.8572%" y="661" width="0.5653%" height="15" fill="rgb(212,65,23)" fg:x="5368" fg:w="38"/><text x="79.9744%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (20 samples, 0.30%)</title><rect x="80.1250%" y="645" width="0.2975%" height="15" fill="rgb(230,222,46)" fg:x="5386" fg:w="20"/><text x="80.2422%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.58%)</title><rect x="79.8572%" y="677" width="0.5802%" height="15" fill="rgb(215,135,32)" fg:x="5368" fg:w="39"/><text x="79.9744%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="80.4225%" y="661" width="0.0149%" height="15" fill="rgb(246,101,22)" fg:x="5406" fg:w="1"/><text x="80.5397%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="80.4374%" y="661" width="0.0149%" height="15" fill="rgb(206,107,13)" fg:x="5407" fg:w="1"/><text x="80.5546%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="80.4374%" y="645" width="0.0149%" height="15" fill="rgb(250,100,44)" fg:x="5407" fg:w="1"/><text x="80.5546%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="80.4374%" y="629" width="0.0149%" height="15" fill="rgb(231,147,38)" fg:x="5407" fg:w="1"/><text x="80.5546%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16 samples, 0.24%)</title><rect x="80.4374%" y="677" width="0.2380%" height="15" fill="rgb(229,8,40)" fg:x="5407" fg:w="16"/><text x="80.5546%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (15 samples, 0.22%)</title><rect x="80.4522%" y="661" width="0.2231%" height="15" fill="rgb(221,135,30)" fg:x="5408" fg:w="15"/><text x="80.5694%" y="671.50"></text></g><g><title>fringe_vs_astar::xy_to_index (15 samples, 0.22%)</title><rect x="80.4522%" y="645" width="0.2231%" height="15" fill="rgb(249,193,18)" fg:x="5408" fg:w="15"/><text x="80.5694%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (64 samples, 0.95%)</title><rect x="79.8126%" y="757" width="0.9521%" height="15" fill="rgb(209,133,39)" fg:x="5365" fg:w="64"/><text x="79.9297%" y="767.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (64 samples, 0.95%)</title><rect x="79.8126%" y="741" width="0.9521%" height="15" fill="rgb(232,100,14)" fg:x="5365" fg:w="64"/><text x="79.9297%" y="751.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (61 samples, 0.91%)</title><rect x="79.8572%" y="725" width="0.9075%" height="15" fill="rgb(224,185,1)" fg:x="5368" fg:w="61"/><text x="79.9744%" y="735.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61 samples, 0.91%)</title><rect x="79.8572%" y="709" width="0.9075%" height="15" fill="rgb(223,139,8)" fg:x="5368" fg:w="61"/><text x="79.9744%" y="719.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (61 samples, 0.91%)</title><rect x="79.8572%" y="693" width="0.9075%" height="15" fill="rgb(232,213,38)" fg:x="5368" fg:w="61"/><text x="79.9744%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.09%)</title><rect x="80.6754%" y="677" width="0.0893%" height="15" fill="rgb(207,94,22)" fg:x="5423" fg:w="6"/><text x="80.7926%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="80.6754%" y="661" width="0.0893%" height="15" fill="rgb(219,183,54)" fg:x="5423" fg:w="6"/><text x="80.7926%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (6 samples, 0.09%)</title><rect x="80.6754%" y="645" width="0.0893%" height="15" fill="rgb(216,185,54)" fg:x="5423" fg:w="6"/><text x="80.7926%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="80.6754%" y="629" width="0.0893%" height="15" fill="rgb(254,217,39)" fg:x="5423" fg:w="6"/><text x="80.7926%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="80.7647%" y="757" width="0.0298%" height="15" fill="rgb(240,178,23)" fg:x="5429" fg:w="2"/><text x="80.8818%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="80.7647%" y="741" width="0.0298%" height="15" fill="rgb(218,11,47)" fg:x="5429" fg:w="2"/><text x="80.8818%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="80.7647%" y="725" width="0.0298%" height="15" fill="rgb(218,51,51)" fg:x="5429" fg:w="2"/><text x="80.8818%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="80.7647%" y="709" width="0.0298%" height="15" fill="rgb(238,126,27)" fg:x="5429" fg:w="2"/><text x="80.8818%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="80.7647%" y="693" width="0.0298%" height="15" fill="rgb(249,202,22)" fg:x="5429" fg:w="2"/><text x="80.8818%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="80.8688%" y="709" width="0.0298%" height="15" fill="rgb(254,195,49)" fg:x="5436" fg:w="2"/><text x="80.9860%" y="719.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.04%)</title><rect x="82.1035%" y="613" width="0.0446%" height="15" fill="rgb(208,123,14)" fg:x="5519" fg:w="3"/><text x="82.2207%" y="623.50"></text></g><g><title>alloc_perturb (4 samples, 0.06%)</title><rect x="82.1482%" y="613" width="0.0595%" height="15" fill="rgb(224,200,8)" fg:x="5522" fg:w="4"/><text x="82.2654%" y="623.50"></text></g><g><title>access_error (3 samples, 0.04%)</title><rect x="82.2077%" y="581" width="0.0446%" height="15" fill="rgb(217,61,36)" fg:x="5526" fg:w="3"/><text x="82.3249%" y="591.50"></text></g><g><title>down_read_trylock (3 samples, 0.04%)</title><rect x="82.2821%" y="565" width="0.0446%" height="15" fill="rgb(206,35,45)" fg:x="5531" fg:w="3"/><text x="82.3992%" y="575.50"></text></g><g><title>__pte_offset_map (1 samples, 0.01%)</title><rect x="82.4457%" y="517" width="0.0149%" height="15" fill="rgb(217,65,33)" fg:x="5542" fg:w="1"/><text x="82.5629%" y="527.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.03%)</title><rect x="82.5052%" y="501" width="0.0298%" height="15" fill="rgb(222,158,48)" fg:x="5546" fg:w="2"/><text x="82.6224%" y="511.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.01%)</title><rect x="82.5201%" y="485" width="0.0149%" height="15" fill="rgb(254,2,54)" fg:x="5547" fg:w="1"/><text x="82.6373%" y="495.50"></text></g><g><title>__get_vma_policy (2 samples, 0.03%)</title><rect x="82.5350%" y="501" width="0.0298%" height="15" fill="rgb(250,143,38)" fg:x="5548" fg:w="2"/><text x="82.6521%" y="511.50"></text></g><g><title>__count_memcg_events (3 samples, 0.04%)</title><rect x="82.6837%" y="485" width="0.0446%" height="15" fill="rgb(248,25,0)" fg:x="5558" fg:w="3"/><text x="82.8009%" y="495.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="82.7284%" y="485" width="0.0149%" height="15" fill="rgb(206,152,27)" fg:x="5561" fg:w="1"/><text x="82.8455%" y="495.50"></text></g><g><title>__rcu_read_unlock (30 samples, 0.45%)</title><rect x="82.7432%" y="485" width="0.4463%" height="15" fill="rgb(240,77,30)" fg:x="5562" fg:w="30"/><text x="82.8604%" y="495.50"></text></g><g><title>__count_memcg_events (5 samples, 0.07%)</title><rect x="83.2937%" y="469" width="0.0744%" height="15" fill="rgb(231,5,3)" fg:x="5599" fg:w="5"/><text x="83.4109%" y="479.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="83.3383%" y="453" width="0.0298%" height="15" fill="rgb(207,226,32)" fg:x="5602" fg:w="2"/><text x="83.4555%" y="463.50"></text></g><g><title>charge_memcg (26 samples, 0.39%)</title><rect x="83.1895%" y="485" width="0.3868%" height="15" fill="rgb(222,207,47)" fg:x="5592" fg:w="26"/><text x="83.3067%" y="495.50"></text></g><g><title>try_charge_memcg (14 samples, 0.21%)</title><rect x="83.3680%" y="469" width="0.2083%" height="15" fill="rgb(229,115,45)" fg:x="5604" fg:w="14"/><text x="83.4852%" y="479.50"></text></g><g><title>consume_stock (5 samples, 0.07%)</title><rect x="83.5019%" y="453" width="0.0744%" height="15" fill="rgb(224,191,6)" fg:x="5613" fg:w="5"/><text x="83.6191%" y="463.50"></text></g><g><title>get_mem_cgroup_from_mm (12 samples, 0.18%)</title><rect x="83.5763%" y="485" width="0.1785%" height="15" fill="rgb(230,227,24)" fg:x="5618" fg:w="12"/><text x="83.6935%" y="495.50"></text></g><g><title>__mem_cgroup_charge (81 samples, 1.20%)</title><rect x="82.5647%" y="501" width="1.2050%" height="15" fill="rgb(228,80,19)" fg:x="5550" fg:w="81"/><text x="82.6819%" y="511.50">__..</text></g><g><title>memcg_check_events (1 samples, 0.01%)</title><rect x="83.7548%" y="485" width="0.0149%" height="15" fill="rgb(247,229,0)" fg:x="5630" fg:w="1"/><text x="83.8720%" y="495.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.03%)</title><rect x="83.7697%" y="501" width="0.0298%" height="15" fill="rgb(237,194,15)" fg:x="5631" fg:w="2"/><text x="83.8869%" y="511.50"></text></g><g><title>__pte_offset_map (1 samples, 0.01%)</title><rect x="83.7846%" y="485" width="0.0149%" height="15" fill="rgb(219,203,20)" fg:x="5632" fg:w="1"/><text x="83.9018%" y="495.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="83.7995%" y="501" width="0.0149%" height="15" fill="rgb(234,128,8)" fg:x="5633" fg:w="1"/><text x="83.9167%" y="511.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="83.8143%" y="501" width="0.0149%" height="15" fill="rgb(248,202,8)" fg:x="5634" fg:w="1"/><text x="83.9315%" y="511.50"></text></g><g><title>charge_memcg (2 samples, 0.03%)</title><rect x="83.8292%" y="501" width="0.0298%" height="15" fill="rgb(206,104,37)" fg:x="5635" fg:w="2"/><text x="83.9464%" y="511.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="83.9185%" y="453" width="0.0149%" height="15" fill="rgb(223,8,27)" fg:x="5641" fg:w="1"/><text x="84.0357%" y="463.50"></text></g><g><title>folio_mapping (1 samples, 0.01%)</title><rect x="83.9482%" y="437" width="0.0149%" height="15" fill="rgb(216,217,28)" fg:x="5643" fg:w="1"/><text x="84.0654%" y="447.50"></text></g><g><title>lru_add_fn (11 samples, 0.16%)</title><rect x="83.9334%" y="453" width="0.1636%" height="15" fill="rgb(249,199,1)" fg:x="5642" fg:w="11"/><text x="84.0505%" y="463.50"></text></g><g><title>lru_gen_add_folio (9 samples, 0.13%)</title><rect x="83.9631%" y="437" width="0.1339%" height="15" fill="rgb(240,85,17)" fg:x="5644" fg:w="9"/><text x="84.0803%" y="447.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.04%)</title><rect x="84.0524%" y="421" width="0.0446%" height="15" fill="rgb(206,108,45)" fg:x="5650" fg:w="3"/><text x="84.1696%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="84.0672%" y="405" width="0.0298%" height="15" fill="rgb(245,210,41)" fg:x="5651" fg:w="2"/><text x="84.1844%" y="415.50"></text></g><g><title>folio_add_lru_vma (17 samples, 0.25%)</title><rect x="83.8590%" y="501" width="0.2529%" height="15" fill="rgb(206,13,37)" fg:x="5637" fg:w="17"/><text x="83.9762%" y="511.50"></text></g><g><title>folio_add_lru (17 samples, 0.25%)</title><rect x="83.8590%" y="485" width="0.2529%" height="15" fill="rgb(250,61,18)" fg:x="5637" fg:w="17"/><text x="83.9762%" y="495.50"></text></g><g><title>folio_batch_move_lru (14 samples, 0.21%)</title><rect x="83.9036%" y="469" width="0.2083%" height="15" fill="rgb(235,172,48)" fg:x="5640" fg:w="14"/><text x="84.0208%" y="479.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="84.0970%" y="453" width="0.0149%" height="15" fill="rgb(249,201,17)" fg:x="5653" fg:w="1"/><text x="84.2142%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.04%)</title><rect x="84.1416%" y="453" width="0.0446%" height="15" fill="rgb(219,208,6)" fg:x="5656" fg:w="3"/><text x="84.2588%" y="463.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="84.1714%" y="437" width="0.0149%" height="15" fill="rgb(248,31,23)" fg:x="5658" fg:w="1"/><text x="84.2886%" y="447.50"></text></g><g><title>folio_add_new_anon_rmap (8 samples, 0.12%)</title><rect x="84.1119%" y="501" width="0.1190%" height="15" fill="rgb(245,15,42)" fg:x="5654" fg:w="8"/><text x="84.2291%" y="511.50"></text></g><g><title>__mod_lruvec_page_state (7 samples, 0.10%)</title><rect x="84.1267%" y="485" width="0.1041%" height="15" fill="rgb(222,217,39)" fg:x="5655" fg:w="7"/><text x="84.2439%" y="495.50"></text></g><g><title>__mod_lruvec_state (6 samples, 0.09%)</title><rect x="84.1416%" y="469" width="0.0893%" height="15" fill="rgb(210,219,27)" fg:x="5656" fg:w="6"/><text x="84.2588%" y="479.50"></text></g><g><title>__mod_node_page_state (3 samples, 0.04%)</title><rect x="84.1863%" y="453" width="0.0446%" height="15" fill="rgb(252,166,36)" fg:x="5659" fg:w="3"/><text x="84.3034%" y="463.50"></text></g><g><title>inc_mm_counter (1 samples, 0.01%)</title><rect x="84.2309%" y="501" width="0.0149%" height="15" fill="rgb(245,132,34)" fg:x="5662" fg:w="1"/><text x="84.3481%" y="511.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.01%)</title><rect x="84.2309%" y="485" width="0.0149%" height="15" fill="rgb(236,54,3)" fg:x="5662" fg:w="1"/><text x="84.3481%" y="495.50"></text></g><g><title>native_set_pte (1 samples, 0.01%)</title><rect x="84.2458%" y="501" width="0.0149%" height="15" fill="rgb(241,173,43)" fg:x="5663" fg:w="1"/><text x="84.3629%" y="511.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (2 samples, 0.03%)</title><rect x="84.3201%" y="453" width="0.0298%" height="15" fill="rgb(215,190,9)" fg:x="5668" fg:w="2"/><text x="84.4373%" y="463.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="84.3201%" y="437" width="0.0298%" height="15" fill="rgb(242,101,16)" fg:x="5668" fg:w="2"/><text x="84.4373%" y="447.50"></text></g><g><title>clear_page_erms (2 samples, 0.03%)</title><rect x="84.3201%" y="421" width="0.0298%" height="15" fill="rgb(223,190,21)" fg:x="5668" fg:w="2"/><text x="84.4373%" y="431.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.01%)</title><rect x="84.3796%" y="437" width="0.0149%" height="15" fill="rgb(215,228,25)" fg:x="5672" fg:w="1"/><text x="84.4968%" y="447.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.01%)</title><rect x="84.3945%" y="437" width="0.0149%" height="15" fill="rgb(225,36,22)" fg:x="5673" fg:w="1"/><text x="84.5117%" y="447.50"></text></g><g><title>clear_page_erms (6 samples, 0.09%)</title><rect x="84.4094%" y="437" width="0.0893%" height="15" fill="rgb(251,106,46)" fg:x="5674" fg:w="6"/><text x="84.5266%" y="447.50"></text></g><g><title>find_suitable_fallback (2 samples, 0.03%)</title><rect x="84.4987%" y="437" width="0.0298%" height="15" fill="rgb(208,90,1)" fg:x="5680" fg:w="2"/><text x="84.6158%" y="447.50"></text></g><g><title>__rmqueue_pcplist (6 samples, 0.09%)</title><rect x="84.6028%" y="421" width="0.0893%" height="15" fill="rgb(243,10,4)" fg:x="5687" fg:w="6"/><text x="84.7200%" y="431.50"></text></g><g><title>rmqueue_bulk (6 samples, 0.09%)</title><rect x="84.6028%" y="405" width="0.0893%" height="15" fill="rgb(212,137,27)" fg:x="5687" fg:w="6"/><text x="84.7200%" y="415.50"></text></g><g><title>get_page_from_freelist (24 samples, 0.36%)</title><rect x="84.3499%" y="453" width="0.3570%" height="15" fill="rgb(231,220,49)" fg:x="5670" fg:w="24"/><text x="84.4671%" y="463.50"></text></g><g><title>rmqueue (12 samples, 0.18%)</title><rect x="84.5284%" y="437" width="0.1785%" height="15" fill="rgb(237,96,20)" fg:x="5682" fg:w="12"/><text x="84.6456%" y="447.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="84.6921%" y="421" width="0.0149%" height="15" fill="rgb(239,229,30)" fg:x="5693" fg:w="1"/><text x="84.8092%" y="431.50"></text></g><g><title>do_anonymous_page (152 samples, 2.26%)</title><rect x="82.4606%" y="517" width="2.2612%" height="15" fill="rgb(219,65,33)" fg:x="5543" fg:w="152"/><text x="82.5778%" y="527.50">do_ano..</text></g><g><title>vma_alloc_folio (31 samples, 0.46%)</title><rect x="84.2606%" y="501" width="0.4612%" height="15" fill="rgb(243,134,7)" fg:x="5664" fg:w="31"/><text x="84.3778%" y="511.50"></text></g><g><title>__folio_alloc (30 samples, 0.45%)</title><rect x="84.2755%" y="485" width="0.4463%" height="15" fill="rgb(216,177,54)" fg:x="5665" fg:w="30"/><text x="84.3927%" y="495.50"></text></g><g><title>__alloc_pages (30 samples, 0.45%)</title><rect x="84.2755%" y="469" width="0.4463%" height="15" fill="rgb(211,160,20)" fg:x="5665" fg:w="30"/><text x="84.3927%" y="479.50"></text></g><g><title>rmqueue (1 samples, 0.01%)</title><rect x="84.7069%" y="453" width="0.0149%" height="15" fill="rgb(239,85,39)" fg:x="5694" fg:w="1"/><text x="84.8241%" y="463.50"></text></g><g><title>pfn_pte (1 samples, 0.01%)</title><rect x="84.7218%" y="517" width="0.0149%" height="15" fill="rgb(232,125,22)" fg:x="5695" fg:w="1"/><text x="84.8390%" y="527.50"></text></g><g><title>pte_offset_map_nolock (3 samples, 0.04%)</title><rect x="84.7367%" y="517" width="0.0446%" height="15" fill="rgb(244,57,34)" fg:x="5696" fg:w="3"/><text x="84.8539%" y="527.50"></text></g><g><title>__pte_offset_map (1 samples, 0.01%)</title><rect x="84.7664%" y="501" width="0.0149%" height="15" fill="rgb(214,203,32)" fg:x="5698" fg:w="1"/><text x="84.8836%" y="511.50"></text></g><g><title>handle_pte_fault (160 samples, 2.38%)</title><rect x="82.4308%" y="533" width="2.3802%" height="15" fill="rgb(207,58,43)" fg:x="5541" fg:w="160"/><text x="82.5480%" y="543.50">handle..</text></g><g><title>set_pte (2 samples, 0.03%)</title><rect x="84.7813%" y="517" width="0.0298%" height="15" fill="rgb(215,193,15)" fg:x="5699" fg:w="2"/><text x="84.8985%" y="527.50"></text></g><g><title>pmd_val (1 samples, 0.01%)</title><rect x="84.8111%" y="533" width="0.0149%" height="15" fill="rgb(232,15,44)" fg:x="5701" fg:w="1"/><text x="84.9283%" y="543.50"></text></g><g><title>__handle_mm_fault (168 samples, 2.50%)</title><rect x="82.3564%" y="549" width="2.4993%" height="15" fill="rgb(212,3,48)" fg:x="5536" fg:w="168"/><text x="82.4736%" y="559.50">__handl..</text></g><g><title>pud_val (2 samples, 0.03%)</title><rect x="84.8259%" y="533" width="0.0298%" height="15" fill="rgb(218,128,7)" fg:x="5702" fg:w="2"/><text x="84.9431%" y="543.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.01%)</title><rect x="84.8557%" y="549" width="0.0149%" height="15" fill="rgb(226,216,39)" fg:x="5704" fg:w="1"/><text x="84.9729%" y="559.50"></text></g><g><title>__count_memcg_events (1 samples, 0.01%)</title><rect x="84.8557%" y="533" width="0.0149%" height="15" fill="rgb(243,47,51)" fg:x="5704" fg:w="1"/><text x="84.9729%" y="543.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.01%)</title><rect x="84.8706%" y="549" width="0.0149%" height="15" fill="rgb(241,183,40)" fg:x="5705" fg:w="1"/><text x="84.9878%" y="559.50"></text></g><g><title>handle_mm_fault (174 samples, 2.59%)</title><rect x="82.3267%" y="565" width="2.5885%" height="15" fill="rgb(231,217,32)" fg:x="5534" fg:w="174"/><text x="82.4439%" y="575.50">handle_..</text></g><g><title>pud_val (2 samples, 0.03%)</title><rect x="84.8855%" y="549" width="0.0298%" height="15" fill="rgb(229,61,38)" fg:x="5706" fg:w="2"/><text x="85.0026%" y="559.50"></text></g><g><title>lock_vma_under_rcu (6 samples, 0.09%)</title><rect x="84.9152%" y="565" width="0.0893%" height="15" fill="rgb(225,210,5)" fg:x="5708" fg:w="6"/><text x="85.0324%" y="575.50"></text></g><g><title>mas_walk (6 samples, 0.09%)</title><rect x="84.9152%" y="549" width="0.0893%" height="15" fill="rgb(231,79,45)" fg:x="5708" fg:w="6"/><text x="85.0324%" y="559.50"></text></g><g><title>mtree_range_walk (5 samples, 0.07%)</title><rect x="84.9301%" y="533" width="0.0744%" height="15" fill="rgb(224,100,7)" fg:x="5709" fg:w="5"/><text x="85.0473%" y="543.50"></text></g><g><title>do_user_addr_fault (190 samples, 2.83%)</title><rect x="82.2523%" y="581" width="2.8265%" height="15" fill="rgb(241,198,18)" fg:x="5529" fg:w="190"/><text x="82.3695%" y="591.50">do_user_..</text></g><g><title>up_read (5 samples, 0.07%)</title><rect x="85.0045%" y="565" width="0.0744%" height="15" fill="rgb(252,97,53)" fg:x="5714" fg:w="5"/><text x="85.1217%" y="575.50"></text></g><g><title>asm_exc_page_fault (195 samples, 2.90%)</title><rect x="82.2077%" y="613" width="2.9009%" height="15" fill="rgb(220,88,7)" fg:x="5526" fg:w="195"/><text x="82.3249%" y="623.50">asm_exc_..</text></g><g><title>exc_page_fault (195 samples, 2.90%)</title><rect x="82.2077%" y="597" width="2.9009%" height="15" fill="rgb(213,176,14)" fg:x="5526" fg:w="195"/><text x="82.3249%" y="607.50">exc_page..</text></g><g><title>irqentry_exit (2 samples, 0.03%)</title><rect x="85.0788%" y="581" width="0.0298%" height="15" fill="rgb(246,73,7)" fg:x="5719" fg:w="2"/><text x="85.1960%" y="591.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.03%)</title><rect x="85.0788%" y="565" width="0.0298%" height="15" fill="rgb(245,64,36)" fg:x="5719" fg:w="2"/><text x="85.1960%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.03%)</title><rect x="85.0788%" y="549" width="0.0298%" height="15" fill="rgb(245,80,10)" fg:x="5719" fg:w="2"/><text x="85.1960%" y="559.50"></text></g><g><title>checked_request2size (3 samples, 0.04%)</title><rect x="85.1086%" y="613" width="0.0446%" height="15" fill="rgb(232,107,50)" fg:x="5721" fg:w="3"/><text x="85.2258%" y="623.50"></text></g><g><title>error_entry (5 samples, 0.07%)</title><rect x="85.1532%" y="613" width="0.0744%" height="15" fill="rgb(253,3,0)" fg:x="5724" fg:w="5"/><text x="85.2704%" y="623.50"></text></g><g><title>sync_regs (25 samples, 0.37%)</title><rect x="85.2276%" y="613" width="0.3719%" height="15" fill="rgb(212,99,53)" fg:x="5729" fg:w="25"/><text x="85.3448%" y="623.50"></text></g><g><title>mas_preallocate (1 samples, 0.01%)</title><rect x="85.6293%" y="437" width="0.0149%" height="15" fill="rgb(249,111,54)" fg:x="5756" fg:w="1"/><text x="85.7465%" y="447.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.01%)</title><rect x="85.6293%" y="421" width="0.0149%" height="15" fill="rgb(249,55,30)" fg:x="5756" fg:w="1"/><text x="85.7465%" y="431.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="85.6293%" y="405" width="0.0149%" height="15" fill="rgb(237,47,42)" fg:x="5756" fg:w="1"/><text x="85.7465%" y="415.50"></text></g><g><title>mas_destroy (1 samples, 0.01%)</title><rect x="85.6442%" y="421" width="0.0149%" height="15" fill="rgb(211,20,18)" fg:x="5757" fg:w="1"/><text x="85.7613%" y="431.50"></text></g><g><title>kmem_cache_free_bulk (1 samples, 0.01%)</title><rect x="85.6442%" y="405" width="0.0149%" height="15" fill="rgb(231,203,46)" fg:x="5757" fg:w="1"/><text x="85.7613%" y="415.50"></text></g><g><title>kmem_cache_free_bulk.part.0 (1 samples, 0.01%)</title><rect x="85.6442%" y="389" width="0.0149%" height="15" fill="rgb(237,142,3)" fg:x="5757" fg:w="1"/><text x="85.7613%" y="399.50"></text></g><g><title>mas_store_prealloc (2 samples, 0.03%)</title><rect x="85.6442%" y="437" width="0.0298%" height="15" fill="rgb(241,107,1)" fg:x="5757" fg:w="2"/><text x="85.7613%" y="447.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.01%)</title><rect x="85.6590%" y="421" width="0.0149%" height="15" fill="rgb(229,83,13)" fg:x="5758" fg:w="1"/><text x="85.7762%" y="431.50"></text></g><g><title>mas_wr_walk (1 samples, 0.01%)</title><rect x="85.6590%" y="405" width="0.0149%" height="15" fill="rgb(241,91,40)" fg:x="5758" fg:w="1"/><text x="85.7762%" y="415.50"></text></g><g><title>perf_event_mmap (4 samples, 0.06%)</title><rect x="85.6739%" y="437" width="0.0595%" height="15" fill="rgb(225,3,45)" fg:x="5759" fg:w="4"/><text x="85.7911%" y="447.50"></text></g><g><title>perf_event_mmap_event (4 samples, 0.06%)</title><rect x="85.6739%" y="421" width="0.0595%" height="15" fill="rgb(244,223,14)" fg:x="5759" fg:w="4"/><text x="85.7911%" y="431.50"></text></g><g><title>perf_iterate_sb (4 samples, 0.06%)</title><rect x="85.6739%" y="405" width="0.0595%" height="15" fill="rgb(224,124,37)" fg:x="5759" fg:w="4"/><text x="85.7911%" y="415.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.03%)</title><rect x="85.7037%" y="389" width="0.0298%" height="15" fill="rgb(251,171,30)" fg:x="5761" fg:w="2"/><text x="85.8208%" y="399.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.01%)</title><rect x="85.7185%" y="373" width="0.0149%" height="15" fill="rgb(236,46,54)" fg:x="5762" fg:w="1"/><text x="85.8357%" y="383.50"></text></g><g><title>perf_output_copy (1 samples, 0.01%)</title><rect x="85.7185%" y="357" width="0.0149%" height="15" fill="rgb(245,213,5)" fg:x="5762" fg:w="1"/><text x="85.8357%" y="367.50"></text></g><g><title>__do_sys_brk (9 samples, 0.13%)</title><rect x="85.6144%" y="469" width="0.1339%" height="15" fill="rgb(230,144,27)" fg:x="5755" fg:w="9"/><text x="85.7316%" y="479.50"></text></g><g><title>do_brk_flags (8 samples, 0.12%)</title><rect x="85.6293%" y="453" width="0.1190%" height="15" fill="rgb(220,86,6)" fg:x="5756" fg:w="8"/><text x="85.7465%" y="463.50"></text></g><g><title>vma_prepare (1 samples, 0.01%)</title><rect x="85.7334%" y="437" width="0.0149%" height="15" fill="rgb(240,20,13)" fg:x="5763" fg:w="1"/><text x="85.8506%" y="447.50"></text></g><g><title>down_write (1 samples, 0.01%)</title><rect x="85.7334%" y="421" width="0.0149%" height="15" fill="rgb(217,89,34)" fg:x="5763" fg:w="1"/><text x="85.8506%" y="431.50"></text></g><g><title>__glibc_morecore (10 samples, 0.15%)</title><rect x="85.6144%" y="597" width="0.1488%" height="15" fill="rgb(229,13,5)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="607.50"></text></g><g><title>__GI___sbrk (10 samples, 0.15%)</title><rect x="85.6144%" y="581" width="0.1488%" height="15" fill="rgb(244,67,35)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="591.50"></text></g><g><title>__GI___sbrk (10 samples, 0.15%)</title><rect x="85.6144%" y="565" width="0.1488%" height="15" fill="rgb(221,40,2)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="575.50"></text></g><g><title>__brk (10 samples, 0.15%)</title><rect x="85.6144%" y="549" width="0.1488%" height="15" fill="rgb(237,157,21)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.15%)</title><rect x="85.6144%" y="533" width="0.1488%" height="15" fill="rgb(222,94,11)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="543.50"></text></g><g><title>do_syscall_64 (10 samples, 0.15%)</title><rect x="85.6144%" y="517" width="0.1488%" height="15" fill="rgb(249,113,6)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="527.50"></text></g><g><title>x64_sys_call (10 samples, 0.15%)</title><rect x="85.6144%" y="501" width="0.1488%" height="15" fill="rgb(238,137,36)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="511.50"></text></g><g><title>__x64_sys_brk (10 samples, 0.15%)</title><rect x="85.6144%" y="485" width="0.1488%" height="15" fill="rgb(210,102,26)" fg:x="5755" fg:w="10"/><text x="85.7316%" y="495.50"></text></g><g><title>do_brk_flags (1 samples, 0.01%)</title><rect x="85.7483%" y="469" width="0.0149%" height="15" fill="rgb(218,30,30)" fg:x="5764" fg:w="1"/><text x="85.8655%" y="479.50"></text></g><g><title>down_read_trylock (1 samples, 0.01%)</title><rect x="85.7632%" y="549" width="0.0149%" height="15" fill="rgb(214,67,26)" fg:x="5765" fg:w="1"/><text x="85.8804%" y="559.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.01%)</title><rect x="85.7780%" y="485" width="0.0149%" height="15" fill="rgb(251,9,53)" fg:x="5766" fg:w="1"/><text x="85.8952%" y="495.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="85.7780%" y="469" width="0.0149%" height="15" fill="rgb(228,204,25)" fg:x="5766" fg:w="1"/><text x="85.8952%" y="479.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.04%)</title><rect x="85.7632%" y="565" width="0.0446%" height="15" fill="rgb(207,153,8)" fg:x="5765" fg:w="3"/><text x="85.8804%" y="575.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="85.7780%" y="549" width="0.0298%" height="15" fill="rgb(242,9,16)" fg:x="5766" fg:w="2"/><text x="85.8952%" y="559.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="85.7780%" y="533" width="0.0298%" height="15" fill="rgb(217,211,10)" fg:x="5766" fg:w="2"/><text x="85.8952%" y="543.50"></text></g><g><title>handle_pte_fault (2 samples, 0.03%)</title><rect x="85.7780%" y="517" width="0.0298%" height="15" fill="rgb(219,228,52)" fg:x="5766" fg:w="2"/><text x="85.8952%" y="527.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="85.7780%" y="501" width="0.0298%" height="15" fill="rgb(231,92,29)" fg:x="5766" fg:w="2"/><text x="85.8952%" y="511.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.01%)</title><rect x="85.7929%" y="485" width="0.0149%" height="15" fill="rgb(232,8,23)" fg:x="5767" fg:w="1"/><text x="85.9101%" y="495.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.01%)</title><rect x="85.7929%" y="469" width="0.0149%" height="15" fill="rgb(216,211,34)" fg:x="5767" fg:w="1"/><text x="85.9101%" y="479.50"></text></g><g><title>_int_malloc (319 samples, 4.75%)</title><rect x="81.0771%" y="629" width="4.7456%" height="15" fill="rgb(236,151,0)" fg:x="5450" fg:w="319"/><text x="81.1942%" y="639.50">_int_malloc</text></g><g><title>sysmalloc (15 samples, 0.22%)</title><rect x="85.5995%" y="613" width="0.2231%" height="15" fill="rgb(209,168,3)" fg:x="5754" fg:w="15"/><text x="85.7167%" y="623.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.06%)</title><rect x="85.7632%" y="597" width="0.0595%" height="15" fill="rgb(208,129,28)" fg:x="5765" fg:w="4"/><text x="85.8804%" y="607.50"></text></g><g><title>exc_page_fault (4 samples, 0.06%)</title><rect x="85.7632%" y="581" width="0.0595%" height="15" fill="rgb(229,78,22)" fg:x="5765" fg:w="4"/><text x="85.8804%" y="591.50"></text></g><g><title>irqentry_exit (1 samples, 0.01%)</title><rect x="85.8078%" y="565" width="0.0149%" height="15" fill="rgb(228,187,13)" fg:x="5768" fg:w="1"/><text x="85.9250%" y="575.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="85.8078%" y="549" width="0.0149%" height="15" fill="rgb(240,119,24)" fg:x="5768" fg:w="1"/><text x="85.9250%" y="559.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="85.8078%" y="533" width="0.0149%" height="15" fill="rgb(209,194,42)" fg:x="5768" fg:w="1"/><text x="85.9250%" y="543.50"></text></g><g><title>arena_for_chunk (1 samples, 0.01%)</title><rect x="85.8227%" y="629" width="0.0149%" height="15" fill="rgb(247,200,46)" fg:x="5769" fg:w="1"/><text x="85.9399%" y="639.50"></text></g><g><title>__GI___libc_malloc (336 samples, 5.00%)</title><rect x="80.8985%" y="645" width="4.9985%" height="15" fill="rgb(218,76,16)" fg:x="5438" fg:w="336"/><text x="81.0157%" y="655.50">__GI___libc_mall..</text></g><g><title>checked_request2size (4 samples, 0.06%)</title><rect x="85.8375%" y="629" width="0.0595%" height="15" fill="rgb(225,21,48)" fg:x="5770" fg:w="4"/><text x="85.9547%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="85.8971%" y="645" width="0.0149%" height="15" fill="rgb(239,223,50)" fg:x="5774" fg:w="1"/><text x="86.0142%" y="655.50"></text></g><g><title>__rust_alloc (3 samples, 0.04%)</title><rect x="85.9119%" y="645" width="0.0446%" height="15" fill="rgb(244,45,21)" fg:x="5775" fg:w="3"/><text x="86.0291%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (425 samples, 6.32%)</title><rect x="79.6489%" y="821" width="6.3225%" height="15" fill="rgb(232,33,43)" fg:x="5354" fg:w="425"/><text x="79.7661%" y="831.50">core::iter::traits::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (425 samples, 6.32%)</title><rect x="79.6489%" y="805" width="6.3225%" height="15" fill="rgb(209,8,3)" fg:x="5354" fg:w="425"/><text x="79.7661%" y="815.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (425 samples, 6.32%)</title><rect x="79.6489%" y="789" width="6.3225%" height="15" fill="rgb(214,25,53)" fg:x="5354" fg:w="425"/><text x="79.7661%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (422 samples, 6.28%)</title><rect x="79.6935%" y="773" width="6.2779%" height="15" fill="rgb(254,186,54)" fg:x="5357" fg:w="422"/><text x="79.8107%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (348 samples, 5.18%)</title><rect x="80.7944%" y="757" width="5.1770%" height="15" fill="rgb(208,174,49)" fg:x="5431" fg:w="348"/><text x="80.9116%" y="767.50">alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (348 samples, 5.18%)</title><rect x="80.7944%" y="741" width="5.1770%" height="15" fill="rgb(233,191,51)" fg:x="5431" fg:w="348"/><text x="80.9116%" y="751.50">alloc::vec::Vec&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (343 samples, 5.10%)</title><rect x="80.8688%" y="725" width="5.1026%" height="15" fill="rgb(222,134,10)" fg:x="5436" fg:w="343"/><text x="80.9860%" y="735.50">alloc::raw_vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (341 samples, 5.07%)</title><rect x="80.8985%" y="709" width="5.0729%" height="15" fill="rgb(230,226,20)" fg:x="5438" fg:w="341"/><text x="81.0157%" y="719.50">alloc::raw_vec::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (341 samples, 5.07%)</title><rect x="80.8985%" y="693" width="5.0729%" height="15" fill="rgb(251,111,25)" fg:x="5438" fg:w="341"/><text x="81.0157%" y="703.50">&lt;alloc::alloc::G..</text></g><g><title>alloc::alloc::Global::alloc_impl (341 samples, 5.07%)</title><rect x="80.8985%" y="677" width="5.0729%" height="15" fill="rgb(224,40,46)" fg:x="5438" fg:w="341"/><text x="81.0157%" y="687.50">alloc::alloc::Gl..</text></g><g><title>alloc::alloc::alloc (341 samples, 5.07%)</title><rect x="80.8985%" y="661" width="5.0729%" height="15" fill="rgb(236,108,47)" fg:x="5438" fg:w="341"/><text x="81.0157%" y="671.50">alloc::alloc::al..</text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="85.9566%" y="645" width="0.0149%" height="15" fill="rgb(234,93,0)" fg:x="5778" fg:w="1"/><text x="86.0737%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (4 samples, 0.06%)</title><rect x="85.9714%" y="821" width="0.0595%" height="15" fill="rgb(224,213,32)" fg:x="5779" fg:w="4"/><text x="86.0886%" y="831.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (4 samples, 0.06%)</title><rect x="85.9714%" y="805" width="0.0595%" height="15" fill="rgb(251,11,48)" fg:x="5779" fg:w="4"/><text x="86.0886%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="86.0458%" y="741" width="0.0298%" height="15" fill="rgb(236,173,5)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="86.0458%" y="725" width="0.0298%" height="15" fill="rgb(230,95,12)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.03%)</title><rect x="86.0458%" y="709" width="0.0298%" height="15" fill="rgb(232,209,1)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="86.0458%" y="693" width="0.0298%" height="15" fill="rgb(232,6,1)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="86.0458%" y="677" width="0.0298%" height="15" fill="rgb(210,224,50)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.03%)</title><rect x="86.0458%" y="661" width="0.0298%" height="15" fill="rgb(228,127,35)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="86.0458%" y="645" width="0.0298%" height="15" fill="rgb(245,102,45)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="86.0458%" y="629" width="0.0298%" height="15" fill="rgb(214,1,49)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="86.0458%" y="613" width="0.0298%" height="15" fill="rgb(226,163,40)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="86.0458%" y="597" width="0.0298%" height="15" fill="rgb(239,212,28)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="607.50"></text></g><g><title>_int_malloc (2 samples, 0.03%)</title><rect x="86.0458%" y="581" width="0.0298%" height="15" fill="rgb(220,20,13)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="591.50"></text></g><g><title>error_entry (2 samples, 0.03%)</title><rect x="86.0458%" y="565" width="0.0298%" height="15" fill="rgb(210,164,35)" fg:x="5784" fg:w="2"/><text x="86.1630%" y="575.50"></text></g><g><title>_int_free (47 samples, 0.70%)</title><rect x="86.1500%" y="725" width="0.6992%" height="15" fill="rgb(248,109,41)" fg:x="5791" fg:w="47"/><text x="86.2671%" y="735.50"></text></g><g><title>free_perturb (1 samples, 0.01%)</title><rect x="86.8343%" y="709" width="0.0149%" height="15" fill="rgb(238,23,50)" fg:x="5837" fg:w="1"/><text x="86.9515%" y="719.50"></text></g><g><title>__GI___libc_free (55 samples, 0.82%)</title><rect x="86.0756%" y="741" width="0.8182%" height="15" fill="rgb(211,48,49)" fg:x="5786" fg:w="55"/><text x="86.1928%" y="751.50"></text></g><g><title>arena_for_chunk (3 samples, 0.04%)</title><rect x="86.8492%" y="725" width="0.0446%" height="15" fill="rgb(223,36,21)" fg:x="5838" fg:w="3"/><text x="86.9663%" y="735.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="86.8938%" y="741" width="0.0298%" height="15" fill="rgb(207,123,46)" fg:x="5841" fg:w="2"/><text x="87.0110%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (63 samples, 0.94%)</title><rect x="86.0458%" y="757" width="0.9372%" height="15" fill="rgb(240,218,32)" fg:x="5784" fg:w="63"/><text x="86.1630%" y="767.50">a..</text></g><g><title>__rust_dealloc (4 samples, 0.06%)</title><rect x="86.9235%" y="741" width="0.0595%" height="15" fill="rgb(252,5,43)" fg:x="5843" fg:w="4"/><text x="87.0407%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (66 samples, 0.98%)</title><rect x="86.0309%" y="821" width="0.9819%" height="15" fill="rgb(252,84,19)" fg:x="5783" fg:w="66"/><text x="86.1481%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (66 samples, 0.98%)</title><rect x="86.0309%" y="805" width="0.9819%" height="15" fill="rgb(243,152,39)" fg:x="5783" fg:w="66"/><text x="86.1481%" y="815.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.98%)</title><rect x="86.0309%" y="789" width="0.9819%" height="15" fill="rgb(234,160,15)" fg:x="5783" fg:w="66"/><text x="86.1481%" y="799.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.97%)</title><rect x="86.0458%" y="773" width="0.9670%" height="15" fill="rgb(237,34,20)" fg:x="5784" fg:w="65"/><text x="86.1630%" y="783.50">&lt;..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (2 samples, 0.03%)</title><rect x="86.9830%" y="757" width="0.0298%" height="15" fill="rgb(229,97,13)" fg:x="5847" fg:w="2"/><text x="87.1002%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (4 samples, 0.06%)</title><rect x="87.0128%" y="821" width="0.0595%" height="15" fill="rgb(234,71,50)" fg:x="5849" fg:w="4"/><text x="87.1300%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (4 samples, 0.06%)</title><rect x="87.0128%" y="805" width="0.0595%" height="15" fill="rgb(253,155,4)" fg:x="5849" fg:w="4"/><text x="87.1300%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="87.0128%" y="789" width="0.0595%" height="15" fill="rgb(222,185,37)" fg:x="5849" fg:w="4"/><text x="87.1300%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.04%)</title><rect x="87.0277%" y="773" width="0.0446%" height="15" fill="rgb(251,177,13)" fg:x="5850" fg:w="3"/><text x="87.1449%" y="783.50"></text></g><g><title>checked_request2size (5 samples, 0.07%)</title><rect x="88.0393%" y="725" width="0.0744%" height="15" fill="rgb(250,179,40)" fg:x="5918" fg:w="5"/><text x="88.1565%" y="735.50"></text></g><g><title>__GI___libc_malloc (36 samples, 0.54%)</title><rect x="87.7120%" y="741" width="0.5356%" height="15" fill="rgb(242,44,2)" fg:x="5896" fg:w="36"/><text x="87.8292%" y="751.50"></text></g><g><title>tcache_get (9 samples, 0.13%)</title><rect x="88.1137%" y="725" width="0.1339%" height="15" fill="rgb(216,177,13)" fg:x="5923" fg:w="9"/><text x="88.2308%" y="735.50"></text></g><g><title>__rdl_alloc (7 samples, 0.10%)</title><rect x="88.2475%" y="741" width="0.1041%" height="15" fill="rgb(216,106,43)" fg:x="5932" fg:w="7"/><text x="88.3647%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (54 samples, 0.80%)</title><rect x="87.6674%" y="805" width="0.8033%" height="15" fill="rgb(216,183,2)" fg:x="5893" fg:w="54"/><text x="87.7845%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.80%)</title><rect x="87.6674%" y="789" width="0.8033%" height="15" fill="rgb(249,75,3)" fg:x="5893" fg:w="54"/><text x="87.7845%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.80%)</title><rect x="87.6674%" y="773" width="0.8033%" height="15" fill="rgb(219,67,39)" fg:x="5893" fg:w="54"/><text x="87.7845%" y="783.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.80%)</title><rect x="87.6674%" y="757" width="0.8033%" height="15" fill="rgb(253,228,2)" fg:x="5893" fg:w="54"/><text x="87.7845%" y="767.50"></text></g><g><title>__rust_alloc (8 samples, 0.12%)</title><rect x="88.3517%" y="741" width="0.1190%" height="15" fill="rgb(235,138,27)" fg:x="5939" fg:w="8"/><text x="88.4689%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (4 samples, 0.06%)</title><rect x="88.4707%" y="805" width="0.0595%" height="15" fill="rgb(236,97,51)" fg:x="5947" fg:w="4"/><text x="88.5879%" y="815.50"></text></g><g><title>alloc::slice::hack::into_vec (4 samples, 0.06%)</title><rect x="88.4707%" y="789" width="0.0595%" height="15" fill="rgb(240,80,30)" fg:x="5947" fg:w="4"/><text x="88.5879%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (4 samples, 0.06%)</title><rect x="88.4707%" y="773" width="0.0595%" height="15" fill="rgb(230,178,19)" fg:x="5947" fg:w="4"/><text x="88.5879%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (3 samples, 0.04%)</title><rect x="88.5302%" y="805" width="0.0446%" height="15" fill="rgb(210,190,27)" fg:x="5951" fg:w="3"/><text x="88.6474%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.04%)</title><rect x="88.5302%" y="789" width="0.0446%" height="15" fill="rgb(222,107,31)" fg:x="5951" fg:w="3"/><text x="88.6474%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="88.5302%" y="773" width="0.0446%" height="15" fill="rgb(216,127,34)" fg:x="5951" fg:w="3"/><text x="88.6474%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.04%)</title><rect x="88.5302%" y="757" width="0.0446%" height="15" fill="rgb(234,116,52)" fg:x="5951" fg:w="3"/><text x="88.6474%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (6 samples, 0.09%)</title><rect x="88.5748%" y="805" width="0.0893%" height="15" fill="rgb(222,124,15)" fg:x="5954" fg:w="6"/><text x="88.6920%" y="815.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (6 samples, 0.09%)</title><rect x="88.5748%" y="789" width="0.0893%" height="15" fill="rgb(231,179,28)" fg:x="5954" fg:w="6"/><text x="88.6920%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.21%)</title><rect x="88.6641%" y="757" width="0.2083%" height="15" fill="rgb(226,93,45)" fg:x="5960" fg:w="14"/><text x="88.7813%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.13%)</title><rect x="88.9914%" y="725" width="0.1339%" height="15" fill="rgb(215,8,51)" fg:x="5982" fg:w="9"/><text x="89.1086%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="89.2294%" y="709" width="0.0298%" height="15" fill="rgb(223,106,5)" fg:x="5998" fg:w="2"/><text x="89.3466%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.13%)</title><rect x="89.2591%" y="661" width="0.1339%" height="15" fill="rgb(250,191,5)" fg:x="6000" fg:w="9"/><text x="89.3763%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.07%)</title><rect x="89.3930%" y="501" width="0.0744%" height="15" fill="rgb(242,132,44)" fg:x="6009" fg:w="5"/><text x="89.5102%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.10%)</title><rect x="89.4674%" y="501" width="0.1041%" height="15" fill="rgb(251,152,29)" fg:x="6014" fg:w="7"/><text x="89.5846%" y="511.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.06%)</title><rect x="89.5120%" y="485" width="0.0595%" height="15" fill="rgb(218,179,5)" fg:x="6017" fg:w="4"/><text x="89.6292%" y="495.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.21%)</title><rect x="89.3930%" y="517" width="0.2083%" height="15" fill="rgb(227,67,19)" fg:x="6009" fg:w="14"/><text x="89.5102%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.03%)</title><rect x="89.5716%" y="501" width="0.0298%" height="15" fill="rgb(233,119,31)" fg:x="6021" fg:w="2"/><text x="89.6887%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (21 samples, 0.31%)</title><rect x="89.3930%" y="645" width="0.3124%" height="15" fill="rgb(241,120,22)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (21 samples, 0.31%)</title><rect x="89.3930%" y="629" width="0.3124%" height="15" fill="rgb(224,102,30)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.31%)</title><rect x="89.3930%" y="613" width="0.3124%" height="15" fill="rgb(210,164,37)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.31%)</title><rect x="89.3930%" y="597" width="0.3124%" height="15" fill="rgb(226,191,16)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.31%)</title><rect x="89.3930%" y="581" width="0.3124%" height="15" fill="rgb(214,40,45)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.31%)</title><rect x="89.3930%" y="565" width="0.3124%" height="15" fill="rgb(244,29,26)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (21 samples, 0.31%)</title><rect x="89.3930%" y="549" width="0.3124%" height="15" fill="rgb(216,16,5)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.31%)</title><rect x="89.3930%" y="533" width="0.3124%" height="15" fill="rgb(249,76,35)" fg:x="6009" fg:w="21"/><text x="89.5102%" y="543.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (7 samples, 0.10%)</title><rect x="89.6013%" y="517" width="0.1041%" height="15" fill="rgb(207,11,44)" fg:x="6023" fg:w="7"/><text x="89.7185%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (7 samples, 0.10%)</title><rect x="89.6013%" y="501" width="0.1041%" height="15" fill="rgb(228,190,49)" fg:x="6023" fg:w="7"/><text x="89.7185%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (7 samples, 0.10%)</title><rect x="89.6013%" y="485" width="0.1041%" height="15" fill="rgb(214,173,12)" fg:x="6023" fg:w="7"/><text x="89.7185%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (12 samples, 0.18%)</title><rect x="89.7054%" y="645" width="0.1785%" height="15" fill="rgb(218,26,35)" fg:x="6030" fg:w="12"/><text x="89.8226%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.8840%" y="533" width="0.0149%" height="15" fill="rgb(220,200,19)" fg:x="6042" fg:w="1"/><text x="90.0012%" y="543.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (37 samples, 0.55%)</title><rect x="89.3930%" y="661" width="0.5504%" height="15" fill="rgb(239,95,49)" fg:x="6009" fg:w="37"/><text x="89.5102%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="645" width="0.0595%" height="15" fill="rgb(235,85,53)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="629" width="0.0595%" height="15" fill="rgb(233,133,31)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="613" width="0.0595%" height="15" fill="rgb(218,25,20)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="597" width="0.0595%" height="15" fill="rgb(252,210,38)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="581" width="0.0595%" height="15" fill="rgb(242,134,21)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="565" width="0.0595%" height="15" fill="rgb(213,28,48)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="89.8840%" y="549" width="0.0595%" height="15" fill="rgb(250,196,2)" fg:x="6042" fg:w="4"/><text x="90.0012%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="89.8988%" y="533" width="0.0446%" height="15" fill="rgb(227,5,17)" fg:x="6043" fg:w="3"/><text x="90.0160%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.04%)</title><rect x="89.8988%" y="517" width="0.0446%" height="15" fill="rgb(221,226,24)" fg:x="6043" fg:w="3"/><text x="90.0160%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="89.8988%" y="501" width="0.0446%" height="15" fill="rgb(211,5,48)" fg:x="6043" fg:w="3"/><text x="90.0160%" y="511.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.21%)</title><rect x="89.9435%" y="517" width="0.2083%" height="15" fill="rgb(219,150,6)" fg:x="6046" fg:w="14"/><text x="90.0607%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.21%)</title><rect x="89.9435%" y="501" width="0.2083%" height="15" fill="rgb(251,46,16)" fg:x="6046" fg:w="14"/><text x="90.0607%" y="511.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.10%)</title><rect x="90.0476%" y="485" width="0.1041%" height="15" fill="rgb(220,204,40)" fg:x="6053" fg:w="7"/><text x="90.1648%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 1.06%)</title><rect x="89.2591%" y="709" width="1.0562%" height="15" fill="rgb(211,85,2)" fg:x="6000" fg:w="71"/><text x="89.3763%" y="719.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 1.06%)</title><rect x="89.2591%" y="693" width="1.0562%" height="15" fill="rgb(229,17,7)" fg:x="6000" fg:w="71"/><text x="89.3763%" y="703.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (71 samples, 1.06%)</title><rect x="89.2591%" y="677" width="1.0562%" height="15" fill="rgb(239,72,28)" fg:x="6000" fg:w="71"/><text x="89.3763%" y="687.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (25 samples, 0.37%)</title><rect x="89.9435%" y="661" width="0.3719%" height="15" fill="rgb(230,47,54)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (25 samples, 0.37%)</title><rect x="89.9435%" y="645" width="0.3719%" height="15" fill="rgb(214,50,8)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (25 samples, 0.37%)</title><rect x="89.9435%" y="629" width="0.3719%" height="15" fill="rgb(216,198,43)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.37%)</title><rect x="89.9435%" y="613" width="0.3719%" height="15" fill="rgb(234,20,35)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.37%)</title><rect x="89.9435%" y="597" width="0.3719%" height="15" fill="rgb(254,45,19)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.37%)</title><rect x="89.9435%" y="581" width="0.3719%" height="15" fill="rgb(219,14,44)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.37%)</title><rect x="89.9435%" y="565" width="0.3719%" height="15" fill="rgb(217,220,26)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (25 samples, 0.37%)</title><rect x="89.9435%" y="549" width="0.3719%" height="15" fill="rgb(213,158,28)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 0.37%)</title><rect x="89.9435%" y="533" width="0.3719%" height="15" fill="rgb(252,51,52)" fg:x="6046" fg:w="25"/><text x="90.0607%" y="543.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (11 samples, 0.16%)</title><rect x="90.1517%" y="517" width="0.1636%" height="15" fill="rgb(246,89,16)" fg:x="6060" fg:w="11"/><text x="90.2689%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (11 samples, 0.16%)</title><rect x="90.1517%" y="501" width="0.1636%" height="15" fill="rgb(216,158,49)" fg:x="6060" fg:w="11"/><text x="90.2689%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (11 samples, 0.16%)</title><rect x="90.1517%" y="485" width="0.1636%" height="15" fill="rgb(236,107,19)" fg:x="6060" fg:w="11"/><text x="90.2689%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="90.3154%" y="709" width="0.0149%" height="15" fill="rgb(228,185,30)" fg:x="6071" fg:w="1"/><text x="90.4326%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="90.3154%" y="693" width="0.0149%" height="15" fill="rgb(246,134,8)" fg:x="6071" fg:w="1"/><text x="90.4326%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.04%)</title><rect x="90.4641%" y="645" width="0.0446%" height="15" fill="rgb(214,143,50)" fg:x="6081" fg:w="3"/><text x="90.5813%" y="655.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.16836612410970210555 (3 samples, 0.04%)</title><rect x="90.5088%" y="645" width="0.0446%" height="15" fill="rgb(228,75,8)" fg:x="6084" fg:w="3"/><text x="90.6260%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.04%)</title><rect x="90.5534%" y="645" width="0.0446%" height="15" fill="rgb(207,175,4)" fg:x="6087" fg:w="3"/><text x="90.6706%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13 samples, 0.19%)</title><rect x="91.1931%" y="549" width="0.1934%" height="15" fill="rgb(205,108,24)" fg:x="6130" fg:w="13"/><text x="91.3103%" y="559.50"></text></g><g><title>_int_free (19 samples, 0.28%)</title><rect x="91.3865%" y="549" width="0.2827%" height="15" fill="rgb(244,120,49)" fg:x="6143" fg:w="19"/><text x="91.5037%" y="559.50"></text></g><g><title>tcache_put (1 samples, 0.01%)</title><rect x="91.6543%" y="533" width="0.0149%" height="15" fill="rgb(223,47,38)" fg:x="6161" fg:w="1"/><text x="91.7715%" y="543.50"></text></g><g><title>alloc_perturb (3 samples, 0.04%)</title><rect x="92.4130%" y="533" width="0.0446%" height="15" fill="rgb(229,179,11)" fg:x="6212" fg:w="3"/><text x="92.5302%" y="543.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.01%)</title><rect x="92.4576%" y="421" width="0.0149%" height="15" fill="rgb(231,122,1)" fg:x="6215" fg:w="1"/><text x="92.5748%" y="431.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="92.4576%" y="405" width="0.0149%" height="15" fill="rgb(245,119,9)" fg:x="6215" fg:w="1"/><text x="92.5748%" y="415.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.03%)</title><rect x="92.4576%" y="533" width="0.0298%" height="15" fill="rgb(241,163,25)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="543.50"></text></g><g><title>exc_page_fault (2 samples, 0.03%)</title><rect x="92.4576%" y="517" width="0.0298%" height="15" fill="rgb(217,214,3)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="527.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="92.4576%" y="501" width="0.0298%" height="15" fill="rgb(240,86,28)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="511.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="92.4576%" y="485" width="0.0298%" height="15" fill="rgb(215,47,9)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="495.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="92.4576%" y="469" width="0.0298%" height="15" fill="rgb(252,25,45)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="479.50"></text></g><g><title>handle_pte_fault (2 samples, 0.03%)</title><rect x="92.4576%" y="453" width="0.0298%" height="15" fill="rgb(251,164,9)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="463.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="92.4576%" y="437" width="0.0298%" height="15" fill="rgb(233,194,0)" fg:x="6215" fg:w="2"/><text x="92.5748%" y="447.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.01%)</title><rect x="92.4725%" y="421" width="0.0149%" height="15" fill="rgb(249,111,24)" fg:x="6216" fg:w="1"/><text x="92.5897%" y="431.50"></text></g><g><title>__folio_alloc (1 samples, 0.01%)</title><rect x="92.4725%" y="405" width="0.0149%" height="15" fill="rgb(250,223,3)" fg:x="6216" fg:w="1"/><text x="92.5897%" y="415.50"></text></g><g><title>__alloc_pages (1 samples, 0.01%)</title><rect x="92.4725%" y="389" width="0.0149%" height="15" fill="rgb(236,178,37)" fg:x="6216" fg:w="1"/><text x="92.5897%" y="399.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="92.4725%" y="373" width="0.0149%" height="15" fill="rgb(241,158,50)" fg:x="6216" fg:w="1"/><text x="92.5897%" y="383.50"></text></g><g><title>rmqueue (1 samples, 0.01%)</title><rect x="92.4725%" y="357" width="0.0149%" height="15" fill="rgb(213,121,41)" fg:x="6216" fg:w="1"/><text x="92.5897%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="92.4874%" y="533" width="0.0149%" height="15" fill="rgb(240,92,3)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="92.4874%" y="517" width="0.0149%" height="15" fill="rgb(205,123,3)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="527.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="92.4874%" y="501" width="0.0149%" height="15" fill="rgb(205,97,47)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="511.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="92.4874%" y="485" width="0.0149%" height="15" fill="rgb(247,152,14)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="495.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="92.4874%" y="469" width="0.0149%" height="15" fill="rgb(248,195,53)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="479.50"></text></g><g><title>tick_sched_timer (1 samples, 0.01%)</title><rect x="92.4874%" y="453" width="0.0149%" height="15" fill="rgb(226,201,16)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="463.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="92.4874%" y="437" width="0.0149%" height="15" fill="rgb(205,98,0)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="447.50"></text></g><g><title>tick_do_update_jiffies64 (1 samples, 0.01%)</title><rect x="92.4874%" y="421" width="0.0149%" height="15" fill="rgb(214,191,48)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="431.50"></text></g><g><title>update_wall_time (1 samples, 0.01%)</title><rect x="92.4874%" y="405" width="0.0149%" height="15" fill="rgb(237,112,39)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="415.50"></text></g><g><title>timekeeping_advance (1 samples, 0.01%)</title><rect x="92.4874%" y="389" width="0.0149%" height="15" fill="rgb(247,203,27)" fg:x="6217" fg:w="1"/><text x="92.6045%" y="399.50"></text></g><g><title>checked_request2size (1 samples, 0.01%)</title><rect x="92.5022%" y="533" width="0.0149%" height="15" fill="rgb(235,124,28)" fg:x="6218" fg:w="1"/><text x="92.6194%" y="543.50"></text></g><g><title>_int_malloc (62 samples, 0.92%)</title><rect x="91.6691%" y="549" width="0.9223%" height="15" fill="rgb(208,207,46)" fg:x="6162" fg:w="62"/><text x="91.7863%" y="559.50">_..</text></g><g><title>tcache_put (5 samples, 0.07%)</title><rect x="92.5171%" y="533" width="0.0744%" height="15" fill="rgb(234,176,4)" fg:x="6219" fg:w="5"/><text x="92.6343%" y="543.50"></text></g><g><title>_int_realloc (115 samples, 1.71%)</title><rect x="90.9104%" y="565" width="1.7108%" height="15" fill="rgb(230,133,28)" fg:x="6111" fg:w="115"/><text x="91.0276%" y="575.50">_int..</text></g><g><title>memcpy@@GLIBC_2.14@plt (2 samples, 0.03%)</title><rect x="92.5915%" y="549" width="0.0298%" height="15" fill="rgb(211,137,40)" fg:x="6224" fg:w="2"/><text x="92.7087%" y="559.50"></text></g><g><title>arena_for_chunk (7 samples, 0.10%)</title><rect x="92.6212%" y="565" width="0.1041%" height="15" fill="rgb(254,35,13)" fg:x="6226" fg:w="7"/><text x="92.7384%" y="575.50"></text></g><g><title>__GI___libc_realloc (141 samples, 2.10%)</title><rect x="90.6873%" y="581" width="2.0976%" height="15" fill="rgb(225,49,51)" fg:x="6096" fg:w="141"/><text x="90.8045%" y="591.50">__GI_..</text></g><g><title>checked_request2size (4 samples, 0.06%)</title><rect x="92.7254%" y="565" width="0.0595%" height="15" fill="rgb(251,10,15)" fg:x="6233" fg:w="4"/><text x="92.8426%" y="575.50"></text></g><g><title>__rdl_realloc (2 samples, 0.03%)</title><rect x="92.7849%" y="581" width="0.0298%" height="15" fill="rgb(228,207,15)" fg:x="6237" fg:w="2"/><text x="92.9021%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (145 samples, 2.16%)</title><rect x="90.6873%" y="629" width="2.1571%" height="15" fill="rgb(241,99,19)" fg:x="6096" fg:w="145"/><text x="90.8045%" y="639.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::grow_impl (145 samples, 2.16%)</title><rect x="90.6873%" y="613" width="2.1571%" height="15" fill="rgb(207,104,49)" fg:x="6096" fg:w="145"/><text x="90.8045%" y="623.50">alloc..</text></g><g><title>alloc::alloc::realloc (145 samples, 2.16%)</title><rect x="90.6873%" y="597" width="2.1571%" height="15" fill="rgb(234,99,18)" fg:x="6096" fg:w="145"/><text x="90.8045%" y="607.50">alloc..</text></g><g><title>__rust_realloc (2 samples, 0.03%)</title><rect x="92.8146%" y="581" width="0.0298%" height="15" fill="rgb(213,191,49)" fg:x="6239" fg:w="2"/><text x="92.9318%" y="591.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.16836612410970210555 (2 samples, 0.03%)</title><rect x="92.8444%" y="629" width="0.0298%" height="15" fill="rgb(210,226,19)" fg:x="6241" fg:w="2"/><text x="92.9616%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 samples, 2.31%)</title><rect x="90.5980%" y="645" width="2.3059%" height="15" fill="rgb(229,97,18)" fg:x="6090" fg:w="155"/><text x="90.7152%" y="655.50">alloc:..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.03%)</title><rect x="92.8741%" y="629" width="0.0298%" height="15" fill="rgb(211,167,15)" fg:x="6243" fg:w="2"/><text x="92.9913%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="92.9039%" y="645" width="0.0149%" height="15" fill="rgb(210,169,34)" fg:x="6245" fg:w="1"/><text x="93.0211%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="92.9039%" y="629" width="0.0149%" height="15" fill="rgb(241,121,31)" fg:x="6245" fg:w="1"/><text x="93.0211%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (178 samples, 2.65%)</title><rect x="90.3303%" y="709" width="2.6480%" height="15" fill="rgb(232,40,11)" fg:x="6072" fg:w="178"/><text x="90.4474%" y="719.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (178 samples, 2.65%)</title><rect x="90.3303%" y="693" width="2.6480%" height="15" fill="rgb(205,86,26)" fg:x="6072" fg:w="178"/><text x="90.4474%" y="703.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 samples, 2.63%)</title><rect x="90.3451%" y="677" width="2.6331%" height="15" fill="rgb(231,126,28)" fg:x="6073" fg:w="177"/><text x="90.4623%" y="687.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (177 samples, 2.63%)</title><rect x="90.3451%" y="661" width="2.6331%" height="15" fill="rgb(219,221,18)" fg:x="6073" fg:w="177"/><text x="90.4623%" y="671.50">alloc::..</text></g><g><title>core::cmp::max (4 samples, 0.06%)</title><rect x="92.9188%" y="645" width="0.0595%" height="15" fill="rgb(211,40,0)" fg:x="6246" fg:w="4"/><text x="93.0360%" y="655.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.06%)</title><rect x="92.9188%" y="629" width="0.0595%" height="15" fill="rgb(239,85,43)" fg:x="6246" fg:w="4"/><text x="93.0360%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="92.9188%" y="613" width="0.0595%" height="15" fill="rgb(231,55,21)" fg:x="6246" fg:w="4"/><text x="93.0360%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (9 samples, 0.13%)</title><rect x="92.9783%" y="709" width="0.1339%" height="15" fill="rgb(225,184,43)" fg:x="6250" fg:w="9"/><text x="93.0955%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="93.1122%" y="661" width="0.0149%" height="15" fill="rgb(251,158,41)" fg:x="6259" fg:w="1"/><text x="93.2294%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.04%)</title><rect x="93.1122%" y="709" width="0.0446%" height="15" fill="rgb(234,159,37)" fg:x="6259" fg:w="3"/><text x="93.2294%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.04%)</title><rect x="93.1122%" y="693" width="0.0446%" height="15" fill="rgb(216,204,22)" fg:x="6259" fg:w="3"/><text x="93.2294%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="93.1122%" y="677" width="0.0446%" height="15" fill="rgb(214,17,3)" fg:x="6259" fg:w="3"/><text x="93.2294%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="661" width="0.0298%" height="15" fill="rgb(212,111,17)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="645" width="0.0298%" height="15" fill="rgb(221,157,24)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="629" width="0.0298%" height="15" fill="rgb(252,16,13)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="613" width="0.0298%" height="15" fill="rgb(221,62,2)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="597" width="0.0298%" height="15" fill="rgb(247,87,22)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="581" width="0.0298%" height="15" fill="rgb(215,73,9)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="565" width="0.0298%" height="15" fill="rgb(207,175,33)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="93.1270%" y="549" width="0.0298%" height="15" fill="rgb(243,129,54)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.03%)</title><rect x="93.1270%" y="533" width="0.0298%" height="15" fill="rgb(227,119,45)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="93.1270%" y="517" width="0.0298%" height="15" fill="rgb(205,109,36)" fg:x="6260" fg:w="2"/><text x="93.2442%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (303 samples, 4.51%)</title><rect x="88.9914%" y="741" width="4.5076%" height="15" fill="rgb(205,6,39)" fg:x="5982" fg:w="303"/><text x="89.1086%" y="751.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (294 samples, 4.37%)</title><rect x="89.1253%" y="725" width="4.3737%" height="15" fill="rgb(221,32,16)" fg:x="5991" fg:w="294"/><text x="89.2424%" y="735.50">alloc::vec::V..</text></g><g><title>core::ptr::write (23 samples, 0.34%)</title><rect x="93.1568%" y="709" width="0.3422%" height="15" fill="rgb(228,144,50)" fg:x="6262" fg:w="23"/><text x="93.2740%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="93.5287%" y="565" width="0.0149%" height="15" fill="rgb(229,201,53)" fg:x="6287" fg:w="1"/><text x="93.6459%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="93.5585%" y="517" width="0.0446%" height="15" fill="rgb(249,153,27)" fg:x="6289" fg:w="3"/><text x="93.6757%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.12%)</title><rect x="93.4990%" y="725" width="0.1190%" height="15" fill="rgb(227,106,25)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (8 samples, 0.12%)</title><rect x="93.4990%" y="709" width="0.1190%" height="15" fill="rgb(230,65,29)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="719.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (8 samples, 0.12%)</title><rect x="93.4990%" y="693" width="0.1190%" height="15" fill="rgb(221,57,46)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (8 samples, 0.12%)</title><rect x="93.4990%" y="677" width="0.1190%" height="15" fill="rgb(229,161,17)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.12%)</title><rect x="93.4990%" y="661" width="0.1190%" height="15" fill="rgb(222,213,11)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.12%)</title><rect x="93.4990%" y="645" width="0.1190%" height="15" fill="rgb(235,35,13)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.12%)</title><rect x="93.4990%" y="629" width="0.1190%" height="15" fill="rgb(233,158,34)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.12%)</title><rect x="93.4990%" y="613" width="0.1190%" height="15" fill="rgb(215,151,48)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.12%)</title><rect x="93.4990%" y="597" width="0.1190%" height="15" fill="rgb(229,84,14)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (8 samples, 0.12%)</title><rect x="93.4990%" y="581" width="0.1190%" height="15" fill="rgb(229,68,14)" fg:x="6285" fg:w="8"/><text x="93.6161%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.07%)</title><rect x="93.5436%" y="565" width="0.0744%" height="15" fill="rgb(243,106,26)" fg:x="6288" fg:w="5"/><text x="93.6608%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.06%)</title><rect x="93.5585%" y="549" width="0.0595%" height="15" fill="rgb(206,45,38)" fg:x="6289" fg:w="4"/><text x="93.6757%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.06%)</title><rect x="93.5585%" y="533" width="0.0595%" height="15" fill="rgb(226,6,15)" fg:x="6289" fg:w="4"/><text x="93.6757%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="93.6031%" y="517" width="0.0149%" height="15" fill="rgb(232,22,54)" fg:x="6292" fg:w="1"/><text x="93.7203%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.15%)</title><rect x="93.4990%" y="741" width="0.1488%" height="15" fill="rgb(229,222,32)" fg:x="6285" fg:w="10"/><text x="93.6161%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.03%)</title><rect x="93.6180%" y="725" width="0.0298%" height="15" fill="rgb(228,62,29)" fg:x="6293" fg:w="2"/><text x="93.7352%" y="735.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14 samples, 0.21%)</title><rect x="93.6477%" y="741" width="0.2083%" height="15" fill="rgb(251,103,34)" fg:x="6295" fg:w="14"/><text x="93.7649%" y="751.50"></text></g><g><title>checked_request2size (5 samples, 0.07%)</title><rect x="94.0791%" y="613" width="0.0744%" height="15" fill="rgb(233,12,30)" fg:x="6324" fg:w="5"/><text x="94.1963%" y="623.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.30%)</title><rect x="93.9304%" y="629" width="0.2975%" height="15" fill="rgb(238,52,0)" fg:x="6314" fg:w="20"/><text x="94.0476%" y="639.50"></text></g><g><title>tcache_get (5 samples, 0.07%)</title><rect x="94.1535%" y="613" width="0.0744%" height="15" fill="rgb(223,98,5)" fg:x="6329" fg:w="5"/><text x="94.2707%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.43%)</title><rect x="93.8560%" y="741" width="0.4314%" height="15" fill="rgb(228,75,37)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.43%)</title><rect x="93.8560%" y="725" width="0.4314%" height="15" fill="rgb(205,115,49)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.43%)</title><rect x="93.8560%" y="709" width="0.4314%" height="15" fill="rgb(250,154,43)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (29 samples, 0.43%)</title><rect x="93.8560%" y="693" width="0.4314%" height="15" fill="rgb(226,43,29)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.43%)</title><rect x="93.8560%" y="677" width="0.4314%" height="15" fill="rgb(249,228,39)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.43%)</title><rect x="93.8560%" y="661" width="0.4314%" height="15" fill="rgb(216,79,43)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="671.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.43%)</title><rect x="93.8560%" y="645" width="0.4314%" height="15" fill="rgb(228,95,12)" fg:x="6309" fg:w="29"/><text x="93.9732%" y="655.50"></text></g><g><title>__rdl_alloc (4 samples, 0.06%)</title><rect x="94.2279%" y="629" width="0.0595%" height="15" fill="rgb(249,221,15)" fg:x="6334" fg:w="4"/><text x="94.3451%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (379 samples, 5.64%)</title><rect x="88.6641%" y="805" width="5.6382%" height="15" fill="rgb(233,34,13)" fg:x="5960" fg:w="379"/><text x="88.7813%" y="815.50">core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (379 samples, 5.64%)</title><rect x="88.6641%" y="789" width="5.6382%" height="15" fill="rgb(214,103,39)" fg:x="5960" fg:w="379"/><text x="88.7813%" y="799.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (379 samples, 5.64%)</title><rect x="88.6641%" y="773" width="5.6382%" height="15" fill="rgb(251,126,39)" fg:x="5960" fg:w="379"/><text x="88.7813%" y="783.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (365 samples, 5.43%)</title><rect x="88.8724%" y="757" width="5.4299%" height="15" fill="rgb(214,216,36)" fg:x="5974" fg:w="365"/><text x="88.9895%" y="767.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="94.2874%" y="741" width="0.0149%" height="15" fill="rgb(220,221,8)" fg:x="6338" fg:w="1"/><text x="94.4046%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (4 samples, 0.06%)</title><rect x="94.3023%" y="805" width="0.0595%" height="15" fill="rgb(240,216,3)" fg:x="6339" fg:w="4"/><text x="94.4195%" y="815.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (4 samples, 0.06%)</title><rect x="94.3023%" y="789" width="0.0595%" height="15" fill="rgb(232,218,17)" fg:x="6339" fg:w="4"/><text x="94.4195%" y="799.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (4 samples, 0.06%)</title><rect x="94.3023%" y="773" width="0.0595%" height="15" fill="rgb(229,163,45)" fg:x="6339" fg:w="4"/><text x="94.4195%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (4 samples, 0.06%)</title><rect x="94.3023%" y="757" width="0.0595%" height="15" fill="rgb(231,110,42)" fg:x="6339" fg:w="4"/><text x="94.4195%" y="767.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (4 samples, 0.06%)</title><rect x="94.3023%" y="741" width="0.0595%" height="15" fill="rgb(208,170,48)" fg:x="6339" fg:w="4"/><text x="94.4195%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (3 samples, 0.04%)</title><rect x="94.3618%" y="805" width="0.0446%" height="15" fill="rgb(239,116,25)" fg:x="6343" fg:w="3"/><text x="94.4790%" y="815.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (3 samples, 0.04%)</title><rect x="94.3618%" y="789" width="0.0446%" height="15" fill="rgb(219,200,50)" fg:x="6343" fg:w="3"/><text x="94.4790%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1 samples, 0.01%)</title><rect x="94.4064%" y="805" width="0.0149%" height="15" fill="rgb(245,200,0)" fg:x="6346" fg:w="1"/><text x="94.5236%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3 samples, 0.04%)</title><rect x="94.4213%" y="805" width="0.0446%" height="15" fill="rgb(245,119,33)" fg:x="6347" fg:w="3"/><text x="94.5385%" y="815.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (3 samples, 0.04%)</title><rect x="94.4213%" y="789" width="0.0446%" height="15" fill="rgb(231,125,12)" fg:x="6347" fg:w="3"/><text x="94.5385%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="94.4213%" y="773" width="0.0446%" height="15" fill="rgb(216,96,41)" fg:x="6347" fg:w="3"/><text x="94.5385%" y="783.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (3 samples, 0.04%)</title><rect x="94.4213%" y="757" width="0.0446%" height="15" fill="rgb(248,43,45)" fg:x="6347" fg:w="3"/><text x="94.5385%" y="767.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (3 samples, 0.04%)</title><rect x="94.4213%" y="741" width="0.0446%" height="15" fill="rgb(217,222,7)" fg:x="6347" fg:w="3"/><text x="94.5385%" y="751.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (3 samples, 0.04%)</title><rect x="94.4659%" y="773" width="0.0446%" height="15" fill="rgb(233,28,6)" fg:x="6350" fg:w="3"/><text x="94.5831%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.16%)</title><rect x="94.4659%" y="805" width="0.1636%" height="15" fill="rgb(231,218,15)" fg:x="6350" fg:w="11"/><text x="94.5831%" y="815.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (11 samples, 0.16%)</title><rect x="94.4659%" y="789" width="0.1636%" height="15" fill="rgb(226,171,48)" fg:x="6350" fg:w="11"/><text x="94.5831%" y="799.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (8 samples, 0.12%)</title><rect x="94.5106%" y="773" width="0.1190%" height="15" fill="rgb(235,201,9)" fg:x="6353" fg:w="8"/><text x="94.6277%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.09%)</title><rect x="94.5403%" y="757" width="0.0893%" height="15" fill="rgb(217,80,15)" fg:x="6355" fg:w="6"/><text x="94.6575%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.09%)</title><rect x="94.5403%" y="741" width="0.0893%" height="15" fill="rgb(219,152,8)" fg:x="6355" fg:w="6"/><text x="94.6575%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.09%)</title><rect x="94.5403%" y="725" width="0.0893%" height="15" fill="rgb(243,107,38)" fg:x="6355" fg:w="6"/><text x="94.6575%" y="735.50"></text></g><g><title>_int_free (69 samples, 1.03%)</title><rect x="94.8974%" y="709" width="1.0265%" height="15" fill="rgb(231,17,5)" fg:x="6379" fg:w="69"/><text x="95.0145%" y="719.50">_..</text></g><g><title>tcache_put (9 samples, 0.13%)</title><rect x="95.7899%" y="693" width="0.1339%" height="15" fill="rgb(209,25,54)" fg:x="6439" fg:w="9"/><text x="95.9071%" y="703.50"></text></g><g><title>__GI___libc_free (88 samples, 1.31%)</title><rect x="94.6445%" y="725" width="1.3091%" height="15" fill="rgb(219,0,2)" fg:x="6362" fg:w="88"/><text x="94.7616%" y="735.50">__..</text></g><g><title>arena_for_chunk (2 samples, 0.03%)</title><rect x="95.9238%" y="709" width="0.0298%" height="15" fill="rgb(246,9,5)" fg:x="6448" fg:w="2"/><text x="96.0410%" y="719.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.04%)</title><rect x="95.9536%" y="725" width="0.0446%" height="15" fill="rgb(226,159,4)" fg:x="6450" fg:w="3"/><text x="96.0708%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (94 samples, 1.40%)</title><rect x="94.6445%" y="757" width="1.3984%" height="15" fill="rgb(219,175,34)" fg:x="6362" fg:w="94"/><text x="94.7616%" y="767.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (94 samples, 1.40%)</title><rect x="94.6445%" y="741" width="1.3984%" height="15" fill="rgb(236,10,46)" fg:x="6362" fg:w="94"/><text x="94.7616%" y="751.50">all..</text></g><g><title>__rust_dealloc (3 samples, 0.04%)</title><rect x="95.9982%" y="725" width="0.0446%" height="15" fill="rgb(240,211,16)" fg:x="6453" fg:w="3"/><text x="96.1154%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (96 samples, 1.43%)</title><rect x="94.6296%" y="805" width="1.4281%" height="15" fill="rgb(205,3,43)" fg:x="6361" fg:w="96"/><text x="94.7468%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (96 samples, 1.43%)</title><rect x="94.6296%" y="789" width="1.4281%" height="15" fill="rgb(245,7,22)" fg:x="6361" fg:w="96"/><text x="94.7468%" y="799.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 1.43%)</title><rect x="94.6296%" y="773" width="1.4281%" height="15" fill="rgb(239,132,32)" fg:x="6361" fg:w="96"/><text x="94.7468%" y="783.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="96.0428%" y="757" width="0.0149%" height="15" fill="rgb(228,202,34)" fg:x="6456" fg:w="1"/><text x="96.1600%" y="767.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (616 samples, 9.16%)</title><rect x="87.0723%" y="821" width="9.1639%" height="15" fill="rgb(254,200,22)" fg:x="5853" fg:w="616"/><text x="87.1895%" y="831.50">fringe_vs_astar::structures::gr..</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (12 samples, 0.18%)</title><rect x="96.0577%" y="805" width="0.1785%" height="15" fill="rgb(219,10,39)" fg:x="6457" fg:w="12"/><text x="96.1749%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.06%)</title><rect x="96.1767%" y="789" width="0.0595%" height="15" fill="rgb(226,210,39)" fg:x="6465" fg:w="4"/><text x="96.2939%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.06%)</title><rect x="96.1767%" y="773" width="0.0595%" height="15" fill="rgb(208,219,16)" fg:x="6465" fg:w="4"/><text x="96.2939%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.06%)</title><rect x="96.1767%" y="757" width="0.0595%" height="15" fill="rgb(216,158,51)" fg:x="6465" fg:w="4"/><text x="96.2939%" y="767.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (13 samples, 0.19%)</title><rect x="96.2362%" y="821" width="0.1934%" height="15" fill="rgb(233,14,44)" fg:x="6469" fg:w="13"/><text x="96.3534%" y="831.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,384 samples, 20.59%)</title><rect x="75.9744%" y="853" width="20.5891%" height="15" fill="rgb(237,97,39)" fg:x="5107" fg:w="1384"/><text x="76.0916%" y="863.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,384 samples, 20.59%)</title><rect x="75.9744%" y="837" width="20.5891%" height="15" fill="rgb(218,198,43)" fg:x="5107" fg:w="1384"/><text x="76.0916%" y="847.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (9 samples, 0.13%)</title><rect x="96.4296%" y="821" width="0.1339%" height="15" fill="rgb(231,104,20)" fg:x="6482" fg:w="9"/><text x="96.5468%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.13%)</title><rect x="96.4296%" y="805" width="0.1339%" height="15" fill="rgb(254,36,13)" fg:x="6482" fg:w="9"/><text x="96.5468%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.13%)</title><rect x="96.4296%" y="789" width="0.1339%" height="15" fill="rgb(248,14,50)" fg:x="6482" fg:w="9"/><text x="96.5468%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.13%)</title><rect x="96.4296%" y="773" width="0.1339%" height="15" fill="rgb(217,107,29)" fg:x="6482" fg:w="9"/><text x="96.5468%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.13%)</title><rect x="96.6230%" y="709" width="0.1339%" height="15" fill="rgb(251,169,33)" fg:x="6495" fg:w="9"/><text x="96.7402%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="96.7569%" y="677" width="0.0149%" height="15" fill="rgb(217,108,32)" fg:x="6504" fg:w="1"/><text x="96.8741%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="96.7569%" y="661" width="0.0149%" height="15" fill="rgb(219,66,42)" fg:x="6504" fg:w="1"/><text x="96.8741%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="96.7569%" y="645" width="0.0149%" height="15" fill="rgb(206,180,7)" fg:x="6504" fg:w="1"/><text x="96.8741%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (10 samples, 0.15%)</title><rect x="96.7718%" y="677" width="0.1488%" height="15" fill="rgb(208,226,31)" fg:x="6505" fg:w="10"/><text x="96.8890%" y="687.50"></text></g><g><title>_compound_head (1 samples, 0.01%)</title><rect x="96.9354%" y="245" width="0.0149%" height="15" fill="rgb(218,26,49)" fg:x="6516" fg:w="1"/><text x="97.0526%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.34%)</title><rect x="96.6230%" y="725" width="0.3422%" height="15" fill="rgb(233,197,48)" fg:x="6495" fg:w="23"/><text x="96.7402%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.21%)</title><rect x="96.7569%" y="709" width="0.2083%" height="15" fill="rgb(252,181,51)" fg:x="6504" fg:w="14"/><text x="96.8741%" y="719.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (14 samples, 0.21%)</title><rect x="96.7569%" y="693" width="0.2083%" height="15" fill="rgb(253,90,19)" fg:x="6504" fg:w="14"/><text x="96.8741%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="96.9206%" y="677" width="0.0446%" height="15" fill="rgb(215,171,30)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (3 samples, 0.04%)</title><rect x="96.9206%" y="661" width="0.0446%" height="15" fill="rgb(214,222,9)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="96.9206%" y="645" width="0.0446%" height="15" fill="rgb(223,3,22)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (3 samples, 0.04%)</title><rect x="96.9206%" y="629" width="0.0446%" height="15" fill="rgb(225,196,46)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="639.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="96.9206%" y="613" width="0.0446%" height="15" fill="rgb(209,110,37)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3 samples, 0.04%)</title><rect x="96.9206%" y="597" width="0.0446%" height="15" fill="rgb(249,89,12)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="96.9206%" y="581" width="0.0446%" height="15" fill="rgb(226,27,33)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="96.9206%" y="565" width="0.0446%" height="15" fill="rgb(213,82,22)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="96.9206%" y="549" width="0.0446%" height="15" fill="rgb(248,140,0)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="96.9206%" y="533" width="0.0446%" height="15" fill="rgb(228,106,3)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="543.50"></text></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="96.9206%" y="517" width="0.0446%" height="15" fill="rgb(209,23,37)" fg:x="6515" fg:w="3"/><text x="97.0377%" y="527.50"></text></g><g><title>systrim (2 samples, 0.03%)</title><rect x="96.9354%" y="501" width="0.0298%" height="15" fill="rgb(241,93,50)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="511.50"></text></g><g><title>__glibc_morecore (2 samples, 0.03%)</title><rect x="96.9354%" y="485" width="0.0298%" height="15" fill="rgb(253,46,43)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="495.50"></text></g><g><title>__GI___sbrk (2 samples, 0.03%)</title><rect x="96.9354%" y="469" width="0.0298%" height="15" fill="rgb(226,206,43)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="479.50"></text></g><g><title>__GI___sbrk (2 samples, 0.03%)</title><rect x="96.9354%" y="453" width="0.0298%" height="15" fill="rgb(217,54,7)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="463.50"></text></g><g><title>__brk (2 samples, 0.03%)</title><rect x="96.9354%" y="437" width="0.0298%" height="15" fill="rgb(223,5,52)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="96.9354%" y="421" width="0.0298%" height="15" fill="rgb(206,52,46)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="431.50"></text></g><g><title>do_syscall_64 (2 samples, 0.03%)</title><rect x="96.9354%" y="405" width="0.0298%" height="15" fill="rgb(253,136,11)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="415.50"></text></g><g><title>x64_sys_call (2 samples, 0.03%)</title><rect x="96.9354%" y="389" width="0.0298%" height="15" fill="rgb(208,106,33)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="399.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.03%)</title><rect x="96.9354%" y="373" width="0.0298%" height="15" fill="rgb(206,54,4)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="383.50"></text></g><g><title>__do_sys_brk (2 samples, 0.03%)</title><rect x="96.9354%" y="357" width="0.0298%" height="15" fill="rgb(213,3,15)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="367.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.03%)</title><rect x="96.9354%" y="341" width="0.0298%" height="15" fill="rgb(252,211,39)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="351.50"></text></g><g><title>unmap_region (2 samples, 0.03%)</title><rect x="96.9354%" y="325" width="0.0298%" height="15" fill="rgb(223,6,36)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="335.50"></text></g><g><title>unmap_vmas (2 samples, 0.03%)</title><rect x="96.9354%" y="309" width="0.0298%" height="15" fill="rgb(252,169,45)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="319.50"></text></g><g><title>unmap_single_vma (2 samples, 0.03%)</title><rect x="96.9354%" y="293" width="0.0298%" height="15" fill="rgb(212,48,26)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="303.50"></text></g><g><title>unmap_page_range (2 samples, 0.03%)</title><rect x="96.9354%" y="277" width="0.0298%" height="15" fill="rgb(251,102,48)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="287.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.03%)</title><rect x="96.9354%" y="261" width="0.0298%" height="15" fill="rgb(243,208,16)" fg:x="6516" fg:w="2"/><text x="97.0526%" y="271.50"></text></g><g><title>zap_pte_range (1 samples, 0.01%)</title><rect x="96.9503%" y="245" width="0.0149%" height="15" fill="rgb(219,96,24)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="255.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.01%)</title><rect x="96.9503%" y="229" width="0.0149%" height="15" fill="rgb(219,33,29)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="239.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.01%)</title><rect x="96.9503%" y="213" width="0.0149%" height="15" fill="rgb(223,176,5)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="223.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.01%)</title><rect x="96.9503%" y="197" width="0.0149%" height="15" fill="rgb(228,140,14)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="207.50"></text></g><g><title>release_pages (1 samples, 0.01%)</title><rect x="96.9503%" y="181" width="0.0149%" height="15" fill="rgb(217,179,31)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="191.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.01%)</title><rect x="96.9503%" y="165" width="0.0149%" height="15" fill="rgb(230,9,30)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="175.50"></text></g><g><title>uncharge_folio (1 samples, 0.01%)</title><rect x="96.9503%" y="149" width="0.0149%" height="15" fill="rgb(230,136,20)" fg:x="6517" fg:w="1"/><text x="97.0675%" y="159.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="97.0396%" y="549" width="0.0149%" height="15" fill="rgb(215,210,22)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="559.50"></text></g><g><title>exc_page_fault (1 samples, 0.01%)</title><rect x="97.0396%" y="533" width="0.0149%" height="15" fill="rgb(218,43,5)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="543.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="97.0396%" y="517" width="0.0149%" height="15" fill="rgb(216,11,5)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="97.0396%" y="501" width="0.0149%" height="15" fill="rgb(209,82,29)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="97.0396%" y="485" width="0.0149%" height="15" fill="rgb(244,115,12)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="495.50"></text></g><g><title>handle_pte_fault (1 samples, 0.01%)</title><rect x="97.0396%" y="469" width="0.0149%" height="15" fill="rgb(222,82,18)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="97.0396%" y="453" width="0.0149%" height="15" fill="rgb(249,227,8)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="463.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.01%)</title><rect x="97.0396%" y="437" width="0.0149%" height="15" fill="rgb(253,141,45)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="447.50"></text></g><g><title>charge_memcg (1 samples, 0.01%)</title><rect x="97.0396%" y="421" width="0.0149%" height="15" fill="rgb(234,184,4)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="431.50"></text></g><g><title>try_charge_memcg (1 samples, 0.01%)</title><rect x="97.0396%" y="405" width="0.0149%" height="15" fill="rgb(218,194,23)" fg:x="6523" fg:w="1"/><text x="97.1568%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.10%)</title><rect x="96.9652%" y="725" width="0.1041%" height="15" fill="rgb(235,66,41)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.10%)</title><rect x="96.9652%" y="709" width="0.1041%" height="15" fill="rgb(245,217,1)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.10%)</title><rect x="96.9652%" y="693" width="0.1041%" height="15" fill="rgb(229,91,1)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.10%)</title><rect x="96.9652%" y="677" width="0.1041%" height="15" fill="rgb(207,101,30)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.10%)</title><rect x="96.9652%" y="661" width="0.1041%" height="15" fill="rgb(223,82,49)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.10%)</title><rect x="96.9652%" y="645" width="0.1041%" height="15" fill="rgb(218,167,17)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.10%)</title><rect x="96.9652%" y="629" width="0.1041%" height="15" fill="rgb(208,103,14)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="639.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.10%)</title><rect x="96.9652%" y="613" width="0.1041%" height="15" fill="rgb(238,20,8)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="623.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.10%)</title><rect x="96.9652%" y="597" width="0.1041%" height="15" fill="rgb(218,80,54)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="607.50"></text></g><g><title>_int_realloc (7 samples, 0.10%)</title><rect x="96.9652%" y="581" width="0.1041%" height="15" fill="rgb(240,144,17)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="591.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.10%)</title><rect x="96.9652%" y="565" width="0.1041%" height="15" fill="rgb(245,27,50)" fg:x="6518" fg:w="7"/><text x="97.0824%" y="575.50"></text></g><g><title>sync_regs (1 samples, 0.01%)</title><rect x="97.0544%" y="549" width="0.0149%" height="15" fill="rgb(251,51,7)" fg:x="6524" fg:w="1"/><text x="97.1716%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="97.0991%" y="709" width="0.0149%" height="15" fill="rgb(245,217,29)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="719.50"></text></g><g><title>exc_page_fault (1 samples, 0.01%)</title><rect x="97.0991%" y="693" width="0.0149%" height="15" fill="rgb(221,176,29)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="703.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="97.0991%" y="677" width="0.0149%" height="15" fill="rgb(212,180,24)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="687.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="97.0991%" y="661" width="0.0149%" height="15" fill="rgb(254,24,2)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="671.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="97.0991%" y="645" width="0.0149%" height="15" fill="rgb(230,100,2)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="655.50"></text></g><g><title>handle_pte_fault (1 samples, 0.01%)</title><rect x="97.0991%" y="629" width="0.0149%" height="15" fill="rgb(219,142,25)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="639.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="97.0991%" y="613" width="0.0149%" height="15" fill="rgb(240,73,43)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="623.50"></text></g><g><title>inc_mm_counter (1 samples, 0.01%)</title><rect x="97.0991%" y="597" width="0.0149%" height="15" fill="rgb(214,114,15)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="607.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.01%)</title><rect x="97.0991%" y="581" width="0.0149%" height="15" fill="rgb(207,130,4)" fg:x="6527" fg:w="1"/><text x="97.2163%" y="591.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (38 samples, 0.57%)</title><rect x="96.5635%" y="837" width="0.5653%" height="15" fill="rgb(221,25,40)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.57%)</title><rect x="96.5635%" y="821" width="0.5653%" height="15" fill="rgb(241,184,7)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.57%)</title><rect x="96.5635%" y="805" width="0.5653%" height="15" fill="rgb(235,159,4)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.57%)</title><rect x="96.5635%" y="789" width="0.5653%" height="15" fill="rgb(214,87,48)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.57%)</title><rect x="96.5635%" y="773" width="0.5653%" height="15" fill="rgb(246,198,24)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38 samples, 0.57%)</title><rect x="96.5635%" y="757" width="0.5653%" height="15" fill="rgb(209,66,40)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (38 samples, 0.57%)</title><rect x="96.5635%" y="741" width="0.5653%" height="15" fill="rgb(233,147,39)" fg:x="6491" fg:w="38"/><text x="96.6807%" y="751.50"></text></g><g><title>core::ptr::write (4 samples, 0.06%)</title><rect x="97.0693%" y="725" width="0.0595%" height="15" fill="rgb(231,145,52)" fg:x="6525" fg:w="4"/><text x="97.1865%" y="735.50"></text></g><g><title>sync_regs (1 samples, 0.01%)</title><rect x="97.1140%" y="709" width="0.0149%" height="15" fill="rgb(206,20,26)" fg:x="6528" fg:w="1"/><text x="97.2311%" y="719.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.01%)</title><rect x="97.1288%" y="629" width="0.0149%" height="15" fill="rgb(238,220,4)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="639.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.01%)</title><rect x="97.1288%" y="613" width="0.0149%" height="15" fill="rgb(252,195,42)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="623.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.01%)</title><rect x="97.1288%" y="597" width="0.0149%" height="15" fill="rgb(209,10,6)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.01%)</title><rect x="97.1288%" y="581" width="0.0149%" height="15" fill="rgb(229,3,52)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="591.50"></text></g><g><title>__GI___libc_read (1 samples, 0.01%)</title><rect x="97.1288%" y="565" width="0.0149%" height="15" fill="rgb(253,49,37)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="97.1288%" y="549" width="0.0149%" height="15" fill="rgb(240,103,49)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="97.1288%" y="533" width="0.0149%" height="15" fill="rgb(250,182,30)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="543.50"></text></g><g><title>x64_sys_call (1 samples, 0.01%)</title><rect x="97.1288%" y="517" width="0.0149%" height="15" fill="rgb(248,8,30)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="527.50"></text></g><g><title>__x64_sys_read (1 samples, 0.01%)</title><rect x="97.1288%" y="501" width="0.0149%" height="15" fill="rgb(237,120,30)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="511.50"></text></g><g><title>ksys_read (1 samples, 0.01%)</title><rect x="97.1288%" y="485" width="0.0149%" height="15" fill="rgb(221,146,34)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="495.50"></text></g><g><title>vfs_read (1 samples, 0.01%)</title><rect x="97.1288%" y="469" width="0.0149%" height="15" fill="rgb(242,55,13)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="479.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.01%)</title><rect x="97.1288%" y="453" width="0.0149%" height="15" fill="rgb(242,112,31)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="463.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.01%)</title><rect x="97.1288%" y="437" width="0.0149%" height="15" fill="rgb(249,192,27)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="447.50"></text></g><g><title>filemap_read (1 samples, 0.01%)</title><rect x="97.1288%" y="421" width="0.0149%" height="15" fill="rgb(208,204,44)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="431.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="97.1288%" y="405" width="0.0149%" height="15" fill="rgb(208,93,54)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="415.50"></text></g><g><title>_copy_to_iter (1 samples, 0.01%)</title><rect x="97.1288%" y="389" width="0.0149%" height="15" fill="rgb(242,1,31)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="399.50"></text></g><g><title>copyout (1 samples, 0.01%)</title><rect x="97.1288%" y="373" width="0.0149%" height="15" fill="rgb(241,83,25)" fg:x="6529" fg:w="1"/><text x="97.2460%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="97.1437%" y="629" width="0.0149%" height="15" fill="rgb(205,169,50)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="97.1437%" y="613" width="0.0149%" height="15" fill="rgb(239,186,37)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="97.1437%" y="597" width="0.0149%" height="15" fill="rgb(205,221,10)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="97.1437%" y="581" width="0.0149%" height="15" fill="rgb(218,196,15)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="97.1437%" y="565" width="0.0149%" height="15" fill="rgb(218,196,35)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="97.1437%" y="549" width="0.0149%" height="15" fill="rgb(233,63,24)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="97.1437%" y="533" width="0.0149%" height="15" fill="rgb(225,8,4)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="97.1437%" y="517" width="0.0149%" height="15" fill="rgb(234,105,35)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="97.1437%" y="501" width="0.0149%" height="15" fill="rgb(236,21,32)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="97.1437%" y="485" width="0.0149%" height="15" fill="rgb(228,109,6)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="97.1437%" y="469" width="0.0149%" height="15" fill="rgb(229,215,31)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="479.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="97.1437%" y="453" width="0.0149%" height="15" fill="rgb(221,52,54)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="463.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="97.1437%" y="437" width="0.0149%" height="15" fill="rgb(252,129,43)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="447.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="97.1437%" y="421" width="0.0149%" height="15" fill="rgb(248,183,27)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.01%)</title><rect x="97.1437%" y="405" width="0.0149%" height="15" fill="rgb(250,0,22)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="97.1437%" y="389" width="0.0149%" height="15" fill="rgb(213,166,10)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="97.1437%" y="373" width="0.0149%" height="15" fill="rgb(207,163,36)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="97.1437%" y="357" width="0.0149%" height="15" fill="rgb(208,122,22)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="367.50"></text></g><g><title>handle_pte_fault (1 samples, 0.01%)</title><rect x="97.1437%" y="341" width="0.0149%" height="15" fill="rgb(207,104,49)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="351.50"></text></g><g><title>do_anonymous_page (1 samples, 0.01%)</title><rect x="97.1437%" y="325" width="0.0149%" height="15" fill="rgb(248,211,50)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="335.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.01%)</title><rect x="97.1437%" y="309" width="0.0149%" height="15" fill="rgb(217,13,45)" fg:x="6530" fg:w="1"/><text x="97.2609%" y="319.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (3 samples, 0.04%)</title><rect x="97.1288%" y="837" width="0.0446%" height="15" fill="rgb(211,216,49)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="97.1288%" y="821" width="0.0446%" height="15" fill="rgb(221,58,53)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="97.1288%" y="805" width="0.0446%" height="15" fill="rgb(220,112,41)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="97.1288%" y="789" width="0.0446%" height="15" fill="rgb(236,38,28)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="97.1288%" y="773" width="0.0446%" height="15" fill="rgb(227,195,22)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="97.1288%" y="757" width="0.0446%" height="15" fill="rgb(214,55,33)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="97.1288%" y="741" width="0.0446%" height="15" fill="rgb(248,80,13)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="97.1288%" y="725" width="0.0446%" height="15" fill="rgb(238,52,6)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="735.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="97.1288%" y="709" width="0.0446%" height="15" fill="rgb(224,198,47)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="719.50"></text></g><g><title>std::io::BufRead::read_line (3 samples, 0.04%)</title><rect x="97.1288%" y="693" width="0.0446%" height="15" fill="rgb(233,171,20)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="703.50"></text></g><g><title>std::io::append_to_string (3 samples, 0.04%)</title><rect x="97.1288%" y="677" width="0.0446%" height="15" fill="rgb(241,30,25)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="687.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (3 samples, 0.04%)</title><rect x="97.1288%" y="661" width="0.0446%" height="15" fill="rgb(207,171,38)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="671.50"></text></g><g><title>std::io::read_until (3 samples, 0.04%)</title><rect x="97.1288%" y="645" width="0.0446%" height="15" fill="rgb(234,70,1)" fg:x="6529" fg:w="3"/><text x="97.2460%" y="655.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.01%)</title><rect x="97.1586%" y="629" width="0.0149%" height="15" fill="rgb(232,178,18)" fg:x="6531" fg:w="1"/><text x="97.2758%" y="639.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.01%)</title><rect x="97.1586%" y="613" width="0.0149%" height="15" fill="rgb(241,78,40)" fg:x="6531" fg:w="1"/><text x="97.2758%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.06%)</title><rect x="97.1883%" y="517" width="0.0595%" height="15" fill="rgb(222,35,25)" fg:x="6533" fg:w="4"/><text x="97.3055%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.19%)</title><rect x="97.1883%" y="549" width="0.1934%" height="15" fill="rgb(207,92,16)" fg:x="6533" fg:w="13"/><text x="97.3055%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.19%)</title><rect x="97.1883%" y="533" width="0.1934%" height="15" fill="rgb(216,59,51)" fg:x="6533" fg:w="13"/><text x="97.3055%" y="543.50"></text></g><g><title>core::str::validations::next_code_point (9 samples, 0.13%)</title><rect x="97.2478%" y="517" width="0.1339%" height="15" fill="rgb(213,80,28)" fg:x="6537" fg:w="9"/><text x="97.3650%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="97.3817%" y="485" width="0.0149%" height="15" fill="rgb(220,93,7)" fg:x="6546" fg:w="1"/><text x="97.4989%" y="495.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.03%)</title><rect x="97.4264%" y="261" width="0.0298%" height="15" fill="rgb(225,24,44)" fg:x="6549" fg:w="2"/><text x="97.5435%" y="271.50"></text></g><g><title>__mem_cgroup_charge (3 samples, 0.04%)</title><rect x="97.4264%" y="277" width="0.0446%" height="15" fill="rgb(243,74,40)" fg:x="6549" fg:w="3"/><text x="97.5435%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="97.4561%" y="261" width="0.0149%" height="15" fill="rgb(228,39,7)" fg:x="6551" fg:w="1"/><text x="97.5733%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.12%)</title><rect x="97.3817%" y="549" width="0.1190%" height="15" fill="rgb(227,79,8)" fg:x="6546" fg:w="8"/><text x="97.4989%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.12%)</title><rect x="97.3817%" y="533" width="0.1190%" height="15" fill="rgb(236,58,11)" fg:x="6546" fg:w="8"/><text x="97.4989%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.12%)</title><rect x="97.3817%" y="517" width="0.1190%" height="15" fill="rgb(249,63,35)" fg:x="6546" fg:w="8"/><text x="97.4989%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.12%)</title><rect x="97.3817%" y="501" width="0.1190%" height="15" fill="rgb(252,114,16)" fg:x="6546" fg:w="8"/><text x="97.4989%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.10%)</title><rect x="97.3966%" y="485" width="0.1041%" height="15" fill="rgb(254,151,24)" fg:x="6547" fg:w="7"/><text x="97.5138%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.10%)</title><rect x="97.3966%" y="469" width="0.1041%" height="15" fill="rgb(253,54,39)" fg:x="6547" fg:w="7"/><text x="97.5138%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.10%)</title><rect x="97.3966%" y="453" width="0.1041%" height="15" fill="rgb(243,25,45)" fg:x="6547" fg:w="7"/><text x="97.5138%" y="463.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.10%)</title><rect x="97.3966%" y="437" width="0.1041%" height="15" fill="rgb(234,134,9)" fg:x="6547" fg:w="7"/><text x="97.5138%" y="447.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.10%)</title><rect x="97.3966%" y="421" width="0.1041%" height="15" fill="rgb(227,166,31)" fg:x="6547" fg:w="7"/><text x="97.5138%" y="431.50"></text></g><g><title>_int_realloc (7 samples, 0.10%)</title><rect x="97.3966%" y="405" width="0.1041%" height="15" fill="rgb(245,143,41)" fg:x="6547" fg:w="7"/><text x="97.5138%" y="415.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.07%)</title><rect x="97.4264%" y="389" width="0.0744%" height="15" fill="rgb(238,181,32)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="399.50"></text></g><g><title>exc_page_fault (5 samples, 0.07%)</title><rect x="97.4264%" y="373" width="0.0744%" height="15" fill="rgb(224,113,18)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="383.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.07%)</title><rect x="97.4264%" y="357" width="0.0744%" height="15" fill="rgb(240,229,28)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="367.50"></text></g><g><title>handle_mm_fault (5 samples, 0.07%)</title><rect x="97.4264%" y="341" width="0.0744%" height="15" fill="rgb(250,185,3)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="351.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.07%)</title><rect x="97.4264%" y="325" width="0.0744%" height="15" fill="rgb(212,59,25)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="335.50"></text></g><g><title>handle_pte_fault (5 samples, 0.07%)</title><rect x="97.4264%" y="309" width="0.0744%" height="15" fill="rgb(221,87,20)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="319.50"></text></g><g><title>do_anonymous_page (5 samples, 0.07%)</title><rect x="97.4264%" y="293" width="0.0744%" height="15" fill="rgb(213,74,28)" fg:x="6549" fg:w="5"/><text x="97.5435%" y="303.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.03%)</title><rect x="97.4710%" y="277" width="0.0298%" height="15" fill="rgb(224,132,34)" fg:x="6552" fg:w="2"/><text x="97.5882%" y="287.50"></text></g><g><title>__folio_alloc (2 samples, 0.03%)</title><rect x="97.4710%" y="261" width="0.0298%" height="15" fill="rgb(222,101,24)" fg:x="6552" fg:w="2"/><text x="97.5882%" y="271.50"></text></g><g><title>__alloc_pages (2 samples, 0.03%)</title><rect x="97.4710%" y="245" width="0.0298%" height="15" fill="rgb(254,142,4)" fg:x="6552" fg:w="2"/><text x="97.5882%" y="255.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="97.4710%" y="229" width="0.0298%" height="15" fill="rgb(230,229,49)" fg:x="6552" fg:w="2"/><text x="97.5882%" y="239.50"></text></g><g><title>rmqueue (2 samples, 0.03%)</title><rect x="97.4710%" y="213" width="0.0298%" height="15" fill="rgb(238,70,47)" fg:x="6552" fg:w="2"/><text x="97.5882%" y="223.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.01%)</title><rect x="97.4859%" y="197" width="0.0149%" height="15" fill="rgb(231,160,17)" fg:x="6553" fg:w="1"/><text x="97.6031%" y="207.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.01%)</title><rect x="97.4859%" y="181" width="0.0149%" height="15" fill="rgb(218,68,53)" fg:x="6553" fg:w="1"/><text x="97.6031%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.36%)</title><rect x="97.1735%" y="821" width="0.3570%" height="15" fill="rgb(236,111,10)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.36%)</title><rect x="97.1735%" y="805" width="0.3570%" height="15" fill="rgb(224,34,41)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.36%)</title><rect x="97.1735%" y="789" width="0.3570%" height="15" fill="rgb(241,118,19)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.36%)</title><rect x="97.1735%" y="773" width="0.3570%" height="15" fill="rgb(238,129,25)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.36%)</title><rect x="97.1735%" y="757" width="0.3570%" height="15" fill="rgb(238,22,31)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (24 samples, 0.36%)</title><rect x="97.1735%" y="741" width="0.3570%" height="15" fill="rgb(222,174,48)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.36%)</title><rect x="97.1735%" y="725" width="0.3570%" height="15" fill="rgb(206,152,40)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.36%)</title><rect x="97.1735%" y="709" width="0.3570%" height="15" fill="rgb(218,99,54)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.36%)</title><rect x="97.1735%" y="693" width="0.3570%" height="15" fill="rgb(220,174,26)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (24 samples, 0.36%)</title><rect x="97.1735%" y="677" width="0.3570%" height="15" fill="rgb(245,116,9)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (24 samples, 0.36%)</title><rect x="97.1735%" y="661" width="0.3570%" height="15" fill="rgb(209,72,35)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.36%)</title><rect x="97.1735%" y="645" width="0.3570%" height="15" fill="rgb(226,126,21)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.36%)</title><rect x="97.1735%" y="629" width="0.3570%" height="15" fill="rgb(227,192,1)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.36%)</title><rect x="97.1735%" y="613" width="0.3570%" height="15" fill="rgb(237,180,29)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.36%)</title><rect x="97.1735%" y="597" width="0.3570%" height="15" fill="rgb(230,197,35)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.36%)</title><rect x="97.1735%" y="581" width="0.3570%" height="15" fill="rgb(246,193,31)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (24 samples, 0.36%)</title><rect x="97.1735%" y="565" width="0.3570%" height="15" fill="rgb(241,36,4)" fg:x="6532" fg:w="24"/><text x="97.2906%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.03%)</title><rect x="97.5007%" y="549" width="0.0298%" height="15" fill="rgb(241,130,17)" fg:x="6554" fg:w="2"/><text x="97.6179%" y="559.50"></text></g><g><title>_start (6,286 samples, 93.51%)</title><rect x="4.0315%" y="1013" width="93.5138%" height="15" fill="rgb(206,137,32)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="1023.50">_start</text></g><g><title>__libc_start_main_impl (6,286 samples, 93.51%)</title><rect x="4.0315%" y="997" width="93.5138%" height="15" fill="rgb(237,228,51)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="1007.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (6,286 samples, 93.51%)</title><rect x="4.0315%" y="981" width="93.5138%" height="15" fill="rgb(243,6,42)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="991.50">__libc_start_call_main</text></g><g><title>main (6,286 samples, 93.51%)</title><rect x="4.0315%" y="965" width="93.5138%" height="15" fill="rgb(251,74,28)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (6,286 samples, 93.51%)</title><rect x="4.0315%" y="949" width="93.5138%" height="15" fill="rgb(218,20,49)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (6,286 samples, 93.51%)</title><rect x="4.0315%" y="933" width="93.5138%" height="15" fill="rgb(238,28,14)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="943.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,286 samples, 93.51%)</title><rect x="4.0315%" y="917" width="93.5138%" height="15" fill="rgb(229,40,46)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (6,286 samples, 93.51%)</title><rect x="4.0315%" y="901" width="93.5138%" height="15" fill="rgb(244,195,20)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="911.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (6,286 samples, 93.51%)</title><rect x="4.0315%" y="885" width="93.5138%" height="15" fill="rgb(253,56,35)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="895.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (6,286 samples, 93.51%)</title><rect x="4.0315%" y="869" width="93.5138%" height="15" fill="rgb(210,149,44)" fg:x="271" fg:w="6286"/><text x="4.1487%" y="879.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (66 samples, 0.98%)</title><rect x="96.5635%" y="853" width="0.9819%" height="15" fill="rgb(240,135,12)" fg:x="6491" fg:w="66"/><text x="96.6807%" y="863.50">f..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map (25 samples, 0.37%)</title><rect x="97.1735%" y="837" width="0.3719%" height="15" fill="rgb(251,24,50)" fg:x="6532" fg:w="25"/><text x="97.2906%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.01%)</title><rect x="97.5305%" y="821" width="0.0149%" height="15" fill="rgb(243,200,47)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="97.5305%" y="805" width="0.0149%" height="15" fill="rgb(224,166,26)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.01%)</title><rect x="97.5305%" y="789" width="0.0149%" height="15" fill="rgb(233,0,47)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="97.5305%" y="773" width="0.0149%" height="15" fill="rgb(253,80,5)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="97.5305%" y="757" width="0.0149%" height="15" fill="rgb(214,133,25)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="97.5305%" y="741" width="0.0149%" height="15" fill="rgb(209,27,14)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="97.5305%" y="725" width="0.0149%" height="15" fill="rgb(219,102,51)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="97.5305%" y="709" width="0.0149%" height="15" fill="rgb(237,18,16)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="97.5305%" y="693" width="0.0149%" height="15" fill="rgb(241,85,17)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="97.5305%" y="677" width="0.0149%" height="15" fill="rgb(236,90,42)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="97.5305%" y="661" width="0.0149%" height="15" fill="rgb(249,57,21)" fg:x="6556" fg:w="1"/><text x="97.6477%" y="671.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="97.5454%" y="1013" width="0.0149%" height="15" fill="rgb(243,12,36)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="1023.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="97.5454%" y="997" width="0.0149%" height="15" fill="rgb(253,128,47)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="1007.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="97.5454%" y="981" width="0.0149%" height="15" fill="rgb(207,33,20)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="991.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.01%)</title><rect x="97.5454%" y="965" width="0.0149%" height="15" fill="rgb(233,215,35)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="975.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="97.5454%" y="949" width="0.0149%" height="15" fill="rgb(249,188,52)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="959.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="97.5454%" y="933" width="0.0149%" height="15" fill="rgb(225,12,32)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="943.50"></text></g><g><title>acpi_irq (1 samples, 0.01%)</title><rect x="97.5454%" y="917" width="0.0149%" height="15" fill="rgb(247,98,14)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="927.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.01%)</title><rect x="97.5454%" y="901" width="0.0149%" height="15" fill="rgb(247,219,48)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="911.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.01%)</title><rect x="97.5454%" y="885" width="0.0149%" height="15" fill="rgb(253,60,48)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="895.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.01%)</title><rect x="97.5454%" y="869" width="0.0149%" height="15" fill="rgb(245,15,52)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="879.50"></text></g><g><title>acpi_ec_gpe_handler (1 samples, 0.01%)</title><rect x="97.5454%" y="853" width="0.0149%" height="15" fill="rgb(220,133,28)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="863.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (1 samples, 0.01%)</title><rect x="97.5454%" y="837" width="0.0149%" height="15" fill="rgb(217,180,4)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="847.50"></text></g><g><title>advance_transaction (1 samples, 0.01%)</title><rect x="97.5454%" y="821" width="0.0149%" height="15" fill="rgb(251,24,1)" fg:x="6557" fg:w="1"/><text x="97.6626%" y="831.50"></text></g><g><title>asm_exc_page_fault (115 samples, 1.71%)</title><rect x="97.5602%" y="1013" width="1.7108%" height="15" fill="rgb(212,185,49)" fg:x="6558" fg:w="115"/><text x="97.6774%" y="1023.50">asm_..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="99.2711%" y="1013" width="0.0149%" height="15" fill="rgb(215,175,22)" fg:x="6673" fg:w="1"/><text x="99.3882%" y="1023.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.01%)</title><rect x="99.2859%" y="965" width="0.0149%" height="15" fill="rgb(250,205,14)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="975.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.01%)</title><rect x="99.2859%" y="949" width="0.0149%" height="15" fill="rgb(225,211,22)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="959.50"></text></g><g><title>bprm_execve (1 samples, 0.01%)</title><rect x="99.2859%" y="933" width="0.0149%" height="15" fill="rgb(251,179,42)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="943.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.01%)</title><rect x="99.2859%" y="917" width="0.0149%" height="15" fill="rgb(208,216,51)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="927.50"></text></g><g><title>exec_binprm (1 samples, 0.01%)</title><rect x="99.2859%" y="901" width="0.0149%" height="15" fill="rgb(235,36,11)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="911.50"></text></g><g><title>search_binary_handler (1 samples, 0.01%)</title><rect x="99.2859%" y="885" width="0.0149%" height="15" fill="rgb(213,189,28)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="895.50"></text></g><g><title>load_elf_binary (1 samples, 0.01%)</title><rect x="99.2859%" y="869" width="0.0149%" height="15" fill="rgb(227,203,42)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="879.50"></text></g><g><title>setup_arg_pages (1 samples, 0.01%)</title><rect x="99.2859%" y="853" width="0.0149%" height="15" fill="rgb(244,72,36)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="863.50"></text></g><g><title>expand_stack_locked (1 samples, 0.01%)</title><rect x="99.2859%" y="837" width="0.0149%" height="15" fill="rgb(213,53,17)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="847.50"></text></g><g><title>expand_downwards (1 samples, 0.01%)</title><rect x="99.2859%" y="821" width="0.0149%" height="15" fill="rgb(207,167,3)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="831.50"></text></g><g><title>perf_event_mmap (1 samples, 0.01%)</title><rect x="99.2859%" y="805" width="0.0149%" height="15" fill="rgb(216,98,30)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="815.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.01%)</title><rect x="99.2859%" y="789" width="0.0149%" height="15" fill="rgb(236,123,15)" fg:x="6674" fg:w="1"/><text x="99.4031%" y="799.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.01%)</title><rect x="99.3008%" y="789" width="0.0149%" height="15" fill="rgb(248,81,50)" fg:x="6675" fg:w="1"/><text x="99.4180%" y="799.50"></text></g><g><title>_compound_head (10 samples, 0.15%)</title><rect x="99.3157%" y="789" width="0.1488%" height="15" fill="rgb(214,120,4)" fg:x="6676" fg:w="10"/><text x="99.4329%" y="799.50"></text></g><g><title>page_remove_rmap (1 samples, 0.01%)</title><rect x="99.4644%" y="789" width="0.0149%" height="15" fill="rgb(208,179,34)" fg:x="6686" fg:w="1"/><text x="99.5816%" y="799.50"></text></g><g><title>vm_normal_page (1 samples, 0.01%)</title><rect x="99.4793%" y="789" width="0.0149%" height="15" fill="rgb(227,140,7)" fg:x="6687" fg:w="1"/><text x="99.5965%" y="799.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.01%)</title><rect x="99.5091%" y="773" width="0.0149%" height="15" fill="rgb(214,22,6)" fg:x="6689" fg:w="1"/><text x="99.6263%" y="783.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="99.5388%" y="725" width="0.0298%" height="15" fill="rgb(207,137,27)" fg:x="6691" fg:w="2"/><text x="99.6560%" y="735.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="99.5537%" y="709" width="0.0149%" height="15" fill="rgb(210,8,46)" fg:x="6692" fg:w="1"/><text x="99.6709%" y="719.50"></text></g><g><title>page_remove_rmap (4 samples, 0.06%)</title><rect x="99.5240%" y="773" width="0.0595%" height="15" fill="rgb(240,16,54)" fg:x="6690" fg:w="4"/><text x="99.6411%" y="783.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.06%)</title><rect x="99.5240%" y="757" width="0.0595%" height="15" fill="rgb(211,209,29)" fg:x="6690" fg:w="4"/><text x="99.6411%" y="767.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.06%)</title><rect x="99.5240%" y="741" width="0.0595%" height="15" fill="rgb(226,228,24)" fg:x="6690" fg:w="4"/><text x="99.6411%" y="751.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="99.5686%" y="725" width="0.0149%" height="15" fill="rgb(222,84,9)" fg:x="6693" fg:w="1"/><text x="99.6858%" y="735.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.01%)</title><rect x="99.6281%" y="709" width="0.0149%" height="15" fill="rgb(234,203,30)" fg:x="6697" fg:w="1"/><text x="99.7453%" y="719.50"></text></g><g><title>uncharge_batch (1 samples, 0.01%)</title><rect x="99.6281%" y="693" width="0.0149%" height="15" fill="rgb(238,109,14)" fg:x="6697" fg:w="1"/><text x="99.7453%" y="703.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.01%)</title><rect x="99.6281%" y="677" width="0.0149%" height="15" fill="rgb(233,206,34)" fg:x="6697" fg:w="1"/><text x="99.7453%" y="687.50"></text></g><g><title>page_counter_cancel (1 samples, 0.01%)</title><rect x="99.6281%" y="661" width="0.0149%" height="15" fill="rgb(220,167,47)" fg:x="6697" fg:w="1"/><text x="99.7453%" y="671.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.01%)</title><rect x="99.6281%" y="645" width="0.0149%" height="15" fill="rgb(238,105,10)" fg:x="6697" fg:w="1"/><text x="99.7453%" y="655.50"></text></g><g><title>__free_one_page (6 samples, 0.09%)</title><rect x="99.6876%" y="661" width="0.0893%" height="15" fill="rgb(213,227,17)" fg:x="6701" fg:w="6"/><text x="99.8048%" y="671.50"></text></g><g><title>free_unref_page_list (10 samples, 0.15%)</title><rect x="99.6430%" y="709" width="0.1488%" height="15" fill="rgb(217,132,38)" fg:x="6698" fg:w="10"/><text x="99.7602%" y="719.50"></text></g><g><title>free_unref_page_commit (10 samples, 0.15%)</title><rect x="99.6430%" y="693" width="0.1488%" height="15" fill="rgb(242,146,4)" fg:x="6698" fg:w="10"/><text x="99.7602%" y="703.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.10%)</title><rect x="99.6876%" y="677" width="0.1041%" height="15" fill="rgb(212,61,9)" fg:x="6701" fg:w="7"/><text x="99.8048%" y="687.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.01%)</title><rect x="99.7769%" y="661" width="0.0149%" height="15" fill="rgb(247,126,22)" fg:x="6707" fg:w="1"/><text x="99.8940%" y="671.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="99.8512%" y="693" width="0.0298%" height="15" fill="rgb(220,196,2)" fg:x="6712" fg:w="2"/><text x="99.9684%" y="703.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="99.8512%" y="677" width="0.0298%" height="15" fill="rgb(208,46,4)" fg:x="6712" fg:w="2"/><text x="99.9684%" y="687.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="99.8512%" y="661" width="0.0298%" height="15" fill="rgb(252,104,46)" fg:x="6712" fg:w="2"/><text x="99.9684%" y="671.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="99.8810%" y="693" width="0.0149%" height="15" fill="rgb(237,152,48)" fg:x="6714" fg:w="1"/><text x="99.9982%" y="703.50"></text></g><g><title>free_pages_and_swap_cache (22 samples, 0.33%)</title><rect x="99.5835%" y="741" width="0.3273%" height="15" fill="rgb(221,59,37)" fg:x="6694" fg:w="22"/><text x="99.7006%" y="751.50"></text></g><g><title>release_pages (21 samples, 0.31%)</title><rect x="99.5983%" y="725" width="0.3124%" height="15" fill="rgb(209,202,51)" fg:x="6695" fg:w="21"/><text x="99.7155%" y="735.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (8 samples, 0.12%)</title><rect x="99.7917%" y="709" width="0.1190%" height="15" fill="rgb(228,81,30)" fg:x="6708" fg:w="8"/><text x="99.9089%" y="719.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.01%)</title><rect x="99.8959%" y="693" width="0.0149%" height="15" fill="rgb(227,42,39)" fg:x="6715" fg:w="1"/><text x="100.0131%" y="703.50"></text></g><g><title>fringe-vs-astar (6,717 samples, 99.93%)</title><rect x="0.0000%" y="1029" width="99.9256%" height="15" fill="rgb(221,26,2)" fg:x="0" fg:w="6717"/><text x="0.1172%" y="1039.50">fringe-vs-astar</text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.64%)</title><rect x="99.2859%" y="1013" width="0.6397%" height="15" fill="rgb(254,61,31)" fg:x="6674" fg:w="43"/><text x="99.4031%" y="1023.50"></text></g><g><title>do_syscall_64 (43 samples, 0.64%)</title><rect x="99.2859%" y="997" width="0.6397%" height="15" fill="rgb(222,173,38)" fg:x="6674" fg:w="43"/><text x="99.4031%" y="1007.50"></text></g><g><title>x64_sys_call (43 samples, 0.64%)</title><rect x="99.2859%" y="981" width="0.6397%" height="15" fill="rgb(218,50,12)" fg:x="6674" fg:w="43"/><text x="99.4031%" y="991.50"></text></g><g><title>__x64_sys_exit_group (42 samples, 0.62%)</title><rect x="99.3008%" y="965" width="0.6248%" height="15" fill="rgb(223,88,40)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="975.50"></text></g><g><title>do_group_exit (42 samples, 0.62%)</title><rect x="99.3008%" y="949" width="0.6248%" height="15" fill="rgb(237,54,19)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="959.50"></text></g><g><title>do_exit (42 samples, 0.62%)</title><rect x="99.3008%" y="933" width="0.6248%" height="15" fill="rgb(251,129,25)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="943.50"></text></g><g><title>exit_mm (42 samples, 0.62%)</title><rect x="99.3008%" y="917" width="0.6248%" height="15" fill="rgb(238,97,19)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="927.50"></text></g><g><title>mmput (42 samples, 0.62%)</title><rect x="99.3008%" y="901" width="0.6248%" height="15" fill="rgb(240,169,18)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="911.50"></text></g><g><title>__mmput (42 samples, 0.62%)</title><rect x="99.3008%" y="885" width="0.6248%" height="15" fill="rgb(230,187,49)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="895.50"></text></g><g><title>exit_mmap (42 samples, 0.62%)</title><rect x="99.3008%" y="869" width="0.6248%" height="15" fill="rgb(209,44,26)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="879.50"></text></g><g><title>unmap_vmas (42 samples, 0.62%)</title><rect x="99.3008%" y="853" width="0.6248%" height="15" fill="rgb(244,0,6)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="863.50"></text></g><g><title>unmap_single_vma (42 samples, 0.62%)</title><rect x="99.3008%" y="837" width="0.6248%" height="15" fill="rgb(248,18,21)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="847.50"></text></g><g><title>unmap_page_range (42 samples, 0.62%)</title><rect x="99.3008%" y="821" width="0.6248%" height="15" fill="rgb(245,180,19)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="831.50"></text></g><g><title>zap_pmd_range.isra.0 (42 samples, 0.62%)</title><rect x="99.3008%" y="805" width="0.6248%" height="15" fill="rgb(252,118,36)" fg:x="6675" fg:w="42"/><text x="99.4180%" y="815.50"></text></g><g><title>zap_pte_range (29 samples, 0.43%)</title><rect x="99.4942%" y="789" width="0.4314%" height="15" fill="rgb(210,224,19)" fg:x="6688" fg:w="29"/><text x="99.6114%" y="799.50"></text></g><g><title>tlb_flush_mmu (23 samples, 0.34%)</title><rect x="99.5835%" y="773" width="0.3422%" height="15" fill="rgb(218,30,24)" fg:x="6694" fg:w="23"/><text x="99.7006%" y="783.50"></text></g><g><title>tlb_batch_pages_flush (23 samples, 0.34%)</title><rect x="99.5835%" y="757" width="0.3422%" height="15" fill="rgb(219,75,50)" fg:x="6694" fg:w="23"/><text x="99.7006%" y="767.50"></text></g><g><title>free_swap_cache (1 samples, 0.01%)</title><rect x="99.9107%" y="741" width="0.0149%" height="15" fill="rgb(234,72,50)" fg:x="6716" fg:w="1"/><text x="100.0279%" y="751.50"></text></g><g><title>all (6,722 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(219,100,48)" fg:x="0" fg:w="6722"/><text x="0.1172%" y="1055.50"></text></g><g><title>perf-exec (5 samples, 0.07%)</title><rect x="99.9256%" y="1029" width="0.0744%" height="15" fill="rgb(253,5,41)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="99.9256%" y="1013" width="0.0744%" height="15" fill="rgb(247,181,11)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="1023.50"></text></g><g><title>do_syscall_64 (5 samples, 0.07%)</title><rect x="99.9256%" y="997" width="0.0744%" height="15" fill="rgb(222,223,25)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="1007.50"></text></g><g><title>x64_sys_call (5 samples, 0.07%)</title><rect x="99.9256%" y="981" width="0.0744%" height="15" fill="rgb(214,198,28)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="991.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.07%)</title><rect x="99.9256%" y="965" width="0.0744%" height="15" fill="rgb(230,46,43)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="975.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.07%)</title><rect x="99.9256%" y="949" width="0.0744%" height="15" fill="rgb(233,65,53)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="959.50"></text></g><g><title>bprm_execve (5 samples, 0.07%)</title><rect x="99.9256%" y="933" width="0.0744%" height="15" fill="rgb(221,121,27)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="943.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.07%)</title><rect x="99.9256%" y="917" width="0.0744%" height="15" fill="rgb(247,70,47)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="927.50"></text></g><g><title>exec_binprm (5 samples, 0.07%)</title><rect x="99.9256%" y="901" width="0.0744%" height="15" fill="rgb(228,85,35)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="911.50"></text></g><g><title>search_binary_handler (5 samples, 0.07%)</title><rect x="99.9256%" y="885" width="0.0744%" height="15" fill="rgb(209,50,18)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="895.50"></text></g><g><title>load_elf_binary (5 samples, 0.07%)</title><rect x="99.9256%" y="869" width="0.0744%" height="15" fill="rgb(250,19,35)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="879.50"></text></g><g><title>begin_new_exec (5 samples, 0.07%)</title><rect x="99.9256%" y="853" width="0.0744%" height="15" fill="rgb(253,107,29)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="863.50"></text></g><g><title>perf_event_exec (5 samples, 0.07%)</title><rect x="99.9256%" y="837" width="0.0744%" height="15" fill="rgb(252,179,29)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="847.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.07%)</title><rect x="99.9256%" y="821" width="0.0744%" height="15" fill="rgb(238,194,6)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="831.50"></text></g><g><title>ctx_resched (5 samples, 0.07%)</title><rect x="99.9256%" y="805" width="0.0744%" height="15" fill="rgb(238,164,29)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="815.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.07%)</title><rect x="99.9256%" y="789" width="0.0744%" height="15" fill="rgb(224,25,9)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="799.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.07%)</title><rect x="99.9256%" y="773" width="0.0744%" height="15" fill="rgb(244,153,23)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="783.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.07%)</title><rect x="99.9256%" y="757" width="0.0744%" height="15" fill="rgb(212,203,14)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="767.50"></text></g><g><title>native_write_msr (5 samples, 0.07%)</title><rect x="99.9256%" y="741" width="0.0744%" height="15" fill="rgb(220,164,20)" fg:x="6717" fg:w="5"/><text x="100.0428%" y="751.50"></text></g></svg></svg>