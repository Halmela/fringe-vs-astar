<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="806" onload="init(evt)" viewBox="0 0 2560 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="789.00"> </text><svg id="frames" x="10" width="2540" total_samples="263"><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.38%)</title><rect x="0.0000%" y="709" width="0.3802%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.1172%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.38%)</title><rect x="0.0000%" y="693" width="0.3802%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.1172%" y="703.50"></text></g><g><title>[[heap]] (2 samples, 0.76%)</title><rect x="0.0000%" y="725" width="0.7605%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.1172%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (1 samples, 0.38%)</title><rect x="0.3802%" y="709" width="0.3802%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.4974%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (1 samples, 0.38%)</title><rect x="0.3802%" y="693" width="0.3802%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.4974%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="0.3802%" y="677" width="0.3802%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.4974%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (1 samples, 0.38%)</title><rect x="0.3802%" y="661" width="0.3802%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.4974%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (1 samples, 0.38%)</title><rect x="0.3802%" y="645" width="0.3802%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.4974%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (1 samples, 0.38%)</title><rect x="0.3802%" y="629" width="0.3802%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.4974%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="0.3802%" y="613" width="0.3802%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.4974%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.38%)</title><rect x="0.3802%" y="597" width="0.3802%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.4974%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.38%)</title><rect x="0.3802%" y="581" width="0.3802%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.4974%" y="591.50"></text></g><g><title>__rdl_realloc (1 samples, 0.38%)</title><rect x="0.7605%" y="709" width="0.3802%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.8776%" y="719.50"></text></g><g><title>[[stack]] (2 samples, 0.76%)</title><rect x="0.7605%" y="725" width="0.7605%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="2"/><text x="0.8776%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.38%)</title><rect x="1.1407%" y="709" width="0.3802%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="1.2579%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="1.5209%" y="709" width="0.3802%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="1.6381%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="1.5209%" y="693" width="0.3802%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="1.6381%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.38%)</title><rect x="1.5209%" y="677" width="0.3802%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="1.6381%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.38%)</title><rect x="1.5209%" y="661" width="0.3802%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="1"/><text x="1.6381%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.38%)</title><rect x="1.5209%" y="645" width="0.3802%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="1.6381%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.38%)</title><rect x="1.5209%" y="629" width="0.3802%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="1.6381%" y="639.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph as fringe_vs_astar::structures::graph::Graph&gt;::get_width (3 samples, 1.14%)</title><rect x="1.9011%" y="709" width="1.1407%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="3"/><text x="2.0183%" y="719.50">&lt;f..</text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (1 samples, 0.38%)</title><rect x="3.0418%" y="709" width="0.3802%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="3.1590%" y="719.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_width (2 samples, 0.76%)</title><rect x="3.4221%" y="709" width="0.7605%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="2"/><text x="3.5392%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.38%)</title><rect x="4.1825%" y="709" width="0.3802%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="1"/><text x="4.2997%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="4.5627%" y="709" width="0.3802%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="4.6799%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.38%)</title><rect x="4.9430%" y="709" width="0.3802%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="1"/><text x="5.0602%" y="719.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="5.3232%" y="709" width="0.3802%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="5.4404%" y="719.50"></text></g><g><title>_int_realloc (1 samples, 0.38%)</title><rect x="5.7034%" y="709" width="0.3802%" height="15" fill="rgb(214,148,48)" fg:x="15" fg:w="1"/><text x="5.8206%" y="719.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (8 samples, 3.04%)</title><rect x="6.0837%" y="709" width="3.0418%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="8"/><text x="6.2008%" y="719.50">fringe_v..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (6 samples, 2.28%)</title><rect x="6.8441%" y="693" width="2.2814%" height="15" fill="rgb(209,103,24)" fg:x="18" fg:w="6"/><text x="6.9613%" y="703.50">fringe..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (6 samples, 2.28%)</title><rect x="6.8441%" y="677" width="2.2814%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="6"/><text x="6.9613%" y="687.50">fringe..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (1 samples, 0.38%)</title><rect x="9.1255%" y="709" width="0.3802%" height="15" fill="rgb(213,181,19)" fg:x="24" fg:w="1"/><text x="9.2427%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (4 samples, 1.52%)</title><rect x="9.5057%" y="709" width="1.5209%" height="15" fill="rgb(254,191,54)" fg:x="25" fg:w="4"/><text x="9.6229%" y="719.50">fri..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 1.14%)</title><rect x="9.8859%" y="693" width="1.1407%" height="15" fill="rgb(241,83,37)" fg:x="26" fg:w="3"/><text x="10.0031%" y="703.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 1.14%)</title><rect x="9.8859%" y="677" width="1.1407%" height="15" fill="rgb(233,36,39)" fg:x="26" fg:w="3"/><text x="10.0031%" y="687.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.14%)</title><rect x="9.8859%" y="661" width="1.1407%" height="15" fill="rgb(226,3,54)" fg:x="26" fg:w="3"/><text x="10.0031%" y="671.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 1.14%)</title><rect x="9.8859%" y="645" width="1.1407%" height="15" fill="rgb(245,192,40)" fg:x="26" fg:w="3"/><text x="10.0031%" y="655.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (3 samples, 1.14%)</title><rect x="9.8859%" y="629" width="1.1407%" height="15" fill="rgb(238,167,29)" fg:x="26" fg:w="3"/><text x="10.0031%" y="639.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.38%)</title><rect x="11.4068%" y="677" width="0.3802%" height="15" fill="rgb(232,182,51)" fg:x="30" fg:w="1"/><text x="11.5240%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="11.4068%" y="661" width="0.3802%" height="15" fill="rgb(231,60,39)" fg:x="30" fg:w="1"/><text x="11.5240%" y="671.50"></text></g><g><title>[unknown] (28 samples, 10.65%)</title><rect x="1.5209%" y="725" width="10.6464%" height="15" fill="rgb(208,69,12)" fg:x="4" fg:w="28"/><text x="1.6381%" y="735.50">[unknown]</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (3 samples, 1.14%)</title><rect x="11.0266%" y="709" width="1.1407%" height="15" fill="rgb(235,93,37)" fg:x="29" fg:w="3"/><text x="11.1438%" y="719.50">fr..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (3 samples, 1.14%)</title><rect x="11.0266%" y="693" width="1.1407%" height="15" fill="rgb(213,116,39)" fg:x="29" fg:w="3"/><text x="11.1438%" y="703.50">fr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (1 samples, 0.38%)</title><rect x="11.7871%" y="677" width="0.3802%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="1"/><text x="11.9043%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (1 samples, 0.38%)</title><rect x="11.7871%" y="661" width="0.3802%" height="15" fill="rgb(206,96,30)" fg:x="31" fg:w="1"/><text x="11.9043%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="11.7871%" y="645" width="0.3802%" height="15" fill="rgb(218,138,4)" fg:x="31" fg:w="1"/><text x="11.9043%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.38%)</title><rect x="11.7871%" y="629" width="0.3802%" height="15" fill="rgb(250,191,14)" fg:x="31" fg:w="1"/><text x="11.9043%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.38%)</title><rect x="11.7871%" y="613" width="0.3802%" height="15" fill="rgb(239,60,40)" fg:x="31" fg:w="1"/><text x="11.9043%" y="623.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.38%)</title><rect x="12.1673%" y="357" width="0.3802%" height="15" fill="rgb(206,27,48)" fg:x="32" fg:w="1"/><text x="12.2845%" y="367.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.38%)</title><rect x="12.1673%" y="341" width="0.3802%" height="15" fill="rgb(225,35,8)" fg:x="32" fg:w="1"/><text x="12.2845%" y="351.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.38%)</title><rect x="12.1673%" y="325" width="0.3802%" height="15" fill="rgb(250,213,24)" fg:x="32" fg:w="1"/><text x="12.2845%" y="335.50"></text></g><g><title>release_pages (1 samples, 0.38%)</title><rect x="12.1673%" y="309" width="0.3802%" height="15" fill="rgb(247,123,22)" fg:x="32" fg:w="1"/><text x="12.2845%" y="319.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.38%)</title><rect x="12.1673%" y="293" width="0.3802%" height="15" fill="rgb(231,138,38)" fg:x="32" fg:w="1"/><text x="12.2845%" y="303.50"></text></g><g><title>__GI___libc_free (2 samples, 0.76%)</title><rect x="12.1673%" y="517" width="0.7605%" height="15" fill="rgb(231,145,46)" fg:x="32" fg:w="2"/><text x="12.2845%" y="527.50"></text></g><g><title>__GI___munmap (2 samples, 0.76%)</title><rect x="12.1673%" y="501" width="0.7605%" height="15" fill="rgb(251,118,11)" fg:x="32" fg:w="2"/><text x="12.2845%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.76%)</title><rect x="12.1673%" y="485" width="0.7605%" height="15" fill="rgb(217,147,25)" fg:x="32" fg:w="2"/><text x="12.2845%" y="495.50"></text></g><g><title>do_syscall_64 (2 samples, 0.76%)</title><rect x="12.1673%" y="469" width="0.7605%" height="15" fill="rgb(247,81,37)" fg:x="32" fg:w="2"/><text x="12.2845%" y="479.50"></text></g><g><title>x64_sys_call (2 samples, 0.76%)</title><rect x="12.1673%" y="453" width="0.7605%" height="15" fill="rgb(209,12,38)" fg:x="32" fg:w="2"/><text x="12.2845%" y="463.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.76%)</title><rect x="12.1673%" y="437" width="0.7605%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="2"/><text x="12.2845%" y="447.50"></text></g><g><title>__vm_munmap (2 samples, 0.76%)</title><rect x="12.1673%" y="421" width="0.7605%" height="15" fill="rgb(248,47,43)" fg:x="32" fg:w="2"/><text x="12.2845%" y="431.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.76%)</title><rect x="12.1673%" y="405" width="0.7605%" height="15" fill="rgb(221,10,30)" fg:x="32" fg:w="2"/><text x="12.2845%" y="415.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.76%)</title><rect x="12.1673%" y="389" width="0.7605%" height="15" fill="rgb(210,229,1)" fg:x="32" fg:w="2"/><text x="12.2845%" y="399.50"></text></g><g><title>unmap_region (2 samples, 0.76%)</title><rect x="12.1673%" y="373" width="0.7605%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="2"/><text x="12.2845%" y="383.50"></text></g><g><title>unmap_vmas (1 samples, 0.38%)</title><rect x="12.5475%" y="357" width="0.3802%" height="15" fill="rgb(234,67,33)" fg:x="33" fg:w="1"/><text x="12.6647%" y="367.50"></text></g><g><title>unmap_single_vma (1 samples, 0.38%)</title><rect x="12.5475%" y="341" width="0.3802%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="1"/><text x="12.6647%" y="351.50"></text></g><g><title>unmap_page_range (1 samples, 0.38%)</title><rect x="12.5475%" y="325" width="0.3802%" height="15" fill="rgb(247,138,52)" fg:x="33" fg:w="1"/><text x="12.6647%" y="335.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.38%)</title><rect x="12.5475%" y="309" width="0.3802%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="1"/><text x="12.6647%" y="319.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.38%)</title><rect x="12.5475%" y="293" width="0.3802%" height="15" fill="rgb(246,177,23)" fg:x="33" fg:w="1"/><text x="12.6647%" y="303.50"></text></g><g><title>malloc_consolidate (1 samples, 0.38%)</title><rect x="16.7300%" y="341" width="0.3802%" height="15" fill="rgb(230,62,27)" fg:x="44" fg:w="1"/><text x="16.8472%" y="351.50"></text></g><g><title>unlink_chunk (1 samples, 0.38%)</title><rect x="16.7300%" y="325" width="0.3802%" height="15" fill="rgb(216,154,8)" fg:x="44" fg:w="1"/><text x="16.8472%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (15 samples, 5.70%)</title><rect x="12.1673%" y="549" width="5.7034%" height="15" fill="rgb(244,35,45)" fg:x="32" fg:w="15"/><text x="12.2845%" y="559.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::graph::Graph&gt;&gt; (15 samples, 5.70%)</title><rect x="12.1673%" y="533" width="5.7034%" height="15" fill="rgb(251,115,12)" fg:x="32" fg:w="15"/><text x="12.2845%" y="543.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (13 samples, 4.94%)</title><rect x="12.9278%" y="517" width="4.9430%" height="15" fill="rgb(240,54,50)" fg:x="34" fg:w="13"/><text x="13.0449%" y="527.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (13 samples, 4.94%)</title><rect x="12.9278%" y="501" width="4.9430%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="13"/><text x="13.0449%" y="511.50">core::ptr::drop..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 4.94%)</title><rect x="12.9278%" y="485" width="4.9430%" height="15" fill="rgb(207,117,47)" fg:x="34" fg:w="13"/><text x="13.0449%" y="495.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (13 samples, 4.94%)</title><rect x="12.9278%" y="469" width="4.9430%" height="15" fill="rgb(249,43,39)" fg:x="34" fg:w="13"/><text x="13.0449%" y="479.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (13 samples, 4.94%)</title><rect x="12.9278%" y="453" width="4.9430%" height="15" fill="rgb(209,38,44)" fg:x="34" fg:w="13"/><text x="13.0449%" y="463.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (13 samples, 4.94%)</title><rect x="12.9278%" y="437" width="4.9430%" height="15" fill="rgb(236,212,23)" fg:x="34" fg:w="13"/><text x="13.0449%" y="447.50">core::ptr::drop..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 4.94%)</title><rect x="12.9278%" y="421" width="4.9430%" height="15" fill="rgb(242,79,21)" fg:x="34" fg:w="13"/><text x="13.0449%" y="431.50">&lt;alloc::raw_vec..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 4.94%)</title><rect x="12.9278%" y="405" width="4.9430%" height="15" fill="rgb(211,96,35)" fg:x="34" fg:w="13"/><text x="13.0449%" y="415.50">&lt;alloc::alloc::..</text></g><g><title>alloc::alloc::dealloc (13 samples, 4.94%)</title><rect x="12.9278%" y="389" width="4.9430%" height="15" fill="rgb(253,215,40)" fg:x="34" fg:w="13"/><text x="13.0449%" y="399.50">alloc::alloc::d..</text></g><g><title>__GI___libc_free (13 samples, 4.94%)</title><rect x="12.9278%" y="373" width="4.9430%" height="15" fill="rgb(211,81,21)" fg:x="34" fg:w="13"/><text x="13.0449%" y="383.50">__GI___libc_free</text></g><g><title>_int_free (12 samples, 4.56%)</title><rect x="13.3080%" y="357" width="4.5627%" height="15" fill="rgb(208,190,38)" fg:x="35" fg:w="12"/><text x="13.4252%" y="367.50">_int_free</text></g><g><title>unlink_chunk (2 samples, 0.76%)</title><rect x="17.1103%" y="341" width="0.7605%" height="15" fill="rgb(235,213,38)" fg:x="45" fg:w="2"/><text x="17.2275%" y="351.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph as fringe_vs_astar::structures::graph::Graph&gt;::get_width (1 samples, 0.38%)</title><rect x="17.8707%" y="517" width="0.3802%" height="15" fill="rgb(237,122,38)" fg:x="47" fg:w="1"/><text x="17.9879%" y="527.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.38%)</title><rect x="18.6312%" y="373" width="0.3802%" height="15" fill="rgb(244,218,35)" fg:x="49" fg:w="1"/><text x="18.7484%" y="383.50"></text></g><g><title>asm_exc_page_fault (3 samples, 1.14%)</title><rect x="18.2510%" y="485" width="1.1407%" height="15" fill="rgb(240,68,47)" fg:x="48" fg:w="3"/><text x="18.3681%" y="495.50">as..</text></g><g><title>exc_page_fault (3 samples, 1.14%)</title><rect x="18.2510%" y="469" width="1.1407%" height="15" fill="rgb(210,16,53)" fg:x="48" fg:w="3"/><text x="18.3681%" y="479.50">ex..</text></g><g><title>do_user_addr_fault (3 samples, 1.14%)</title><rect x="18.2510%" y="453" width="1.1407%" height="15" fill="rgb(235,124,12)" fg:x="48" fg:w="3"/><text x="18.3681%" y="463.50">do..</text></g><g><title>handle_mm_fault (2 samples, 0.76%)</title><rect x="18.6312%" y="437" width="0.7605%" height="15" fill="rgb(224,169,11)" fg:x="49" fg:w="2"/><text x="18.7484%" y="447.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.76%)</title><rect x="18.6312%" y="421" width="0.7605%" height="15" fill="rgb(250,166,2)" fg:x="49" fg:w="2"/><text x="18.7484%" y="431.50"></text></g><g><title>handle_pte_fault (2 samples, 0.76%)</title><rect x="18.6312%" y="405" width="0.7605%" height="15" fill="rgb(242,216,29)" fg:x="49" fg:w="2"/><text x="18.7484%" y="415.50"></text></g><g><title>do_anonymous_page (2 samples, 0.76%)</title><rect x="18.6312%" y="389" width="0.7605%" height="15" fill="rgb(230,116,27)" fg:x="49" fg:w="2"/><text x="18.7484%" y="399.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.38%)</title><rect x="19.0114%" y="373" width="0.3802%" height="15" fill="rgb(228,99,48)" fg:x="50" fg:w="1"/><text x="19.1286%" y="383.50"></text></g><g><title>folio_add_lru (1 samples, 0.38%)</title><rect x="19.0114%" y="357" width="0.3802%" height="15" fill="rgb(253,11,6)" fg:x="50" fg:w="1"/><text x="19.1286%" y="367.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.38%)</title><rect x="19.0114%" y="341" width="0.3802%" height="15" fill="rgb(247,143,39)" fg:x="50" fg:w="1"/><text x="19.1286%" y="351.50"></text></g><g><title>lru_add_fn (1 samples, 0.38%)</title><rect x="19.0114%" y="325" width="0.3802%" height="15" fill="rgb(236,97,10)" fg:x="50" fg:w="1"/><text x="19.1286%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 1.52%)</title><rect x="18.2510%" y="517" width="1.5209%" height="15" fill="rgb(233,208,19)" fg:x="48" fg:w="4"/><text x="18.3681%" y="527.50">all..</text></g><g><title>core::ptr::write (4 samples, 1.52%)</title><rect x="18.2510%" y="501" width="1.5209%" height="15" fill="rgb(216,164,2)" fg:x="48" fg:w="4"/><text x="18.3681%" y="511.50">cor..</text></g><g><title>sync_regs (1 samples, 0.38%)</title><rect x="19.3916%" y="485" width="0.3802%" height="15" fill="rgb(220,129,5)" fg:x="51" fg:w="1"/><text x="19.5088%" y="495.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (6 samples, 2.28%)</title><rect x="17.8707%" y="533" width="2.2814%" height="15" fill="rgb(242,17,10)" fg:x="47" fg:w="6"/><text x="17.9879%" y="543.50">fringe..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::new (1 samples, 0.38%)</title><rect x="19.7719%" y="517" width="0.3802%" height="15" fill="rgb(242,107,0)" fg:x="52" fg:w="1"/><text x="19.8891%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.38%)</title><rect x="19.7719%" y="501" width="0.3802%" height="15" fill="rgb(251,28,31)" fg:x="52" fg:w="1"/><text x="19.8891%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.76%)</title><rect x="24.3346%" y="517" width="0.7605%" height="15" fill="rgb(233,223,10)" fg:x="64" fg:w="2"/><text x="24.4518%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.76%)</title><rect x="24.3346%" y="501" width="0.7605%" height="15" fill="rgb(215,21,27)" fg:x="64" fg:w="2"/><text x="24.4518%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.76%)</title><rect x="24.3346%" y="485" width="0.7605%" height="15" fill="rgb(232,23,21)" fg:x="64" fg:w="2"/><text x="24.4518%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.38%)</title><rect x="26.6160%" y="421" width="0.3802%" height="15" fill="rgb(244,5,23)" fg:x="70" fg:w="1"/><text x="26.7332%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.38%)</title><rect x="26.6160%" y="405" width="0.3802%" height="15" fill="rgb(226,81,46)" fg:x="70" fg:w="1"/><text x="26.7332%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.38%)</title><rect x="26.6160%" y="389" width="0.3802%" height="15" fill="rgb(247,70,30)" fg:x="70" fg:w="1"/><text x="26.7332%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.38%)</title><rect x="26.6160%" y="373" width="0.3802%" height="15" fill="rgb(212,68,19)" fg:x="70" fg:w="1"/><text x="26.7332%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.38%)</title><rect x="26.6160%" y="357" width="0.3802%" height="15" fill="rgb(240,187,13)" fg:x="70" fg:w="1"/><text x="26.7332%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.38%)</title><rect x="26.6160%" y="341" width="0.3802%" height="15" fill="rgb(223,113,26)" fg:x="70" fg:w="1"/><text x="26.7332%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="26.6160%" y="325" width="0.3802%" height="15" fill="rgb(206,192,2)" fg:x="70" fg:w="1"/><text x="26.7332%" y="335.50"></text></g><g><title>tcache_get (1 samples, 0.38%)</title><rect x="26.6160%" y="309" width="0.3802%" height="15" fill="rgb(241,108,4)" fg:x="70" fg:w="1"/><text x="26.7332%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 2.28%)</title><rect x="26.6160%" y="437" width="2.2814%" height="15" fill="rgb(247,173,49)" fg:x="70" fg:w="6"/><text x="26.7332%" y="447.50">&lt;T as ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 1.90%)</title><rect x="26.9962%" y="421" width="1.9011%" height="15" fill="rgb(224,114,35)" fg:x="71" fg:w="5"/><text x="27.1134%" y="431.50">core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 1.90%)</title><rect x="26.9962%" y="405" width="1.9011%" height="15" fill="rgb(245,159,27)" fg:x="71" fg:w="5"/><text x="27.1134%" y="415.50">core..</text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 1.90%)</title><rect x="26.9962%" y="389" width="1.9011%" height="15" fill="rgb(245,172,44)" fg:x="71" fg:w="5"/><text x="27.1134%" y="399.50">__me..</text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph as fringe_vs_astar::structures::graph::Graph&gt;::neighbors (11 samples, 4.18%)</title><rect x="25.0951%" y="517" width="4.1825%" height="15" fill="rgb(236,23,11)" fg:x="66" fg:w="11"/><text x="25.2122%" y="527.50">&lt;fringe_vs_as..</text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (11 samples, 4.18%)</title><rect x="25.0951%" y="501" width="4.1825%" height="15" fill="rgb(205,117,38)" fg:x="66" fg:w="11"/><text x="25.2122%" y="511.50">&lt;T as alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 4.18%)</title><rect x="25.0951%" y="485" width="4.1825%" height="15" fill="rgb(237,72,25)" fg:x="66" fg:w="11"/><text x="25.2122%" y="495.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 2.66%)</title><rect x="26.6160%" y="469" width="2.6616%" height="15" fill="rgb(244,70,9)" fg:x="70" fg:w="7"/><text x="26.7332%" y="479.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (7 samples, 2.66%)</title><rect x="26.6160%" y="453" width="2.6616%" height="15" fill="rgb(217,125,39)" fg:x="70" fg:w="7"/><text x="26.7332%" y="463.50">alloc::..</text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph as fringe_vs_astar::structures::graph::Graph&gt;::neighbors (1 samples, 0.38%)</title><rect x="28.8973%" y="437" width="0.3802%" height="15" fill="rgb(235,36,10)" fg:x="76" fg:w="1"/><text x="29.0145%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,f64)&gt;&gt; (1 samples, 0.38%)</title><rect x="29.2776%" y="517" width="0.3802%" height="15" fill="rgb(251,123,47)" fg:x="77" fg:w="1"/><text x="29.3948%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="29.2776%" y="501" width="0.3802%" height="15" fill="rgb(221,13,13)" fg:x="77" fg:w="1"/><text x="29.3948%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,f64),alloc::alloc::Global&gt;&gt; (1 samples, 0.38%)</title><rect x="29.2776%" y="485" width="0.3802%" height="15" fill="rgb(238,131,9)" fg:x="77" fg:w="1"/><text x="29.3948%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="29.2776%" y="469" width="0.3802%" height="15" fill="rgb(211,50,8)" fg:x="77" fg:w="1"/><text x="29.3948%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (1 samples, 0.38%)</title><rect x="29.2776%" y="453" width="0.3802%" height="15" fill="rgb(245,182,24)" fg:x="77" fg:w="1"/><text x="29.3948%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.38%)</title><rect x="29.2776%" y="437" width="0.3802%" height="15" fill="rgb(242,14,37)" fg:x="77" fg:w="1"/><text x="29.3948%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.38%)</title><rect x="29.2776%" y="421" width="0.3802%" height="15" fill="rgb(246,228,12)" fg:x="77" fg:w="1"/><text x="29.3948%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.38%)</title><rect x="29.2776%" y="405" width="0.3802%" height="15" fill="rgb(213,55,15)" fg:x="77" fg:w="1"/><text x="29.3948%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.38%)</title><rect x="29.2776%" y="389" width="0.3802%" height="15" fill="rgb(209,9,3)" fg:x="77" fg:w="1"/><text x="29.3948%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.38%)</title><rect x="29.2776%" y="373" width="0.3802%" height="15" fill="rgb(230,59,30)" fg:x="77" fg:w="1"/><text x="29.3948%" y="383.50"></text></g><g><title>tcache_put (1 samples, 0.38%)</title><rect x="29.2776%" y="357" width="0.3802%" height="15" fill="rgb(209,121,21)" fg:x="77" fg:w="1"/><text x="29.3948%" y="367.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (11 samples, 4.18%)</title><rect x="29.6578%" y="501" width="4.1825%" height="15" fill="rgb(220,109,13)" fg:x="78" fg:w="11"/><text x="29.7750%" y="511.50">fringe_vs_ast..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (9 samples, 3.42%)</title><rect x="33.8403%" y="501" width="3.4221%" height="15" fill="rgb(232,18,1)" fg:x="89" fg:w="9"/><text x="33.9575%" y="511.50">fringe_vs_..</text></g><g><title>fringe_vs_astar::index_to_xy (9 samples, 3.42%)</title><rect x="33.8403%" y="485" width="3.4221%" height="15" fill="rgb(215,41,42)" fg:x="89" fg:w="9"/><text x="33.9575%" y="495.50">fringe_vs_..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (34 samples, 12.93%)</title><rect x="29.6578%" y="517" width="12.9278%" height="15" fill="rgb(224,123,36)" fg:x="78" fg:w="34"/><text x="29.7750%" y="527.50">fringe_vs_astar::algorithms::fringe::FringeS..</text></g><g><title>fringe_vs_astar::algorithms::heuristic (14 samples, 5.32%)</title><rect x="37.2624%" y="501" width="5.3232%" height="15" fill="rgb(240,125,3)" fg:x="98" fg:w="14"/><text x="37.3795%" y="511.50">fringe_vs_astar::..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 6.84%)</title><rect x="42.5856%" y="485" width="6.8441%" height="15" fill="rgb(205,98,50)" fg:x="112" fg:w="18"/><text x="42.7027%" y="495.50">&lt;alloc::collections::v..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 6.84%)</title><rect x="42.5856%" y="469" width="6.8441%" height="15" fill="rgb(205,185,37)" fg:x="112" fg:w="18"/><text x="42.7027%" y="479.50">&lt;alloc::collections::v..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter_wrapping (18 samples, 6.84%)</title><rect x="42.5856%" y="453" width="6.8441%" height="15" fill="rgb(238,207,15)" fg:x="112" fg:w="18"/><text x="42.7027%" y="463.50">alloc::collections::ve..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (18 samples, 6.84%)</title><rect x="42.5856%" y="437" width="6.8441%" height="15" fill="rgb(213,199,42)" fg:x="112" fg:w="18"/><text x="42.7027%" y="447.50">alloc::collections::ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 6.84%)</title><rect x="42.5856%" y="421" width="6.8441%" height="15" fill="rgb(235,201,11)" fg:x="112" fg:w="18"/><text x="42.7027%" y="431.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 6.84%)</title><rect x="42.5856%" y="405" width="6.8441%" height="15" fill="rgb(207,46,11)" fg:x="112" fg:w="18"/><text x="42.7027%" y="415.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 6.84%)</title><rect x="42.5856%" y="389" width="6.8441%" height="15" fill="rgb(241,35,35)" fg:x="112" fg:w="18"/><text x="42.7027%" y="399.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 6.84%)</title><rect x="42.5856%" y="373" width="6.8441%" height="15" fill="rgb(243,32,47)" fg:x="112" fg:w="18"/><text x="42.7027%" y="383.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 6.84%)</title><rect x="42.5856%" y="357" width="6.8441%" height="15" fill="rgb(247,202,23)" fg:x="112" fg:w="18"/><text x="42.7027%" y="367.50">&lt;alloc::collections::v..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 6.84%)</title><rect x="42.5856%" y="341" width="6.8441%" height="15" fill="rgb(219,102,11)" fg:x="112" fg:w="18"/><text x="42.7027%" y="351.50">&lt;core::slice::iter::It..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 6.46%)</title><rect x="42.9658%" y="325" width="6.4639%" height="15" fill="rgb(243,110,44)" fg:x="113" fg:w="17"/><text x="43.0830%" y="335.50">core::ops::function::..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17 samples, 6.46%)</title><rect x="42.9658%" y="309" width="6.4639%" height="15" fill="rgb(222,74,54)" fg:x="113" fg:w="17"/><text x="43.0830%" y="319.50">core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (17 samples, 6.46%)</title><rect x="42.9658%" y="293" width="6.4639%" height="15" fill="rgb(216,99,12)" fg:x="113" fg:w="17"/><text x="43.0830%" y="303.50">&lt;core::iter::adapters..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (17 samples, 6.46%)</title><rect x="42.9658%" y="277" width="6.4639%" height="15" fill="rgb(226,22,26)" fg:x="113" fg:w="17"/><text x="43.0830%" y="287.50">core::iter::traits::i..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter::_{{closure}} (17 samples, 6.46%)</title><rect x="42.9658%" y="261" width="6.4639%" height="15" fill="rgb(217,163,10)" fg:x="113" fg:w="17"/><text x="43.0830%" y="271.50">alloc::collections::v..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (19 samples, 7.22%)</title><rect x="42.5856%" y="517" width="7.2243%" height="15" fill="rgb(213,25,53)" fg:x="112" fg:w="19"/><text x="42.7027%" y="527.50">fringe_vs_astar::structu..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 7.22%)</title><rect x="42.5856%" y="501" width="7.2243%" height="15" fill="rgb(252,105,26)" fg:x="112" fg:w="19"/><text x="42.7027%" y="511.50">&lt;alloc::collections::vec..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (1 samples, 0.38%)</title><rect x="49.4297%" y="485" width="0.3802%" height="15" fill="rgb(220,39,43)" fg:x="130" fg:w="1"/><text x="49.5468%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.38%)</title><rect x="49.4297%" y="469" width="0.3802%" height="15" fill="rgb(229,68,48)" fg:x="130" fg:w="1"/><text x="49.5468%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.38%)</title><rect x="49.4297%" y="453" width="0.3802%" height="15" fill="rgb(252,8,32)" fg:x="130" fg:w="1"/><text x="49.5468%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.38%)</title><rect x="49.4297%" y="437" width="0.3802%" height="15" fill="rgb(223,20,43)" fg:x="130" fg:w="1"/><text x="49.5468%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.38%)</title><rect x="49.4297%" y="421" width="0.3802%" height="15" fill="rgb(229,81,49)" fg:x="130" fg:w="1"/><text x="49.5468%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.38%)</title><rect x="49.4297%" y="405" width="0.3802%" height="15" fill="rgb(236,28,36)" fg:x="130" fg:w="1"/><text x="49.5468%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="49.4297%" y="389" width="0.3802%" height="15" fill="rgb(249,185,26)" fg:x="130" fg:w="1"/><text x="49.5468%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="49.4297%" y="373" width="0.3802%" height="15" fill="rgb(249,174,33)" fg:x="130" fg:w="1"/><text x="49.5468%" y="383.50"></text></g><g><title>sysmalloc (1 samples, 0.38%)</title><rect x="49.4297%" y="357" width="0.3802%" height="15" fill="rgb(233,201,37)" fg:x="130" fg:w="1"/><text x="49.5468%" y="367.50"></text></g><g><title>__glibc_morecore (1 samples, 0.38%)</title><rect x="49.4297%" y="341" width="0.3802%" height="15" fill="rgb(221,78,26)" fg:x="130" fg:w="1"/><text x="49.5468%" y="351.50"></text></g><g><title>__GI___sbrk (1 samples, 0.38%)</title><rect x="49.4297%" y="325" width="0.3802%" height="15" fill="rgb(250,127,30)" fg:x="130" fg:w="1"/><text x="49.5468%" y="335.50"></text></g><g><title>__GI___sbrk (1 samples, 0.38%)</title><rect x="49.4297%" y="309" width="0.3802%" height="15" fill="rgb(230,49,44)" fg:x="130" fg:w="1"/><text x="49.5468%" y="319.50"></text></g><g><title>__brk (1 samples, 0.38%)</title><rect x="49.4297%" y="293" width="0.3802%" height="15" fill="rgb(229,67,23)" fg:x="130" fg:w="1"/><text x="49.5468%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.38%)</title><rect x="49.4297%" y="277" width="0.3802%" height="15" fill="rgb(249,83,47)" fg:x="130" fg:w="1"/><text x="49.5468%" y="287.50"></text></g><g><title>do_syscall_64 (1 samples, 0.38%)</title><rect x="49.4297%" y="261" width="0.3802%" height="15" fill="rgb(215,43,3)" fg:x="130" fg:w="1"/><text x="49.5468%" y="271.50"></text></g><g><title>x64_sys_call (1 samples, 0.38%)</title><rect x="49.4297%" y="245" width="0.3802%" height="15" fill="rgb(238,154,13)" fg:x="130" fg:w="1"/><text x="49.5468%" y="255.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.38%)</title><rect x="49.4297%" y="229" width="0.3802%" height="15" fill="rgb(219,56,2)" fg:x="130" fg:w="1"/><text x="49.5468%" y="239.50"></text></g><g><title>__do_sys_brk (1 samples, 0.38%)</title><rect x="49.4297%" y="213" width="0.3802%" height="15" fill="rgb(233,0,4)" fg:x="130" fg:w="1"/><text x="49.5468%" y="223.50"></text></g><g><title>do_brk_flags (1 samples, 0.38%)</title><rect x="49.4297%" y="197" width="0.3802%" height="15" fill="rgb(235,30,7)" fg:x="130" fg:w="1"/><text x="49.5468%" y="207.50"></text></g><g><title>perf_event_mmap (1 samples, 0.38%)</title><rect x="49.4297%" y="181" width="0.3802%" height="15" fill="rgb(250,79,13)" fg:x="130" fg:w="1"/><text x="49.5468%" y="191.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.38%)</title><rect x="49.4297%" y="165" width="0.3802%" height="15" fill="rgb(211,146,34)" fg:x="130" fg:w="1"/><text x="49.5468%" y="175.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.38%)</title><rect x="49.4297%" y="149" width="0.3802%" height="15" fill="rgb(228,22,38)" fg:x="130" fg:w="1"/><text x="49.5468%" y="159.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (4 samples, 1.52%)</title><rect x="53.6122%" y="485" width="1.5209%" height="15" fill="rgb(235,168,5)" fg:x="141" fg:w="4"/><text x="53.7294%" y="495.50">all..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (4 samples, 1.52%)</title><rect x="53.6122%" y="469" width="1.5209%" height="15" fill="rgb(221,155,16)" fg:x="141" fg:w="4"/><text x="53.7294%" y="479.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 1.52%)</title><rect x="53.6122%" y="453" width="1.5209%" height="15" fill="rgb(215,215,53)" fg:x="141" fg:w="4"/><text x="53.7294%" y="463.50">all..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (18 samples, 6.84%)</title><rect x="49.8099%" y="517" width="6.8441%" height="15" fill="rgb(223,4,10)" fg:x="131" fg:w="18"/><text x="49.9271%" y="527.50">fringe_vs_astar::struc..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (14 samples, 5.32%)</title><rect x="51.3308%" y="501" width="5.3232%" height="15" fill="rgb(234,103,6)" fg:x="135" fg:w="14"/><text x="51.4480%" y="511.50">alloc::collection..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (4 samples, 1.52%)</title><rect x="55.1331%" y="485" width="1.5209%" height="15" fill="rgb(227,97,0)" fg:x="145" fg:w="4"/><text x="55.2503%" y="495.50">all..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (4 samples, 1.52%)</title><rect x="55.1331%" y="469" width="1.5209%" height="15" fill="rgb(234,150,53)" fg:x="145" fg:w="4"/><text x="55.2503%" y="479.50">all..</text></g><g><title>alloc::collections::vec_deque::wrap_index (4 samples, 1.52%)</title><rect x="55.1331%" y="453" width="1.5209%" height="15" fill="rgb(228,201,54)" fg:x="145" fg:w="4"/><text x="55.2503%" y="463.50">all..</text></g><g><title>fringe_vs_astar::context::Context::solve_mode (133 samples, 50.57%)</title><rect x="12.1673%" y="565" width="50.5703%" height="15" fill="rgb(222,22,37)" fg:x="32" fg:w="133"/><text x="12.2845%" y="575.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (118 samples, 44.87%)</title><rect x="17.8707%" y="549" width="44.8669%" height="15" fill="rgb(237,53,32)" fg:x="47" fg:w="118"/><text x="17.9879%" y="559.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (112 samples, 42.59%)</title><rect x="20.1521%" y="533" width="42.5856%" height="15" fill="rgb(233,25,53)" fg:x="53" fg:w="112"/><text x="20.2693%" y="543.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (16 samples, 6.08%)</title><rect x="56.6540%" y="517" width="6.0837%" height="15" fill="rgb(210,40,34)" fg:x="149" fg:w="16"/><text x="56.7712%" y="527.50">fringe_vs_astar::st..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (14 samples, 5.32%)</title><rect x="57.4144%" y="501" width="5.3232%" height="15" fill="rgb(241,220,44)" fg:x="151" fg:w="14"/><text x="57.5316%" y="511.50">alloc::collection..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (4 samples, 1.52%)</title><rect x="61.2167%" y="485" width="1.5209%" height="15" fill="rgb(235,28,35)" fg:x="161" fg:w="4"/><text x="61.3339%" y="495.50">all..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (4 samples, 1.52%)</title><rect x="61.2167%" y="469" width="1.5209%" height="15" fill="rgb(210,56,17)" fg:x="161" fg:w="4"/><text x="61.3339%" y="479.50">all..</text></g><g><title>alloc::collections::vec_deque::wrap_index (4 samples, 1.52%)</title><rect x="61.2167%" y="453" width="1.5209%" height="15" fill="rgb(224,130,29)" fg:x="161" fg:w="4"/><text x="61.3339%" y="463.50">all..</text></g><g><title>fringe_vs_astar::context::load_problems (1 samples, 0.38%)</title><rect x="62.7376%" y="565" width="0.3802%" height="15" fill="rgb(235,212,8)" fg:x="165" fg:w="1"/><text x="62.8548%" y="575.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.38%)</title><rect x="62.7376%" y="549" width="0.3802%" height="15" fill="rgb(223,33,50)" fg:x="165" fg:w="1"/><text x="62.8548%" y="559.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.38%)</title><rect x="62.7376%" y="533" width="0.3802%" height="15" fill="rgb(219,149,13)" fg:x="165" fg:w="1"/><text x="62.8548%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.38%)</title><rect x="62.7376%" y="517" width="0.3802%" height="15" fill="rgb(250,156,29)" fg:x="165" fg:w="1"/><text x="62.8548%" y="527.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.38%)</title><rect x="62.7376%" y="501" width="0.3802%" height="15" fill="rgb(216,193,19)" fg:x="165" fg:w="1"/><text x="62.8548%" y="511.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.38%)</title><rect x="62.7376%" y="485" width="0.3802%" height="15" fill="rgb(216,135,14)" fg:x="165" fg:w="1"/><text x="62.8548%" y="495.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.38%)</title><rect x="62.7376%" y="469" width="0.3802%" height="15" fill="rgb(241,47,5)" fg:x="165" fg:w="1"/><text x="62.8548%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.38%)</title><rect x="62.7376%" y="453" width="0.3802%" height="15" fill="rgb(233,42,35)" fg:x="165" fg:w="1"/><text x="62.8548%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.38%)</title><rect x="62.7376%" y="437" width="0.3802%" height="15" fill="rgb(231,13,6)" fg:x="165" fg:w="1"/><text x="62.8548%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.38%)</title><rect x="62.7376%" y="421" width="0.3802%" height="15" fill="rgb(207,181,40)" fg:x="165" fg:w="1"/><text x="62.8548%" y="431.50"></text></g><g><title>x64_sys_call (1 samples, 0.38%)</title><rect x="62.7376%" y="405" width="0.3802%" height="15" fill="rgb(254,173,49)" fg:x="165" fg:w="1"/><text x="62.8548%" y="415.50"></text></g><g><title>__x64_sys_write (1 samples, 0.38%)</title><rect x="62.7376%" y="389" width="0.3802%" height="15" fill="rgb(221,1,38)" fg:x="165" fg:w="1"/><text x="62.8548%" y="399.50"></text></g><g><title>ksys_write (1 samples, 0.38%)</title><rect x="62.7376%" y="373" width="0.3802%" height="15" fill="rgb(206,124,46)" fg:x="165" fg:w="1"/><text x="62.8548%" y="383.50"></text></g><g><title>vfs_write (1 samples, 0.38%)</title><rect x="62.7376%" y="357" width="0.3802%" height="15" fill="rgb(249,21,11)" fg:x="165" fg:w="1"/><text x="62.8548%" y="367.50"></text></g><g><title>tty_write (1 samples, 0.38%)</title><rect x="62.7376%" y="341" width="0.3802%" height="15" fill="rgb(222,201,40)" fg:x="165" fg:w="1"/><text x="62.8548%" y="351.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.38%)</title><rect x="62.7376%" y="325" width="0.3802%" height="15" fill="rgb(235,61,29)" fg:x="165" fg:w="1"/><text x="62.8548%" y="335.50"></text></g><g><title>ldsem_up_read (1 samples, 0.38%)</title><rect x="62.7376%" y="309" width="0.3802%" height="15" fill="rgb(219,207,3)" fg:x="165" fg:w="1"/><text x="62.8548%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.76%)</title><rect x="63.4981%" y="533" width="0.7605%" height="15" fill="rgb(222,56,46)" fg:x="167" fg:w="2"/><text x="63.6153%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.76%)</title><rect x="63.4981%" y="517" width="0.7605%" height="15" fill="rgb(239,76,54)" fg:x="167" fg:w="2"/><text x="63.6153%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.76%)</title><rect x="63.4981%" y="501" width="0.7605%" height="15" fill="rgb(231,124,27)" fg:x="167" fg:w="2"/><text x="63.6153%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.76%)</title><rect x="64.2586%" y="533" width="0.7605%" height="15" fill="rgb(249,195,6)" fg:x="169" fg:w="2"/><text x="64.3757%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.38%)</title><rect x="64.6388%" y="517" width="0.3802%" height="15" fill="rgb(237,174,47)" fg:x="170" fg:w="1"/><text x="64.7560%" y="527.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.38%)</title><rect x="64.6388%" y="501" width="0.3802%" height="15" fill="rgb(206,201,31)" fg:x="170" fg:w="1"/><text x="64.7560%" y="511.50"></text></g><g><title>exc_page_fault (1 samples, 0.38%)</title><rect x="64.6388%" y="485" width="0.3802%" height="15" fill="rgb(231,57,52)" fg:x="170" fg:w="1"/><text x="64.7560%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.38%)</title><rect x="64.6388%" y="469" width="0.3802%" height="15" fill="rgb(248,177,22)" fg:x="170" fg:w="1"/><text x="64.7560%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.38%)</title><rect x="64.6388%" y="453" width="0.3802%" height="15" fill="rgb(215,211,37)" fg:x="170" fg:w="1"/><text x="64.7560%" y="463.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.38%)</title><rect x="64.6388%" y="437" width="0.3802%" height="15" fill="rgb(241,128,51)" fg:x="170" fg:w="1"/><text x="64.7560%" y="447.50"></text></g><g><title>handle_pte_fault (1 samples, 0.38%)</title><rect x="64.6388%" y="421" width="0.3802%" height="15" fill="rgb(227,165,31)" fg:x="170" fg:w="1"/><text x="64.7560%" y="431.50"></text></g><g><title>do_anonymous_page (1 samples, 0.38%)</title><rect x="64.6388%" y="405" width="0.3802%" height="15" fill="rgb(228,167,24)" fg:x="170" fg:w="1"/><text x="64.7560%" y="415.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.38%)</title><rect x="64.6388%" y="389" width="0.3802%" height="15" fill="rgb(228,143,12)" fg:x="170" fg:w="1"/><text x="64.7560%" y="399.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.38%)</title><rect x="64.6388%" y="373" width="0.3802%" height="15" fill="rgb(249,149,8)" fg:x="170" fg:w="1"/><text x="64.7560%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="65.3992%" y="373" width="0.3802%" height="15" fill="rgb(243,35,44)" fg:x="172" fg:w="1"/><text x="65.5164%" y="383.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.14%)</title><rect x="65.3992%" y="389" width="1.1407%" height="15" fill="rgb(246,89,9)" fg:x="172" fg:w="3"/><text x="65.5164%" y="399.50">&lt;a..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.76%)</title><rect x="65.7795%" y="373" width="0.7605%" height="15" fill="rgb(233,213,13)" fg:x="173" fg:w="2"/><text x="65.8967%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 1.90%)</title><rect x="65.3992%" y="469" width="1.9011%" height="15" fill="rgb(233,141,41)" fg:x="172" fg:w="5"/><text x="65.5164%" y="479.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 1.90%)</title><rect x="65.3992%" y="453" width="1.9011%" height="15" fill="rgb(239,167,4)" fg:x="172" fg:w="5"/><text x="65.5164%" y="463.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 1.90%)</title><rect x="65.3992%" y="437" width="1.9011%" height="15" fill="rgb(209,217,16)" fg:x="172" fg:w="5"/><text x="65.5164%" y="447.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 1.90%)</title><rect x="65.3992%" y="421" width="1.9011%" height="15" fill="rgb(219,88,35)" fg:x="172" fg:w="5"/><text x="65.5164%" y="431.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 1.90%)</title><rect x="65.3992%" y="405" width="1.9011%" height="15" fill="rgb(220,193,23)" fg:x="172" fg:w="5"/><text x="65.5164%" y="415.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.76%)</title><rect x="66.5399%" y="389" width="0.7605%" height="15" fill="rgb(230,90,52)" fg:x="175" fg:w="2"/><text x="66.6571%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.76%)</title><rect x="66.5399%" y="373" width="0.7605%" height="15" fill="rgb(252,106,19)" fg:x="175" fg:w="2"/><text x="66.6571%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (2 samples, 0.76%)</title><rect x="66.5399%" y="357" width="0.7605%" height="15" fill="rgb(206,74,20)" fg:x="175" fg:w="2"/><text x="66.6571%" y="367.50"></text></g><g><title>core::ptr::write (2 samples, 0.76%)</title><rect x="66.5399%" y="341" width="0.7605%" height="15" fill="rgb(230,138,44)" fg:x="175" fg:w="2"/><text x="66.6571%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.38%)</title><rect x="67.3004%" y="469" width="0.3802%" height="15" fill="rgb(235,182,43)" fg:x="177" fg:w="1"/><text x="67.4176%" y="479.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.38%)</title><rect x="67.3004%" y="453" width="0.3802%" height="15" fill="rgb(242,16,51)" fg:x="177" fg:w="1"/><text x="67.4176%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.38%)</title><rect x="67.3004%" y="437" width="0.3802%" height="15" fill="rgb(248,9,4)" fg:x="177" fg:w="1"/><text x="67.4176%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.38%)</title><rect x="67.3004%" y="421" width="0.3802%" height="15" fill="rgb(210,31,22)" fg:x="177" fg:w="1"/><text x="67.4176%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.38%)</title><rect x="67.3004%" y="405" width="0.3802%" height="15" fill="rgb(239,54,39)" fg:x="177" fg:w="1"/><text x="67.4176%" y="415.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.38%)</title><rect x="69.2015%" y="213" width="0.3802%" height="15" fill="rgb(230,99,41)" fg:x="182" fg:w="1"/><text x="69.3187%" y="223.50"></text></g><g><title>charge_memcg (1 samples, 0.38%)</title><rect x="69.2015%" y="197" width="0.3802%" height="15" fill="rgb(253,106,12)" fg:x="182" fg:w="1"/><text x="69.3187%" y="207.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.38%)</title><rect x="69.5817%" y="213" width="0.3802%" height="15" fill="rgb(213,46,41)" fg:x="183" fg:w="1"/><text x="69.6989%" y="223.50"></text></g><g><title>folio_add_lru (1 samples, 0.38%)</title><rect x="69.5817%" y="197" width="0.3802%" height="15" fill="rgb(215,133,35)" fg:x="183" fg:w="1"/><text x="69.6989%" y="207.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.38%)</title><rect x="69.5817%" y="181" width="0.3802%" height="15" fill="rgb(213,28,5)" fg:x="183" fg:w="1"/><text x="69.6989%" y="191.50"></text></g><g><title>lru_add_fn (1 samples, 0.38%)</title><rect x="69.5817%" y="165" width="0.3802%" height="15" fill="rgb(215,77,49)" fg:x="183" fg:w="1"/><text x="69.6989%" y="175.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.38%)</title><rect x="69.5817%" y="149" width="0.3802%" height="15" fill="rgb(248,100,22)" fg:x="183" fg:w="1"/><text x="69.6989%" y="159.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.38%)</title><rect x="69.5817%" y="133" width="0.3802%" height="15" fill="rgb(208,67,9)" fg:x="183" fg:w="1"/><text x="69.6989%" y="143.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.38%)</title><rect x="69.5817%" y="117" width="0.3802%" height="15" fill="rgb(219,133,21)" fg:x="183" fg:w="1"/><text x="69.6989%" y="127.50"></text></g><g><title>do_anonymous_page (3 samples, 1.14%)</title><rect x="69.2015%" y="229" width="1.1407%" height="15" fill="rgb(246,46,29)" fg:x="182" fg:w="3"/><text x="69.3187%" y="239.50">do..</text></g><g><title>vma_alloc_folio (1 samples, 0.38%)</title><rect x="69.9620%" y="213" width="0.3802%" height="15" fill="rgb(246,185,52)" fg:x="184" fg:w="1"/><text x="70.0792%" y="223.50"></text></g><g><title>__folio_alloc (1 samples, 0.38%)</title><rect x="69.9620%" y="197" width="0.3802%" height="15" fill="rgb(252,136,11)" fg:x="184" fg:w="1"/><text x="70.0792%" y="207.50"></text></g><g><title>__alloc_pages (1 samples, 0.38%)</title><rect x="69.9620%" y="181" width="0.3802%" height="15" fill="rgb(219,138,53)" fg:x="184" fg:w="1"/><text x="70.0792%" y="191.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.38%)</title><rect x="69.9620%" y="165" width="0.3802%" height="15" fill="rgb(211,51,23)" fg:x="184" fg:w="1"/><text x="70.0792%" y="175.50"></text></g><g><title>rmqueue (1 samples, 0.38%)</title><rect x="69.9620%" y="149" width="0.3802%" height="15" fill="rgb(247,221,28)" fg:x="184" fg:w="1"/><text x="70.0792%" y="159.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.38%)</title><rect x="69.9620%" y="133" width="0.3802%" height="15" fill="rgb(251,222,45)" fg:x="184" fg:w="1"/><text x="70.0792%" y="143.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.38%)</title><rect x="69.9620%" y="117" width="0.3802%" height="15" fill="rgb(217,162,53)" fg:x="184" fg:w="1"/><text x="70.0792%" y="127.50"></text></g><g><title>handle_mm_fault (5 samples, 1.90%)</title><rect x="68.8213%" y="277" width="1.9011%" height="15" fill="rgb(229,93,14)" fg:x="181" fg:w="5"/><text x="68.9385%" y="287.50">hand..</text></g><g><title>__handle_mm_fault (5 samples, 1.90%)</title><rect x="68.8213%" y="261" width="1.9011%" height="15" fill="rgb(209,67,49)" fg:x="181" fg:w="5"/><text x="68.9385%" y="271.50">__ha..</text></g><g><title>handle_pte_fault (4 samples, 1.52%)</title><rect x="69.2015%" y="245" width="1.5209%" height="15" fill="rgb(213,87,29)" fg:x="182" fg:w="4"/><text x="69.3187%" y="255.50">han..</text></g><g><title>vma_alloc_folio (1 samples, 0.38%)</title><rect x="70.3422%" y="229" width="0.3802%" height="15" fill="rgb(205,151,52)" fg:x="185" fg:w="1"/><text x="70.4594%" y="239.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.38%)</title><rect x="70.7224%" y="277" width="0.3802%" height="15" fill="rgb(253,215,39)" fg:x="186" fg:w="1"/><text x="70.8396%" y="287.50"></text></g><g><title>mas_walk (1 samples, 0.38%)</title><rect x="70.7224%" y="261" width="0.3802%" height="15" fill="rgb(221,220,41)" fg:x="186" fg:w="1"/><text x="70.8396%" y="271.50"></text></g><g><title>mtree_range_walk (1 samples, 0.38%)</title><rect x="70.7224%" y="245" width="0.3802%" height="15" fill="rgb(218,133,21)" fg:x="186" fg:w="1"/><text x="70.8396%" y="255.50"></text></g><g><title>asm_exc_page_fault (7 samples, 2.66%)</title><rect x="68.8213%" y="325" width="2.6616%" height="15" fill="rgb(221,193,43)" fg:x="181" fg:w="7"/><text x="68.9385%" y="335.50">asm_exc..</text></g><g><title>exc_page_fault (7 samples, 2.66%)</title><rect x="68.8213%" y="309" width="2.6616%" height="15" fill="rgb(240,128,52)" fg:x="181" fg:w="7"/><text x="68.9385%" y="319.50">exc_pag..</text></g><g><title>do_user_addr_fault (7 samples, 2.66%)</title><rect x="68.8213%" y="293" width="2.6616%" height="15" fill="rgb(253,114,12)" fg:x="181" fg:w="7"/><text x="68.9385%" y="303.50">do_user..</text></g><g><title>up_read (1 samples, 0.38%)</title><rect x="71.1027%" y="277" width="0.3802%" height="15" fill="rgb(215,223,47)" fg:x="187" fg:w="1"/><text x="71.2198%" y="287.50"></text></g><g><title>sync_regs (2 samples, 0.76%)</title><rect x="71.4829%" y="325" width="0.7605%" height="15" fill="rgb(248,225,23)" fg:x="188" fg:w="2"/><text x="71.6001%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 7.60%)</title><rect x="65.0190%" y="533" width="7.6046%" height="15" fill="rgb(250,108,0)" fg:x="171" fg:w="20"/><text x="65.1362%" y="543.50">core::iter::traits::itera..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 7.60%)</title><rect x="65.0190%" y="517" width="7.6046%" height="15" fill="rgb(228,208,7)" fg:x="171" fg:w="20"/><text x="65.1362%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 7.22%)</title><rect x="65.3992%" y="501" width="7.2243%" height="15" fill="rgb(244,45,10)" fg:x="172" fg:w="19"/><text x="65.5164%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 7.22%)</title><rect x="65.3992%" y="485" width="7.2243%" height="15" fill="rgb(207,125,25)" fg:x="172" fg:w="19"/><text x="65.5164%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 4.94%)</title><rect x="67.6806%" y="469" width="4.9430%" height="15" fill="rgb(210,195,18)" fg:x="178" fg:w="13"/><text x="67.7978%" y="479.50">alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 4.94%)</title><rect x="67.6806%" y="453" width="4.9430%" height="15" fill="rgb(249,80,12)" fg:x="178" fg:w="13"/><text x="67.7978%" y="463.50">alloc::vec::Vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 4.94%)</title><rect x="67.6806%" y="437" width="4.9430%" height="15" fill="rgb(221,65,9)" fg:x="178" fg:w="13"/><text x="67.7978%" y="447.50">alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (13 samples, 4.94%)</title><rect x="67.6806%" y="421" width="4.9430%" height="15" fill="rgb(235,49,36)" fg:x="178" fg:w="13"/><text x="67.7978%" y="431.50">alloc::raw_vec:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 4.94%)</title><rect x="67.6806%" y="405" width="4.9430%" height="15" fill="rgb(225,32,20)" fg:x="178" fg:w="13"/><text x="67.7978%" y="415.50">&lt;alloc::alloc::..</text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 4.94%)</title><rect x="67.6806%" y="389" width="4.9430%" height="15" fill="rgb(215,141,46)" fg:x="178" fg:w="13"/><text x="67.7978%" y="399.50">alloc::alloc::G..</text></g><g><title>alloc::alloc::alloc (13 samples, 4.94%)</title><rect x="67.6806%" y="373" width="4.9430%" height="15" fill="rgb(250,160,47)" fg:x="178" fg:w="13"/><text x="67.7978%" y="383.50">alloc::alloc::a..</text></g><g><title>__GI___libc_malloc (13 samples, 4.94%)</title><rect x="67.6806%" y="357" width="4.9430%" height="15" fill="rgb(216,222,40)" fg:x="178" fg:w="13"/><text x="67.7978%" y="367.50">__GI___libc_mal..</text></g><g><title>_int_malloc (12 samples, 4.56%)</title><rect x="68.0608%" y="341" width="4.5627%" height="15" fill="rgb(234,217,39)" fg:x="179" fg:w="12"/><text x="68.1780%" y="351.50">_int_malloc</text></g><g><title>sysmalloc (1 samples, 0.38%)</title><rect x="72.2433%" y="325" width="0.3802%" height="15" fill="rgb(207,178,40)" fg:x="190" fg:w="1"/><text x="72.3605%" y="335.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.38%)</title><rect x="72.2433%" y="309" width="0.3802%" height="15" fill="rgb(221,136,13)" fg:x="190" fg:w="1"/><text x="72.3605%" y="319.50"></text></g><g><title>exc_page_fault (1 samples, 0.38%)</title><rect x="72.2433%" y="293" width="0.3802%" height="15" fill="rgb(249,199,10)" fg:x="190" fg:w="1"/><text x="72.3605%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.38%)</title><rect x="72.2433%" y="277" width="0.3802%" height="15" fill="rgb(249,222,13)" fg:x="190" fg:w="1"/><text x="72.3605%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.38%)</title><rect x="72.2433%" y="261" width="0.3802%" height="15" fill="rgb(244,185,38)" fg:x="190" fg:w="1"/><text x="72.3605%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.38%)</title><rect x="72.2433%" y="245" width="0.3802%" height="15" fill="rgb(236,202,9)" fg:x="190" fg:w="1"/><text x="72.3605%" y="255.50"></text></g><g><title>handle_pte_fault (1 samples, 0.38%)</title><rect x="72.2433%" y="229" width="0.3802%" height="15" fill="rgb(250,229,37)" fg:x="190" fg:w="1"/><text x="72.3605%" y="239.50"></text></g><g><title>do_anonymous_page (1 samples, 0.38%)</title><rect x="72.2433%" y="213" width="0.3802%" height="15" fill="rgb(206,174,23)" fg:x="190" fg:w="1"/><text x="72.3605%" y="223.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.38%)</title><rect x="72.2433%" y="197" width="0.3802%" height="15" fill="rgb(211,33,43)" fg:x="190" fg:w="1"/><text x="72.3605%" y="207.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.38%)</title><rect x="72.2433%" y="181" width="0.3802%" height="15" fill="rgb(245,58,50)" fg:x="190" fg:w="1"/><text x="72.3605%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 1.52%)</title><rect x="72.6236%" y="485" width="1.5209%" height="15" fill="rgb(244,68,36)" fg:x="191" fg:w="4"/><text x="72.7408%" y="495.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (4 samples, 1.52%)</title><rect x="72.6236%" y="469" width="1.5209%" height="15" fill="rgb(232,229,15)" fg:x="191" fg:w="4"/><text x="72.7408%" y="479.50">all..</text></g><g><title>__GI___libc_free (4 samples, 1.52%)</title><rect x="72.6236%" y="453" width="1.5209%" height="15" fill="rgb(254,30,23)" fg:x="191" fg:w="4"/><text x="72.7408%" y="463.50">__G..</text></g><g><title>_int_free (2 samples, 0.76%)</title><rect x="73.3840%" y="437" width="0.7605%" height="15" fill="rgb(235,160,14)" fg:x="193" fg:w="2"/><text x="73.5012%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 2.28%)</title><rect x="72.6236%" y="533" width="2.2814%" height="15" fill="rgb(212,155,44)" fg:x="191" fg:w="6"/><text x="72.7408%" y="543.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 2.28%)</title><rect x="72.6236%" y="517" width="2.2814%" height="15" fill="rgb(226,2,50)" fg:x="191" fg:w="6"/><text x="72.7408%" y="527.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 2.28%)</title><rect x="72.6236%" y="501" width="2.2814%" height="15" fill="rgb(234,177,6)" fg:x="191" fg:w="6"/><text x="72.7408%" y="511.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.76%)</title><rect x="74.1445%" y="485" width="0.7605%" height="15" fill="rgb(217,24,9)" fg:x="195" fg:w="2"/><text x="74.2617%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.76%)</title><rect x="74.1445%" y="469" width="0.7605%" height="15" fill="rgb(220,13,46)" fg:x="195" fg:w="2"/><text x="74.2617%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (2 samples, 0.76%)</title><rect x="74.9049%" y="533" width="0.7605%" height="15" fill="rgb(239,221,27)" fg:x="197" fg:w="2"/><text x="75.0221%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (2 samples, 0.76%)</title><rect x="74.9049%" y="517" width="0.7605%" height="15" fill="rgb(222,198,25)" fg:x="197" fg:w="2"/><text x="75.0221%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.76%)</title><rect x="74.9049%" y="501" width="0.7605%" height="15" fill="rgb(211,99,13)" fg:x="197" fg:w="2"/><text x="75.0221%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.76%)</title><rect x="74.9049%" y="485" width="0.7605%" height="15" fill="rgb(232,111,31)" fg:x="197" fg:w="2"/><text x="75.0221%" y="495.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (1 samples, 0.38%)</title><rect x="77.1863%" y="517" width="0.3802%" height="15" fill="rgb(245,82,37)" fg:x="203" fg:w="1"/><text x="77.3035%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 1.14%)</title><rect x="77.5665%" y="517" width="1.1407%" height="15" fill="rgb(227,149,46)" fg:x="204" fg:w="3"/><text x="77.6837%" y="527.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 1.14%)</title><rect x="77.5665%" y="501" width="1.1407%" height="15" fill="rgb(218,36,50)" fg:x="204" fg:w="3"/><text x="77.6837%" y="511.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 1.14%)</title><rect x="77.5665%" y="485" width="1.1407%" height="15" fill="rgb(226,80,48)" fg:x="204" fg:w="3"/><text x="77.6837%" y="495.50">al..</text></g><g><title>alloc::alloc::alloc (3 samples, 1.14%)</title><rect x="77.5665%" y="469" width="1.1407%" height="15" fill="rgb(238,224,15)" fg:x="204" fg:w="3"/><text x="77.6837%" y="479.50">al..</text></g><g><title>__GI___libc_malloc (3 samples, 1.14%)</title><rect x="77.5665%" y="453" width="1.1407%" height="15" fill="rgb(241,136,10)" fg:x="204" fg:w="3"/><text x="77.6837%" y="463.50">__..</text></g><g><title>tcache_get (1 samples, 0.38%)</title><rect x="78.3270%" y="437" width="0.3802%" height="15" fill="rgb(208,32,45)" fg:x="206" fg:w="1"/><text x="78.4442%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="79.4677%" y="373" width="0.3802%" height="15" fill="rgb(207,135,9)" fg:x="209" fg:w="1"/><text x="79.5849%" y="383.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.76%)</title><rect x="79.8479%" y="229" width="0.7605%" height="15" fill="rgb(206,86,44)" fg:x="210" fg:w="2"/><text x="79.9651%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.76%)</title><rect x="79.8479%" y="213" width="0.7605%" height="15" fill="rgb(245,177,15)" fg:x="210" fg:w="2"/><text x="79.9651%" y="223.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.38%)</title><rect x="80.2281%" y="197" width="0.3802%" height="15" fill="rgb(206,64,50)" fg:x="211" fg:w="1"/><text x="80.3453%" y="207.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (3 samples, 1.14%)</title><rect x="79.8479%" y="373" width="1.1407%" height="15" fill="rgb(234,36,40)" fg:x="210" fg:w="3"/><text x="79.9651%" y="383.50">co..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (3 samples, 1.14%)</title><rect x="79.8479%" y="357" width="1.1407%" height="15" fill="rgb(213,64,8)" fg:x="210" fg:w="3"/><text x="79.9651%" y="367.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 1.14%)</title><rect x="79.8479%" y="341" width="1.1407%" height="15" fill="rgb(210,75,36)" fg:x="210" fg:w="3"/><text x="79.9651%" y="351.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.14%)</title><rect x="79.8479%" y="325" width="1.1407%" height="15" fill="rgb(229,88,21)" fg:x="210" fg:w="3"/><text x="79.9651%" y="335.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.14%)</title><rect x="79.8479%" y="309" width="1.1407%" height="15" fill="rgb(252,204,47)" fg:x="210" fg:w="3"/><text x="79.9651%" y="319.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.14%)</title><rect x="79.8479%" y="293" width="1.1407%" height="15" fill="rgb(208,77,27)" fg:x="210" fg:w="3"/><text x="79.9651%" y="303.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.14%)</title><rect x="79.8479%" y="277" width="1.1407%" height="15" fill="rgb(221,76,26)" fg:x="210" fg:w="3"/><text x="79.9651%" y="287.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 1.14%)</title><rect x="79.8479%" y="261" width="1.1407%" height="15" fill="rgb(225,139,18)" fg:x="210" fg:w="3"/><text x="79.9651%" y="271.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 1.14%)</title><rect x="79.8479%" y="245" width="1.1407%" height="15" fill="rgb(230,137,11)" fg:x="210" fg:w="3"/><text x="79.9651%" y="255.50">co..</text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (1 samples, 0.38%)</title><rect x="80.6084%" y="229" width="0.3802%" height="15" fill="rgb(212,28,1)" fg:x="212" fg:w="1"/><text x="80.7256%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.38%)</title><rect x="80.6084%" y="213" width="0.3802%" height="15" fill="rgb(248,164,17)" fg:x="212" fg:w="1"/><text x="80.7256%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.38%)</title><rect x="80.6084%" y="197" width="0.3802%" height="15" fill="rgb(222,171,42)" fg:x="212" fg:w="1"/><text x="80.7256%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 1.90%)</title><rect x="79.4677%" y="421" width="1.9011%" height="15" fill="rgb(243,84,45)" fg:x="209" fg:w="5"/><text x="79.5849%" y="431.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 1.90%)</title><rect x="79.4677%" y="405" width="1.9011%" height="15" fill="rgb(252,49,23)" fg:x="209" fg:w="5"/><text x="79.5849%" y="415.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (5 samples, 1.90%)</title><rect x="79.4677%" y="389" width="1.9011%" height="15" fill="rgb(215,19,7)" fg:x="209" fg:w="5"/><text x="79.5849%" y="399.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.38%)</title><rect x="80.9886%" y="373" width="0.3802%" height="15" fill="rgb(238,81,41)" fg:x="213" fg:w="1"/><text x="81.1058%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (1 samples, 0.38%)</title><rect x="80.9886%" y="357" width="0.3802%" height="15" fill="rgb(210,199,37)" fg:x="213" fg:w="1"/><text x="81.1058%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.38%)</title><rect x="80.9886%" y="341" width="0.3802%" height="15" fill="rgb(244,192,49)" fg:x="213" fg:w="1"/><text x="81.1058%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.38%)</title><rect x="80.9886%" y="325" width="0.3802%" height="15" fill="rgb(226,211,11)" fg:x="213" fg:w="1"/><text x="81.1058%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.38%)</title><rect x="80.9886%" y="309" width="0.3802%" height="15" fill="rgb(236,162,54)" fg:x="213" fg:w="1"/><text x="81.1058%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.38%)</title><rect x="80.9886%" y="293" width="0.3802%" height="15" fill="rgb(220,229,9)" fg:x="213" fg:w="1"/><text x="81.1058%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.38%)</title><rect x="80.9886%" y="277" width="0.3802%" height="15" fill="rgb(250,87,22)" fg:x="213" fg:w="1"/><text x="81.1058%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (1 samples, 0.38%)</title><rect x="80.9886%" y="261" width="0.3802%" height="15" fill="rgb(239,43,17)" fg:x="213" fg:w="1"/><text x="81.1058%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.38%)</title><rect x="80.9886%" y="245" width="0.3802%" height="15" fill="rgb(231,177,25)" fg:x="213" fg:w="1"/><text x="81.1058%" y="255.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="80.9886%" y="229" width="0.3802%" height="15" fill="rgb(219,179,1)" fg:x="213" fg:w="1"/><text x="81.1058%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="80.9886%" y="213" width="0.3802%" height="15" fill="rgb(238,219,53)" fg:x="213" fg:w="1"/><text x="81.1058%" y="223.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.38%)</title><rect x="80.9886%" y="197" width="0.3802%" height="15" fill="rgb(232,167,36)" fg:x="213" fg:w="1"/><text x="81.1058%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.38%)</title><rect x="81.3688%" y="421" width="0.3802%" height="15" fill="rgb(244,19,51)" fg:x="214" fg:w="1"/><text x="81.4860%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.38%)</title><rect x="81.3688%" y="405" width="0.3802%" height="15" fill="rgb(224,6,22)" fg:x="214" fg:w="1"/><text x="81.4860%" y="415.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.76%)</title><rect x="84.4106%" y="261" width="0.7605%" height="15" fill="rgb(224,145,5)" fg:x="222" fg:w="2"/><text x="84.5278%" y="271.50"></text></g><g><title>intel_pmu_enable_all (1 samples, 0.38%)</title><rect x="85.9316%" y="69" width="0.3802%" height="15" fill="rgb(234,130,49)" fg:x="226" fg:w="1"/><text x="86.0487%" y="79.50"></text></g><g><title>_int_free (7 samples, 2.66%)</title><rect x="85.1711%" y="261" width="2.6616%" height="15" fill="rgb(254,6,2)" fg:x="224" fg:w="7"/><text x="85.2883%" y="271.50">_int_fr..</text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 1.90%)</title><rect x="85.9316%" y="245" width="1.9011%" height="15" fill="rgb(208,96,46)" fg:x="226" fg:w="5"/><text x="86.0487%" y="255.50">asm_..</text></g><g><title>sysvec_reschedule_ipi (5 samples, 1.90%)</title><rect x="85.9316%" y="229" width="1.9011%" height="15" fill="rgb(239,3,39)" fg:x="226" fg:w="5"/><text x="86.0487%" y="239.50">sysv..</text></g><g><title>irqentry_exit (5 samples, 1.90%)</title><rect x="85.9316%" y="213" width="1.9011%" height="15" fill="rgb(233,210,1)" fg:x="226" fg:w="5"/><text x="86.0487%" y="223.50">irqe..</text></g><g><title>irqentry_exit_to_user_mode (5 samples, 1.90%)</title><rect x="85.9316%" y="197" width="1.9011%" height="15" fill="rgb(244,137,37)" fg:x="226" fg:w="5"/><text x="86.0487%" y="207.50">irqe..</text></g><g><title>exit_to_user_mode_prepare (5 samples, 1.90%)</title><rect x="85.9316%" y="181" width="1.9011%" height="15" fill="rgb(240,136,2)" fg:x="226" fg:w="5"/><text x="86.0487%" y="191.50">exit..</text></g><g><title>exit_to_user_mode_loop (5 samples, 1.90%)</title><rect x="85.9316%" y="165" width="1.9011%" height="15" fill="rgb(239,18,37)" fg:x="226" fg:w="5"/><text x="86.0487%" y="175.50">exit..</text></g><g><title>schedule (5 samples, 1.90%)</title><rect x="85.9316%" y="149" width="1.9011%" height="15" fill="rgb(218,185,22)" fg:x="226" fg:w="5"/><text x="86.0487%" y="159.50">sche..</text></g><g><title>__schedule (5 samples, 1.90%)</title><rect x="85.9316%" y="133" width="1.9011%" height="15" fill="rgb(225,218,4)" fg:x="226" fg:w="5"/><text x="86.0487%" y="143.50">__sc..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 1.90%)</title><rect x="85.9316%" y="117" width="1.9011%" height="15" fill="rgb(230,182,32)" fg:x="226" fg:w="5"/><text x="86.0487%" y="127.50">fini..</text></g><g><title>__perf_event_task_sched_in (5 samples, 1.90%)</title><rect x="85.9316%" y="101" width="1.9011%" height="15" fill="rgb(242,56,43)" fg:x="226" fg:w="5"/><text x="86.0487%" y="111.50">__pe..</text></g><g><title>perf_ctx_enable (5 samples, 1.90%)</title><rect x="85.9316%" y="85" width="1.9011%" height="15" fill="rgb(233,99,24)" fg:x="226" fg:w="5"/><text x="86.0487%" y="95.50">perf..</text></g><g><title>x86_pmu_enable (4 samples, 1.52%)</title><rect x="86.3118%" y="69" width="1.5209%" height="15" fill="rgb(234,209,42)" fg:x="227" fg:w="4"/><text x="86.4290%" y="79.50">x86..</text></g><g><title>intel_pmu_enable_all (4 samples, 1.52%)</title><rect x="86.3118%" y="53" width="1.5209%" height="15" fill="rgb(227,7,12)" fg:x="227" fg:w="4"/><text x="86.4290%" y="63.50">int..</text></g><g><title>native_write_msr (4 samples, 1.52%)</title><rect x="86.3118%" y="37" width="1.5209%" height="15" fill="rgb(245,203,43)" fg:x="227" fg:w="4"/><text x="86.4290%" y="47.50">nat..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 7.60%)</title><rect x="81.7490%" y="421" width="7.6046%" height="15" fill="rgb(238,205,33)" fg:x="215" fg:w="20"/><text x="81.8662%" y="431.50">alloc::vec::Vec&lt;T,A&gt;::res..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 7.60%)</title><rect x="81.7490%" y="405" width="7.6046%" height="15" fill="rgb(231,56,7)" fg:x="215" fg:w="20"/><text x="81.8662%" y="415.50">alloc::raw_vec::RawVec&lt;T,..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 7.60%)</title><rect x="81.7490%" y="389" width="7.6046%" height="15" fill="rgb(244,186,29)" fg:x="215" fg:w="20"/><text x="81.8662%" y="399.50">alloc::raw_vec::RawVec&lt;T,..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 7.60%)</title><rect x="81.7490%" y="373" width="7.6046%" height="15" fill="rgb(234,111,31)" fg:x="215" fg:w="20"/><text x="81.8662%" y="383.50">alloc::raw_vec::RawVec&lt;T,..</text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 7.60%)</title><rect x="81.7490%" y="357" width="7.6046%" height="15" fill="rgb(241,149,10)" fg:x="215" fg:w="20"/><text x="81.8662%" y="367.50">alloc::raw_vec::finish_gr..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 7.22%)</title><rect x="82.1293%" y="341" width="7.2243%" height="15" fill="rgb(249,206,44)" fg:x="216" fg:w="19"/><text x="82.2465%" y="351.50">&lt;alloc::alloc::Global as..</text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 7.22%)</title><rect x="82.1293%" y="325" width="7.2243%" height="15" fill="rgb(251,153,30)" fg:x="216" fg:w="19"/><text x="82.2465%" y="335.50">alloc::alloc::Global::gr..</text></g><g><title>alloc::alloc::realloc (19 samples, 7.22%)</title><rect x="82.1293%" y="309" width="7.2243%" height="15" fill="rgb(239,152,38)" fg:x="216" fg:w="19"/><text x="82.2465%" y="319.50">alloc::alloc::realloc</text></g><g><title>__GI___libc_realloc (19 samples, 7.22%)</title><rect x="82.1293%" y="293" width="7.2243%" height="15" fill="rgb(249,139,47)" fg:x="216" fg:w="19"/><text x="82.2465%" y="303.50">__GI___libc_realloc</text></g><g><title>_int_realloc (17 samples, 6.46%)</title><rect x="82.8897%" y="277" width="6.4639%" height="15" fill="rgb(244,64,35)" fg:x="218" fg:w="17"/><text x="83.0069%" y="287.50">_int_realloc</text></g><g><title>_int_malloc (4 samples, 1.52%)</title><rect x="87.8327%" y="261" width="1.5209%" height="15" fill="rgb(216,46,15)" fg:x="231" fg:w="4"/><text x="87.9499%" y="271.50">_in..</text></g><g><title>asm_exc_page_fault (1 samples, 0.38%)</title><rect x="88.9734%" y="245" width="0.3802%" height="15" fill="rgb(250,74,19)" fg:x="234" fg:w="1"/><text x="89.0906%" y="255.50"></text></g><g><title>exc_page_fault (1 samples, 0.38%)</title><rect x="88.9734%" y="229" width="0.3802%" height="15" fill="rgb(249,42,33)" fg:x="234" fg:w="1"/><text x="89.0906%" y="239.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.38%)</title><rect x="88.9734%" y="213" width="0.3802%" height="15" fill="rgb(242,149,17)" fg:x="234" fg:w="1"/><text x="89.0906%" y="223.50"></text></g><g><title>handle_mm_fault (1 samples, 0.38%)</title><rect x="88.9734%" y="197" width="0.3802%" height="15" fill="rgb(244,29,21)" fg:x="234" fg:w="1"/><text x="89.0906%" y="207.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.38%)</title><rect x="88.9734%" y="181" width="0.3802%" height="15" fill="rgb(220,130,37)" fg:x="234" fg:w="1"/><text x="89.0906%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.38%)</title><rect x="89.3536%" y="421" width="0.3802%" height="15" fill="rgb(211,67,2)" fg:x="235" fg:w="1"/><text x="89.4708%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 11.41%)</title><rect x="78.7072%" y="453" width="11.4068%" height="15" fill="rgb(235,68,52)" fg:x="207" fg:w="30"/><text x="78.8244%" y="463.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::sp..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (30 samples, 11.41%)</title><rect x="78.7072%" y="437" width="11.4068%" height="15" fill="rgb(246,142,3)" fg:x="207" fg:w="30"/><text x="78.8244%" y="447.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (1 samples, 0.38%)</title><rect x="89.7338%" y="421" width="0.3802%" height="15" fill="rgb(241,25,7)" fg:x="236" fg:w="1"/><text x="89.8510%" y="431.50"></text></g><g><title>__rust_alloc (1 samples, 0.38%)</title><rect x="90.1141%" y="341" width="0.3802%" height="15" fill="rgb(242,119,39)" fg:x="237" fg:w="1"/><text x="90.2313%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 12.17%)</title><rect x="78.7072%" y="517" width="12.1673%" height="15" fill="rgb(241,98,45)" fg:x="207" fg:w="32"/><text x="78.8244%" y="527.50">core::iter::traits::iterator::Iterator::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (32 samples, 12.17%)</title><rect x="78.7072%" y="501" width="12.1673%" height="15" fill="rgb(254,28,30)" fg:x="207" fg:w="32"/><text x="78.8244%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 12.17%)</title><rect x="78.7072%" y="485" width="12.1673%" height="15" fill="rgb(241,142,54)" fg:x="207" fg:w="32"/><text x="78.8244%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (32 samples, 12.17%)</title><rect x="78.7072%" y="469" width="12.1673%" height="15" fill="rgb(222,85,15)" fg:x="207" fg:w="32"/><text x="78.8244%" y="479.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_f..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.76%)</title><rect x="90.1141%" y="453" width="0.7605%" height="15" fill="rgb(210,85,47)" fg:x="237" fg:w="2"/><text x="90.2313%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.76%)</title><rect x="90.1141%" y="437" width="0.7605%" height="15" fill="rgb(224,206,25)" fg:x="237" fg:w="2"/><text x="90.2313%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.76%)</title><rect x="90.1141%" y="421" width="0.7605%" height="15" fill="rgb(243,201,19)" fg:x="237" fg:w="2"/><text x="90.2313%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.76%)</title><rect x="90.1141%" y="405" width="0.7605%" height="15" fill="rgb(236,59,4)" fg:x="237" fg:w="2"/><text x="90.2313%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.76%)</title><rect x="90.1141%" y="389" width="0.7605%" height="15" fill="rgb(254,179,45)" fg:x="237" fg:w="2"/><text x="90.2313%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.76%)</title><rect x="90.1141%" y="373" width="0.7605%" height="15" fill="rgb(226,14,10)" fg:x="237" fg:w="2"/><text x="90.2313%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.76%)</title><rect x="90.1141%" y="357" width="0.7605%" height="15" fill="rgb(244,27,41)" fg:x="237" fg:w="2"/><text x="90.2313%" y="367.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.38%)</title><rect x="90.4943%" y="341" width="0.3802%" height="15" fill="rgb(235,35,32)" fg:x="238" fg:w="1"/><text x="90.6115%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.76%)</title><rect x="90.8745%" y="517" width="0.7605%" height="15" fill="rgb(218,68,31)" fg:x="239" fg:w="2"/><text x="90.9917%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (2 samples, 0.76%)</title><rect x="90.8745%" y="501" width="0.7605%" height="15" fill="rgb(207,120,37)" fg:x="239" fg:w="2"/><text x="90.9917%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (2 samples, 0.76%)</title><rect x="90.8745%" y="485" width="0.7605%" height="15" fill="rgb(227,98,0)" fg:x="239" fg:w="2"/><text x="90.9917%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.38%)</title><rect x="91.6350%" y="517" width="0.3802%" height="15" fill="rgb(207,7,3)" fg:x="241" fg:w="1"/><text x="91.7522%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (1 samples, 0.38%)</title><rect x="91.6350%" y="501" width="0.3802%" height="15" fill="rgb(206,98,19)" fg:x="241" fg:w="1"/><text x="91.7522%" y="511.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (1 samples, 0.38%)</title><rect x="91.6350%" y="485" width="0.3802%" height="15" fill="rgb(217,5,26)" fg:x="241" fg:w="1"/><text x="91.7522%" y="495.50"></text></g><g><title>__GI___libc_free (2 samples, 0.76%)</title><rect x="92.3954%" y="437" width="0.7605%" height="15" fill="rgb(235,190,38)" fg:x="243" fg:w="2"/><text x="92.5126%" y="447.50"></text></g><g><title>arena_for_chunk (1 samples, 0.38%)</title><rect x="92.7757%" y="421" width="0.3802%" height="15" fill="rgb(247,86,24)" fg:x="244" fg:w="1"/><text x="92.8929%" y="431.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.38%)</title><rect x="93.1559%" y="437" width="0.3802%" height="15" fill="rgb(205,101,16)" fg:x="245" fg:w="1"/><text x="93.2731%" y="447.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (82 samples, 31.18%)</title><rect x="63.1179%" y="565" width="31.1787%" height="15" fill="rgb(246,168,33)" fg:x="166" fg:w="82"/><text x="63.2351%" y="575.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (82 samples, 31.18%)</title><rect x="63.1179%" y="549" width="31.1787%" height="15" fill="rgb(231,114,1)" fg:x="166" fg:w="82"/><text x="63.2351%" y="559.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (49 samples, 18.63%)</title><rect x="75.6654%" y="533" width="18.6312%" height="15" fill="rgb(207,184,53)" fg:x="199" fg:w="49"/><text x="75.7826%" y="543.50">fringe_vs_astar::structures::graph::generate_neighbors</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (6 samples, 2.28%)</title><rect x="92.0152%" y="517" width="2.2814%" height="15" fill="rgb(224,95,51)" fg:x="242" fg:w="6"/><text x="92.1324%" y="527.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (6 samples, 2.28%)</title><rect x="92.0152%" y="501" width="2.2814%" height="15" fill="rgb(212,188,45)" fg:x="242" fg:w="6"/><text x="92.1324%" y="511.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 2.28%)</title><rect x="92.0152%" y="485" width="2.2814%" height="15" fill="rgb(223,154,38)" fg:x="242" fg:w="6"/><text x="92.1324%" y="495.50">&lt;alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 1.90%)</title><rect x="92.3954%" y="469" width="1.9011%" height="15" fill="rgb(251,22,52)" fg:x="243" fg:w="5"/><text x="92.5126%" y="479.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (5 samples, 1.90%)</title><rect x="92.3954%" y="453" width="1.9011%" height="15" fill="rgb(229,209,22)" fg:x="243" fg:w="5"/><text x="92.5126%" y="463.50">allo..</text></g><g><title>__rust_dealloc (2 samples, 0.76%)</title><rect x="93.5361%" y="437" width="0.7605%" height="15" fill="rgb(234,138,34)" fg:x="246" fg:w="2"/><text x="93.6533%" y="447.50"></text></g><g><title>_start (217 samples, 82.51%)</title><rect x="12.1673%" y="725" width="82.5095%" height="15" fill="rgb(212,95,11)" fg:x="32" fg:w="217"/><text x="12.2845%" y="735.50">_start</text></g><g><title>__libc_start_main_impl (217 samples, 82.51%)</title><rect x="12.1673%" y="709" width="82.5095%" height="15" fill="rgb(240,179,47)" fg:x="32" fg:w="217"/><text x="12.2845%" y="719.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (217 samples, 82.51%)</title><rect x="12.1673%" y="693" width="82.5095%" height="15" fill="rgb(240,163,11)" fg:x="32" fg:w="217"/><text x="12.2845%" y="703.50">__libc_start_call_main</text></g><g><title>main (217 samples, 82.51%)</title><rect x="12.1673%" y="677" width="82.5095%" height="15" fill="rgb(236,37,12)" fg:x="32" fg:w="217"/><text x="12.2845%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (217 samples, 82.51%)</title><rect x="12.1673%" y="661" width="82.5095%" height="15" fill="rgb(232,164,16)" fg:x="32" fg:w="217"/><text x="12.2845%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (217 samples, 82.51%)</title><rect x="12.1673%" y="645" width="82.5095%" height="15" fill="rgb(244,205,15)" fg:x="32" fg:w="217"/><text x="12.2845%" y="655.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (217 samples, 82.51%)</title><rect x="12.1673%" y="629" width="82.5095%" height="15" fill="rgb(223,117,47)" fg:x="32" fg:w="217"/><text x="12.2845%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (217 samples, 82.51%)</title><rect x="12.1673%" y="613" width="82.5095%" height="15" fill="rgb(244,107,35)" fg:x="32" fg:w="217"/><text x="12.2845%" y="623.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (217 samples, 82.51%)</title><rect x="12.1673%" y="597" width="82.5095%" height="15" fill="rgb(205,140,8)" fg:x="32" fg:w="217"/><text x="12.2845%" y="607.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (217 samples, 82.51%)</title><rect x="12.1673%" y="581" width="82.5095%" height="15" fill="rgb(228,84,46)" fg:x="32" fg:w="217"/><text x="12.2845%" y="591.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (1 samples, 0.38%)</title><rect x="94.2966%" y="565" width="0.3802%" height="15" fill="rgb(254,188,9)" fg:x="248" fg:w="1"/><text x="94.4138%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (1 samples, 0.38%)</title><rect x="94.2966%" y="549" width="0.3802%" height="15" fill="rgb(206,112,54)" fg:x="248" fg:w="1"/><text x="94.4138%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.38%)</title><rect x="94.2966%" y="533" width="0.3802%" height="15" fill="rgb(216,84,49)" fg:x="248" fg:w="1"/><text x="94.4138%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="94.2966%" y="517" width="0.3802%" height="15" fill="rgb(214,194,35)" fg:x="248" fg:w="1"/><text x="94.4138%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="94.2966%" y="501" width="0.3802%" height="15" fill="rgb(249,28,3)" fg:x="248" fg:w="1"/><text x="94.4138%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="94.2966%" y="485" width="0.3802%" height="15" fill="rgb(222,56,52)" fg:x="248" fg:w="1"/><text x="94.4138%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.38%)</title><rect x="94.2966%" y="469" width="0.3802%" height="15" fill="rgb(245,217,50)" fg:x="248" fg:w="1"/><text x="94.4138%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.38%)</title><rect x="94.2966%" y="453" width="0.3802%" height="15" fill="rgb(213,201,24)" fg:x="248" fg:w="1"/><text x="94.4138%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="94.2966%" y="437" width="0.3802%" height="15" fill="rgb(248,116,28)" fg:x="248" fg:w="1"/><text x="94.4138%" y="447.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="94.2966%" y="421" width="0.3802%" height="15" fill="rgb(219,72,43)" fg:x="248" fg:w="1"/><text x="94.4138%" y="431.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.38%)</title><rect x="94.2966%" y="405" width="0.3802%" height="15" fill="rgb(209,138,14)" fg:x="248" fg:w="1"/><text x="94.4138%" y="415.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.38%)</title><rect x="94.2966%" y="389" width="0.3802%" height="15" fill="rgb(222,18,33)" fg:x="248" fg:w="1"/><text x="94.4138%" y="399.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (1 samples, 0.38%)</title><rect x="94.2966%" y="373" width="0.3802%" height="15" fill="rgb(213,199,7)" fg:x="248" fg:w="1"/><text x="94.4138%" y="383.50"></text></g><g><title>std::io::read_until (1 samples, 0.38%)</title><rect x="94.2966%" y="357" width="0.3802%" height="15" fill="rgb(250,110,10)" fg:x="248" fg:w="1"/><text x="94.4138%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.38%)</title><rect x="94.2966%" y="341" width="0.3802%" height="15" fill="rgb(248,123,6)" fg:x="248" fg:w="1"/><text x="94.4138%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.38%)</title><rect x="94.2966%" y="325" width="0.3802%" height="15" fill="rgb(206,91,31)" fg:x="248" fg:w="1"/><text x="94.4138%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.38%)</title><rect x="94.2966%" y="309" width="0.3802%" height="15" fill="rgb(211,154,13)" fg:x="248" fg:w="1"/><text x="94.4138%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.38%)</title><rect x="94.2966%" y="293" width="0.3802%" height="15" fill="rgb(225,148,7)" fg:x="248" fg:w="1"/><text x="94.4138%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.38%)</title><rect x="94.2966%" y="277" width="0.3802%" height="15" fill="rgb(220,160,43)" fg:x="248" fg:w="1"/><text x="94.4138%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.38%)</title><rect x="94.2966%" y="261" width="0.3802%" height="15" fill="rgb(213,52,39)" fg:x="248" fg:w="1"/><text x="94.4138%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.38%)</title><rect x="94.2966%" y="245" width="0.3802%" height="15" fill="rgb(243,137,7)" fg:x="248" fg:w="1"/><text x="94.4138%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.38%)</title><rect x="94.2966%" y="229" width="0.3802%" height="15" fill="rgb(230,79,13)" fg:x="248" fg:w="1"/><text x="94.4138%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.38%)</title><rect x="94.2966%" y="213" width="0.3802%" height="15" fill="rgb(247,105,23)" fg:x="248" fg:w="1"/><text x="94.4138%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.38%)</title><rect x="94.2966%" y="197" width="0.3802%" height="15" fill="rgb(223,179,41)" fg:x="248" fg:w="1"/><text x="94.4138%" y="207.50"></text></g><g><title>sync_regs (1 samples, 0.38%)</title><rect x="94.2966%" y="181" width="0.3802%" height="15" fill="rgb(218,9,34)" fg:x="248" fg:w="1"/><text x="94.4138%" y="191.50"></text></g><g><title>asm_exc_page_fault (4 samples, 1.52%)</title><rect x="94.6768%" y="725" width="1.5209%" height="15" fill="rgb(222,106,8)" fg:x="249" fg:w="4"/><text x="94.7940%" y="735.50">asm..</text></g><g><title>__x64_sys_execve (1 samples, 0.38%)</title><rect x="96.1977%" y="677" width="0.3802%" height="15" fill="rgb(211,220,0)" fg:x="253" fg:w="1"/><text x="96.3149%" y="687.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.38%)</title><rect x="96.1977%" y="661" width="0.3802%" height="15" fill="rgb(229,52,16)" fg:x="253" fg:w="1"/><text x="96.3149%" y="671.50"></text></g><g><title>bprm_execve (1 samples, 0.38%)</title><rect x="96.1977%" y="645" width="0.3802%" height="15" fill="rgb(212,155,18)" fg:x="253" fg:w="1"/><text x="96.3149%" y="655.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.38%)</title><rect x="96.1977%" y="629" width="0.3802%" height="15" fill="rgb(242,21,14)" fg:x="253" fg:w="1"/><text x="96.3149%" y="639.50"></text></g><g><title>exec_binprm (1 samples, 0.38%)</title><rect x="96.1977%" y="613" width="0.3802%" height="15" fill="rgb(222,19,48)" fg:x="253" fg:w="1"/><text x="96.3149%" y="623.50"></text></g><g><title>search_binary_handler (1 samples, 0.38%)</title><rect x="96.1977%" y="597" width="0.3802%" height="15" fill="rgb(232,45,27)" fg:x="253" fg:w="1"/><text x="96.3149%" y="607.50"></text></g><g><title>load_elf_binary (1 samples, 0.38%)</title><rect x="96.1977%" y="581" width="0.3802%" height="15" fill="rgb(249,103,42)" fg:x="253" fg:w="1"/><text x="96.3149%" y="591.50"></text></g><g><title>setup_arg_pages (1 samples, 0.38%)</title><rect x="96.1977%" y="565" width="0.3802%" height="15" fill="rgb(246,81,33)" fg:x="253" fg:w="1"/><text x="96.3149%" y="575.50"></text></g><g><title>expand_stack_locked (1 samples, 0.38%)</title><rect x="96.1977%" y="549" width="0.3802%" height="15" fill="rgb(252,33,42)" fg:x="253" fg:w="1"/><text x="96.3149%" y="559.50"></text></g><g><title>expand_downwards (1 samples, 0.38%)</title><rect x="96.1977%" y="533" width="0.3802%" height="15" fill="rgb(209,212,41)" fg:x="253" fg:w="1"/><text x="96.3149%" y="543.50"></text></g><g><title>perf_event_mmap (1 samples, 0.38%)</title><rect x="96.1977%" y="517" width="0.3802%" height="15" fill="rgb(207,154,6)" fg:x="253" fg:w="1"/><text x="96.3149%" y="527.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.38%)</title><rect x="96.1977%" y="501" width="0.3802%" height="15" fill="rgb(223,64,47)" fg:x="253" fg:w="1"/><text x="96.3149%" y="511.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.38%)</title><rect x="96.5779%" y="565" width="0.3802%" height="15" fill="rgb(211,161,38)" fg:x="254" fg:w="1"/><text x="96.6951%" y="575.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.38%)</title><rect x="96.5779%" y="549" width="0.3802%" height="15" fill="rgb(219,138,40)" fg:x="254" fg:w="1"/><text x="96.6951%" y="559.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.38%)</title><rect x="96.5779%" y="533" width="0.3802%" height="15" fill="rgb(241,228,46)" fg:x="254" fg:w="1"/><text x="96.6951%" y="543.50"></text></g><g><title>release_pages (1 samples, 0.38%)</title><rect x="96.5779%" y="517" width="0.3802%" height="15" fill="rgb(223,209,38)" fg:x="254" fg:w="1"/><text x="96.6951%" y="527.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.38%)</title><rect x="96.5779%" y="501" width="0.3802%" height="15" fill="rgb(236,164,45)" fg:x="254" fg:w="1"/><text x="96.6951%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.38%)</title><rect x="96.5779%" y="485" width="0.3802%" height="15" fill="rgb(231,15,5)" fg:x="254" fg:w="1"/><text x="96.6951%" y="495.50"></text></g><g><title>page_remove_rmap (1 samples, 0.38%)</title><rect x="96.9582%" y="501" width="0.3802%" height="15" fill="rgb(252,35,15)" fg:x="255" fg:w="1"/><text x="97.0754%" y="511.50"></text></g><g><title>free_unref_page_list (1 samples, 0.38%)</title><rect x="97.3384%" y="421" width="0.3802%" height="15" fill="rgb(248,181,18)" fg:x="256" fg:w="1"/><text x="97.4556%" y="431.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.38%)</title><rect x="97.3384%" y="405" width="0.3802%" height="15" fill="rgb(233,39,42)" fg:x="256" fg:w="1"/><text x="97.4556%" y="415.50"></text></g><g><title>fringe-vs-astar (258 samples, 98.10%)</title><rect x="0.0000%" y="741" width="98.0989%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="258"/><text x="0.1172%" y="751.50">fringe-vs-astar</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 1.90%)</title><rect x="96.1977%" y="725" width="1.9011%" height="15" fill="rgb(233,195,10)" fg:x="253" fg:w="5"/><text x="96.3149%" y="735.50">entr..</text></g><g><title>do_syscall_64 (5 samples, 1.90%)</title><rect x="96.1977%" y="709" width="1.9011%" height="15" fill="rgb(254,105,3)" fg:x="253" fg:w="5"/><text x="96.3149%" y="719.50">do_s..</text></g><g><title>x64_sys_call (5 samples, 1.90%)</title><rect x="96.1977%" y="693" width="1.9011%" height="15" fill="rgb(221,225,9)" fg:x="253" fg:w="5"/><text x="96.3149%" y="703.50">x64_..</text></g><g><title>__x64_sys_exit_group (4 samples, 1.52%)</title><rect x="96.5779%" y="677" width="1.5209%" height="15" fill="rgb(224,227,45)" fg:x="254" fg:w="4"/><text x="96.6951%" y="687.50">__x..</text></g><g><title>do_group_exit (4 samples, 1.52%)</title><rect x="96.5779%" y="661" width="1.5209%" height="15" fill="rgb(229,198,43)" fg:x="254" fg:w="4"/><text x="96.6951%" y="671.50">do_..</text></g><g><title>do_exit (4 samples, 1.52%)</title><rect x="96.5779%" y="645" width="1.5209%" height="15" fill="rgb(206,209,35)" fg:x="254" fg:w="4"/><text x="96.6951%" y="655.50">do_..</text></g><g><title>exit_mm (4 samples, 1.52%)</title><rect x="96.5779%" y="629" width="1.5209%" height="15" fill="rgb(245,195,53)" fg:x="254" fg:w="4"/><text x="96.6951%" y="639.50">exi..</text></g><g><title>mmput (4 samples, 1.52%)</title><rect x="96.5779%" y="613" width="1.5209%" height="15" fill="rgb(240,92,26)" fg:x="254" fg:w="4"/><text x="96.6951%" y="623.50">mmp..</text></g><g><title>__mmput (4 samples, 1.52%)</title><rect x="96.5779%" y="597" width="1.5209%" height="15" fill="rgb(207,40,23)" fg:x="254" fg:w="4"/><text x="96.6951%" y="607.50">__m..</text></g><g><title>exit_mmap (4 samples, 1.52%)</title><rect x="96.5779%" y="581" width="1.5209%" height="15" fill="rgb(223,111,35)" fg:x="254" fg:w="4"/><text x="96.6951%" y="591.50">exi..</text></g><g><title>unmap_vmas (3 samples, 1.14%)</title><rect x="96.9582%" y="565" width="1.1407%" height="15" fill="rgb(229,147,28)" fg:x="255" fg:w="3"/><text x="97.0754%" y="575.50">un..</text></g><g><title>unmap_single_vma (3 samples, 1.14%)</title><rect x="96.9582%" y="549" width="1.1407%" height="15" fill="rgb(211,29,28)" fg:x="255" fg:w="3"/><text x="97.0754%" y="559.50">un..</text></g><g><title>unmap_page_range (3 samples, 1.14%)</title><rect x="96.9582%" y="533" width="1.1407%" height="15" fill="rgb(228,72,33)" fg:x="255" fg:w="3"/><text x="97.0754%" y="543.50">un..</text></g><g><title>zap_pmd_range.isra.0 (3 samples, 1.14%)</title><rect x="96.9582%" y="517" width="1.1407%" height="15" fill="rgb(205,214,31)" fg:x="255" fg:w="3"/><text x="97.0754%" y="527.50">za..</text></g><g><title>zap_pte_range (2 samples, 0.76%)</title><rect x="97.3384%" y="501" width="0.7605%" height="15" fill="rgb(224,111,15)" fg:x="256" fg:w="2"/><text x="97.4556%" y="511.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.76%)</title><rect x="97.3384%" y="485" width="0.7605%" height="15" fill="rgb(253,21,26)" fg:x="256" fg:w="2"/><text x="97.4556%" y="495.50"></text></g><g><title>tlb_batch_pages_flush (2 samples, 0.76%)</title><rect x="97.3384%" y="469" width="0.7605%" height="15" fill="rgb(245,139,43)" fg:x="256" fg:w="2"/><text x="97.4556%" y="479.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.76%)</title><rect x="97.3384%" y="453" width="0.7605%" height="15" fill="rgb(252,170,7)" fg:x="256" fg:w="2"/><text x="97.4556%" y="463.50"></text></g><g><title>release_pages (2 samples, 0.76%)</title><rect x="97.3384%" y="437" width="0.7605%" height="15" fill="rgb(231,118,14)" fg:x="256" fg:w="2"/><text x="97.4556%" y="447.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.38%)</title><rect x="97.7186%" y="421" width="0.3802%" height="15" fill="rgb(238,83,0)" fg:x="257" fg:w="1"/><text x="97.8358%" y="431.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.38%)</title><rect x="97.7186%" y="405" width="0.3802%" height="15" fill="rgb(221,39,39)" fg:x="257" fg:w="1"/><text x="97.8358%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.38%)</title><rect x="97.7186%" y="389" width="0.3802%" height="15" fill="rgb(222,119,46)" fg:x="257" fg:w="1"/><text x="97.8358%" y="399.50"></text></g><g><title>all (263 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="263"/><text x="0.1172%" y="767.50"></text></g><g><title>perf-exec (5 samples, 1.90%)</title><rect x="98.0989%" y="741" width="1.9011%" height="15" fill="rgb(219,113,52)" fg:x="258" fg:w="5"/><text x="98.2160%" y="751.50">perf..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 1.90%)</title><rect x="98.0989%" y="725" width="1.9011%" height="15" fill="rgb(214,7,15)" fg:x="258" fg:w="5"/><text x="98.2160%" y="735.50">entr..</text></g><g><title>do_syscall_64 (5 samples, 1.90%)</title><rect x="98.0989%" y="709" width="1.9011%" height="15" fill="rgb(235,32,4)" fg:x="258" fg:w="5"/><text x="98.2160%" y="719.50">do_s..</text></g><g><title>x64_sys_call (5 samples, 1.90%)</title><rect x="98.0989%" y="693" width="1.9011%" height="15" fill="rgb(238,90,54)" fg:x="258" fg:w="5"/><text x="98.2160%" y="703.50">x64_..</text></g><g><title>__x64_sys_execve (5 samples, 1.90%)</title><rect x="98.0989%" y="677" width="1.9011%" height="15" fill="rgb(213,208,19)" fg:x="258" fg:w="5"/><text x="98.2160%" y="687.50">__x6..</text></g><g><title>do_execveat_common.isra.0 (5 samples, 1.90%)</title><rect x="98.0989%" y="661" width="1.9011%" height="15" fill="rgb(233,156,4)" fg:x="258" fg:w="5"/><text x="98.2160%" y="671.50">do_e..</text></g><g><title>bprm_execve (5 samples, 1.90%)</title><rect x="98.0989%" y="645" width="1.9011%" height="15" fill="rgb(207,194,5)" fg:x="258" fg:w="5"/><text x="98.2160%" y="655.50">bprm..</text></g><g><title>bprm_execve.part.0 (5 samples, 1.90%)</title><rect x="98.0989%" y="629" width="1.9011%" height="15" fill="rgb(206,111,30)" fg:x="258" fg:w="5"/><text x="98.2160%" y="639.50">bprm..</text></g><g><title>exec_binprm (5 samples, 1.90%)</title><rect x="98.0989%" y="613" width="1.9011%" height="15" fill="rgb(243,70,54)" fg:x="258" fg:w="5"/><text x="98.2160%" y="623.50">exec..</text></g><g><title>search_binary_handler (5 samples, 1.90%)</title><rect x="98.0989%" y="597" width="1.9011%" height="15" fill="rgb(242,28,8)" fg:x="258" fg:w="5"/><text x="98.2160%" y="607.50">sear..</text></g><g><title>load_elf_binary (5 samples, 1.90%)</title><rect x="98.0989%" y="581" width="1.9011%" height="15" fill="rgb(219,106,18)" fg:x="258" fg:w="5"/><text x="98.2160%" y="591.50">load..</text></g><g><title>begin_new_exec (5 samples, 1.90%)</title><rect x="98.0989%" y="565" width="1.9011%" height="15" fill="rgb(244,222,10)" fg:x="258" fg:w="5"/><text x="98.2160%" y="575.50">begi..</text></g><g><title>perf_event_exec (5 samples, 1.90%)</title><rect x="98.0989%" y="549" width="1.9011%" height="15" fill="rgb(236,179,52)" fg:x="258" fg:w="5"/><text x="98.2160%" y="559.50">perf..</text></g><g><title>perf_event_enable_on_exec (5 samples, 1.90%)</title><rect x="98.0989%" y="533" width="1.9011%" height="15" fill="rgb(213,23,39)" fg:x="258" fg:w="5"/><text x="98.2160%" y="543.50">perf..</text></g><g><title>ctx_resched (5 samples, 1.90%)</title><rect x="98.0989%" y="517" width="1.9011%" height="15" fill="rgb(238,48,10)" fg:x="258" fg:w="5"/><text x="98.2160%" y="527.50">ctx_..</text></g><g><title>perf_ctx_enable (5 samples, 1.90%)</title><rect x="98.0989%" y="501" width="1.9011%" height="15" fill="rgb(251,196,23)" fg:x="258" fg:w="5"/><text x="98.2160%" y="511.50">perf..</text></g><g><title>x86_pmu_enable (5 samples, 1.90%)</title><rect x="98.0989%" y="485" width="1.9011%" height="15" fill="rgb(250,152,24)" fg:x="258" fg:w="5"/><text x="98.2160%" y="495.50">x86_..</text></g><g><title>intel_pmu_enable_all (5 samples, 1.90%)</title><rect x="98.0989%" y="469" width="1.9011%" height="15" fill="rgb(209,150,17)" fg:x="258" fg:w="5"/><text x="98.2160%" y="479.50">inte..</text></g><g><title>native_write_msr (5 samples, 1.90%)</title><rect x="98.0989%" y="453" width="1.9011%" height="15" fill="rgb(234,202,34)" fg:x="258" fg:w="5"/><text x="98.2160%" y="463.50">nati..</text></g></svg></svg>