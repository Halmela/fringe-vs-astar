<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="1014" onload="init(evt)" viewBox="0 0 2560 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="997.00"> </text><svg id="frames" x="10" width="2540" total_samples="4468"><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.02%)</title><rect x="0.0000%" y="917" width="0.0224%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.1172%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.02%)</title><rect x="0.0000%" y="901" width="0.0224%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.1172%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.0000%" y="885" width="0.0224%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.1172%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="0.0000%" y="869" width="0.0224%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.1172%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="0.0000%" y="853" width="0.0224%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.1172%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.0000%" y="837" width="0.0224%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.1172%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0000%" y="821" width="0.0224%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.1172%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0224%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.1172%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0224%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.1172%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.0000%" y="773" width="0.0224%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.1172%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.0000%" y="757" width="0.0224%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.1172%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.0000%" y="741" width="0.0224%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.1172%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="0.0224%" y="917" width="0.1567%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="7"/><text x="0.1396%" y="927.50"></text></g><g><title>_int_free (12 samples, 0.27%)</title><rect x="0.1791%" y="917" width="0.2686%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="12"/><text x="0.2962%" y="927.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="0.4476%" y="917" width="0.0448%" height="15" fill="rgb(217,207,13)" fg:x="20" fg:w="2"/><text x="0.5648%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.20%)</title><rect x="0.4924%" y="917" width="0.2014%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="9"/><text x="0.6096%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.09%)</title><rect x="0.6043%" y="901" width="0.0895%" height="15" fill="rgb(225,20,46)" fg:x="27" fg:w="4"/><text x="0.7215%" y="911.50"></text></g><g><title>[[heap]] (36 samples, 0.81%)</title><rect x="0.0000%" y="933" width="0.8057%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="36"/><text x="0.1172%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.11%)</title><rect x="0.6938%" y="917" width="0.1119%" height="15" fill="rgb(221,200,47)" fg:x="31" fg:w="5"/><text x="0.8110%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.11%)</title><rect x="0.6938%" y="901" width="0.1119%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="5"/><text x="0.8110%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.11%)</title><rect x="0.6938%" y="885" width="0.1119%" height="15" fill="rgb(249,33,26)" fg:x="31" fg:w="5"/><text x="0.8110%" y="895.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.11%)</title><rect x="0.6938%" y="869" width="0.1119%" height="15" fill="rgb(235,183,28)" fg:x="31" fg:w="5"/><text x="0.8110%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.8057%" y="917" width="0.0224%" height="15" fill="rgb(221,5,38)" fg:x="36" fg:w="1"/><text x="0.9229%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.8057%" y="901" width="0.0224%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="1"/><text x="0.9229%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="0.8057%" y="885" width="0.0224%" height="15" fill="rgb(241,131,45)" fg:x="36" fg:w="1"/><text x="0.9229%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="0.8057%" y="869" width="0.0224%" height="15" fill="rgb(249,31,29)" fg:x="36" fg:w="1"/><text x="0.9229%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="0.8057%" y="853" width="0.0224%" height="15" fill="rgb(225,111,53)" fg:x="36" fg:w="1"/><text x="0.9229%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.8057%" y="837" width="0.0224%" height="15" fill="rgb(238,160,17)" fg:x="36" fg:w="1"/><text x="0.9229%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.8057%" y="821" width="0.0224%" height="15" fill="rgb(214,148,48)" fg:x="36" fg:w="1"/><text x="0.9229%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1 samples, 0.02%)</title><rect x="0.8057%" y="805" width="0.0224%" height="15" fill="rgb(232,36,49)" fg:x="36" fg:w="1"/><text x="0.9229%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (1 samples, 0.02%)</title><rect x="0.8057%" y="789" width="0.0224%" height="15" fill="rgb(209,103,24)" fg:x="36" fg:w="1"/><text x="0.9229%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="0.8057%" y="773" width="0.0224%" height="15" fill="rgb(229,88,8)" fg:x="36" fg:w="1"/><text x="0.9229%" y="783.50"></text></g><g><title>fringe_vs_astar::structures::graph::Graph::new::_{{closure}} (1 samples, 0.02%)</title><rect x="0.8057%" y="757" width="0.0224%" height="15" fill="rgb(213,181,19)" fg:x="36" fg:w="1"/><text x="0.9229%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="0.8281%" y="917" width="0.0224%" height="15" fill="rgb(254,191,54)" fg:x="37" fg:w="1"/><text x="0.9453%" y="927.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="0.8505%" y="917" width="0.0671%" height="15" fill="rgb(241,83,37)" fg:x="38" fg:w="3"/><text x="0.9677%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (1 samples, 0.02%)</title><rect x="0.9176%" y="917" width="0.0224%" height="15" fill="rgb(233,36,39)" fg:x="41" fg:w="1"/><text x="1.0348%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::Graph&gt; (1 samples, 0.02%)</title><rect x="0.9176%" y="901" width="0.0224%" height="15" fill="rgb(226,3,54)" fg:x="41" fg:w="1"/><text x="1.0348%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(u32,f32)&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9176%" y="885" width="0.0224%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="1"/><text x="1.0348%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.9176%" y="869" width="0.0224%" height="15" fill="rgb(238,167,29)" fg:x="41" fg:w="1"/><text x="1.0348%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(u32,f32)&gt;]&gt; (1 samples, 0.02%)</title><rect x="0.9176%" y="853" width="0.0224%" height="15" fill="rgb(232,182,51)" fg:x="41" fg:w="1"/><text x="1.0348%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,f32)&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9176%" y="837" width="0.0224%" height="15" fill="rgb(231,60,39)" fg:x="41" fg:w="1"/><text x="1.0348%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,f32)&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9176%" y="821" width="0.0224%" height="15" fill="rgb(208,69,12)" fg:x="41" fg:w="1"/><text x="1.0348%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.9176%" y="805" width="0.0224%" height="15" fill="rgb(235,93,37)" fg:x="41" fg:w="1"/><text x="1.0348%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="0.9176%" y="789" width="0.0224%" height="15" fill="rgb(213,116,39)" fg:x="41" fg:w="1"/><text x="1.0348%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="0.9176%" y="773" width="0.0224%" height="15" fill="rgb(222,207,29)" fg:x="41" fg:w="1"/><text x="1.0348%" y="783.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::decide_action (6 samples, 0.13%)</title><rect x="0.9400%" y="917" width="0.1343%" height="15" fill="rgb(206,96,30)" fg:x="42" fg:w="6"/><text x="1.0572%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_process (5 samples, 0.11%)</title><rect x="1.0743%" y="917" width="0.1119%" height="15" fill="rgb(218,138,4)" fg:x="48" fg:w="5"/><text x="1.1915%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::refresh (1 samples, 0.02%)</title><rect x="1.1862%" y="917" width="0.0224%" height="15" fill="rgb(250,191,14)" fg:x="53" fg:w="1"/><text x="1.3034%" y="927.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (4 samples, 0.09%)</title><rect x="1.2086%" y="917" width="0.0895%" height="15" fill="rgb(239,60,40)" fg:x="54" fg:w="4"/><text x="1.3258%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.09%)</title><rect x="1.2086%" y="901" width="0.0895%" height="15" fill="rgb(206,27,48)" fg:x="54" fg:w="4"/><text x="1.3258%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="1.2086%" y="885" width="0.0895%" height="15" fill="rgb(225,35,8)" fg:x="54" fg:w="4"/><text x="1.3258%" y="895.50"></text></g><g><title>[[stack]] (23 samples, 0.51%)</title><rect x="0.8057%" y="933" width="0.5148%" height="15" fill="rgb(250,213,24)" fg:x="36" fg:w="23"/><text x="0.9229%" y="943.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="1.2981%" y="917" width="0.0224%" height="15" fill="rgb(247,123,22)" fg:x="58" fg:w="1"/><text x="1.4153%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.16%)</title><rect x="1.5891%" y="885" width="0.1567%" height="15" fill="rgb(231,138,38)" fg:x="71" fg:w="7"/><text x="1.7063%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.16%)</title><rect x="1.5891%" y="869" width="0.1567%" height="15" fill="rgb(231,145,46)" fg:x="71" fg:w="7"/><text x="1.7063%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="1.6786%" y="853" width="0.0671%" height="15" fill="rgb(251,118,11)" fg:x="75" fg:w="3"/><text x="1.7958%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="1.6786%" y="837" width="0.0671%" height="15" fill="rgb(217,147,25)" fg:x="75" fg:w="3"/><text x="1.7958%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21 samples, 0.47%)</title><rect x="1.3205%" y="917" width="0.4700%" height="15" fill="rgb(247,81,37)" fg:x="59" fg:w="21"/><text x="1.4377%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.20%)</title><rect x="1.5891%" y="901" width="0.2014%" height="15" fill="rgb(209,12,38)" fg:x="71" fg:w="9"/><text x="1.7063%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.04%)</title><rect x="1.7457%" y="885" width="0.0448%" height="15" fill="rgb(227,1,9)" fg:x="78" fg:w="2"/><text x="1.8629%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="1.7457%" y="869" width="0.0448%" height="15" fill="rgb(248,47,43)" fg:x="78" fg:w="2"/><text x="1.8629%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="1.7457%" y="853" width="0.0448%" height="15" fill="rgb(221,10,30)" fg:x="78" fg:w="2"/><text x="1.8629%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.04%)</title><rect x="1.7457%" y="837" width="0.0448%" height="15" fill="rgb(210,229,1)" fg:x="78" fg:w="2"/><text x="1.8629%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="1.7457%" y="821" width="0.0448%" height="15" fill="rgb(222,148,37)" fg:x="78" fg:w="2"/><text x="1.8629%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="1.7457%" y="805" width="0.0448%" height="15" fill="rgb(234,67,33)" fg:x="78" fg:w="2"/><text x="1.8629%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="1.7457%" y="789" width="0.0448%" height="15" fill="rgb(247,98,35)" fg:x="78" fg:w="2"/><text x="1.8629%" y="799.50"></text></g><g><title>__GI___libc_free (6 samples, 0.13%)</title><rect x="1.7905%" y="917" width="0.1343%" height="15" fill="rgb(247,138,52)" fg:x="80" fg:w="6"/><text x="1.9077%" y="927.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.20%)</title><rect x="1.9248%" y="917" width="0.2014%" height="15" fill="rgb(213,79,30)" fg:x="86" fg:w="9"/><text x="2.0420%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="2.1038%" y="901" width="0.0224%" height="15" fill="rgb(246,177,23)" fg:x="94" fg:w="1"/><text x="2.2210%" y="911.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="2.1038%" y="885" width="0.0224%" height="15" fill="rgb(230,62,27)" fg:x="94" fg:w="1"/><text x="2.2210%" y="895.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.16%)</title><rect x="2.1262%" y="917" width="0.1567%" height="15" fill="rgb(216,154,8)" fg:x="95" fg:w="7"/><text x="2.2434%" y="927.50"></text></g><g><title>__rdl_realloc (2 samples, 0.04%)</title><rect x="2.2829%" y="917" width="0.0448%" height="15" fill="rgb(244,35,45)" fg:x="102" fg:w="2"/><text x="2.4001%" y="927.50"></text></g><g><title>_int_free (8 samples, 0.18%)</title><rect x="2.3277%" y="917" width="0.1791%" height="15" fill="rgb(251,115,12)" fg:x="104" fg:w="8"/><text x="2.4449%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="2.5067%" y="917" width="0.0224%" height="15" fill="rgb(240,54,50)" fg:x="112" fg:w="1"/><text x="2.6239%" y="927.50"></text></g><g><title>_int_realloc (4 samples, 0.09%)</title><rect x="2.5291%" y="917" width="0.0895%" height="15" fill="rgb(233,84,52)" fg:x="113" fg:w="4"/><text x="2.6463%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.07%)</title><rect x="2.6186%" y="917" width="0.0671%" height="15" fill="rgb(207,117,47)" fg:x="117" fg:w="3"/><text x="2.7358%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::decide_action (6 samples, 0.13%)</title><rect x="2.6858%" y="917" width="0.1343%" height="15" fill="rgb(249,43,39)" fg:x="120" fg:w="6"/><text x="2.8030%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_process (3 samples, 0.07%)</title><rect x="2.8201%" y="917" width="0.0671%" height="15" fill="rgb(209,38,44)" fg:x="126" fg:w="3"/><text x="2.9372%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::estimation_check (10 samples, 0.22%)</title><rect x="2.9320%" y="901" width="0.2238%" height="15" fill="rgb(236,212,23)" fg:x="131" fg:w="10"/><text x="3.0491%" y="911.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_run (13 samples, 0.29%)</title><rect x="2.8872%" y="917" width="0.2910%" height="15" fill="rgb(242,79,21)" fg:x="129" fg:w="13"/><text x="3.0044%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::pop (1 samples, 0.02%)</title><rect x="3.1558%" y="901" width="0.0224%" height="15" fill="rgb(211,96,35)" fg:x="141" fg:w="1"/><text x="3.2730%" y="911.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_run (1 samples, 0.02%)</title><rect x="3.1558%" y="885" width="0.0224%" height="15" fill="rgb(253,215,40)" fg:x="141" fg:w="1"/><text x="3.2730%" y="895.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (27 samples, 0.60%)</title><rect x="3.1782%" y="917" width="0.6043%" height="15" fill="rgb(211,81,21)" fg:x="142" fg:w="27"/><text x="3.2953%" y="927.50"></text></g><g><title>[unknown] (114 samples, 2.55%)</title><rect x="1.3205%" y="933" width="2.5515%" height="15" fill="rgb(208,190,38)" fg:x="59" fg:w="114"/><text x="1.4377%" y="943.50">[unknow..</text></g><g><title>malloc_consolidate (4 samples, 0.09%)</title><rect x="3.7825%" y="917" width="0.0895%" height="15" fill="rgb(235,213,38)" fg:x="169" fg:w="4"/><text x="3.8996%" y="927.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="3.8720%" y="933" width="0.0671%" height="15" fill="rgb(237,122,38)" fg:x="173" fg:w="3"/><text x="3.9892%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="4.2525%" y="757" width="0.0224%" height="15" fill="rgb(244,218,35)" fg:x="190" fg:w="1"/><text x="4.3696%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="4.2525%" y="741" width="0.0224%" height="15" fill="rgb(240,68,47)" fg:x="190" fg:w="1"/><text x="4.3696%" y="751.50"></text></g><g><title>fringe_vs_astar::printable::Printable::new (1 samples, 0.02%)</title><rect x="4.2525%" y="725" width="0.0224%" height="15" fill="rgb(210,16,53)" fg:x="190" fg:w="1"/><text x="4.3696%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.20%)</title><rect x="4.2748%" y="757" width="0.2014%" height="15" fill="rgb(235,124,12)" fg:x="191" fg:w="9"/><text x="4.3920%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.20%)</title><rect x="4.2748%" y="741" width="0.2014%" height="15" fill="rgb(224,169,11)" fg:x="191" fg:w="9"/><text x="4.3920%" y="751.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (9 samples, 0.20%)</title><rect x="4.2748%" y="725" width="0.2014%" height="15" fill="rgb(250,166,2)" fg:x="191" fg:w="9"/><text x="4.3920%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.20%)</title><rect x="4.2748%" y="709" width="0.2014%" height="15" fill="rgb(242,216,29)" fg:x="191" fg:w="9"/><text x="4.3920%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.20%)</title><rect x="4.2748%" y="693" width="0.2014%" height="15" fill="rgb(230,116,27)" fg:x="191" fg:w="9"/><text x="4.3920%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9 samples, 0.20%)</title><rect x="4.2748%" y="677" width="0.2014%" height="15" fill="rgb(228,99,48)" fg:x="191" fg:w="9"/><text x="4.3920%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.20%)</title><rect x="4.2748%" y="661" width="0.2014%" height="15" fill="rgb(253,11,6)" fg:x="191" fg:w="9"/><text x="4.3920%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.20%)</title><rect x="4.2748%" y="645" width="0.2014%" height="15" fill="rgb(247,143,39)" fg:x="191" fg:w="9"/><text x="4.3920%" y="655.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9 samples, 0.20%)</title><rect x="4.2748%" y="629" width="0.2014%" height="15" fill="rgb(236,97,10)" fg:x="191" fg:w="9"/><text x="4.3920%" y="639.50"></text></g><g><title>fringe_vs_astar::printable::Printable::new (9 samples, 0.20%)</title><rect x="4.2748%" y="613" width="0.2014%" height="15" fill="rgb(233,208,19)" fg:x="191" fg:w="9"/><text x="4.3920%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="4.4763%" y="645" width="0.0224%" height="15" fill="rgb(216,164,2)" fg:x="200" fg:w="1"/><text x="4.5935%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="4.4763%" y="629" width="0.0224%" height="15" fill="rgb(220,129,5)" fg:x="200" fg:w="1"/><text x="4.5935%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="4.4763%" y="613" width="0.0224%" height="15" fill="rgb(242,17,10)" fg:x="200" fg:w="1"/><text x="4.5935%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="4.4763%" y="597" width="0.0224%" height="15" fill="rgb(242,107,0)" fg:x="200" fg:w="1"/><text x="4.5935%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="4.4763%" y="581" width="0.0224%" height="15" fill="rgb(251,28,31)" fg:x="200" fg:w="1"/><text x="4.5935%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="4.4763%" y="565" width="0.0224%" height="15" fill="rgb(233,223,10)" fg:x="200" fg:w="1"/><text x="4.5935%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.4763%" y="549" width="0.0224%" height="15" fill="rgb(215,21,27)" fg:x="200" fg:w="1"/><text x="4.5935%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.4763%" y="533" width="0.0224%" height="15" fill="rgb(232,23,21)" fg:x="200" fg:w="1"/><text x="4.5935%" y="543.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="4.4763%" y="517" width="0.0224%" height="15" fill="rgb(244,5,23)" fg:x="200" fg:w="1"/><text x="4.5935%" y="527.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="4.4987%" y="485" width="0.0224%" height="15" fill="rgb(226,81,46)" fg:x="201" fg:w="1"/><text x="4.6158%" y="495.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.07%)</title><rect x="4.4763%" y="757" width="0.0671%" height="15" fill="rgb(247,70,30)" fg:x="200" fg:w="3"/><text x="4.5935%" y="767.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.07%)</title><rect x="4.4763%" y="741" width="0.0671%" height="15" fill="rgb(212,68,19)" fg:x="200" fg:w="3"/><text x="4.5935%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.07%)</title><rect x="4.4763%" y="725" width="0.0671%" height="15" fill="rgb(240,187,13)" fg:x="200" fg:w="3"/><text x="4.5935%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="4.4763%" y="709" width="0.0671%" height="15" fill="rgb(223,113,26)" fg:x="200" fg:w="3"/><text x="4.5935%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.07%)</title><rect x="4.4763%" y="693" width="0.0671%" height="15" fill="rgb(206,192,2)" fg:x="200" fg:w="3"/><text x="4.5935%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.07%)</title><rect x="4.4763%" y="677" width="0.0671%" height="15" fill="rgb(241,108,4)" fg:x="200" fg:w="3"/><text x="4.5935%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.07%)</title><rect x="4.4763%" y="661" width="0.0671%" height="15" fill="rgb(247,173,49)" fg:x="200" fg:w="3"/><text x="4.5935%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.04%)</title><rect x="4.4987%" y="645" width="0.0448%" height="15" fill="rgb(224,114,35)" fg:x="201" fg:w="2"/><text x="4.6158%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="4.4987%" y="629" width="0.0448%" height="15" fill="rgb(245,159,27)" fg:x="201" fg:w="2"/><text x="4.6158%" y="639.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.04%)</title><rect x="4.4987%" y="613" width="0.0448%" height="15" fill="rgb(245,172,44)" fg:x="201" fg:w="2"/><text x="4.6158%" y="623.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="4.4987%" y="597" width="0.0448%" height="15" fill="rgb(236,23,11)" fg:x="201" fg:w="2"/><text x="4.6158%" y="607.50"></text></g><g><title>exc_page_fault (2 samples, 0.04%)</title><rect x="4.4987%" y="581" width="0.0448%" height="15" fill="rgb(205,117,38)" fg:x="201" fg:w="2"/><text x="4.6158%" y="591.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="4.4987%" y="565" width="0.0448%" height="15" fill="rgb(237,72,25)" fg:x="201" fg:w="2"/><text x="4.6158%" y="575.50"></text></g><g><title>handle_mm_fault (2 samples, 0.04%)</title><rect x="4.4987%" y="549" width="0.0448%" height="15" fill="rgb(244,70,9)" fg:x="201" fg:w="2"/><text x="4.6158%" y="559.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.04%)</title><rect x="4.4987%" y="533" width="0.0448%" height="15" fill="rgb(217,125,39)" fg:x="201" fg:w="2"/><text x="4.6158%" y="543.50"></text></g><g><title>handle_pte_fault (2 samples, 0.04%)</title><rect x="4.4987%" y="517" width="0.0448%" height="15" fill="rgb(235,36,10)" fg:x="201" fg:w="2"/><text x="4.6158%" y="527.50"></text></g><g><title>do_anonymous_page (2 samples, 0.04%)</title><rect x="4.4987%" y="501" width="0.0448%" height="15" fill="rgb(251,123,47)" fg:x="201" fg:w="2"/><text x="4.6158%" y="511.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="4.5210%" y="485" width="0.0224%" height="15" fill="rgb(221,13,13)" fg:x="202" fg:w="1"/><text x="4.6382%" y="495.50"></text></g><g><title>fringe_vs_astar::printable::Printable::new (44 samples, 0.98%)</title><rect x="3.9391%" y="773" width="0.9848%" height="15" fill="rgb(238,131,9)" fg:x="176" fg:w="44"/><text x="4.0563%" y="783.50">f..</text></g><g><title>fringe_vs_astar::structures::map::Map::get_cell (17 samples, 0.38%)</title><rect x="4.5434%" y="757" width="0.3805%" height="15" fill="rgb(211,50,8)" fg:x="203" fg:w="17"/><text x="4.6606%" y="767.50"></text></g><g><title>fringe_vs_astar::xy_to_index (12 samples, 0.27%)</title><rect x="4.6553%" y="741" width="0.2686%" height="15" fill="rgb(245,182,24)" fg:x="208" fg:w="12"/><text x="4.7725%" y="751.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (11 samples, 0.25%)</title><rect x="4.6777%" y="725" width="0.2462%" height="15" fill="rgb(242,14,37)" fg:x="209" fg:w="11"/><text x="4.7949%" y="735.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u32&gt;::try_from (11 samples, 0.25%)</title><rect x="4.6777%" y="709" width="0.2462%" height="15" fill="rgb(246,228,12)" fg:x="209" fg:w="11"/><text x="4.7949%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::Graph::average_branching (43 samples, 0.96%)</title><rect x="4.9239%" y="773" width="0.9624%" height="15" fill="rgb(213,55,15)" fg:x="220" fg:w="43"/><text x="5.0411%" y="783.50">f..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.96%)</title><rect x="4.9239%" y="757" width="0.9624%" height="15" fill="rgb(209,9,3)" fg:x="220" fg:w="43"/><text x="5.0411%" y="767.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.96%)</title><rect x="4.9239%" y="741" width="0.9624%" height="15" fill="rgb(230,59,30)" fg:x="220" fg:w="43"/><text x="5.0411%" y="751.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.96%)</title><rect x="4.9239%" y="725" width="0.9624%" height="15" fill="rgb(209,121,21)" fg:x="220" fg:w="43"/><text x="5.0411%" y="735.50">&lt;..</text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (39 samples, 0.87%)</title><rect x="5.0134%" y="709" width="0.8729%" height="15" fill="rgb(220,109,13)" fg:x="224" fg:w="39"/><text x="5.1306%" y="719.50">c..</text></g><g><title>fringe_vs_astar::structures::graph::Graph::average_branching::_{{closure}} (25 samples, 0.56%)</title><rect x="5.3268%" y="693" width="0.5595%" height="15" fill="rgb(232,18,1)" fg:x="238" fg:w="25"/><text x="5.4440%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (25 samples, 0.56%)</title><rect x="5.3268%" y="677" width="0.5595%" height="15" fill="rgb(215,41,42)" fg:x="238" fg:w="25"/><text x="5.4440%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (25 samples, 0.56%)</title><rect x="5.3268%" y="661" width="0.5595%" height="15" fill="rgb(224,123,36)" fg:x="238" fg:w="25"/><text x="5.4440%" y="671.50"></text></g><g><title>access_error (1 samples, 0.02%)</title><rect x="9.0197%" y="485" width="0.0224%" height="15" fill="rgb(240,125,3)" fg:x="403" fg:w="1"/><text x="9.1369%" y="495.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="9.0645%" y="469" width="0.0224%" height="15" fill="rgb(205,98,50)" fg:x="405" fg:w="1"/><text x="9.1816%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="9.0645%" y="453" width="0.0224%" height="15" fill="rgb(205,185,37)" fg:x="405" fg:w="1"/><text x="9.1816%" y="463.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="9.0645%" y="437" width="0.0224%" height="15" fill="rgb(238,207,15)" fg:x="405" fg:w="1"/><text x="9.1816%" y="447.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="9.0645%" y="421" width="0.0224%" height="15" fill="rgb(213,199,42)" fg:x="405" fg:w="1"/><text x="9.1816%" y="431.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="9.0645%" y="405" width="0.0224%" height="15" fill="rgb(235,201,11)" fg:x="405" fg:w="1"/><text x="9.1816%" y="415.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="9.0868%" y="469" width="0.0224%" height="15" fill="rgb(207,46,11)" fg:x="406" fg:w="1"/><text x="9.2040%" y="479.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="9.2435%" y="421" width="0.0224%" height="15" fill="rgb(241,35,35)" fg:x="413" fg:w="1"/><text x="9.3607%" y="431.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="9.2883%" y="405" width="0.0224%" height="15" fill="rgb(243,32,47)" fg:x="415" fg:w="1"/><text x="9.4055%" y="415.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.02%)</title><rect x="9.2883%" y="389" width="0.0224%" height="15" fill="rgb(247,202,23)" fg:x="415" fg:w="1"/><text x="9.4055%" y="399.50"></text></g><g><title>__get_vma_policy (1 samples, 0.02%)</title><rect x="9.3107%" y="405" width="0.0224%" height="15" fill="rgb(219,102,11)" fg:x="416" fg:w="1"/><text x="9.4278%" y="415.50"></text></g><g><title>__count_memcg_events (2 samples, 0.04%)</title><rect x="9.4226%" y="389" width="0.0448%" height="15" fill="rgb(243,110,44)" fg:x="421" fg:w="2"/><text x="9.5397%" y="399.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="9.4673%" y="389" width="0.0224%" height="15" fill="rgb(222,74,54)" fg:x="423" fg:w="1"/><text x="9.5845%" y="399.50"></text></g><g><title>__rcu_read_unlock (13 samples, 0.29%)</title><rect x="9.4897%" y="389" width="0.2910%" height="15" fill="rgb(216,99,12)" fg:x="424" fg:w="13"/><text x="9.6069%" y="399.50"></text></g><g><title>__count_memcg_events (4 samples, 0.09%)</title><rect x="9.8254%" y="373" width="0.0895%" height="15" fill="rgb(226,22,26)" fg:x="439" fg:w="4"/><text x="9.9426%" y="383.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.04%)</title><rect x="9.8702%" y="357" width="0.0448%" height="15" fill="rgb(217,163,10)" fg:x="441" fg:w="2"/><text x="9.9874%" y="367.50"></text></g><g><title>charge_memcg (12 samples, 0.27%)</title><rect x="9.7807%" y="389" width="0.2686%" height="15" fill="rgb(213,25,53)" fg:x="437" fg:w="12"/><text x="9.8978%" y="399.50"></text></g><g><title>try_charge_memcg (6 samples, 0.13%)</title><rect x="9.9150%" y="373" width="0.1343%" height="15" fill="rgb(252,105,26)" fg:x="443" fg:w="6"/><text x="10.0321%" y="383.50"></text></g><g><title>consume_stock (2 samples, 0.04%)</title><rect x="10.0045%" y="357" width="0.0448%" height="15" fill="rgb(220,39,43)" fg:x="447" fg:w="2"/><text x="10.1217%" y="367.50"></text></g><g><title>get_mem_cgroup_from_mm (6 samples, 0.13%)</title><rect x="10.0492%" y="389" width="0.1343%" height="15" fill="rgb(229,68,48)" fg:x="449" fg:w="6"/><text x="10.1664%" y="399.50"></text></g><g><title>__mem_cgroup_charge (39 samples, 0.87%)</title><rect x="9.3330%" y="405" width="0.8729%" height="15" fill="rgb(252,8,32)" fg:x="417" fg:w="39"/><text x="9.4502%" y="415.50">_..</text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="10.1835%" y="389" width="0.0224%" height="15" fill="rgb(223,20,43)" fg:x="455" fg:w="1"/><text x="10.3007%" y="399.50"></text></g><g><title>__pte_offset_map_lock (3 samples, 0.07%)</title><rect x="10.2059%" y="405" width="0.0671%" height="15" fill="rgb(229,81,49)" fg:x="456" fg:w="3"/><text x="10.3231%" y="415.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="10.2507%" y="389" width="0.0224%" height="15" fill="rgb(236,28,36)" fg:x="458" fg:w="1"/><text x="10.3679%" y="399.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.07%)</title><rect x="10.2731%" y="405" width="0.0671%" height="15" fill="rgb(249,185,26)" fg:x="459" fg:w="3"/><text x="10.3902%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="10.3178%" y="389" width="0.0224%" height="15" fill="rgb(249,174,33)" fg:x="461" fg:w="1"/><text x="10.4350%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="10.3178%" y="373" width="0.0224%" height="15" fill="rgb(233,201,37)" fg:x="461" fg:w="1"/><text x="10.4350%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="10.3178%" y="357" width="0.0224%" height="15" fill="rgb(221,78,26)" fg:x="461" fg:w="1"/><text x="10.4350%" y="367.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="10.3178%" y="341" width="0.0224%" height="15" fill="rgb(250,127,30)" fg:x="461" fg:w="1"/><text x="10.4350%" y="351.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="10.3178%" y="325" width="0.0224%" height="15" fill="rgb(230,49,44)" fg:x="461" fg:w="1"/><text x="10.4350%" y="335.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="10.3402%" y="405" width="0.0224%" height="15" fill="rgb(229,67,23)" fg:x="462" fg:w="1"/><text x="10.4574%" y="415.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="10.3626%" y="405" width="0.0224%" height="15" fill="rgb(249,83,47)" fg:x="463" fg:w="1"/><text x="10.4798%" y="415.50"></text></g><g><title>folio_mapping (1 samples, 0.02%)</title><rect x="10.6535%" y="341" width="0.0224%" height="15" fill="rgb(215,43,3)" fg:x="476" fg:w="1"/><text x="10.7707%" y="351.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.07%)</title><rect x="10.7207%" y="325" width="0.0671%" height="15" fill="rgb(238,154,13)" fg:x="479" fg:w="3"/><text x="10.8379%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.07%)</title><rect x="10.7207%" y="309" width="0.0671%" height="15" fill="rgb(219,56,2)" fg:x="479" fg:w="3"/><text x="10.8379%" y="319.50"></text></g><g><title>lru_add_fn (12 samples, 0.27%)</title><rect x="10.5416%" y="357" width="0.2686%" height="15" fill="rgb(233,0,4)" fg:x="471" fg:w="12"/><text x="10.6588%" y="367.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.13%)</title><rect x="10.6759%" y="341" width="0.1343%" height="15" fill="rgb(235,30,7)" fg:x="477" fg:w="6"/><text x="10.7931%" y="351.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="10.7878%" y="325" width="0.0224%" height="15" fill="rgb(250,79,13)" fg:x="482" fg:w="1"/><text x="10.9050%" y="335.50"></text></g><g><title>folio_add_lru_vma (22 samples, 0.49%)</title><rect x="10.3850%" y="405" width="0.4924%" height="15" fill="rgb(211,146,34)" fg:x="464" fg:w="22"/><text x="10.5021%" y="415.50"></text></g><g><title>folio_add_lru (22 samples, 0.49%)</title><rect x="10.3850%" y="389" width="0.4924%" height="15" fill="rgb(228,22,38)" fg:x="464" fg:w="22"/><text x="10.5021%" y="399.50"></text></g><g><title>folio_batch_move_lru (16 samples, 0.36%)</title><rect x="10.5192%" y="373" width="0.3581%" height="15" fill="rgb(235,168,5)" fg:x="470" fg:w="16"/><text x="10.6364%" y="383.50"></text></g><g><title>release_pages (3 samples, 0.07%)</title><rect x="10.8102%" y="357" width="0.0671%" height="15" fill="rgb(221,155,16)" fg:x="483" fg:w="3"/><text x="10.9274%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (2 samples, 0.04%)</title><rect x="10.8774%" y="405" width="0.0448%" height="15" fill="rgb(215,215,53)" fg:x="486" fg:w="2"/><text x="10.9945%" y="415.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="10.9221%" y="389" width="0.0224%" height="15" fill="rgb(223,4,10)" fg:x="488" fg:w="1"/><text x="11.0393%" y="399.50"></text></g><g><title>inc_mm_counter (4 samples, 0.09%)</title><rect x="10.9221%" y="405" width="0.0895%" height="15" fill="rgb(234,103,6)" fg:x="488" fg:w="4"/><text x="11.0393%" y="415.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.07%)</title><rect x="10.9445%" y="389" width="0.0671%" height="15" fill="rgb(227,97,0)" fg:x="489" fg:w="3"/><text x="11.0617%" y="399.50"></text></g><g><title>policy_node (1 samples, 0.02%)</title><rect x="11.0116%" y="405" width="0.0224%" height="15" fill="rgb(234,150,53)" fg:x="492" fg:w="1"/><text x="11.1288%" y="415.50"></text></g><g><title>__alloc_pages (2 samples, 0.04%)</title><rect x="11.0788%" y="389" width="0.0448%" height="15" fill="rgb(228,201,54)" fg:x="495" fg:w="2"/><text x="11.1960%" y="399.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.04%)</title><rect x="11.1907%" y="357" width="0.0448%" height="15" fill="rgb(222,22,37)" fg:x="500" fg:w="2"/><text x="11.3079%" y="367.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="11.2578%" y="341" width="0.0224%" height="15" fill="rgb(237,53,32)" fg:x="503" fg:w="1"/><text x="11.3750%" y="351.50"></text></g><g><title>clear_page_erms (3 samples, 0.07%)</title><rect x="11.2802%" y="341" width="0.0671%" height="15" fill="rgb(233,25,53)" fg:x="504" fg:w="3"/><text x="11.3974%" y="351.50"></text></g><g><title>get_page_from_freelist (12 samples, 0.27%)</title><rect x="11.2355%" y="357" width="0.2686%" height="15" fill="rgb(210,40,34)" fg:x="502" fg:w="12"/><text x="11.3526%" y="367.50"></text></g><g><title>rmqueue (7 samples, 0.16%)</title><rect x="11.3474%" y="341" width="0.1567%" height="15" fill="rgb(241,220,44)" fg:x="507" fg:w="7"/><text x="11.4645%" y="351.50"></text></g><g><title>__rmqueue_pcplist (7 samples, 0.16%)</title><rect x="11.3474%" y="325" width="0.1567%" height="15" fill="rgb(235,28,35)" fg:x="507" fg:w="7"/><text x="11.4645%" y="335.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.11%)</title><rect x="11.3921%" y="309" width="0.1119%" height="15" fill="rgb(210,56,17)" fg:x="509" fg:w="5"/><text x="11.5093%" y="319.50"></text></g><g><title>__alloc_pages (19 samples, 0.43%)</title><rect x="11.1235%" y="373" width="0.4252%" height="15" fill="rgb(224,130,29)" fg:x="497" fg:w="19"/><text x="11.2407%" y="383.50"></text></g><g><title>should_fail_alloc_page (2 samples, 0.04%)</title><rect x="11.5040%" y="357" width="0.0448%" height="15" fill="rgb(235,212,8)" fg:x="514" fg:w="2"/><text x="11.6212%" y="367.50"></text></g><g><title>do_anonymous_page (104 samples, 2.33%)</title><rect x="9.2659%" y="421" width="2.3277%" height="15" fill="rgb(223,33,50)" fg:x="414" fg:w="104"/><text x="9.3831%" y="431.50">do_ano..</text></g><g><title>vma_alloc_folio (25 samples, 0.56%)</title><rect x="11.0340%" y="405" width="0.5595%" height="15" fill="rgb(219,149,13)" fg:x="493" fg:w="25"/><text x="11.1512%" y="415.50"></text></g><g><title>__folio_alloc (21 samples, 0.47%)</title><rect x="11.1235%" y="389" width="0.4700%" height="15" fill="rgb(250,156,29)" fg:x="497" fg:w="21"/><text x="11.2407%" y="399.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.04%)</title><rect x="11.5488%" y="373" width="0.0448%" height="15" fill="rgb(216,193,19)" fg:x="516" fg:w="2"/><text x="11.6660%" y="383.50"></text></g><g><title>handle_pte_fault (106 samples, 2.37%)</title><rect x="9.2435%" y="437" width="2.3724%" height="15" fill="rgb(216,135,14)" fg:x="413" fg:w="106"/><text x="9.3607%" y="447.50">handle..</text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="11.5936%" y="421" width="0.0224%" height="15" fill="rgb(241,47,5)" fg:x="518" fg:w="1"/><text x="11.7107%" y="431.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="11.5936%" y="405" width="0.0224%" height="15" fill="rgb(233,42,35)" fg:x="518" fg:w="1"/><text x="11.7107%" y="415.50"></text></g><g><title>handle_mm_fault (113 samples, 2.53%)</title><rect x="9.1092%" y="469" width="2.5291%" height="15" fill="rgb(231,13,6)" fg:x="407" fg:w="113"/><text x="9.2264%" y="479.50">handle_..</text></g><g><title>__handle_mm_fault (112 samples, 2.51%)</title><rect x="9.1316%" y="453" width="2.5067%" height="15" fill="rgb(207,181,40)" fg:x="408" fg:w="112"/><text x="9.2488%" y="463.50">__handl..</text></g><g><title>pmd_val (1 samples, 0.02%)</title><rect x="11.6159%" y="437" width="0.0224%" height="15" fill="rgb(254,173,49)" fg:x="519" fg:w="1"/><text x="11.7331%" y="447.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="11.6607%" y="453" width="0.0224%" height="15" fill="rgb(221,1,38)" fg:x="521" fg:w="1"/><text x="11.7779%" y="463.50"></text></g><g><title>lock_vma_under_rcu (4 samples, 0.09%)</title><rect x="11.6383%" y="469" width="0.0895%" height="15" fill="rgb(206,124,46)" fg:x="520" fg:w="4"/><text x="11.7555%" y="479.50"></text></g><g><title>mas_walk (2 samples, 0.04%)</title><rect x="11.6831%" y="453" width="0.0448%" height="15" fill="rgb(249,21,11)" fg:x="522" fg:w="2"/><text x="11.8003%" y="463.50"></text></g><g><title>mtree_range_walk (2 samples, 0.04%)</title><rect x="11.6831%" y="437" width="0.0448%" height="15" fill="rgb(222,201,40)" fg:x="522" fg:w="2"/><text x="11.8003%" y="447.50"></text></g><g><title>mem_cgroup_from_task (2 samples, 0.04%)</title><rect x="11.7278%" y="469" width="0.0448%" height="15" fill="rgb(235,61,29)" fg:x="524" fg:w="2"/><text x="11.8450%" y="479.50"></text></g><g><title>asm_exc_page_fault (127 samples, 2.84%)</title><rect x="8.9526%" y="517" width="2.8424%" height="15" fill="rgb(219,207,3)" fg:x="400" fg:w="127"/><text x="9.0697%" y="527.50">asm_exc_..</text></g><g><title>exc_page_fault (125 samples, 2.80%)</title><rect x="8.9973%" y="501" width="2.7977%" height="15" fill="rgb(222,56,46)" fg:x="402" fg:w="125"/><text x="9.1145%" y="511.50">exc_page..</text></g><g><title>do_user_addr_fault (123 samples, 2.75%)</title><rect x="9.0421%" y="485" width="2.7529%" height="15" fill="rgb(239,76,54)" fg:x="404" fg:w="123"/><text x="9.1593%" y="495.50">do_user..</text></g><g><title>up_read (1 samples, 0.02%)</title><rect x="11.7726%" y="469" width="0.0224%" height="15" fill="rgb(231,124,27)" fg:x="526" fg:w="1"/><text x="11.8898%" y="479.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="11.7950%" y="437" width="0.0224%" height="15" fill="rgb(249,195,6)" fg:x="527" fg:w="1"/><text x="11.9122%" y="447.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="11.7950%" y="421" width="0.0224%" height="15" fill="rgb(237,174,47)" fg:x="527" fg:w="1"/><text x="11.9122%" y="431.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="11.7950%" y="405" width="0.0224%" height="15" fill="rgb(206,201,31)" fg:x="527" fg:w="1"/><text x="11.9122%" y="415.50"></text></g><g><title>mt_free_rcu (1 samples, 0.02%)</title><rect x="11.7950%" y="389" width="0.0224%" height="15" fill="rgb(231,57,52)" fg:x="527" fg:w="1"/><text x="11.9122%" y="399.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="11.7950%" y="373" width="0.0224%" height="15" fill="rgb(248,177,22)" fg:x="527" fg:w="1"/><text x="11.9122%" y="383.50"></text></g><g><title>__slab_free (1 samples, 0.02%)</title><rect x="11.7950%" y="357" width="0.0224%" height="15" fill="rgb(215,211,37)" fg:x="527" fg:w="1"/><text x="11.9122%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="11.7950%" y="517" width="0.0448%" height="15" fill="rgb(241,128,51)" fg:x="527" fg:w="2"/><text x="11.9122%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="11.7950%" y="501" width="0.0448%" height="15" fill="rgb(227,165,31)" fg:x="527" fg:w="2"/><text x="11.9122%" y="511.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.04%)</title><rect x="11.7950%" y="485" width="0.0448%" height="15" fill="rgb(228,167,24)" fg:x="527" fg:w="2"/><text x="11.9122%" y="495.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.04%)</title><rect x="11.7950%" y="469" width="0.0448%" height="15" fill="rgb(228,143,12)" fg:x="527" fg:w="2"/><text x="11.9122%" y="479.50"></text></g><g><title>__do_softirq (2 samples, 0.04%)</title><rect x="11.7950%" y="453" width="0.0448%" height="15" fill="rgb(249,149,8)" fg:x="527" fg:w="2"/><text x="11.9122%" y="463.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="11.8174%" y="437" width="0.0224%" height="15" fill="rgb(243,35,44)" fg:x="528" fg:w="1"/><text x="11.9346%" y="447.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="11.8174%" y="421" width="0.0224%" height="15" fill="rgb(246,89,9)" fg:x="528" fg:w="1"/><text x="11.9346%" y="431.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="11.8174%" y="405" width="0.0224%" height="15" fill="rgb(233,213,13)" fg:x="528" fg:w="1"/><text x="11.9346%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (284 samples, 6.36%)</title><rect x="5.8863%" y="565" width="6.3563%" height="15" fill="rgb(233,141,41)" fg:x="263" fg:w="284"/><text x="6.0035%" y="575.50">core::iter::traits::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (284 samples, 6.36%)</title><rect x="5.8863%" y="549" width="6.3563%" height="15" fill="rgb(239,167,4)" fg:x="263" fg:w="284"/><text x="6.0035%" y="559.50">alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::write (284 samples, 6.36%)</title><rect x="5.8863%" y="533" width="6.3563%" height="15" fill="rgb(209,217,16)" fg:x="263" fg:w="284"/><text x="6.0035%" y="543.50">core::ptr::write</text></g><g><title>sync_regs (18 samples, 0.40%)</title><rect x="11.8397%" y="517" width="0.4029%" height="15" fill="rgb(219,88,35)" fg:x="529" fg:w="18"/><text x="11.9569%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="13.4512%" y="533" width="0.0448%" height="15" fill="rgb(220,193,23)" fg:x="601" fg:w="2"/><text x="13.5684%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="13.4512%" y="517" width="0.0448%" height="15" fill="rgb(230,90,52)" fg:x="601" fg:w="2"/><text x="13.5684%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="13.4512%" y="501" width="0.0448%" height="15" fill="rgb(252,106,19)" fg:x="601" fg:w="2"/><text x="13.5684%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.0555%" y="405" width="0.0224%" height="15" fill="rgb(206,74,20)" fg:x="628" fg:w="1"/><text x="14.1727%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.65%)</title><rect x="14.0555%" y="421" width="0.6491%" height="15" fill="rgb(230,138,44)" fg:x="628" fg:w="29"/><text x="14.1727%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (28 samples, 0.63%)</title><rect x="14.0779%" y="405" width="0.6267%" height="15" fill="rgb(235,182,43)" fg:x="629" fg:w="28"/><text x="14.1951%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.29%)</title><rect x="14.4136%" y="389" width="0.2910%" height="15" fill="rgb(242,16,51)" fg:x="644" fg:w="13"/><text x="14.5308%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.87%)</title><rect x="14.0555%" y="437" width="0.8729%" height="15" fill="rgb(248,9,4)" fg:x="628" fg:w="39"/><text x="14.1727%" y="447.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.22%)</title><rect x="14.7046%" y="421" width="0.2238%" height="15" fill="rgb(210,31,22)" fg:x="657" fg:w="10"/><text x="14.8218%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.22%)</title><rect x="14.7046%" y="405" width="0.2238%" height="15" fill="rgb(239,54,39)" fg:x="657" fg:w="10"/><text x="14.8218%" y="415.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h3ef6d33928924d24E.llvm.10486500893935979531 (1 samples, 0.02%)</title><rect x="14.9955%" y="373" width="0.0224%" height="15" fill="rgb(230,99,41)" fg:x="670" fg:w="1"/><text x="15.1127%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.16%)</title><rect x="15.0179%" y="373" width="0.1567%" height="15" fill="rgb(253,106,12)" fg:x="671" fg:w="7"/><text x="15.1351%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4 samples, 0.09%)</title><rect x="15.0850%" y="357" width="0.0895%" height="15" fill="rgb(213,46,41)" fg:x="674" fg:w="4"/><text x="15.2022%" y="367.50"></text></g><g><title>__glibc_morecore (1 samples, 0.02%)</title><rect x="16.1146%" y="245" width="0.0224%" height="15" fill="rgb(215,133,35)" fg:x="720" fg:w="1"/><text x="16.2318%" y="255.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="16.1146%" y="229" width="0.0224%" height="15" fill="rgb(213,28,5)" fg:x="720" fg:w="1"/><text x="16.2318%" y="239.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="16.1146%" y="213" width="0.0224%" height="15" fill="rgb(215,77,49)" fg:x="720" fg:w="1"/><text x="16.2318%" y="223.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="16.1146%" y="197" width="0.0224%" height="15" fill="rgb(248,100,22)" fg:x="720" fg:w="1"/><text x="16.2318%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="16.1146%" y="181" width="0.0224%" height="15" fill="rgb(208,67,9)" fg:x="720" fg:w="1"/><text x="16.2318%" y="191.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="16.1146%" y="165" width="0.0224%" height="15" fill="rgb(219,133,21)" fg:x="720" fg:w="1"/><text x="16.2318%" y="175.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="16.1146%" y="149" width="0.0224%" height="15" fill="rgb(246,46,29)" fg:x="720" fg:w="1"/><text x="16.2318%" y="159.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="16.1146%" y="133" width="0.0224%" height="15" fill="rgb(246,185,52)" fg:x="720" fg:w="1"/><text x="16.2318%" y="143.50"></text></g><g><title>__do_sys_brk (1 samples, 0.02%)</title><rect x="16.1146%" y="117" width="0.0224%" height="15" fill="rgb(252,136,11)" fg:x="720" fg:w="1"/><text x="16.2318%" y="127.50"></text></g><g><title>do_brk_flags (1 samples, 0.02%)</title><rect x="16.1146%" y="101" width="0.0224%" height="15" fill="rgb(219,138,53)" fg:x="720" fg:w="1"/><text x="16.2318%" y="111.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.02%)</title><rect x="16.1146%" y="85" width="0.0224%" height="15" fill="rgb(211,51,23)" fg:x="720" fg:w="1"/><text x="16.2318%" y="95.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.02%)</title><rect x="16.1146%" y="69" width="0.0224%" height="15" fill="rgb(247,221,28)" fg:x="720" fg:w="1"/><text x="16.2318%" y="79.50"></text></g><g><title>mas_wr_spanning_store.isra.0 (1 samples, 0.02%)</title><rect x="16.1146%" y="53" width="0.0224%" height="15" fill="rgb(251,222,45)" fg:x="720" fg:w="1"/><text x="16.2318%" y="63.50"></text></g><g><title>mas_wr_walk_index.isra.0 (1 samples, 0.02%)</title><rect x="16.1146%" y="37" width="0.0224%" height="15" fill="rgb(217,162,53)" fg:x="720" fg:w="1"/><text x="16.2318%" y="47.50"></text></g><g><title>_int_malloc (3 samples, 0.07%)</title><rect x="16.0922%" y="277" width="0.0671%" height="15" fill="rgb(229,93,14)" fg:x="719" fg:w="3"/><text x="16.2094%" y="287.50"></text></g><g><title>sysmalloc (3 samples, 0.07%)</title><rect x="16.0922%" y="261" width="0.0671%" height="15" fill="rgb(209,67,49)" fg:x="719" fg:w="3"/><text x="16.2094%" y="271.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="16.1370%" y="245" width="0.0224%" height="15" fill="rgb(213,87,29)" fg:x="721" fg:w="1"/><text x="16.2542%" y="255.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="16.1370%" y="229" width="0.0224%" height="15" fill="rgb(205,151,52)" fg:x="721" fg:w="1"/><text x="16.2542%" y="239.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="16.1370%" y="213" width="0.0224%" height="15" fill="rgb(253,215,39)" fg:x="721" fg:w="1"/><text x="16.2542%" y="223.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="16.1370%" y="197" width="0.0224%" height="15" fill="rgb(221,220,41)" fg:x="721" fg:w="1"/><text x="16.2542%" y="207.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="16.1370%" y="181" width="0.0224%" height="15" fill="rgb(218,133,21)" fg:x="721" fg:w="1"/><text x="16.2542%" y="191.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="16.1370%" y="165" width="0.0224%" height="15" fill="rgb(221,193,43)" fg:x="721" fg:w="1"/><text x="16.2542%" y="175.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="16.1370%" y="149" width="0.0224%" height="15" fill="rgb(240,128,52)" fg:x="721" fg:w="1"/><text x="16.2542%" y="159.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="16.1370%" y="133" width="0.0224%" height="15" fill="rgb(253,114,12)" fg:x="721" fg:w="1"/><text x="16.2542%" y="143.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="16.1370%" y="117" width="0.0224%" height="15" fill="rgb(215,223,47)" fg:x="721" fg:w="1"/><text x="16.2542%" y="127.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="16.1370%" y="101" width="0.0224%" height="15" fill="rgb(248,225,23)" fg:x="721" fg:w="1"/><text x="16.2542%" y="111.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="16.1370%" y="85" width="0.0224%" height="15" fill="rgb(250,108,0)" fg:x="721" fg:w="1"/><text x="16.2542%" y="95.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="16.1370%" y="69" width="0.0224%" height="15" fill="rgb(228,208,7)" fg:x="721" fg:w="1"/><text x="16.2542%" y="79.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="16.1370%" y="53" width="0.0224%" height="15" fill="rgb(244,45,10)" fg:x="721" fg:w="1"/><text x="16.2542%" y="63.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="16.1370%" y="37" width="0.0224%" height="15" fill="rgb(207,125,25)" fg:x="721" fg:w="1"/><text x="16.2542%" y="47.50"></text></g><g><title>__rcu_read_unlock (7 samples, 0.16%)</title><rect x="16.1817%" y="149" width="0.1567%" height="15" fill="rgb(210,195,18)" fg:x="723" fg:w="7"/><text x="16.2989%" y="159.50"></text></g><g><title>__count_memcg_events (2 samples, 0.04%)</title><rect x="16.3832%" y="133" width="0.0448%" height="15" fill="rgb(249,80,12)" fg:x="732" fg:w="2"/><text x="16.5004%" y="143.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="16.4056%" y="117" width="0.0224%" height="15" fill="rgb(221,65,9)" fg:x="733" fg:w="1"/><text x="16.5227%" y="127.50"></text></g><g><title>charge_memcg (8 samples, 0.18%)</title><rect x="16.3384%" y="149" width="0.1791%" height="15" fill="rgb(235,49,36)" fg:x="730" fg:w="8"/><text x="16.4556%" y="159.50"></text></g><g><title>try_charge_memcg (4 samples, 0.09%)</title><rect x="16.4279%" y="133" width="0.0895%" height="15" fill="rgb(225,32,20)" fg:x="734" fg:w="4"/><text x="16.5451%" y="143.50"></text></g><g><title>consume_stock (3 samples, 0.07%)</title><rect x="16.4503%" y="117" width="0.0671%" height="15" fill="rgb(215,141,46)" fg:x="735" fg:w="3"/><text x="16.5675%" y="127.50"></text></g><g><title>__mem_cgroup_charge (16 samples, 0.36%)</title><rect x="16.1817%" y="165" width="0.3581%" height="15" fill="rgb(250,160,47)" fg:x="723" fg:w="16"/><text x="16.2989%" y="175.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="16.5175%" y="149" width="0.0224%" height="15" fill="rgb(216,222,40)" fg:x="738" fg:w="1"/><text x="16.6346%" y="159.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="16.5398%" y="165" width="0.0448%" height="15" fill="rgb(234,217,39)" fg:x="739" fg:w="2"/><text x="16.6570%" y="175.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="16.5846%" y="165" width="0.0224%" height="15" fill="rgb(207,178,40)" fg:x="741" fg:w="1"/><text x="16.7018%" y="175.50"></text></g><g><title>folio_add_lru_vma (5 samples, 0.11%)</title><rect x="16.6070%" y="165" width="0.1119%" height="15" fill="rgb(221,136,13)" fg:x="742" fg:w="5"/><text x="16.7242%" y="175.50"></text></g><g><title>folio_add_lru (5 samples, 0.11%)</title><rect x="16.6070%" y="149" width="0.1119%" height="15" fill="rgb(249,199,10)" fg:x="742" fg:w="5"/><text x="16.7242%" y="159.50"></text></g><g><title>folio_batch_move_lru (5 samples, 0.11%)</title><rect x="16.6070%" y="133" width="0.1119%" height="15" fill="rgb(249,222,13)" fg:x="742" fg:w="5"/><text x="16.7242%" y="143.50"></text></g><g><title>lru_add_fn (4 samples, 0.09%)</title><rect x="16.6294%" y="117" width="0.0895%" height="15" fill="rgb(244,185,38)" fg:x="743" fg:w="4"/><text x="16.7466%" y="127.50"></text></g><g><title>lru_gen_add_folio (3 samples, 0.07%)</title><rect x="16.6517%" y="101" width="0.0671%" height="15" fill="rgb(236,202,9)" fg:x="744" fg:w="3"/><text x="16.7689%" y="111.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="16.7189%" y="117" width="0.0224%" height="15" fill="rgb(250,229,37)" fg:x="747" fg:w="1"/><text x="16.8361%" y="127.50"></text></g><g><title>folio_add_new_anon_rmap (2 samples, 0.04%)</title><rect x="16.7189%" y="165" width="0.0448%" height="15" fill="rgb(206,174,23)" fg:x="747" fg:w="2"/><text x="16.8361%" y="175.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.04%)</title><rect x="16.7189%" y="149" width="0.0448%" height="15" fill="rgb(211,33,43)" fg:x="747" fg:w="2"/><text x="16.8361%" y="159.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="16.7189%" y="133" width="0.0448%" height="15" fill="rgb(245,58,50)" fg:x="747" fg:w="2"/><text x="16.8361%" y="143.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="16.7413%" y="117" width="0.0224%" height="15" fill="rgb(244,68,36)" fg:x="748" fg:w="1"/><text x="16.8585%" y="127.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="16.7637%" y="165" width="0.0224%" height="15" fill="rgb(232,229,15)" fg:x="749" fg:w="1"/><text x="16.8808%" y="175.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="16.7637%" y="149" width="0.0224%" height="15" fill="rgb(254,30,23)" fg:x="749" fg:w="1"/><text x="16.8808%" y="159.50"></text></g><g><title>_raw_spin_trylock (2 samples, 0.04%)</title><rect x="16.8084%" y="101" width="0.0448%" height="15" fill="rgb(235,160,14)" fg:x="751" fg:w="2"/><text x="16.9256%" y="111.50"></text></g><g><title>clear_page_erms (1 samples, 0.02%)</title><rect x="16.8532%" y="101" width="0.0224%" height="15" fill="rgb(212,155,44)" fg:x="753" fg:w="1"/><text x="16.9704%" y="111.50"></text></g><g><title>post_alloc_hook (1 samples, 0.02%)</title><rect x="16.8756%" y="101" width="0.0224%" height="15" fill="rgb(226,2,50)" fg:x="754" fg:w="1"/><text x="16.9927%" y="111.50"></text></g><g><title>do_anonymous_page (34 samples, 0.76%)</title><rect x="16.1594%" y="181" width="0.7610%" height="15" fill="rgb(234,177,6)" fg:x="722" fg:w="34"/><text x="16.2765%" y="191.50"></text></g><g><title>vma_alloc_folio (6 samples, 0.13%)</title><rect x="16.7860%" y="165" width="0.1343%" height="15" fill="rgb(217,24,9)" fg:x="750" fg:w="6"/><text x="16.9032%" y="175.50"></text></g><g><title>__folio_alloc (6 samples, 0.13%)</title><rect x="16.7860%" y="149" width="0.1343%" height="15" fill="rgb(220,13,46)" fg:x="750" fg:w="6"/><text x="16.9032%" y="159.50"></text></g><g><title>__alloc_pages (6 samples, 0.13%)</title><rect x="16.7860%" y="133" width="0.1343%" height="15" fill="rgb(239,221,27)" fg:x="750" fg:w="6"/><text x="16.9032%" y="143.50"></text></g><g><title>get_page_from_freelist (5 samples, 0.11%)</title><rect x="16.8084%" y="117" width="0.1119%" height="15" fill="rgb(222,198,25)" fg:x="751" fg:w="5"/><text x="16.9256%" y="127.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="16.8979%" y="101" width="0.0224%" height="15" fill="rgb(211,99,13)" fg:x="755" fg:w="1"/><text x="17.0151%" y="111.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="16.8979%" y="85" width="0.0224%" height="15" fill="rgb(232,111,31)" fg:x="755" fg:w="1"/><text x="17.0151%" y="95.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="16.8979%" y="69" width="0.0224%" height="15" fill="rgb(245,82,37)" fg:x="755" fg:w="1"/><text x="17.0151%" y="79.50"></text></g><g><title>handle_mm_fault (35 samples, 0.78%)</title><rect x="16.1594%" y="229" width="0.7833%" height="15" fill="rgb(227,149,46)" fg:x="722" fg:w="35"/><text x="16.2765%" y="239.50"></text></g><g><title>__handle_mm_fault (35 samples, 0.78%)</title><rect x="16.1594%" y="213" width="0.7833%" height="15" fill="rgb(218,36,50)" fg:x="722" fg:w="35"/><text x="16.2765%" y="223.50"></text></g><g><title>handle_pte_fault (35 samples, 0.78%)</title><rect x="16.1594%" y="197" width="0.7833%" height="15" fill="rgb(226,80,48)" fg:x="722" fg:w="35"/><text x="16.2765%" y="207.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="16.9203%" y="181" width="0.0224%" height="15" fill="rgb(238,224,15)" fg:x="756" fg:w="1"/><text x="17.0375%" y="191.50"></text></g><g><title>asm_exc_page_fault (37 samples, 0.83%)</title><rect x="16.1594%" y="277" width="0.8281%" height="15" fill="rgb(241,136,10)" fg:x="722" fg:w="37"/><text x="16.2765%" y="287.50"></text></g><g><title>exc_page_fault (37 samples, 0.83%)</title><rect x="16.1594%" y="261" width="0.8281%" height="15" fill="rgb(208,32,45)" fg:x="722" fg:w="37"/><text x="16.2765%" y="271.50"></text></g><g><title>do_user_addr_fault (37 samples, 0.83%)</title><rect x="16.1594%" y="245" width="0.8281%" height="15" fill="rgb(207,135,9)" fg:x="722" fg:w="37"/><text x="16.2765%" y="255.50"></text></g><g><title>lock_vma_under_rcu (2 samples, 0.04%)</title><rect x="16.9427%" y="229" width="0.0448%" height="15" fill="rgb(206,86,44)" fg:x="757" fg:w="2"/><text x="17.0599%" y="239.50"></text></g><g><title>mas_walk (2 samples, 0.04%)</title><rect x="16.9427%" y="213" width="0.0448%" height="15" fill="rgb(245,177,15)" fg:x="757" fg:w="2"/><text x="17.0599%" y="223.50"></text></g><g><title>mtree_range_walk (1 samples, 0.02%)</title><rect x="16.9651%" y="197" width="0.0224%" height="15" fill="rgb(206,64,50)" fg:x="758" fg:w="1"/><text x="17.0823%" y="207.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="16.9875%" y="277" width="0.0224%" height="15" fill="rgb(234,36,40)" fg:x="759" fg:w="1"/><text x="17.1047%" y="287.50"></text></g><g><title>_int_realloc (69 samples, 1.54%)</title><rect x="15.6446%" y="293" width="1.5443%" height="15" fill="rgb(213,64,8)" fg:x="699" fg:w="69"/><text x="15.7618%" y="303.50">_in..</text></g><g><title>sync_regs (8 samples, 0.18%)</title><rect x="17.0098%" y="277" width="0.1791%" height="15" fill="rgb(210,75,36)" fg:x="760" fg:w="8"/><text x="17.1270%" y="287.50"></text></g><g><title>arena_for_chunk (5 samples, 0.11%)</title><rect x="17.1889%" y="293" width="0.1119%" height="15" fill="rgb(229,88,21)" fg:x="768" fg:w="5"/><text x="17.3061%" y="303.50"></text></g><g><title>__GI___libc_realloc (93 samples, 2.08%)</title><rect x="15.2865%" y="309" width="2.0815%" height="15" fill="rgb(252,204,47)" fg:x="683" fg:w="93"/><text x="15.4037%" y="319.50">__GI_..</text></g><g><title>checked_request2size (3 samples, 0.07%)</title><rect x="17.3008%" y="293" width="0.0671%" height="15" fill="rgb(208,77,27)" fg:x="773" fg:w="3"/><text x="17.4180%" y="303.50"></text></g><g><title>__rdl_realloc (5 samples, 0.11%)</title><rect x="17.3679%" y="309" width="0.1119%" height="15" fill="rgb(221,76,26)" fg:x="776" fg:w="5"/><text x="17.4851%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (100 samples, 2.24%)</title><rect x="15.2865%" y="357" width="2.2381%" height="15" fill="rgb(225,139,18)" fg:x="683" fg:w="100"/><text x="15.4037%" y="367.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (100 samples, 2.24%)</title><rect x="15.2865%" y="341" width="2.2381%" height="15" fill="rgb(230,137,11)" fg:x="683" fg:w="100"/><text x="15.4037%" y="351.50">alloc:..</text></g><g><title>alloc::alloc::realloc (100 samples, 2.24%)</title><rect x="15.2865%" y="325" width="2.2381%" height="15" fill="rgb(212,28,1)" fg:x="683" fg:w="100"/><text x="15.4037%" y="335.50">alloc:..</text></g><g><title>__rust_realloc (2 samples, 0.04%)</title><rect x="17.4799%" y="309" width="0.0448%" height="15" fill="rgb(248,164,17)" fg:x="781" fg:w="2"/><text x="17.5970%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h3ef6d33928924d24E.llvm.10486500893935979531 (1 samples, 0.02%)</title><rect x="17.5246%" y="357" width="0.0224%" height="15" fill="rgb(222,171,42)" fg:x="783" fg:w="1"/><text x="17.6418%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (107 samples, 2.39%)</title><rect x="15.1746%" y="373" width="2.3948%" height="15" fill="rgb(243,84,45)" fg:x="678" fg:w="107"/><text x="15.2918%" y="383.50">alloc:..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="17.5470%" y="357" width="0.0224%" height="15" fill="rgb(252,49,23)" fg:x="784" fg:w="1"/><text x="17.6642%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.07%)</title><rect x="17.5694%" y="373" width="0.0671%" height="15" fill="rgb(215,19,7)" fg:x="785" fg:w="3"/><text x="17.6866%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.07%)</title><rect x="17.5694%" y="357" width="0.0671%" height="15" fill="rgb(238,81,41)" fg:x="785" fg:w="3"/><text x="17.6866%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="17.6365%" y="341" width="0.0448%" height="15" fill="rgb(210,199,37)" fg:x="788" fg:w="2"/><text x="17.7537%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (126 samples, 2.82%)</title><rect x="14.9284%" y="437" width="2.8201%" height="15" fill="rgb(244,192,49)" fg:x="667" fg:w="126"/><text x="15.0456%" y="447.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (126 samples, 2.82%)</title><rect x="14.9284%" y="421" width="2.8201%" height="15" fill="rgb(226,211,11)" fg:x="667" fg:w="126"/><text x="15.0456%" y="431.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (124 samples, 2.78%)</title><rect x="14.9731%" y="405" width="2.7753%" height="15" fill="rgb(236,162,54)" fg:x="669" fg:w="124"/><text x="15.0903%" y="415.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (124 samples, 2.78%)</title><rect x="14.9731%" y="389" width="2.7753%" height="15" fill="rgb(220,229,9)" fg:x="669" fg:w="124"/><text x="15.0903%" y="399.50">alloc::r..</text></g><g><title>core::cmp::max (5 samples, 0.11%)</title><rect x="17.6365%" y="373" width="0.1119%" height="15" fill="rgb(250,87,22)" fg:x="788" fg:w="5"/><text x="17.7537%" y="383.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.11%)</title><rect x="17.6365%" y="357" width="0.1119%" height="15" fill="rgb(239,43,17)" fg:x="788" fg:w="5"/><text x="17.7537%" y="367.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.07%)</title><rect x="17.6813%" y="341" width="0.0671%" height="15" fill="rgb(231,177,25)" fg:x="790" fg:w="3"/><text x="17.7985%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (186 samples, 4.16%)</title><rect x="13.7422%" y="453" width="4.1629%" height="15" fill="rgb(219,179,1)" fg:x="614" fg:w="186"/><text x="13.8594%" y="463.50">alloc::vec::V..</text></g><g><title>core::ptr::write (7 samples, 0.16%)</title><rect x="17.7484%" y="437" width="0.1567%" height="15" fill="rgb(238,219,53)" fg:x="793" fg:w="7"/><text x="17.8656%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (17 samples, 0.38%)</title><rect x="18.2856%" y="373" width="0.3805%" height="15" fill="rgb(232,167,36)" fg:x="817" fg:w="17"/><text x="18.4028%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (17 samples, 0.38%)</title><rect x="18.2856%" y="357" width="0.3805%" height="15" fill="rgb(244,19,51)" fg:x="817" fg:w="17"/><text x="18.4028%" y="367.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (17 samples, 0.38%)</title><rect x="18.2856%" y="341" width="0.3805%" height="15" fill="rgb(224,6,22)" fg:x="817" fg:w="17"/><text x="18.4028%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="18.6661%" y="357" width="0.0448%" height="15" fill="rgb(224,145,5)" fg:x="834" fg:w="2"/><text x="18.7833%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (65 samples, 1.45%)</title><rect x="18.2856%" y="389" width="1.4548%" height="15" fill="rgb(234,130,49)" fg:x="817" fg:w="65"/><text x="18.4028%" y="399.50">cor..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (48 samples, 1.07%)</title><rect x="18.6661%" y="373" width="1.0743%" height="15" fill="rgb(254,6,2)" fg:x="834" fg:w="48"/><text x="18.7833%" y="383.50">f..</text></g><g><title>fringe_vs_astar::structures::map::Map::get (46 samples, 1.03%)</title><rect x="18.7108%" y="357" width="1.0295%" height="15" fill="rgb(208,96,46)" fg:x="836" fg:w="46"/><text x="18.8280%" y="367.50">f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.34%)</title><rect x="19.4047%" y="341" width="0.3357%" height="15" fill="rgb(239,3,39)" fg:x="867" fg:w="15"/><text x="19.5218%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.34%)</title><rect x="19.4047%" y="325" width="0.3357%" height="15" fill="rgb(233,210,1)" fg:x="867" fg:w="15"/><text x="19.5218%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.34%)</title><rect x="19.4047%" y="309" width="0.3357%" height="15" fill="rgb(244,137,37)" fg:x="867" fg:w="15"/><text x="19.5218%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (270 samples, 6.04%)</title><rect x="13.7422%" y="469" width="6.0430%" height="15" fill="rgb(240,136,2)" fg:x="614" fg:w="270"/><text x="13.8594%" y="479.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (84 samples, 1.88%)</title><rect x="17.9051%" y="453" width="1.8800%" height="15" fill="rgb(239,18,37)" fg:x="800" fg:w="84"/><text x="18.0223%" y="463.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (84 samples, 1.88%)</title><rect x="17.9051%" y="437" width="1.8800%" height="15" fill="rgb(218,185,22)" fg:x="800" fg:w="84"/><text x="18.0223%" y="447.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (84 samples, 1.88%)</title><rect x="17.9051%" y="421" width="1.8800%" height="15" fill="rgb(225,218,4)" fg:x="800" fg:w="84"/><text x="18.0223%" y="431.50">&lt;cor..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (84 samples, 1.88%)</title><rect x="17.9051%" y="405" width="1.8800%" height="15" fill="rgb(230,182,32)" fg:x="800" fg:w="84"/><text x="18.0223%" y="415.50">&lt;cor..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.04%)</title><rect x="19.7404%" y="389" width="0.0448%" height="15" fill="rgb(242,56,43)" fg:x="882" fg:w="2"/><text x="19.8576%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.04%)</title><rect x="19.7404%" y="373" width="0.0448%" height="15" fill="rgb(233,99,24)" fg:x="882" fg:w="2"/><text x="19.8576%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="19.7851%" y="469" width="0.0448%" height="15" fill="rgb(234,209,42)" fg:x="884" fg:w="2"/><text x="19.9023%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="19.7851%" y="453" width="0.0448%" height="15" fill="rgb(227,7,12)" fg:x="884" fg:w="2"/><text x="19.9023%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.04%)</title><rect x="19.7851%" y="437" width="0.0448%" height="15" fill="rgb(245,203,43)" fg:x="884" fg:w="2"/><text x="19.9023%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="19.8299%" y="421" width="0.0895%" height="15" fill="rgb(238,205,33)" fg:x="886" fg:w="4"/><text x="19.9471%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="19.9642%" y="373" width="0.0224%" height="15" fill="rgb(231,56,7)" fg:x="892" fg:w="1"/><text x="20.0814%" y="383.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="21.7995%" y="325" width="0.0224%" height="15" fill="rgb(244,186,29)" fg:x="974" fg:w="1"/><text x="21.9167%" y="335.50"></text></g><g><title>alloc_perturb (2 samples, 0.04%)</title><rect x="21.8218%" y="325" width="0.0448%" height="15" fill="rgb(234,111,31)" fg:x="975" fg:w="2"/><text x="21.9390%" y="335.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="21.9338%" y="229" width="0.0224%" height="15" fill="rgb(241,149,10)" fg:x="980" fg:w="1"/><text x="22.0509%" y="239.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="21.9561%" y="213" width="0.0224%" height="15" fill="rgb(249,206,44)" fg:x="981" fg:w="1"/><text x="22.0733%" y="223.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.04%)</title><rect x="21.9785%" y="213" width="0.0448%" height="15" fill="rgb(251,153,30)" fg:x="982" fg:w="2"/><text x="22.0957%" y="223.50"></text></g><g><title>blk_cgroup_congested (2 samples, 0.04%)</title><rect x="21.9785%" y="197" width="0.0448%" height="15" fill="rgb(239,152,38)" fg:x="982" fg:w="2"/><text x="22.0957%" y="207.50"></text></g><g><title>__rcu_read_unlock (8 samples, 0.18%)</title><rect x="22.0233%" y="197" width="0.1791%" height="15" fill="rgb(249,139,47)" fg:x="984" fg:w="8"/><text x="22.1405%" y="207.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="22.2695%" y="181" width="0.0224%" height="15" fill="rgb(244,64,35)" fg:x="995" fg:w="1"/><text x="22.3867%" y="191.50"></text></g><g><title>charge_memcg (9 samples, 0.20%)</title><rect x="22.2023%" y="197" width="0.2014%" height="15" fill="rgb(216,46,15)" fg:x="992" fg:w="9"/><text x="22.3195%" y="207.50"></text></g><g><title>try_charge_memcg (5 samples, 0.11%)</title><rect x="22.2919%" y="181" width="0.1119%" height="15" fill="rgb(250,74,19)" fg:x="996" fg:w="5"/><text x="22.4090%" y="191.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.07%)</title><rect x="22.4038%" y="197" width="0.0671%" height="15" fill="rgb(249,42,33)" fg:x="1001" fg:w="3"/><text x="22.5209%" y="207.50"></text></g><g><title>__mem_cgroup_charge (21 samples, 0.47%)</title><rect x="22.0233%" y="213" width="0.4700%" height="15" fill="rgb(242,149,17)" fg:x="984" fg:w="21"/><text x="22.1405%" y="223.50"></text></g><g><title>memcg_check_events (1 samples, 0.02%)</title><rect x="22.4709%" y="197" width="0.0224%" height="15" fill="rgb(244,29,21)" fg:x="1004" fg:w="1"/><text x="22.5881%" y="207.50"></text></g><g><title>folio_add_lru_vma (4 samples, 0.09%)</title><rect x="22.4933%" y="213" width="0.0895%" height="15" fill="rgb(220,130,37)" fg:x="1005" fg:w="4"/><text x="22.6105%" y="223.50"></text></g><g><title>folio_add_lru (4 samples, 0.09%)</title><rect x="22.4933%" y="197" width="0.0895%" height="15" fill="rgb(211,67,2)" fg:x="1005" fg:w="4"/><text x="22.6105%" y="207.50"></text></g><g><title>folio_batch_move_lru (2 samples, 0.04%)</title><rect x="22.5380%" y="181" width="0.0448%" height="15" fill="rgb(235,68,52)" fg:x="1007" fg:w="2"/><text x="22.6552%" y="191.50"></text></g><g><title>lru_add_fn (2 samples, 0.04%)</title><rect x="22.5380%" y="165" width="0.0448%" height="15" fill="rgb(246,142,3)" fg:x="1007" fg:w="2"/><text x="22.6552%" y="175.50"></text></g><g><title>lru_gen_add_folio (2 samples, 0.04%)</title><rect x="22.5380%" y="149" width="0.0448%" height="15" fill="rgb(241,25,7)" fg:x="1007" fg:w="2"/><text x="22.6552%" y="159.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="22.6052%" y="197" width="0.0224%" height="15" fill="rgb(242,119,39)" fg:x="1010" fg:w="1"/><text x="22.7224%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="22.6052%" y="181" width="0.0224%" height="15" fill="rgb(241,98,45)" fg:x="1010" fg:w="1"/><text x="22.7224%" y="191.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.07%)</title><rect x="22.5828%" y="213" width="0.0671%" height="15" fill="rgb(254,28,30)" fg:x="1009" fg:w="3"/><text x="22.7000%" y="223.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="22.6276%" y="197" width="0.0224%" height="15" fill="rgb(241,142,54)" fg:x="1011" fg:w="1"/><text x="22.7448%" y="207.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="22.6500%" y="213" width="0.0224%" height="15" fill="rgb(222,85,15)" fg:x="1012" fg:w="1"/><text x="22.7671%" y="223.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="22.6500%" y="197" width="0.0224%" height="15" fill="rgb(210,85,47)" fg:x="1012" fg:w="1"/><text x="22.7671%" y="207.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="22.7395%" y="165" width="0.0224%" height="15" fill="rgb(224,206,25)" fg:x="1016" fg:w="1"/><text x="22.8567%" y="175.50"></text></g><g><title>clear_page_erms (2 samples, 0.04%)</title><rect x="22.7619%" y="149" width="0.0448%" height="15" fill="rgb(243,201,19)" fg:x="1017" fg:w="2"/><text x="22.8790%" y="159.50"></text></g><g><title>handle_mm_fault (45 samples, 1.01%)</title><rect x="21.8890%" y="277" width="1.0072%" height="15" fill="rgb(236,59,4)" fg:x="978" fg:w="45"/><text x="22.0062%" y="287.50">h..</text></g><g><title>__handle_mm_fault (44 samples, 0.98%)</title><rect x="21.9114%" y="261" width="0.9848%" height="15" fill="rgb(254,179,45)" fg:x="979" fg:w="44"/><text x="22.0286%" y="271.50">_..</text></g><g><title>handle_pte_fault (43 samples, 0.96%)</title><rect x="21.9338%" y="245" width="0.9624%" height="15" fill="rgb(226,14,10)" fg:x="980" fg:w="43"/><text x="22.0509%" y="255.50">h..</text></g><g><title>do_anonymous_page (42 samples, 0.94%)</title><rect x="21.9561%" y="229" width="0.9400%" height="15" fill="rgb(244,27,41)" fg:x="981" fg:w="42"/><text x="22.0733%" y="239.50">d..</text></g><g><title>vma_alloc_folio (10 samples, 0.22%)</title><rect x="22.6723%" y="213" width="0.2238%" height="15" fill="rgb(235,35,32)" fg:x="1013" fg:w="10"/><text x="22.7895%" y="223.50"></text></g><g><title>__folio_alloc (7 samples, 0.16%)</title><rect x="22.7395%" y="197" width="0.1567%" height="15" fill="rgb(218,68,31)" fg:x="1016" fg:w="7"/><text x="22.8567%" y="207.50"></text></g><g><title>__alloc_pages (7 samples, 0.16%)</title><rect x="22.7395%" y="181" width="0.1567%" height="15" fill="rgb(207,120,37)" fg:x="1016" fg:w="7"/><text x="22.8567%" y="191.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.13%)</title><rect x="22.7619%" y="165" width="0.1343%" height="15" fill="rgb(227,98,0)" fg:x="1017" fg:w="6"/><text x="22.8790%" y="175.50"></text></g><g><title>rmqueue (4 samples, 0.09%)</title><rect x="22.8066%" y="149" width="0.0895%" height="15" fill="rgb(207,7,3)" fg:x="1019" fg:w="4"/><text x="22.9238%" y="159.50"></text></g><g><title>__rmqueue_pcplist (3 samples, 0.07%)</title><rect x="22.8290%" y="133" width="0.0671%" height="15" fill="rgb(206,98,19)" fg:x="1020" fg:w="3"/><text x="22.9462%" y="143.50"></text></g><g><title>rmqueue_bulk (3 samples, 0.07%)</title><rect x="22.8290%" y="117" width="0.0671%" height="15" fill="rgb(217,5,26)" fg:x="1020" fg:w="3"/><text x="22.9462%" y="127.50"></text></g><g><title>do_user_addr_fault (48 samples, 1.07%)</title><rect x="21.8890%" y="293" width="1.0743%" height="15" fill="rgb(235,190,38)" fg:x="978" fg:w="48"/><text x="22.0062%" y="303.50">d..</text></g><g><title>lock_vma_under_rcu (3 samples, 0.07%)</title><rect x="22.8962%" y="277" width="0.0671%" height="15" fill="rgb(247,86,24)" fg:x="1023" fg:w="3"/><text x="23.0133%" y="287.50"></text></g><g><title>mas_walk (2 samples, 0.04%)</title><rect x="22.9185%" y="261" width="0.0448%" height="15" fill="rgb(205,101,16)" fg:x="1024" fg:w="2"/><text x="23.0357%" y="271.50"></text></g><g><title>mtree_range_walk (2 samples, 0.04%)</title><rect x="22.9185%" y="245" width="0.0448%" height="15" fill="rgb(246,168,33)" fg:x="1024" fg:w="2"/><text x="23.0357%" y="255.50"></text></g><g><title>asm_exc_page_fault (50 samples, 1.12%)</title><rect x="21.8666%" y="325" width="1.1191%" height="15" fill="rgb(231,114,1)" fg:x="977" fg:w="50"/><text x="21.9838%" y="335.50">as..</text></g><g><title>exc_page_fault (49 samples, 1.10%)</title><rect x="21.8890%" y="309" width="1.0967%" height="15" fill="rgb(207,184,53)" fg:x="978" fg:w="49"/><text x="22.0062%" y="319.50">e..</text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="22.9633%" y="293" width="0.0224%" height="15" fill="rgb(224,95,51)" fg:x="1026" fg:w="1"/><text x="23.0805%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="22.9633%" y="277" width="0.0224%" height="15" fill="rgb(212,188,45)" fg:x="1026" fg:w="1"/><text x="23.0805%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="22.9633%" y="261" width="0.0224%" height="15" fill="rgb(223,154,38)" fg:x="1026" fg:w="1"/><text x="23.0805%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.11%)</title><rect x="22.9857%" y="325" width="0.1119%" height="15" fill="rgb(251,22,52)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.11%)</title><rect x="22.9857%" y="309" width="0.1119%" height="15" fill="rgb(229,209,22)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="319.50"></text></g><g><title>irqentry_exit (5 samples, 0.11%)</title><rect x="22.9857%" y="293" width="0.1119%" height="15" fill="rgb(234,138,34)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.11%)</title><rect x="22.9857%" y="277" width="0.1119%" height="15" fill="rgb(212,95,11)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.11%)</title><rect x="22.9857%" y="261" width="0.1119%" height="15" fill="rgb(240,179,47)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="271.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.11%)</title><rect x="22.9857%" y="245" width="0.1119%" height="15" fill="rgb(240,163,11)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="255.50"></text></g><g><title>schedule (5 samples, 0.11%)</title><rect x="22.9857%" y="229" width="0.1119%" height="15" fill="rgb(236,37,12)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.11%)</title><rect x="22.9857%" y="213" width="0.1119%" height="15" fill="rgb(232,164,16)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.11%)</title><rect x="22.9857%" y="197" width="0.1119%" height="15" fill="rgb(244,205,15)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.11%)</title><rect x="22.9857%" y="181" width="0.1119%" height="15" fill="rgb(223,117,47)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.11%)</title><rect x="22.9857%" y="165" width="0.1119%" height="15" fill="rgb(244,107,35)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="175.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.11%)</title><rect x="22.9857%" y="149" width="0.1119%" height="15" fill="rgb(205,140,8)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="159.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.11%)</title><rect x="22.9857%" y="133" width="0.1119%" height="15" fill="rgb(228,84,46)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="143.50"></text></g><g><title>native_write_msr (5 samples, 0.11%)</title><rect x="22.9857%" y="117" width="0.1119%" height="15" fill="rgb(254,188,9)" fg:x="1027" fg:w="5"/><text x="23.1029%" y="127.50"></text></g><g><title>sync_regs (11 samples, 0.25%)</title><rect x="23.0976%" y="325" width="0.2462%" height="15" fill="rgb(206,112,54)" fg:x="1032" fg:w="11"/><text x="23.2148%" y="335.50"></text></g><g><title>mas_preallocate (2 samples, 0.04%)</title><rect x="23.3438%" y="149" width="0.0448%" height="15" fill="rgb(216,84,49)" fg:x="1043" fg:w="2"/><text x="23.4610%" y="159.50"></text></g><g><title>mas_alloc_nodes (2 samples, 0.04%)</title><rect x="23.3438%" y="133" width="0.0448%" height="15" fill="rgb(214,194,35)" fg:x="1043" fg:w="2"/><text x="23.4610%" y="143.50"></text></g><g><title>kmem_cache_alloc_bulk (2 samples, 0.04%)</title><rect x="23.3438%" y="117" width="0.0448%" height="15" fill="rgb(249,28,3)" fg:x="1043" fg:w="2"/><text x="23.4610%" y="127.50"></text></g><g><title>__kmem_cache_alloc_bulk (2 samples, 0.04%)</title><rect x="23.3438%" y="101" width="0.0448%" height="15" fill="rgb(222,56,52)" fg:x="1043" fg:w="2"/><text x="23.4610%" y="111.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.02%)</title><rect x="23.3885%" y="149" width="0.0224%" height="15" fill="rgb(245,217,50)" fg:x="1045" fg:w="1"/><text x="23.5057%" y="159.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.02%)</title><rect x="23.3885%" y="133" width="0.0224%" height="15" fill="rgb(213,201,24)" fg:x="1045" fg:w="1"/><text x="23.5057%" y="143.50"></text></g><g><title>mas_wr_spanning_store.isra.0 (1 samples, 0.02%)</title><rect x="23.3885%" y="117" width="0.0224%" height="15" fill="rgb(248,116,28)" fg:x="1045" fg:w="1"/><text x="23.5057%" y="127.50"></text></g><g><title>mas_spanning_rebalance.isra.0 (1 samples, 0.02%)</title><rect x="23.3885%" y="101" width="0.0224%" height="15" fill="rgb(219,72,43)" fg:x="1045" fg:w="1"/><text x="23.5057%" y="111.50"></text></g><g><title>mab_mas_cp (1 samples, 0.02%)</title><rect x="23.3885%" y="85" width="0.0224%" height="15" fill="rgb(209,138,14)" fg:x="1045" fg:w="1"/><text x="23.5057%" y="95.50"></text></g><g><title>_int_malloc (132 samples, 2.95%)</title><rect x="20.4790%" y="341" width="2.9543%" height="15" fill="rgb(222,18,33)" fg:x="915" fg:w="132"/><text x="20.5961%" y="351.50">_int_mal..</text></g><g><title>sysmalloc (4 samples, 0.09%)</title><rect x="23.3438%" y="325" width="0.0895%" height="15" fill="rgb(213,199,7)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="335.50"></text></g><g><title>__glibc_morecore (4 samples, 0.09%)</title><rect x="23.3438%" y="309" width="0.0895%" height="15" fill="rgb(250,110,10)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="319.50"></text></g><g><title>__GI___sbrk (4 samples, 0.09%)</title><rect x="23.3438%" y="293" width="0.0895%" height="15" fill="rgb(248,123,6)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="303.50"></text></g><g><title>__GI___sbrk (4 samples, 0.09%)</title><rect x="23.3438%" y="277" width="0.0895%" height="15" fill="rgb(206,91,31)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="287.50"></text></g><g><title>__brk (4 samples, 0.09%)</title><rect x="23.3438%" y="261" width="0.0895%" height="15" fill="rgb(211,154,13)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="23.3438%" y="245" width="0.0895%" height="15" fill="rgb(225,148,7)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="255.50"></text></g><g><title>do_syscall_64 (4 samples, 0.09%)</title><rect x="23.3438%" y="229" width="0.0895%" height="15" fill="rgb(220,160,43)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="239.50"></text></g><g><title>x64_sys_call (4 samples, 0.09%)</title><rect x="23.3438%" y="213" width="0.0895%" height="15" fill="rgb(213,52,39)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="223.50"></text></g><g><title>__x64_sys_brk (4 samples, 0.09%)</title><rect x="23.3438%" y="197" width="0.0895%" height="15" fill="rgb(243,137,7)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="207.50"></text></g><g><title>__do_sys_brk (4 samples, 0.09%)</title><rect x="23.3438%" y="181" width="0.0895%" height="15" fill="rgb(230,79,13)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="191.50"></text></g><g><title>do_brk_flags (4 samples, 0.09%)</title><rect x="23.3438%" y="165" width="0.0895%" height="15" fill="rgb(247,105,23)" fg:x="1043" fg:w="4"/><text x="23.4610%" y="175.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="23.4109%" y="149" width="0.0224%" height="15" fill="rgb(223,179,41)" fg:x="1046" fg:w="1"/><text x="23.5281%" y="159.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.02%)</title><rect x="23.4109%" y="133" width="0.0224%" height="15" fill="rgb(218,9,34)" fg:x="1046" fg:w="1"/><text x="23.5281%" y="143.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="23.4109%" y="117" width="0.0224%" height="15" fill="rgb(222,106,8)" fg:x="1046" fg:w="1"/><text x="23.5281%" y="127.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="23.4109%" y="101" width="0.0224%" height="15" fill="rgb(211,220,0)" fg:x="1046" fg:w="1"/><text x="23.5281%" y="111.50"></text></g><g><title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="23.4109%" y="85" width="0.0224%" height="15" fill="rgb(229,52,16)" fg:x="1046" fg:w="1"/><text x="23.5281%" y="95.50"></text></g><g><title>arena_for_chunk (2 samples, 0.04%)</title><rect x="23.4333%" y="341" width="0.0448%" height="15" fill="rgb(212,155,18)" fg:x="1047" fg:w="2"/><text x="23.5505%" y="351.50"></text></g><g><title>checked_request2size (9 samples, 0.20%)</title><rect x="23.4781%" y="341" width="0.2014%" height="15" fill="rgb(242,21,14)" fg:x="1049" fg:w="9"/><text x="23.5953%" y="351.50"></text></g><g><title>__GI___libc_malloc (164 samples, 3.67%)</title><rect x="20.0313%" y="357" width="3.6705%" height="15" fill="rgb(222,19,48)" fg:x="895" fg:w="164"/><text x="20.1485%" y="367.50">__GI___libc..</text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="23.6795%" y="341" width="0.0224%" height="15" fill="rgb(232,45,27)" fg:x="1058" fg:w="1"/><text x="23.7967%" y="351.50"></text></g><g><title>__rdl_alloc (8 samples, 0.18%)</title><rect x="23.7019%" y="357" width="0.1791%" height="15" fill="rgb(249,103,42)" fg:x="1059" fg:w="8"/><text x="23.8191%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (179 samples, 4.01%)</title><rect x="19.9642%" y="405" width="4.0063%" height="15" fill="rgb(246,81,33)" fg:x="892" fg:w="179"/><text x="20.0814%" y="415.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (179 samples, 4.01%)</title><rect x="19.9642%" y="389" width="4.0063%" height="15" fill="rgb(252,33,42)" fg:x="892" fg:w="179"/><text x="20.0814%" y="399.50">alloc::alloc..</text></g><g><title>alloc::alloc::alloc (178 samples, 3.98%)</title><rect x="19.9866%" y="373" width="3.9839%" height="15" fill="rgb(209,212,41)" fg:x="893" fg:w="178"/><text x="20.1038%" y="383.50">alloc::alloc..</text></g><g><title>__rust_alloc (4 samples, 0.09%)</title><rect x="23.8809%" y="357" width="0.0895%" height="15" fill="rgb(207,154,6)" fg:x="1067" fg:w="4"/><text x="23.9981%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (186 samples, 4.16%)</title><rect x="19.8299%" y="469" width="4.1629%" height="15" fill="rgb(223,64,47)" fg:x="886" fg:w="186"/><text x="19.9471%" y="479.50">alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (186 samples, 4.16%)</title><rect x="19.8299%" y="453" width="4.1629%" height="15" fill="rgb(211,161,38)" fg:x="886" fg:w="186"/><text x="19.9471%" y="463.50">alloc::vec::V..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (186 samples, 4.16%)</title><rect x="19.8299%" y="437" width="4.1629%" height="15" fill="rgb(219,138,40)" fg:x="886" fg:w="186"/><text x="19.9471%" y="447.50">alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (182 samples, 4.07%)</title><rect x="19.9194%" y="421" width="4.0734%" height="15" fill="rgb(241,228,46)" fg:x="890" fg:w="182"/><text x="20.0366%" y="431.50">alloc::raw_v..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="23.9705%" y="405" width="0.0224%" height="15" fill="rgb(223,209,38)" fg:x="1071" fg:w="1"/><text x="24.0876%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="23.9705%" y="389" width="0.0224%" height="15" fill="rgb(236,164,45)" fg:x="1071" fg:w="1"/><text x="24.0876%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (470 samples, 10.52%)</title><rect x="13.4960%" y="533" width="10.5192%" height="15" fill="rgb(231,15,5)" fg:x="603" fg:w="470"/><text x="13.6132%" y="543.50">core::iter::traits::iterator::Iterat..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (470 samples, 10.52%)</title><rect x="13.4960%" y="517" width="10.5192%" height="15" fill="rgb(252,35,15)" fg:x="603" fg:w="470"/><text x="13.6132%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (468 samples, 10.47%)</title><rect x="13.5407%" y="501" width="10.4745%" height="15" fill="rgb(248,181,18)" fg:x="605" fg:w="468"/><text x="13.6579%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (464 samples, 10.38%)</title><rect x="13.6303%" y="485" width="10.3850%" height="15" fill="rgb(233,39,42)" fg:x="609" fg:w="464"/><text x="13.7474%" y="495.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="23.9928%" y="469" width="0.0224%" height="15" fill="rgb(238,110,33)" fg:x="1072" fg:w="1"/><text x="24.1100%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (2 samples, 0.04%)</title><rect x="24.0152%" y="533" width="0.0448%" height="15" fill="rgb(233,195,10)" fg:x="1073" fg:w="2"/><text x="24.1324%" y="543.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (2 samples, 0.04%)</title><rect x="24.0152%" y="517" width="0.0448%" height="15" fill="rgb(254,105,3)" fg:x="1073" fg:w="2"/><text x="24.1324%" y="527.50"></text></g><g><title>_int_free (24 samples, 0.54%)</title><rect x="24.2838%" y="437" width="0.5372%" height="15" fill="rgb(221,225,9)" fg:x="1085" fg:w="24"/><text x="24.4010%" y="447.50"></text></g><g><title>tcache_put (7 samples, 0.16%)</title><rect x="24.6643%" y="421" width="0.1567%" height="15" fill="rgb(224,227,45)" fg:x="1102" fg:w="7"/><text x="24.7815%" y="431.50"></text></g><g><title>__GI___libc_free (37 samples, 0.83%)</title><rect x="24.0600%" y="453" width="0.8281%" height="15" fill="rgb(229,198,43)" fg:x="1075" fg:w="37"/><text x="24.1772%" y="463.50"></text></g><g><title>arena_for_chunk (3 samples, 0.07%)</title><rect x="24.8209%" y="437" width="0.0671%" height="15" fill="rgb(206,209,35)" fg:x="1109" fg:w="3"/><text x="24.9381%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.90%)</title><rect x="24.0600%" y="469" width="0.8953%" height="15" fill="rgb(245,195,53)" fg:x="1075" fg:w="40"/><text x="24.1772%" y="479.50">a..</text></g><g><title>__rust_dealloc (3 samples, 0.07%)</title><rect x="24.8881%" y="453" width="0.0671%" height="15" fill="rgb(240,92,26)" fg:x="1112" fg:w="3"/><text x="25.0053%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.92%)</title><rect x="24.0600%" y="485" width="0.9176%" height="15" fill="rgb(207,40,23)" fg:x="1075" fg:w="41"/><text x="24.1772%" y="495.50">&lt;..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (1 samples, 0.02%)</title><rect x="24.9552%" y="469" width="0.0224%" height="15" fill="rgb(223,111,35)" fg:x="1115" fg:w="1"/><text x="25.0724%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (855 samples, 19.14%)</title><rect x="5.8863%" y="581" width="19.1361%" height="15" fill="rgb(229,147,28)" fg:x="263" fg:w="855"/><text x="6.0035%" y="591.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>fringe_vs_astar::structures::graph::Graph::new::_{{closure}} (571 samples, 12.78%)</title><rect x="12.2426%" y="565" width="12.7798%" height="15" fill="rgb(211,29,28)" fg:x="547" fg:w="571"/><text x="12.3598%" y="575.50">fringe_vs_astar::structures::graph::Graph::n..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (565 samples, 12.65%)</title><rect x="12.3769%" y="549" width="12.6455%" height="15" fill="rgb(228,72,33)" fg:x="553" fg:w="565"/><text x="12.4941%" y="559.50">fringe_vs_astar::structures::graph::generat..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(i32,f32,bool)&gt;&gt; (43 samples, 0.96%)</title><rect x="24.0600%" y="533" width="0.9624%" height="15" fill="rgb(205,214,31)" fg:x="1075" fg:w="43"/><text x="24.1772%" y="543.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(i32,f32,bool)&gt;&gt; (43 samples, 0.96%)</title><rect x="24.0600%" y="517" width="0.9624%" height="15" fill="rgb(224,111,15)" fg:x="1075" fg:w="43"/><text x="24.1772%" y="527.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.96%)</title><rect x="24.0600%" y="501" width="0.9624%" height="15" fill="rgb(253,21,26)" fg:x="1075" fg:w="43"/><text x="24.1772%" y="511.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="24.9776%" y="485" width="0.0448%" height="15" fill="rgb(245,139,43)" fg:x="1116" fg:w="2"/><text x="25.0948%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.04%)</title><rect x="24.9776%" y="469" width="0.0448%" height="15" fill="rgb(252,170,7)" fg:x="1116" fg:w="2"/><text x="25.0948%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (858 samples, 19.20%)</title><rect x="5.8863%" y="757" width="19.2032%" height="15" fill="rgb(231,118,14)" fg:x="263" fg:w="858"/><text x="6.0035%" y="767.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (858 samples, 19.20%)</title><rect x="5.8863%" y="741" width="19.2032%" height="15" fill="rgb(238,83,0)" fg:x="263" fg:w="858"/><text x="6.0035%" y="751.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (858 samples, 19.20%)</title><rect x="5.8863%" y="725" width="19.2032%" height="15" fill="rgb(221,39,39)" fg:x="263" fg:w="858"/><text x="6.0035%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (858 samples, 19.20%)</title><rect x="5.8863%" y="709" width="19.2032%" height="15" fill="rgb(222,119,46)" fg:x="263" fg:w="858"/><text x="6.0035%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromI..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (858 samples, 19.20%)</title><rect x="5.8863%" y="693" width="19.2032%" height="15" fill="rgb(222,165,49)" fg:x="263" fg:w="858"/><text x="6.0035%" y="703.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (858 samples, 19.20%)</title><rect x="5.8863%" y="677" width="19.2032%" height="15" fill="rgb(219,113,52)" fg:x="263" fg:w="858"/><text x="6.0035%" y="687.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (858 samples, 19.20%)</title><rect x="5.8863%" y="661" width="19.2032%" height="15" fill="rgb(214,7,15)" fg:x="263" fg:w="858"/><text x="6.0035%" y="671.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (858 samples, 19.20%)</title><rect x="5.8863%" y="645" width="19.2032%" height="15" fill="rgb(235,32,4)" fg:x="263" fg:w="858"/><text x="6.0035%" y="655.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (858 samples, 19.20%)</title><rect x="5.8863%" y="629" width="19.2032%" height="15" fill="rgb(238,90,54)" fg:x="263" fg:w="858"/><text x="6.0035%" y="639.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (858 samples, 19.20%)</title><rect x="5.8863%" y="613" width="19.2032%" height="15" fill="rgb(213,208,19)" fg:x="263" fg:w="858"/><text x="6.0035%" y="623.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (858 samples, 19.20%)</title><rect x="5.8863%" y="597" width="19.2032%" height="15" fill="rgb(233,156,4)" fg:x="263" fg:w="858"/><text x="6.0035%" y="607.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="25.0224%" y="581" width="0.0671%" height="15" fill="rgb(207,194,5)" fg:x="1118" fg:w="3"/><text x="25.1396%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="25.0224%" y="565" width="0.0671%" height="15" fill="rgb(206,111,30)" fg:x="1118" fg:w="3"/><text x="25.1396%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::graph::Graph::new (859 samples, 19.23%)</title><rect x="5.8863%" y="773" width="19.2256%" height="15" fill="rgb(243,70,54)" fg:x="263" fg:w="859"/><text x="6.0035%" y="783.50">fringe_vs_astar::structures::graph::Graph::new</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::Map&gt; (1 samples, 0.02%)</title><rect x="25.0895%" y="757" width="0.0224%" height="15" fill="rgb(242,28,8)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (1 samples, 0.02%)</title><rect x="25.0895%" y="741" width="0.0224%" height="15" fill="rgb(219,106,18)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (1 samples, 0.02%)</title><rect x="25.0895%" y="725" width="0.0224%" height="15" fill="rgb(244,222,10)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="25.0895%" y="709" width="0.0224%" height="15" fill="rgb(236,179,52)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="25.0895%" y="693" width="0.0224%" height="15" fill="rgb(213,23,39)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="25.0895%" y="677" width="0.0224%" height="15" fill="rgb(238,48,10)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="25.0895%" y="661" width="0.0224%" height="15" fill="rgb(251,196,23)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="671.50"></text></g><g><title>__GI___munmap (1 samples, 0.02%)</title><rect x="25.0895%" y="645" width="0.0224%" height="15" fill="rgb(250,152,24)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="25.0895%" y="629" width="0.0224%" height="15" fill="rgb(209,150,17)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="639.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="25.0895%" y="613" width="0.0224%" height="15" fill="rgb(234,202,34)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="623.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="25.0895%" y="597" width="0.0224%" height="15" fill="rgb(253,148,53)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="607.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="25.0895%" y="581" width="0.0224%" height="15" fill="rgb(218,129,16)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="591.50"></text></g><g><title>__vm_munmap (1 samples, 0.02%)</title><rect x="25.0895%" y="565" width="0.0224%" height="15" fill="rgb(216,85,19)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="575.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.02%)</title><rect x="25.0895%" y="549" width="0.0224%" height="15" fill="rgb(235,228,7)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="559.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.02%)</title><rect x="25.0895%" y="533" width="0.0224%" height="15" fill="rgb(245,175,0)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="543.50"></text></g><g><title>unmap_region (1 samples, 0.02%)</title><rect x="25.0895%" y="517" width="0.0224%" height="15" fill="rgb(208,168,36)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="527.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="25.0895%" y="501" width="0.0224%" height="15" fill="rgb(246,171,24)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="511.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="25.0895%" y="485" width="0.0224%" height="15" fill="rgb(215,142,24)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="495.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="25.0895%" y="469" width="0.0224%" height="15" fill="rgb(250,187,7)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="25.0895%" y="453" width="0.0224%" height="15" fill="rgb(228,66,33)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="463.50"></text></g><g><title>vm_normal_page (1 samples, 0.02%)</title><rect x="25.0895%" y="437" width="0.0224%" height="15" fill="rgb(234,215,21)" fg:x="1121" fg:w="1"/><text x="25.2067%" y="447.50"></text></g><g><title>fringe_vs_astar::structures::graph::Graph::size (38 samples, 0.85%)</title><rect x="25.1119%" y="773" width="0.8505%" height="15" fill="rgb(222,191,20)" fg:x="1122" fg:w="38"/><text x="25.2291%" y="783.50">f..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (38 samples, 0.85%)</title><rect x="25.1119%" y="757" width="0.8505%" height="15" fill="rgb(245,79,54)" fg:x="1122" fg:w="38"/><text x="25.2291%" y="767.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (38 samples, 0.85%)</title><rect x="25.1119%" y="741" width="0.8505%" height="15" fill="rgb(240,10,37)" fg:x="1122" fg:w="38"/><text x="25.2291%" y="751.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (38 samples, 0.85%)</title><rect x="25.1119%" y="725" width="0.8505%" height="15" fill="rgb(214,192,32)" fg:x="1122" fg:w="38"/><text x="25.2291%" y="735.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.85%)</title><rect x="25.1119%" y="709" width="0.8505%" height="15" fill="rgb(209,36,54)" fg:x="1122" fg:w="38"/><text x="25.2291%" y="719.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.85%)</title><rect x="25.1119%" y="693" width="0.8505%" height="15" fill="rgb(220,10,11)" fg:x="1122" fg:w="38"/><text x="25.2291%" y="703.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (37 samples, 0.83%)</title><rect x="25.1343%" y="677" width="0.8281%" height="15" fill="rgb(221,106,17)" fg:x="1123" fg:w="37"/><text x="25.2515%" y="687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (37 samples, 0.83%)</title><rect x="25.1343%" y="661" width="0.8281%" height="15" fill="rgb(251,142,44)" fg:x="1123" fg:w="37"/><text x="25.2515%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2 samples, 0.04%)</title><rect x="25.9624%" y="757" width="0.0448%" height="15" fill="rgb(238,13,15)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="25.9624%" y="741" width="0.0448%" height="15" fill="rgb(208,107,27)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (2 samples, 0.04%)</title><rect x="25.9624%" y="725" width="0.0448%" height="15" fill="rgb(205,136,37)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.04%)</title><rect x="25.9624%" y="709" width="0.0448%" height="15" fill="rgb(250,205,27)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="25.9624%" y="693" width="0.0448%" height="15" fill="rgb(210,80,43)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.04%)</title><rect x="25.9624%" y="677" width="0.0448%" height="15" fill="rgb(247,160,36)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="25.9624%" y="661" width="0.0448%" height="15" fill="rgb(234,13,49)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="25.9624%" y="645" width="0.0448%" height="15" fill="rgb(234,122,0)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="25.9624%" y="629" width="0.0448%" height="15" fill="rgb(207,146,38)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="25.9624%" y="613" width="0.0448%" height="15" fill="rgb(207,177,25)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="25.9624%" y="597" width="0.0448%" height="15" fill="rgb(211,178,42)" fg:x="1160" fg:w="2"/><text x="26.0796%" y="607.50"></text></g><g><title>systrim (1 samples, 0.02%)</title><rect x="25.9848%" y="581" width="0.0224%" height="15" fill="rgb(230,69,54)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="591.50"></text></g><g><title>__glibc_morecore (1 samples, 0.02%)</title><rect x="25.9848%" y="565" width="0.0224%" height="15" fill="rgb(214,135,41)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="575.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="25.9848%" y="549" width="0.0224%" height="15" fill="rgb(237,67,25)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="559.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="25.9848%" y="533" width="0.0224%" height="15" fill="rgb(222,189,50)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="543.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="25.9848%" y="517" width="0.0224%" height="15" fill="rgb(245,148,34)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="25.9848%" y="501" width="0.0224%" height="15" fill="rgb(222,29,6)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="511.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="25.9848%" y="485" width="0.0224%" height="15" fill="rgb(221,189,43)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="495.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="25.9848%" y="469" width="0.0224%" height="15" fill="rgb(207,36,27)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="479.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="25.9848%" y="453" width="0.0224%" height="15" fill="rgb(217,90,24)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="463.50"></text></g><g><title>__do_sys_brk (1 samples, 0.02%)</title><rect x="25.9848%" y="437" width="0.0224%" height="15" fill="rgb(224,66,35)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="447.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.02%)</title><rect x="25.9848%" y="421" width="0.0224%" height="15" fill="rgb(221,13,50)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="431.50"></text></g><g><title>unmap_region (1 samples, 0.02%)</title><rect x="25.9848%" y="405" width="0.0224%" height="15" fill="rgb(236,68,49)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="415.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="25.9848%" y="389" width="0.0224%" height="15" fill="rgb(229,146,28)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="399.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="25.9848%" y="373" width="0.0224%" height="15" fill="rgb(225,31,38)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="25.9848%" y="357" width="0.0224%" height="15" fill="rgb(250,208,3)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="367.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="25.9848%" y="341" width="0.0224%" height="15" fill="rgb(246,54,23)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="351.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.02%)</title><rect x="25.9848%" y="325" width="0.0224%" height="15" fill="rgb(243,76,11)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="335.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="25.9848%" y="309" width="0.0224%" height="15" fill="rgb(245,21,50)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="319.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="25.9848%" y="293" width="0.0224%" height="15" fill="rgb(228,9,43)" fg:x="1161" fg:w="1"/><text x="26.1020%" y="303.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.04%)</title><rect x="26.0072%" y="549" width="0.0448%" height="15" fill="rgb(208,100,47)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="559.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (2 samples, 0.04%)</title><rect x="26.0072%" y="533" width="0.0448%" height="15" fill="rgb(232,26,8)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (2 samples, 0.04%)</title><rect x="26.0072%" y="517" width="0.0448%" height="15" fill="rgb(216,166,38)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 0.04%)</title><rect x="26.0072%" y="501" width="0.0448%" height="15" fill="rgb(251,202,51)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="511.50"></text></g><g><title>__GI___libc_read (2 samples, 0.04%)</title><rect x="26.0072%" y="485" width="0.0448%" height="15" fill="rgb(254,216,34)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="26.0072%" y="469" width="0.0448%" height="15" fill="rgb(251,32,27)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="479.50"></text></g><g><title>do_syscall_64 (2 samples, 0.04%)</title><rect x="26.0072%" y="453" width="0.0448%" height="15" fill="rgb(208,127,28)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="463.50"></text></g><g><title>x64_sys_call (2 samples, 0.04%)</title><rect x="26.0072%" y="437" width="0.0448%" height="15" fill="rgb(224,137,22)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="447.50"></text></g><g><title>__x64_sys_read (2 samples, 0.04%)</title><rect x="26.0072%" y="421" width="0.0448%" height="15" fill="rgb(254,70,32)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="431.50"></text></g><g><title>ksys_read (2 samples, 0.04%)</title><rect x="26.0072%" y="405" width="0.0448%" height="15" fill="rgb(229,75,37)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="415.50"></text></g><g><title>vfs_read (2 samples, 0.04%)</title><rect x="26.0072%" y="389" width="0.0448%" height="15" fill="rgb(252,64,23)" fg:x="1162" fg:w="2"/><text x="26.1243%" y="399.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="26.0295%" y="373" width="0.0224%" height="15" fill="rgb(232,162,48)" fg:x="1163" fg:w="1"/><text x="26.1467%" y="383.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="26.0295%" y="357" width="0.0224%" height="15" fill="rgb(246,160,12)" fg:x="1163" fg:w="1"/><text x="26.1467%" y="367.50"></text></g><g><title>filemap_read (1 samples, 0.02%)</title><rect x="26.0295%" y="341" width="0.0224%" height="15" fill="rgb(247,166,0)" fg:x="1163" fg:w="1"/><text x="26.1467%" y="351.50"></text></g><g><title>fringe_vs_astar::structures::map::read (3 samples, 0.07%)</title><rect x="26.0072%" y="757" width="0.0671%" height="15" fill="rgb(249,219,21)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.07%)</title><rect x="26.0072%" y="741" width="0.0671%" height="15" fill="rgb(205,209,3)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="26.0072%" y="725" width="0.0671%" height="15" fill="rgb(243,44,1)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="26.0072%" y="709" width="0.0671%" height="15" fill="rgb(206,159,16)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="26.0072%" y="693" width="0.0671%" height="15" fill="rgb(244,77,30)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="26.0072%" y="677" width="0.0671%" height="15" fill="rgb(218,69,12)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.07%)</title><rect x="26.0072%" y="661" width="0.0671%" height="15" fill="rgb(212,87,7)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="26.0072%" y="645" width="0.0671%" height="15" fill="rgb(245,114,25)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="655.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="26.0072%" y="629" width="0.0671%" height="15" fill="rgb(210,61,42)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="639.50"></text></g><g><title>std::io::BufRead::read_line (3 samples, 0.07%)</title><rect x="26.0072%" y="613" width="0.0671%" height="15" fill="rgb(211,52,33)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="623.50"></text></g><g><title>std::io::append_to_string (3 samples, 0.07%)</title><rect x="26.0072%" y="597" width="0.0671%" height="15" fill="rgb(234,58,33)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="607.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (3 samples, 0.07%)</title><rect x="26.0072%" y="581" width="0.0671%" height="15" fill="rgb(220,115,36)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="591.50"></text></g><g><title>std::io::read_until (3 samples, 0.07%)</title><rect x="26.0072%" y="565" width="0.0671%" height="15" fill="rgb(243,153,54)" fg:x="1162" fg:w="3"/><text x="26.1243%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="26.0519%" y="549" width="0.0224%" height="15" fill="rgb(251,47,18)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="26.0519%" y="533" width="0.0224%" height="15" fill="rgb(242,102,42)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="26.0519%" y="517" width="0.0224%" height="15" fill="rgb(234,31,38)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="26.0519%" y="501" width="0.0224%" height="15" fill="rgb(221,117,51)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="511.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.02%)</title><rect x="26.0519%" y="485" width="0.0224%" height="15" fill="rgb(212,20,18)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="495.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="26.0519%" y="469" width="0.0224%" height="15" fill="rgb(245,133,36)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="479.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="26.0519%" y="453" width="0.0224%" height="15" fill="rgb(212,6,19)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="463.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="26.0519%" y="437" width="0.0224%" height="15" fill="rgb(218,1,36)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="447.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="26.0519%" y="421" width="0.0224%" height="15" fill="rgb(246,84,54)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="431.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="26.0519%" y="405" width="0.0224%" height="15" fill="rgb(242,110,6)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="415.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="26.0519%" y="389" width="0.0224%" height="15" fill="rgb(214,47,5)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="399.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="26.0519%" y="373" width="0.0224%" height="15" fill="rgb(218,159,25)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="383.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="26.0519%" y="357" width="0.0224%" height="15" fill="rgb(215,211,28)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="367.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="26.0519%" y="341" width="0.0224%" height="15" fill="rgb(238,59,32)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="351.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="26.0519%" y="325" width="0.0224%" height="15" fill="rgb(226,82,3)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="335.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="26.0519%" y="309" width="0.0224%" height="15" fill="rgb(240,164,32)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="319.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="26.0519%" y="293" width="0.0224%" height="15" fill="rgb(232,46,7)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="303.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="26.0519%" y="277" width="0.0224%" height="15" fill="rgb(229,129,53)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="287.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="26.0519%" y="261" width="0.0224%" height="15" fill="rgb(234,188,29)" fg:x="1164" fg:w="1"/><text x="26.1691%" y="271.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.25%)</title><rect x="26.4772%" y="565" width="0.2462%" height="15" fill="rgb(246,141,4)" fg:x="1183" fg:w="11"/><text x="26.5944%" y="575.50"></text></g><g><title>core::str::validations::next_code_point (11 samples, 0.25%)</title><rect x="26.4772%" y="549" width="0.2462%" height="15" fill="rgb(229,23,39)" fg:x="1183" fg:w="11"/><text x="26.5944%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="26.6562%" y="533" width="0.0671%" height="15" fill="rgb(206,12,3)" fg:x="1191" fg:w="3"/><text x="26.7734%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.07%)</title><rect x="26.6562%" y="517" width="0.0671%" height="15" fill="rgb(252,226,20)" fg:x="1191" fg:w="3"/><text x="26.7734%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3 samples, 0.07%)</title><rect x="26.6562%" y="501" width="0.0671%" height="15" fill="rgb(216,123,35)" fg:x="1191" fg:w="3"/><text x="26.7734%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.31%)</title><rect x="26.4772%" y="597" width="0.3133%" height="15" fill="rgb(212,68,40)" fg:x="1183" fg:w="14"/><text x="26.5944%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.31%)</title><rect x="26.4772%" y="581" width="0.3133%" height="15" fill="rgb(254,125,32)" fg:x="1183" fg:w="14"/><text x="26.5944%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.07%)</title><rect x="26.7234%" y="565" width="0.0671%" height="15" fill="rgb(253,97,22)" fg:x="1194" fg:w="3"/><text x="26.8406%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.07%)</title><rect x="26.7234%" y="549" width="0.0671%" height="15" fill="rgb(241,101,14)" fg:x="1194" fg:w="3"/><text x="26.8406%" y="559.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify::_{{closure}}::_{{closure}} (3 samples, 0.07%)</title><rect x="26.7234%" y="533" width="0.0671%" height="15" fill="rgb(238,103,29)" fg:x="1194" fg:w="3"/><text x="26.8406%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.43%)</title><rect x="26.4772%" y="645" width="0.4252%" height="15" fill="rgb(233,195,47)" fg:x="1183" fg:w="19"/><text x="26.5944%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.43%)</title><rect x="26.4772%" y="629" width="0.4252%" height="15" fill="rgb(246,218,30)" fg:x="1183" fg:w="19"/><text x="26.5944%" y="639.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (19 samples, 0.43%)</title><rect x="26.4772%" y="613" width="0.4252%" height="15" fill="rgb(219,145,47)" fg:x="1183" fg:w="19"/><text x="26.5944%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (5 samples, 0.11%)</title><rect x="26.7905%" y="597" width="0.1119%" height="15" fill="rgb(243,12,26)" fg:x="1197" fg:w="5"/><text x="26.9077%" y="607.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.04%)</title><rect x="26.9024%" y="501" width="0.0448%" height="15" fill="rgb(214,87,16)" fg:x="1202" fg:w="2"/><text x="27.0196%" y="511.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="26.9472%" y="501" width="0.0224%" height="15" fill="rgb(208,99,42)" fg:x="1204" fg:w="1"/><text x="27.0644%" y="511.50"></text></g><g><title>__mem_cgroup_charge (4 samples, 0.09%)</title><rect x="26.9024%" y="517" width="0.0895%" height="15" fill="rgb(253,99,2)" fg:x="1202" fg:w="4"/><text x="27.0196%" y="527.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="26.9696%" y="501" width="0.0224%" height="15" fill="rgb(220,168,23)" fg:x="1205" fg:w="1"/><text x="27.0867%" y="511.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.11%)</title><rect x="26.9024%" y="629" width="0.1119%" height="15" fill="rgb(242,38,24)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="639.50"></text></g><g><title>exc_page_fault (5 samples, 0.11%)</title><rect x="26.9024%" y="613" width="0.1119%" height="15" fill="rgb(225,182,9)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="623.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.11%)</title><rect x="26.9024%" y="597" width="0.1119%" height="15" fill="rgb(243,178,37)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="607.50"></text></g><g><title>handle_mm_fault (5 samples, 0.11%)</title><rect x="26.9024%" y="581" width="0.1119%" height="15" fill="rgb(232,139,19)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="591.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.11%)</title><rect x="26.9024%" y="565" width="0.1119%" height="15" fill="rgb(225,201,24)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="575.50"></text></g><g><title>handle_pte_fault (5 samples, 0.11%)</title><rect x="26.9024%" y="549" width="0.1119%" height="15" fill="rgb(221,47,46)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="559.50"></text></g><g><title>do_anonymous_page (5 samples, 0.11%)</title><rect x="26.9024%" y="533" width="0.1119%" height="15" fill="rgb(249,23,13)" fg:x="1202" fg:w="5"/><text x="27.0196%" y="543.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.02%)</title><rect x="26.9919%" y="517" width="0.0224%" height="15" fill="rgb(219,9,5)" fg:x="1206" fg:w="1"/><text x="27.1091%" y="527.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="26.9919%" y="501" width="0.0224%" height="15" fill="rgb(254,171,16)" fg:x="1206" fg:w="1"/><text x="27.1091%" y="511.50"></text></g><g><title>fringe_vs_astar::context::Context::new (1,032 samples, 23.10%)</title><rect x="3.9391%" y="789" width="23.0976%" height="15" fill="rgb(230,171,20)" fg:x="176" fg:w="1032"/><text x="4.0563%" y="799.50">fringe_vs_astar::context::Context::new</text></g><g><title>fringe_vs_astar::structures::map::Map::new (48 samples, 1.07%)</title><rect x="25.9624%" y="773" width="1.0743%" height="15" fill="rgb(210,71,41)" fg:x="1160" fg:w="48"/><text x="26.0796%" y="783.50">f..</text></g><g><title>fringe_vs_astar::structures::map::simplify (43 samples, 0.96%)</title><rect x="26.0743%" y="757" width="0.9624%" height="15" fill="rgb(206,173,20)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="767.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.96%)</title><rect x="26.0743%" y="741" width="0.9624%" height="15" fill="rgb(233,88,34)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.96%)</title><rect x="26.0743%" y="725" width="0.9624%" height="15" fill="rgb(223,209,46)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.96%)</title><rect x="26.0743%" y="709" width="0.9624%" height="15" fill="rgb(250,43,18)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="719.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (43 samples, 0.96%)</title><rect x="26.0743%" y="693" width="0.9624%" height="15" fill="rgb(208,13,10)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (43 samples, 0.96%)</title><rect x="26.0743%" y="677" width="0.9624%" height="15" fill="rgb(212,200,36)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="687.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (43 samples, 0.96%)</title><rect x="26.0743%" y="661" width="0.9624%" height="15" fill="rgb(225,90,30)" fg:x="1165" fg:w="43"/><text x="26.1915%" y="671.50">a..</text></g><g><title>core::ptr::write (6 samples, 0.13%)</title><rect x="26.9024%" y="645" width="0.1343%" height="15" fill="rgb(236,182,39)" fg:x="1202" fg:w="6"/><text x="27.0196%" y="655.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="27.0143%" y="629" width="0.0224%" height="15" fill="rgb(212,144,35)" fg:x="1207" fg:w="1"/><text x="27.1315%" y="639.50"></text></g><g><title>_int_free (53 samples, 1.19%)</title><rect x="27.8201%" y="597" width="1.1862%" height="15" fill="rgb(228,63,44)" fg:x="1243" fg:w="53"/><text x="27.9372%" y="607.50">_i..</text></g><g><title>__GI___libc_free (62 samples, 1.39%)</title><rect x="27.6410%" y="613" width="1.3876%" height="15" fill="rgb(228,109,6)" fg:x="1235" fg:w="62"/><text x="27.7582%" y="623.50">__G..</text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="29.0063%" y="597" width="0.0224%" height="15" fill="rgb(238,117,24)" fg:x="1296" fg:w="1"/><text x="29.1235%" y="607.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.07%)</title><rect x="29.0286%" y="613" width="0.0671%" height="15" fill="rgb(242,26,26)" fg:x="1297" fg:w="3"/><text x="29.1458%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (67 samples, 1.50%)</title><rect x="27.6410%" y="645" width="1.4996%" height="15" fill="rgb(221,92,48)" fg:x="1235" fg:w="67"/><text x="27.7582%" y="655.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (67 samples, 1.50%)</title><rect x="27.6410%" y="629" width="1.4996%" height="15" fill="rgb(209,209,32)" fg:x="1235" fg:w="67"/><text x="27.7582%" y="639.50">all..</text></g><g><title>__rust_dealloc (2 samples, 0.04%)</title><rect x="29.0958%" y="613" width="0.0448%" height="15" fill="rgb(221,70,22)" fg:x="1300" fg:w="2"/><text x="29.2130%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 2.39%)</title><rect x="27.0367%" y="725" width="2.3948%" height="15" fill="rgb(248,145,5)" fg:x="1208" fg:w="107"/><text x="27.1539%" y="735.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(u32,f32)&gt;]&gt; (107 samples, 2.39%)</title><rect x="27.0367%" y="709" width="2.3948%" height="15" fill="rgb(226,116,26)" fg:x="1208" fg:w="107"/><text x="27.1539%" y="719.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u32,f32)&gt;&gt; (107 samples, 2.39%)</title><rect x="27.0367%" y="693" width="2.3948%" height="15" fill="rgb(244,5,17)" fg:x="1208" fg:w="107"/><text x="27.1539%" y="703.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u32,f32)&gt;&gt; (107 samples, 2.39%)</title><rect x="27.0367%" y="677" width="2.3948%" height="15" fill="rgb(252,159,33)" fg:x="1208" fg:w="107"/><text x="27.1539%" y="687.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 2.39%)</title><rect x="27.0367%" y="661" width="2.3948%" height="15" fill="rgb(206,71,0)" fg:x="1208" fg:w="107"/><text x="27.1539%" y="671.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.29%)</title><rect x="29.1406%" y="645" width="0.2910%" height="15" fill="rgb(233,118,54)" fg:x="1302" fg:w="13"/><text x="29.2577%" y="655.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="29.4539%" y="421" width="0.0224%" height="15" fill="rgb(234,83,48)" fg:x="1316" fg:w="1"/><text x="29.5711%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="29.4539%" y="405" width="0.0224%" height="15" fill="rgb(228,3,54)" fg:x="1316" fg:w="1"/><text x="29.5711%" y="415.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.04%)</title><rect x="29.5210%" y="357" width="0.0448%" height="15" fill="rgb(226,155,13)" fg:x="1319" fg:w="2"/><text x="29.6382%" y="367.50"></text></g><g><title>uncharge_folio (2 samples, 0.04%)</title><rect x="29.5210%" y="341" width="0.0448%" height="15" fill="rgb(241,28,37)" fg:x="1319" fg:w="2"/><text x="29.6382%" y="351.50"></text></g><g><title>free_unref_page_commit (6 samples, 0.13%)</title><rect x="29.5882%" y="341" width="0.1343%" height="15" fill="rgb(233,93,10)" fg:x="1322" fg:w="6"/><text x="29.7054%" y="351.50"></text></g><g><title>free_pcppages_bulk (5 samples, 0.11%)</title><rect x="29.6106%" y="325" width="0.1119%" height="15" fill="rgb(225,113,19)" fg:x="1323" fg:w="5"/><text x="29.7278%" y="335.50"></text></g><g><title>__free_one_page (4 samples, 0.09%)</title><rect x="29.6329%" y="309" width="0.0895%" height="15" fill="rgb(241,2,18)" fg:x="1324" fg:w="4"/><text x="29.7501%" y="319.50"></text></g><g><title>free_unref_page_list (8 samples, 0.18%)</title><rect x="29.5658%" y="357" width="0.1791%" height="15" fill="rgb(228,207,21)" fg:x="1321" fg:w="8"/><text x="29.6830%" y="367.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="29.7225%" y="341" width="0.0224%" height="15" fill="rgb(213,211,35)" fg:x="1328" fg:w="1"/><text x="29.8397%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="29.8568%" y="325" width="0.0224%" height="15" fill="rgb(209,83,10)" fg:x="1334" fg:w="1"/><text x="29.9739%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (128 samples, 2.86%)</title><rect x="27.0367%" y="773" width="2.8648%" height="15" fill="rgb(209,164,1)" fg:x="1208" fg:w="128"/><text x="27.1539%" y="783.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::Graph&gt; (128 samples, 2.86%)</title><rect x="27.0367%" y="757" width="2.8648%" height="15" fill="rgb(213,184,43)" fg:x="1208" fg:w="128"/><text x="27.1539%" y="767.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(u32,f32)&gt;&gt;&gt; (128 samples, 2.86%)</title><rect x="27.0367%" y="741" width="2.8648%" height="15" fill="rgb(231,61,34)" fg:x="1208" fg:w="128"/><text x="27.1539%" y="751.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(u32,f32)&gt;&gt;&gt; (21 samples, 0.47%)</title><rect x="29.4315%" y="725" width="0.4700%" height="15" fill="rgb(235,75,3)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.47%)</title><rect x="29.4315%" y="709" width="0.4700%" height="15" fill="rgb(220,106,47)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.47%)</title><rect x="29.4315%" y="693" width="0.4700%" height="15" fill="rgb(210,196,33)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.47%)</title><rect x="29.4315%" y="677" width="0.4700%" height="15" fill="rgb(229,154,42)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="687.50"></text></g><g><title>__GI___libc_free (21 samples, 0.47%)</title><rect x="29.4315%" y="661" width="0.4700%" height="15" fill="rgb(228,114,26)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="671.50"></text></g><g><title>__GI___munmap (21 samples, 0.47%)</title><rect x="29.4315%" y="645" width="0.4700%" height="15" fill="rgb(208,144,1)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.47%)</title><rect x="29.4315%" y="629" width="0.4700%" height="15" fill="rgb(239,112,37)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="639.50"></text></g><g><title>do_syscall_64 (21 samples, 0.47%)</title><rect x="29.4315%" y="613" width="0.4700%" height="15" fill="rgb(210,96,50)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="623.50"></text></g><g><title>x64_sys_call (21 samples, 0.47%)</title><rect x="29.4315%" y="597" width="0.4700%" height="15" fill="rgb(222,178,2)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="607.50"></text></g><g><title>__x64_sys_munmap (21 samples, 0.47%)</title><rect x="29.4315%" y="581" width="0.4700%" height="15" fill="rgb(226,74,18)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="591.50"></text></g><g><title>__vm_munmap (21 samples, 0.47%)</title><rect x="29.4315%" y="565" width="0.4700%" height="15" fill="rgb(225,67,54)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="575.50"></text></g><g><title>do_vmi_munmap (21 samples, 0.47%)</title><rect x="29.4315%" y="549" width="0.4700%" height="15" fill="rgb(251,92,32)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="559.50"></text></g><g><title>do_vmi_align_munmap (21 samples, 0.47%)</title><rect x="29.4315%" y="533" width="0.4700%" height="15" fill="rgb(228,149,22)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="543.50"></text></g><g><title>unmap_region (21 samples, 0.47%)</title><rect x="29.4315%" y="517" width="0.4700%" height="15" fill="rgb(243,54,13)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="527.50"></text></g><g><title>unmap_vmas (21 samples, 0.47%)</title><rect x="29.4315%" y="501" width="0.4700%" height="15" fill="rgb(243,180,28)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="511.50"></text></g><g><title>unmap_single_vma (21 samples, 0.47%)</title><rect x="29.4315%" y="485" width="0.4700%" height="15" fill="rgb(208,167,24)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="495.50"></text></g><g><title>unmap_page_range (21 samples, 0.47%)</title><rect x="29.4315%" y="469" width="0.4700%" height="15" fill="rgb(245,73,45)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (21 samples, 0.47%)</title><rect x="29.4315%" y="453" width="0.4700%" height="15" fill="rgb(237,203,48)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="463.50"></text></g><g><title>zap_pte_range (21 samples, 0.47%)</title><rect x="29.4315%" y="437" width="0.4700%" height="15" fill="rgb(211,197,16)" fg:x="1315" fg:w="21"/><text x="29.5487%" y="447.50"></text></g><g><title>tlb_flush_mmu (19 samples, 0.43%)</title><rect x="29.4763%" y="421" width="0.4252%" height="15" fill="rgb(243,99,51)" fg:x="1317" fg:w="19"/><text x="29.5935%" y="431.50"></text></g><g><title>tlb_batch_pages_flush (19 samples, 0.43%)</title><rect x="29.4763%" y="405" width="0.4252%" height="15" fill="rgb(215,123,29)" fg:x="1317" fg:w="19"/><text x="29.5935%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (19 samples, 0.43%)</title><rect x="29.4763%" y="389" width="0.4252%" height="15" fill="rgb(239,186,37)" fg:x="1317" fg:w="19"/><text x="29.5935%" y="399.50"></text></g><g><title>release_pages (19 samples, 0.43%)</title><rect x="29.4763%" y="373" width="0.4252%" height="15" fill="rgb(252,136,39)" fg:x="1317" fg:w="19"/><text x="29.5935%" y="383.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (7 samples, 0.16%)</title><rect x="29.7449%" y="357" width="0.1567%" height="15" fill="rgb(223,213,32)" fg:x="1329" fg:w="7"/><text x="29.8620%" y="367.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="29.8568%" y="341" width="0.0448%" height="15" fill="rgb(233,115,5)" fg:x="1334" fg:w="2"/><text x="29.9739%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="29.8791%" y="325" width="0.0224%" height="15" fill="rgb(207,226,44)" fg:x="1335" fg:w="1"/><text x="29.9963%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::printable::Printable&gt; (88 samples, 1.97%)</title><rect x="29.9015%" y="773" width="1.9696%" height="15" fill="rgb(208,126,0)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="783.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;fringe_vs_astar::printable::Cell&gt;&gt;&gt; (88 samples, 1.97%)</title><rect x="29.9015%" y="757" width="1.9696%" height="15" fill="rgb(244,66,21)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="767.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 1.97%)</title><rect x="29.9015%" y="741" width="1.9696%" height="15" fill="rgb(222,97,12)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="751.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;fringe_vs_astar::printable::Cell&gt;]&gt; (88 samples, 1.97%)</title><rect x="29.9015%" y="725" width="1.9696%" height="15" fill="rgb(219,213,19)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="735.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::printable::Cell&gt;&gt; (88 samples, 1.97%)</title><rect x="29.9015%" y="709" width="1.9696%" height="15" fill="rgb(252,169,30)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="719.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::printable::Cell&gt;&gt; (88 samples, 1.97%)</title><rect x="29.9015%" y="693" width="1.9696%" height="15" fill="rgb(206,32,51)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="703.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 1.97%)</title><rect x="29.9015%" y="677" width="1.9696%" height="15" fill="rgb(250,172,42)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="687.50">&lt;allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (88 samples, 1.97%)</title><rect x="29.9015%" y="661" width="1.9696%" height="15" fill="rgb(209,34,43)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="671.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (88 samples, 1.97%)</title><rect x="29.9015%" y="645" width="1.9696%" height="15" fill="rgb(223,11,35)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="655.50">alloc..</text></g><g><title>__GI___libc_free (88 samples, 1.97%)</title><rect x="29.9015%" y="629" width="1.9696%" height="15" fill="rgb(251,219,26)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="639.50">__GI_..</text></g><g><title>_int_free (88 samples, 1.97%)</title><rect x="29.9015%" y="613" width="1.9696%" height="15" fill="rgb(231,119,3)" fg:x="1336" fg:w="88"/><text x="30.0187%" y="623.50">_int_..</text></g><g><title>malloc_consolidate (87 samples, 1.95%)</title><rect x="29.9239%" y="597" width="1.9472%" height="15" fill="rgb(216,97,11)" fg:x="1337" fg:w="87"/><text x="30.0411%" y="607.50">mallo..</text></g><g><title>unlink_chunk (14 samples, 0.31%)</title><rect x="31.5577%" y="581" width="0.3133%" height="15" fill="rgb(223,59,9)" fg:x="1410" fg:w="14"/><text x="31.6749%" y="591.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.07%)</title><rect x="31.9382%" y="469" width="0.0671%" height="15" fill="rgb(233,93,31)" fg:x="1427" fg:w="3"/><text x="32.0554%" y="479.50"></text></g><g><title>exc_page_fault (3 samples, 0.07%)</title><rect x="31.9382%" y="453" width="0.0671%" height="15" fill="rgb(239,81,33)" fg:x="1427" fg:w="3"/><text x="32.0554%" y="463.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="31.9606%" y="437" width="0.0448%" height="15" fill="rgb(213,120,34)" fg:x="1428" fg:w="2"/><text x="32.0778%" y="447.50"></text></g><g><title>handle_mm_fault (2 samples, 0.04%)</title><rect x="31.9606%" y="421" width="0.0448%" height="15" fill="rgb(243,49,53)" fg:x="1428" fg:w="2"/><text x="32.0778%" y="431.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.04%)</title><rect x="31.9606%" y="405" width="0.0448%" height="15" fill="rgb(247,216,33)" fg:x="1428" fg:w="2"/><text x="32.0778%" y="415.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="31.9830%" y="389" width="0.0224%" height="15" fill="rgb(226,26,14)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="399.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="31.9830%" y="373" width="0.0224%" height="15" fill="rgb(215,49,53)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="383.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="31.9830%" y="357" width="0.0224%" height="15" fill="rgb(245,162,40)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="367.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="31.9830%" y="341" width="0.0224%" height="15" fill="rgb(229,68,17)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="351.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="31.9830%" y="325" width="0.0224%" height="15" fill="rgb(213,182,10)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="335.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="31.9830%" y="309" width="0.0224%" height="15" fill="rgb(245,125,30)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="319.50"></text></g><g><title>clear_page_erms (1 samples, 0.02%)</title><rect x="31.9830%" y="293" width="0.0224%" height="15" fill="rgb(232,202,2)" fg:x="1429" fg:w="1"/><text x="32.1002%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.16%)</title><rect x="31.8711%" y="597" width="0.1567%" height="15" fill="rgb(237,140,51)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.16%)</title><rect x="31.8711%" y="581" width="0.1567%" height="15" fill="rgb(236,157,25)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.16%)</title><rect x="31.8711%" y="565" width="0.1567%" height="15" fill="rgb(219,209,0)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.16%)</title><rect x="31.8711%" y="549" width="0.1567%" height="15" fill="rgb(240,116,54)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.16%)</title><rect x="31.8711%" y="533" width="0.1567%" height="15" fill="rgb(216,10,36)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="543.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.16%)</title><rect x="31.8711%" y="517" width="0.1567%" height="15" fill="rgb(222,72,44)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="527.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.16%)</title><rect x="31.8711%" y="501" width="0.1567%" height="15" fill="rgb(232,159,9)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="511.50"></text></g><g><title>_int_malloc (7 samples, 0.16%)</title><rect x="31.8711%" y="485" width="0.1567%" height="15" fill="rgb(210,39,32)" fg:x="1424" fg:w="7"/><text x="31.9883%" y="495.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="32.0054%" y="469" width="0.0224%" height="15" fill="rgb(216,194,45)" fg:x="1430" fg:w="1"/><text x="32.1226%" y="479.50"></text></g><g><title>&lt;fringe_vs_astar::printable::Printable as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="31.8711%" y="741" width="0.2238%" height="15" fill="rgb(218,18,35)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="31.8711%" y="725" width="0.2238%" height="15" fill="rgb(207,83,51)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.22%)</title><rect x="31.8711%" y="709" width="0.2238%" height="15" fill="rgb(225,63,43)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.22%)</title><rect x="31.8711%" y="693" width="0.2238%" height="15" fill="rgb(207,57,36)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.22%)</title><rect x="31.8711%" y="677" width="0.2238%" height="15" fill="rgb(216,99,33)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="31.8711%" y="661" width="0.2238%" height="15" fill="rgb(225,42,16)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.22%)</title><rect x="31.8711%" y="645" width="0.2238%" height="15" fill="rgb(220,201,45)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.22%)</title><rect x="31.8711%" y="629" width="0.2238%" height="15" fill="rgb(225,33,4)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.22%)</title><rect x="31.8711%" y="613" width="0.2238%" height="15" fill="rgb(224,33,50)" fg:x="1424" fg:w="10"/><text x="31.9883%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.07%)</title><rect x="32.0278%" y="597" width="0.0671%" height="15" fill="rgb(246,198,51)" fg:x="1431" fg:w="3"/><text x="32.1449%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="32.0278%" y="581" width="0.0671%" height="15" fill="rgb(205,22,4)" fg:x="1431" fg:w="3"/><text x="32.1449%" y="591.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.07%)</title><rect x="32.0278%" y="565" width="0.0671%" height="15" fill="rgb(206,3,8)" fg:x="1431" fg:w="3"/><text x="32.1449%" y="575.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="32.0725%" y="549" width="0.0224%" height="15" fill="rgb(251,23,15)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="559.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="32.0725%" y="533" width="0.0224%" height="15" fill="rgb(252,88,28)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="543.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="32.0725%" y="517" width="0.0224%" height="15" fill="rgb(212,127,14)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="32.0725%" y="501" width="0.0224%" height="15" fill="rgb(247,145,37)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="32.0725%" y="485" width="0.0224%" height="15" fill="rgb(209,117,53)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="495.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="32.0725%" y="469" width="0.0224%" height="15" fill="rgb(212,90,42)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="32.0725%" y="453" width="0.0224%" height="15" fill="rgb(218,164,37)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="463.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="32.0725%" y="437" width="0.0224%" height="15" fill="rgb(246,65,34)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="447.50"></text></g><g><title>_find_first_bit (1 samples, 0.02%)</title><rect x="32.0725%" y="421" width="0.0224%" height="15" fill="rgb(231,100,33)" fg:x="1433" fg:w="1"/><text x="32.1897%" y="431.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="32.1173%" y="293" width="0.0224%" height="15" fill="rgb(228,126,14)" fg:x="1435" fg:w="1"/><text x="32.2345%" y="303.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="32.1173%" y="277" width="0.0224%" height="15" fill="rgb(215,173,21)" fg:x="1435" fg:w="1"/><text x="32.2345%" y="287.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.04%)</title><rect x="32.1173%" y="325" width="0.0448%" height="15" fill="rgb(210,6,40)" fg:x="1435" fg:w="2"/><text x="32.2345%" y="335.50"></text></g><g><title>charge_memcg (2 samples, 0.04%)</title><rect x="32.1173%" y="309" width="0.0448%" height="15" fill="rgb(212,48,18)" fg:x="1435" fg:w="2"/><text x="32.2345%" y="319.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="32.1397%" y="293" width="0.0224%" height="15" fill="rgb(230,214,11)" fg:x="1436" fg:w="1"/><text x="32.2568%" y="303.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.07%)</title><rect x="32.1173%" y="437" width="0.0671%" height="15" fill="rgb(254,105,39)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="447.50"></text></g><g><title>exc_page_fault (3 samples, 0.07%)</title><rect x="32.1173%" y="421" width="0.0671%" height="15" fill="rgb(245,158,5)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="431.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="32.1173%" y="405" width="0.0671%" height="15" fill="rgb(249,208,11)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="415.50"></text></g><g><title>handle_mm_fault (3 samples, 0.07%)</title><rect x="32.1173%" y="389" width="0.0671%" height="15" fill="rgb(210,39,28)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="399.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.07%)</title><rect x="32.1173%" y="373" width="0.0671%" height="15" fill="rgb(211,56,53)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="383.50"></text></g><g><title>handle_pte_fault (3 samples, 0.07%)</title><rect x="32.1173%" y="357" width="0.0671%" height="15" fill="rgb(226,201,30)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="367.50"></text></g><g><title>do_anonymous_page (3 samples, 0.07%)</title><rect x="32.1173%" y="341" width="0.0671%" height="15" fill="rgb(239,101,34)" fg:x="1435" fg:w="3"/><text x="32.2345%" y="351.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="32.1620%" y="325" width="0.0224%" height="15" fill="rgb(226,209,5)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="335.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="32.1620%" y="309" width="0.0224%" height="15" fill="rgb(250,105,47)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="319.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="32.1620%" y="293" width="0.0224%" height="15" fill="rgb(230,72,3)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="32.1620%" y="277" width="0.0224%" height="15" fill="rgb(232,218,39)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="287.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="32.1620%" y="261" width="0.0224%" height="15" fill="rgb(248,166,6)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="271.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="32.1620%" y="245" width="0.0224%" height="15" fill="rgb(247,89,20)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="255.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="32.1620%" y="229" width="0.0224%" height="15" fill="rgb(248,130,54)" fg:x="1437" fg:w="1"/><text x="32.2792%" y="239.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.11%)</title><rect x="32.0949%" y="469" width="0.1119%" height="15" fill="rgb(234,196,4)" fg:x="1434" fg:w="5"/><text x="32.2121%" y="479.50"></text></g><g><title>_int_malloc (5 samples, 0.11%)</title><rect x="32.0949%" y="453" width="0.1119%" height="15" fill="rgb(250,143,31)" fg:x="1434" fg:w="5"/><text x="32.2121%" y="463.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="32.1844%" y="437" width="0.0224%" height="15" fill="rgb(211,110,34)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="447.50"></text></g><g><title>__glibc_morecore (1 samples, 0.02%)</title><rect x="32.1844%" y="421" width="0.0224%" height="15" fill="rgb(215,124,48)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="431.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="32.1844%" y="405" width="0.0224%" height="15" fill="rgb(216,46,13)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="415.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="32.1844%" y="389" width="0.0224%" height="15" fill="rgb(205,184,25)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="399.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="32.1844%" y="373" width="0.0224%" height="15" fill="rgb(228,1,10)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="32.1844%" y="357" width="0.0224%" height="15" fill="rgb(213,116,27)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="367.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="32.1844%" y="341" width="0.0224%" height="15" fill="rgb(241,95,50)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="351.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="32.1844%" y="325" width="0.0224%" height="15" fill="rgb(238,48,32)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="335.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="32.1844%" y="309" width="0.0224%" height="15" fill="rgb(235,113,49)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="319.50"></text></g><g><title>__do_sys_brk (1 samples, 0.02%)</title><rect x="32.1844%" y="293" width="0.0224%" height="15" fill="rgb(205,127,43)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="303.50"></text></g><g><title>do_brk_flags (1 samples, 0.02%)</title><rect x="32.1844%" y="277" width="0.0224%" height="15" fill="rgb(250,162,2)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="287.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="32.1844%" y="261" width="0.0224%" height="15" fill="rgb(220,13,41)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="271.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.02%)</title><rect x="32.1844%" y="245" width="0.0224%" height="15" fill="rgb(249,221,25)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="255.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="32.1844%" y="229" width="0.0224%" height="15" fill="rgb(215,208,19)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="239.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="32.1844%" y="213" width="0.0224%" height="15" fill="rgb(236,175,2)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="223.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="32.1844%" y="197" width="0.0224%" height="15" fill="rgb(241,52,2)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="207.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.02%)</title><rect x="32.1844%" y="181" width="0.0224%" height="15" fill="rgb(248,140,14)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="191.50"></text></g><g><title>perf_output_copy (1 samples, 0.02%)</title><rect x="32.1844%" y="165" width="0.0224%" height="15" fill="rgb(253,22,42)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="175.50"></text></g><g><title>__memcpy (1 samples, 0.02%)</title><rect x="32.1844%" y="149" width="0.0224%" height="15" fill="rgb(234,61,47)" fg:x="1438" fg:w="1"/><text x="32.3016%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="32.0949%" y="565" width="0.1343%" height="15" fill="rgb(208,226,15)" fg:x="1434" fg:w="6"/><text x="32.2121%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="32.0949%" y="549" width="0.1343%" height="15" fill="rgb(217,221,4)" fg:x="1434" fg:w="6"/><text x="32.2121%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.13%)</title><rect x="32.0949%" y="533" width="0.1343%" height="15" fill="rgb(212,174,34)" fg:x="1434" fg:w="6"/><text x="32.2121%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.13%)</title><rect x="32.0949%" y="517" width="0.1343%" height="15" fill="rgb(253,83,4)" fg:x="1434" fg:w="6"/><text x="32.2121%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.13%)</title><rect x="32.0949%" y="501" width="0.1343%" height="15" fill="rgb(250,195,49)" fg:x="1434" fg:w="6"/><text x="32.2121%" y="511.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.13%)</title><rect x="32.0949%" y="485" width="0.1343%" height="15" fill="rgb(241,192,25)" fg:x="1434" fg:w="6"/><text x="32.2121%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="32.2068%" y="469" width="0.0224%" height="15" fill="rgb(208,124,10)" fg:x="1439" fg:w="1"/><text x="32.3240%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="32.2739%" y="469" width="0.0224%" height="15" fill="rgb(222,33,0)" fg:x="1442" fg:w="1"/><text x="32.3911%" y="479.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="32.2739%" y="453" width="0.0224%" height="15" fill="rgb(234,209,28)" fg:x="1442" fg:w="1"/><text x="32.3911%" y="463.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="32.2739%" y="437" width="0.0224%" height="15" fill="rgb(224,11,23)" fg:x="1442" fg:w="1"/><text x="32.3911%" y="447.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="32.2739%" y="421" width="0.0224%" height="15" fill="rgb(232,99,1)" fg:x="1442" fg:w="1"/><text x="32.3911%" y="431.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.02%)</title><rect x="32.2739%" y="405" width="0.0224%" height="15" fill="rgb(237,95,45)" fg:x="1442" fg:w="1"/><text x="32.3911%" y="415.50"></text></g><g><title>&lt;fringe_vs_astar::algorithms::solver::Result as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="32.0949%" y="725" width="0.2238%" height="15" fill="rgb(208,109,11)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="735.50"></text></g><g><title>&lt;fringe_vs_astar::printable::Printable as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="32.0949%" y="709" width="0.2238%" height="15" fill="rgb(216,190,48)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="32.0949%" y="693" width="0.2238%" height="15" fill="rgb(251,171,36)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.22%)</title><rect x="32.0949%" y="677" width="0.2238%" height="15" fill="rgb(230,62,22)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.22%)</title><rect x="32.0949%" y="661" width="0.2238%" height="15" fill="rgb(225,114,35)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.22%)</title><rect x="32.0949%" y="645" width="0.2238%" height="15" fill="rgb(215,118,42)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.22%)</title><rect x="32.0949%" y="629" width="0.2238%" height="15" fill="rgb(243,119,21)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.22%)</title><rect x="32.0949%" y="613" width="0.2238%" height="15" fill="rgb(252,177,53)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.22%)</title><rect x="32.0949%" y="597" width="0.2238%" height="15" fill="rgb(237,209,29)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.22%)</title><rect x="32.0949%" y="581" width="0.2238%" height="15" fill="rgb(212,65,23)" fg:x="1434" fg:w="10"/><text x="32.2121%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.09%)</title><rect x="32.2292%" y="565" width="0.0895%" height="15" fill="rgb(230,222,46)" fg:x="1440" fg:w="4"/><text x="32.3464%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.09%)</title><rect x="32.2292%" y="549" width="0.0895%" height="15" fill="rgb(215,135,32)" fg:x="1440" fg:w="4"/><text x="32.3464%" y="559.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.09%)</title><rect x="32.2292%" y="533" width="0.0895%" height="15" fill="rgb(246,101,22)" fg:x="1440" fg:w="4"/><text x="32.3464%" y="543.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="32.2739%" y="517" width="0.0448%" height="15" fill="rgb(206,107,13)" fg:x="1442" fg:w="2"/><text x="32.3911%" y="527.50"></text></g><g><title>exc_page_fault (2 samples, 0.04%)</title><rect x="32.2739%" y="501" width="0.0448%" height="15" fill="rgb(250,100,44)" fg:x="1442" fg:w="2"/><text x="32.3911%" y="511.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="32.2739%" y="485" width="0.0448%" height="15" fill="rgb(231,147,38)" fg:x="1442" fg:w="2"/><text x="32.3911%" y="495.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.02%)</title><rect x="32.2963%" y="469" width="0.0224%" height="15" fill="rgb(229,8,40)" fg:x="1443" fg:w="1"/><text x="32.4135%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::printable::Printable&gt; (1 samples, 0.02%)</title><rect x="32.3187%" y="725" width="0.0224%" height="15" fill="rgb(221,135,30)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;fringe_vs_astar::printable::Cell&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="32.3187%" y="709" width="0.0224%" height="15" fill="rgb(249,193,18)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="32.3187%" y="693" width="0.0224%" height="15" fill="rgb(209,133,39)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;fringe_vs_astar::printable::Cell&gt;]&gt; (1 samples, 0.02%)</title><rect x="32.3187%" y="677" width="0.0224%" height="15" fill="rgb(232,100,14)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::printable::Cell&gt;&gt; (1 samples, 0.02%)</title><rect x="32.3187%" y="661" width="0.0224%" height="15" fill="rgb(224,185,1)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::printable::Cell&gt;&gt; (1 samples, 0.02%)</title><rect x="32.3187%" y="645" width="0.0224%" height="15" fill="rgb(223,139,8)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="32.3187%" y="629" width="0.0224%" height="15" fill="rgb(232,213,38)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="32.3187%" y="613" width="0.0224%" height="15" fill="rgb(207,94,22)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="32.3187%" y="597" width="0.0224%" height="15" fill="rgb(219,183,54)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="32.3187%" y="581" width="0.0224%" height="15" fill="rgb(216,185,54)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="32.3187%" y="565" width="0.0224%" height="15" fill="rgb(254,217,39)" fg:x="1444" fg:w="1"/><text x="32.4359%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="32.3411%" y="613" width="0.0671%" height="15" fill="rgb(240,178,23)" fg:x="1445" fg:w="3"/><text x="32.4583%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="32.3411%" y="597" width="0.0671%" height="15" fill="rgb(218,11,47)" fg:x="1445" fg:w="3"/><text x="32.4583%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="32.4082%" y="613" width="0.0224%" height="15" fill="rgb(218,51,51)" fg:x="1448" fg:w="1"/><text x="32.5254%" y="623.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="33.2811%" y="549" width="0.0224%" height="15" fill="rgb(238,126,27)" fg:x="1487" fg:w="1"/><text x="33.3983%" y="559.50"></text></g><g><title>__folio_throttle_swaprate (3 samples, 0.07%)</title><rect x="33.3930%" y="485" width="0.0671%" height="15" fill="rgb(249,202,22)" fg:x="1492" fg:w="3"/><text x="33.5102%" y="495.50"></text></g><g><title>blk_cgroup_congested (3 samples, 0.07%)</title><rect x="33.3930%" y="469" width="0.0671%" height="15" fill="rgb(254,195,49)" fg:x="1492" fg:w="3"/><text x="33.5102%" y="479.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.04%)</title><rect x="33.4602%" y="469" width="0.0448%" height="15" fill="rgb(208,123,14)" fg:x="1495" fg:w="2"/><text x="33.5773%" y="479.50"></text></g><g><title>__rcu_read_unlock (14 samples, 0.31%)</title><rect x="33.5049%" y="469" width="0.3133%" height="15" fill="rgb(224,200,8)" fg:x="1497" fg:w="14"/><text x="33.6221%" y="479.50"></text></g><g><title>consume_stock (2 samples, 0.04%)</title><rect x="33.9973%" y="437" width="0.0448%" height="15" fill="rgb(217,61,36)" fg:x="1519" fg:w="2"/><text x="34.1145%" y="447.50"></text></g><g><title>charge_memcg (11 samples, 0.25%)</title><rect x="33.8183%" y="469" width="0.2462%" height="15" fill="rgb(206,35,45)" fg:x="1511" fg:w="11"/><text x="33.9355%" y="479.50"></text></g><g><title>try_charge_memcg (7 samples, 0.16%)</title><rect x="33.9078%" y="453" width="0.1567%" height="15" fill="rgb(217,65,33)" fg:x="1515" fg:w="7"/><text x="34.0250%" y="463.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="34.0421%" y="437" width="0.0224%" height="15" fill="rgb(222,158,48)" fg:x="1521" fg:w="1"/><text x="34.1593%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (6 samples, 0.13%)</title><rect x="34.0645%" y="469" width="0.1343%" height="15" fill="rgb(254,2,54)" fg:x="1522" fg:w="6"/><text x="34.1816%" y="479.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="34.1764%" y="453" width="0.0224%" height="15" fill="rgb(250,143,38)" fg:x="1527" fg:w="1"/><text x="34.2936%" y="463.50"></text></g><g><title>__mem_cgroup_charge (34 samples, 0.76%)</title><rect x="33.4602%" y="485" width="0.7610%" height="15" fill="rgb(248,25,0)" fg:x="1495" fg:w="34"/><text x="33.5773%" y="495.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="34.1987%" y="469" width="0.0224%" height="15" fill="rgb(206,152,27)" fg:x="1528" fg:w="1"/><text x="34.3159%" y="479.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="34.2211%" y="485" width="0.0224%" height="15" fill="rgb(240,77,30)" fg:x="1529" fg:w="1"/><text x="34.3383%" y="495.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="34.2435%" y="485" width="0.0224%" height="15" fill="rgb(231,5,3)" fg:x="1530" fg:w="1"/><text x="34.3607%" y="495.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.07%)</title><rect x="34.2659%" y="485" width="0.0671%" height="15" fill="rgb(207,226,32)" fg:x="1531" fg:w="3"/><text x="34.3831%" y="495.50"></text></g><g><title>charge_memcg (2 samples, 0.04%)</title><rect x="34.3330%" y="485" width="0.0448%" height="15" fill="rgb(222,207,47)" fg:x="1534" fg:w="2"/><text x="34.4502%" y="495.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="34.5345%" y="389" width="0.0224%" height="15" fill="rgb(229,115,45)" fg:x="1543" fg:w="1"/><text x="34.6517%" y="399.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.04%)</title><rect x="34.5345%" y="405" width="0.0448%" height="15" fill="rgb(224,191,6)" fg:x="1543" fg:w="2"/><text x="34.6517%" y="415.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="34.5568%" y="389" width="0.0224%" height="15" fill="rgb(230,227,24)" fg:x="1544" fg:w="1"/><text x="34.6740%" y="399.50"></text></g><g><title>folio_add_lru_vma (10 samples, 0.22%)</title><rect x="34.3778%" y="485" width="0.2238%" height="15" fill="rgb(228,80,19)" fg:x="1536" fg:w="10"/><text x="34.4950%" y="495.50"></text></g><g><title>folio_add_lru (10 samples, 0.22%)</title><rect x="34.3778%" y="469" width="0.2238%" height="15" fill="rgb(247,229,0)" fg:x="1536" fg:w="10"/><text x="34.4950%" y="479.50"></text></g><g><title>folio_batch_move_lru (7 samples, 0.16%)</title><rect x="34.4449%" y="453" width="0.1567%" height="15" fill="rgb(237,194,15)" fg:x="1539" fg:w="7"/><text x="34.5621%" y="463.50"></text></g><g><title>lru_add_fn (4 samples, 0.09%)</title><rect x="34.5121%" y="437" width="0.0895%" height="15" fill="rgb(219,203,20)" fg:x="1542" fg:w="4"/><text x="34.6293%" y="447.50"></text></g><g><title>lru_gen_add_folio (3 samples, 0.07%)</title><rect x="34.5345%" y="421" width="0.0671%" height="15" fill="rgb(234,128,8)" fg:x="1543" fg:w="3"/><text x="34.6517%" y="431.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="34.5792%" y="405" width="0.0224%" height="15" fill="rgb(248,202,8)" fg:x="1545" fg:w="1"/><text x="34.6964%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="34.6688%" y="469" width="0.0224%" height="15" fill="rgb(206,104,37)" fg:x="1549" fg:w="1"/><text x="34.7859%" y="479.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="34.6688%" y="453" width="0.0224%" height="15" fill="rgb(223,8,27)" fg:x="1549" fg:w="1"/><text x="34.7859%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="34.6688%" y="437" width="0.0224%" height="15" fill="rgb(216,217,28)" fg:x="1549" fg:w="1"/><text x="34.7859%" y="447.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.11%)</title><rect x="34.6016%" y="485" width="0.1119%" height="15" fill="rgb(249,199,1)" fg:x="1546" fg:w="5"/><text x="34.7188%" y="495.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="34.6911%" y="469" width="0.0224%" height="15" fill="rgb(240,85,17)" fg:x="1550" fg:w="1"/><text x="34.8083%" y="479.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="34.7135%" y="485" width="0.0224%" height="15" fill="rgb(206,108,45)" fg:x="1551" fg:w="1"/><text x="34.8307%" y="495.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="34.7135%" y="469" width="0.0224%" height="15" fill="rgb(245,210,41)" fg:x="1551" fg:w="1"/><text x="34.8307%" y="479.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="34.7359%" y="485" width="0.0224%" height="15" fill="rgb(206,13,37)" fg:x="1552" fg:w="1"/><text x="34.8531%" y="495.50"></text></g><g><title>policy_nodemask (1 samples, 0.02%)</title><rect x="34.7583%" y="485" width="0.0224%" height="15" fill="rgb(250,61,18)" fg:x="1553" fg:w="1"/><text x="34.8755%" y="495.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="34.9150%" y="437" width="0.0224%" height="15" fill="rgb(235,172,48)" fg:x="1560" fg:w="1"/><text x="35.0321%" y="447.50"></text></g><g><title>clear_page_erms (6 samples, 0.13%)</title><rect x="35.0045%" y="421" width="0.1343%" height="15" fill="rgb(249,201,17)" fg:x="1564" fg:w="6"/><text x="35.1217%" y="431.50"></text></g><g><title>__alloc_pages (15 samples, 0.34%)</title><rect x="34.8702%" y="453" width="0.3357%" height="15" fill="rgb(219,208,6)" fg:x="1558" fg:w="15"/><text x="34.9874%" y="463.50"></text></g><g><title>get_page_from_freelist (12 samples, 0.27%)</title><rect x="34.9373%" y="437" width="0.2686%" height="15" fill="rgb(248,31,23)" fg:x="1561" fg:w="12"/><text x="35.0545%" y="447.50"></text></g><g><title>rmqueue (3 samples, 0.07%)</title><rect x="35.1388%" y="421" width="0.0671%" height="15" fill="rgb(245,15,42)" fg:x="1570" fg:w="3"/><text x="35.2560%" y="431.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.04%)</title><rect x="35.1611%" y="405" width="0.0448%" height="15" fill="rgb(222,217,39)" fg:x="1571" fg:w="2"/><text x="35.2783%" y="415.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="35.1835%" y="389" width="0.0224%" height="15" fill="rgb(210,219,27)" fg:x="1572" fg:w="1"/><text x="35.3007%" y="399.50"></text></g><g><title>__folio_alloc (17 samples, 0.38%)</title><rect x="34.8478%" y="469" width="0.3805%" height="15" fill="rgb(252,166,36)" fg:x="1557" fg:w="17"/><text x="34.9650%" y="479.50"></text></g><g><title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="35.2059%" y="453" width="0.0224%" height="15" fill="rgb(245,132,34)" fg:x="1573" fg:w="1"/><text x="35.3231%" y="463.50"></text></g><g><title>do_anonymous_page (83 samples, 1.86%)</title><rect x="33.3930%" y="501" width="1.8577%" height="15" fill="rgb(236,54,3)" fg:x="1492" fg:w="83"/><text x="33.5102%" y="511.50">do_a..</text></g><g><title>vma_alloc_folio (21 samples, 0.47%)</title><rect x="34.7807%" y="485" width="0.4700%" height="15" fill="rgb(241,173,43)" fg:x="1554" fg:w="21"/><text x="34.8978%" y="495.50"></text></g><g><title>_find_first_bit (1 samples, 0.02%)</title><rect x="35.2283%" y="469" width="0.0224%" height="15" fill="rgb(215,190,9)" fg:x="1574" fg:w="1"/><text x="35.3455%" y="479.50"></text></g><g><title>handle_pte_fault (85 samples, 1.90%)</title><rect x="33.3930%" y="517" width="1.9024%" height="15" fill="rgb(242,101,16)" fg:x="1492" fg:w="85"/><text x="33.5102%" y="527.50">hand..</text></g><g><title>pte_offset_map_nolock (2 samples, 0.04%)</title><rect x="35.2507%" y="501" width="0.0448%" height="15" fill="rgb(223,190,21)" fg:x="1575" fg:w="2"/><text x="35.3679%" y="511.50"></text></g><g><title>__handle_mm_fault (89 samples, 1.99%)</title><rect x="33.3259%" y="533" width="1.9919%" height="15" fill="rgb(215,228,25)" fg:x="1489" fg:w="89"/><text x="33.4431%" y="543.50">__han..</text></g><g><title>pmd_val (1 samples, 0.02%)</title><rect x="35.2954%" y="517" width="0.0224%" height="15" fill="rgb(225,36,22)" fg:x="1577" fg:w="1"/><text x="35.4126%" y="527.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.02%)</title><rect x="35.3178%" y="533" width="0.0224%" height="15" fill="rgb(251,106,46)" fg:x="1578" fg:w="1"/><text x="35.4350%" y="543.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="35.3178%" y="517" width="0.0224%" height="15" fill="rgb(208,90,1)" fg:x="1578" fg:w="1"/><text x="35.4350%" y="527.50"></text></g><g><title>handle_mm_fault (92 samples, 2.06%)</title><rect x="33.3035%" y="549" width="2.0591%" height="15" fill="rgb(243,10,4)" fg:x="1488" fg:w="92"/><text x="33.4207%" y="559.50">handl..</text></g><g><title>hugepage_vma_check (1 samples, 0.02%)</title><rect x="35.3402%" y="533" width="0.0224%" height="15" fill="rgb(212,137,27)" fg:x="1579" fg:w="1"/><text x="35.4574%" y="543.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.02%)</title><rect x="35.3626%" y="549" width="0.0224%" height="15" fill="rgb(231,220,49)" fg:x="1580" fg:w="1"/><text x="35.4798%" y="559.50"></text></g><g><title>asm_exc_page_fault (98 samples, 2.19%)</title><rect x="33.2140%" y="597" width="2.1934%" height="15" fill="rgb(237,96,20)" fg:x="1484" fg:w="98"/><text x="33.3312%" y="607.50">asm_e..</text></g><g><title>exc_page_fault (95 samples, 2.13%)</title><rect x="33.2811%" y="581" width="2.1262%" height="15" fill="rgb(239,229,30)" fg:x="1487" fg:w="95"/><text x="33.3983%" y="591.50">exc_p..</text></g><g><title>do_user_addr_fault (95 samples, 2.13%)</title><rect x="33.2811%" y="565" width="2.1262%" height="15" fill="rgb(219,65,33)" fg:x="1487" fg:w="95"/><text x="33.3983%" y="575.50">do_us..</text></g><g><title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="35.3850%" y="549" width="0.0224%" height="15" fill="rgb(243,134,7)" fg:x="1581" fg:w="1"/><text x="35.5021%" y="559.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="35.4073%" y="597" width="0.0224%" height="15" fill="rgb(216,177,54)" fg:x="1582" fg:w="1"/><text x="35.5245%" y="607.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::new (149 samples, 3.33%)</title><rect x="32.3411%" y="677" width="3.3348%" height="15" fill="rgb(211,160,20)" fg:x="1445" fg:w="149"/><text x="32.4583%" y="687.50">fringe_vs_..</text></g><g><title>alloc::vec::from_elem (149 samples, 3.33%)</title><rect x="32.3411%" y="661" width="3.3348%" height="15" fill="rgb(239,85,39)" fg:x="1445" fg:w="149"/><text x="32.4583%" y="671.50">alloc::vec..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (149 samples, 3.33%)</title><rect x="32.3411%" y="645" width="3.3348%" height="15" fill="rgb(232,125,22)" fg:x="1445" fg:w="149"/><text x="32.4583%" y="655.50">&lt;T as allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (149 samples, 3.33%)</title><rect x="32.3411%" y="629" width="3.3348%" height="15" fill="rgb(244,57,34)" fg:x="1445" fg:w="149"/><text x="32.4583%" y="639.50">alloc::vec..</text></g><g><title>core::ptr::write (145 samples, 3.25%)</title><rect x="32.4306%" y="613" width="3.2453%" height="15" fill="rgb(214,203,32)" fg:x="1449" fg:w="145"/><text x="32.5478%" y="623.50">core::ptr..</text></g><g><title>sync_regs (11 samples, 0.25%)</title><rect x="35.4297%" y="597" width="0.2462%" height="15" fill="rgb(207,58,43)" fg:x="1583" fg:w="11"/><text x="35.5469%" y="607.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::FringeSearch::new (189 samples, 4.23%)</title><rect x="32.3411%" y="709" width="4.2301%" height="15" fill="rgb(215,193,15)" fg:x="1445" fg:w="189"/><text x="32.4583%" y="719.50">fringe_vs_ast..</text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new (189 samples, 4.23%)</title><rect x="32.3411%" y="693" width="4.2301%" height="15" fill="rgb(232,15,44)" fg:x="1445" fg:w="189"/><text x="32.4583%" y="703.50">fringe_vs_ast..</text></g><g><title>fringe_vs_astar::structures::graph::Graph::size (40 samples, 0.90%)</title><rect x="35.6759%" y="677" width="0.8953%" height="15" fill="rgb(212,3,48)" fg:x="1594" fg:w="40"/><text x="35.7931%" y="687.50">f..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (40 samples, 0.90%)</title><rect x="35.6759%" y="661" width="0.8953%" height="15" fill="rgb(218,128,7)" fg:x="1594" fg:w="40"/><text x="35.7931%" y="671.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (40 samples, 0.90%)</title><rect x="35.6759%" y="645" width="0.8953%" height="15" fill="rgb(226,216,39)" fg:x="1594" fg:w="40"/><text x="35.7931%" y="655.50">c..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (40 samples, 0.90%)</title><rect x="35.6759%" y="629" width="0.8953%" height="15" fill="rgb(243,47,51)" fg:x="1594" fg:w="40"/><text x="35.7931%" y="639.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.90%)</title><rect x="35.6759%" y="613" width="0.8953%" height="15" fill="rgb(241,183,40)" fg:x="1594" fg:w="40"/><text x="35.7931%" y="623.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.90%)</title><rect x="35.6759%" y="597" width="0.8953%" height="15" fill="rgb(231,217,32)" fg:x="1594" fg:w="40"/><text x="35.7931%" y="607.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (36 samples, 0.81%)</title><rect x="35.7654%" y="581" width="0.8057%" height="15" fill="rgb(229,61,38)" fg:x="1598" fg:w="36"/><text x="35.8826%" y="591.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (36 samples, 0.81%)</title><rect x="35.7654%" y="565" width="0.8057%" height="15" fill="rgb(225,210,5)" fg:x="1598" fg:w="36"/><text x="35.8826%" y="575.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.02%)</title><rect x="36.5936%" y="325" width="0.0224%" height="15" fill="rgb(231,79,45)" fg:x="1635" fg:w="1"/><text x="36.7107%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="36.6383%" y="309" width="0.0224%" height="15" fill="rgb(224,100,7)" fg:x="1637" fg:w="1"/><text x="36.7555%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="36.6383%" y="293" width="0.0224%" height="15" fill="rgb(241,198,18)" fg:x="1637" fg:w="1"/><text x="36.7555%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="36.6383%" y="277" width="0.0224%" height="15" fill="rgb(252,97,53)" fg:x="1637" fg:w="1"/><text x="36.7555%" y="287.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="36.6383%" y="261" width="0.0224%" height="15" fill="rgb(220,88,7)" fg:x="1637" fg:w="1"/><text x="36.7555%" y="271.50"></text></g><g><title>page_remove_rmap (4 samples, 0.09%)</title><rect x="36.6159%" y="325" width="0.0895%" height="15" fill="rgb(213,176,14)" fg:x="1636" fg:w="4"/><text x="36.7331%" y="335.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.04%)</title><rect x="36.6607%" y="309" width="0.0448%" height="15" fill="rgb(246,73,7)" fg:x="1638" fg:w="2"/><text x="36.7779%" y="319.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="36.7726%" y="245" width="0.0224%" height="15" fill="rgb(245,64,36)" fg:x="1643" fg:w="1"/><text x="36.8898%" y="255.50"></text></g><g><title>__mem_cgroup_uncharge_list (3 samples, 0.07%)</title><rect x="36.7726%" y="261" width="0.0671%" height="15" fill="rgb(245,80,10)" fg:x="1643" fg:w="3"/><text x="36.8898%" y="271.50"></text></g><g><title>uncharge_folio (2 samples, 0.04%)</title><rect x="36.7950%" y="245" width="0.0448%" height="15" fill="rgb(232,107,50)" fg:x="1644" fg:w="2"/><text x="36.9122%" y="255.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="36.8397%" y="261" width="0.0224%" height="15" fill="rgb(253,3,0)" fg:x="1646" fg:w="1"/><text x="36.9569%" y="271.50"></text></g><g><title>free_unref_page_list (3 samples, 0.07%)</title><rect x="36.8621%" y="261" width="0.0671%" height="15" fill="rgb(212,99,53)" fg:x="1647" fg:w="3"/><text x="36.9793%" y="271.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.07%)</title><rect x="36.8621%" y="245" width="0.0671%" height="15" fill="rgb(249,111,54)" fg:x="1647" fg:w="3"/><text x="36.9793%" y="255.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.07%)</title><rect x="36.8621%" y="229" width="0.0671%" height="15" fill="rgb(249,55,30)" fg:x="1647" fg:w="3"/><text x="36.9793%" y="239.50"></text></g><g><title>__free_one_page (3 samples, 0.07%)</title><rect x="36.8621%" y="213" width="0.0671%" height="15" fill="rgb(237,47,42)" fg:x="1647" fg:w="3"/><text x="36.9793%" y="223.50"></text></g><g><title>free_pages_and_swap_cache (16 samples, 0.36%)</title><rect x="36.7055%" y="293" width="0.3581%" height="15" fill="rgb(211,20,18)" fg:x="1640" fg:w="16"/><text x="36.8226%" y="303.50"></text></g><g><title>release_pages (16 samples, 0.36%)</title><rect x="36.7055%" y="277" width="0.3581%" height="15" fill="rgb(231,203,46)" fg:x="1640" fg:w="16"/><text x="36.8226%" y="287.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.13%)</title><rect x="36.9293%" y="261" width="0.1343%" height="15" fill="rgb(237,142,3)" fg:x="1650" fg:w="6"/><text x="37.0465%" y="271.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="37.0412%" y="245" width="0.0224%" height="15" fill="rgb(241,107,1)" fg:x="1655" fg:w="1"/><text x="37.1584%" y="255.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="37.0412%" y="229" width="0.0224%" height="15" fill="rgb(229,83,13)" fg:x="1655" fg:w="1"/><text x="37.1584%" y="239.50"></text></g><g><title>tlb_flush_mmu (17 samples, 0.38%)</title><rect x="36.7055%" y="325" width="0.3805%" height="15" fill="rgb(241,91,40)" fg:x="1640" fg:w="17"/><text x="36.8226%" y="335.50"></text></g><g><title>tlb_batch_pages_flush (17 samples, 0.38%)</title><rect x="36.7055%" y="309" width="0.3805%" height="15" fill="rgb(225,3,45)" fg:x="1640" fg:w="17"/><text x="36.8226%" y="319.50"></text></g><g><title>free_swap_cache (1 samples, 0.02%)</title><rect x="37.0636%" y="293" width="0.0224%" height="15" fill="rgb(244,223,14)" fg:x="1656" fg:w="1"/><text x="37.1808%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringesearch::FringeSearch&gt; (24 samples, 0.54%)</title><rect x="36.5712%" y="693" width="0.5372%" height="15" fill="rgb(224,124,37)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringesearch::fringe::Fringe&gt; (24 samples, 0.54%)</title><rect x="36.5712%" y="677" width="0.5372%" height="15" fill="rgb(251,171,30)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringesearch::cache::Cache&gt; (24 samples, 0.54%)</title><rect x="36.5712%" y="661" width="0.5372%" height="15" fill="rgb(236,46,54)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::algorithms::fringesearch::cache::Value&gt;&gt; (24 samples, 0.54%)</title><rect x="36.5712%" y="645" width="0.5372%" height="15" fill="rgb(245,213,5)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::algorithms::fringesearch::cache::Value&gt;&gt; (24 samples, 0.54%)</title><rect x="36.5712%" y="629" width="0.5372%" height="15" fill="rgb(230,144,27)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.54%)</title><rect x="36.5712%" y="613" width="0.5372%" height="15" fill="rgb(220,86,6)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.54%)</title><rect x="36.5712%" y="597" width="0.5372%" height="15" fill="rgb(240,20,13)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.54%)</title><rect x="36.5712%" y="581" width="0.5372%" height="15" fill="rgb(217,89,34)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="591.50"></text></g><g><title>__GI___libc_free (24 samples, 0.54%)</title><rect x="36.5712%" y="565" width="0.5372%" height="15" fill="rgb(229,13,5)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="575.50"></text></g><g><title>__GI___munmap (24 samples, 0.54%)</title><rect x="36.5712%" y="549" width="0.5372%" height="15" fill="rgb(244,67,35)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.54%)</title><rect x="36.5712%" y="533" width="0.5372%" height="15" fill="rgb(221,40,2)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="543.50"></text></g><g><title>do_syscall_64 (24 samples, 0.54%)</title><rect x="36.5712%" y="517" width="0.5372%" height="15" fill="rgb(237,157,21)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="527.50"></text></g><g><title>x64_sys_call (24 samples, 0.54%)</title><rect x="36.5712%" y="501" width="0.5372%" height="15" fill="rgb(222,94,11)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="511.50"></text></g><g><title>__x64_sys_munmap (24 samples, 0.54%)</title><rect x="36.5712%" y="485" width="0.5372%" height="15" fill="rgb(249,113,6)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="495.50"></text></g><g><title>__vm_munmap (24 samples, 0.54%)</title><rect x="36.5712%" y="469" width="0.5372%" height="15" fill="rgb(238,137,36)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="479.50"></text></g><g><title>do_vmi_munmap (24 samples, 0.54%)</title><rect x="36.5712%" y="453" width="0.5372%" height="15" fill="rgb(210,102,26)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="463.50"></text></g><g><title>do_vmi_align_munmap (24 samples, 0.54%)</title><rect x="36.5712%" y="437" width="0.5372%" height="15" fill="rgb(218,30,30)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="447.50"></text></g><g><title>unmap_region (24 samples, 0.54%)</title><rect x="36.5712%" y="421" width="0.5372%" height="15" fill="rgb(214,67,26)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="431.50"></text></g><g><title>unmap_vmas (24 samples, 0.54%)</title><rect x="36.5712%" y="405" width="0.5372%" height="15" fill="rgb(251,9,53)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="415.50"></text></g><g><title>unmap_single_vma (24 samples, 0.54%)</title><rect x="36.5712%" y="389" width="0.5372%" height="15" fill="rgb(228,204,25)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="399.50"></text></g><g><title>unmap_page_range (24 samples, 0.54%)</title><rect x="36.5712%" y="373" width="0.5372%" height="15" fill="rgb(207,153,8)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="383.50"></text></g><g><title>zap_pmd_range.isra.0 (24 samples, 0.54%)</title><rect x="36.5712%" y="357" width="0.5372%" height="15" fill="rgb(242,9,16)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="367.50"></text></g><g><title>zap_pte_range (24 samples, 0.54%)</title><rect x="36.5712%" y="341" width="0.5372%" height="15" fill="rgb(217,211,10)" fg:x="1634" fg:w="24"/><text x="36.6884%" y="351.50"></text></g><g><title>vm_normal_page (1 samples, 0.02%)</title><rect x="37.0859%" y="325" width="0.0224%" height="15" fill="rgb(219,228,52)" fg:x="1657" fg:w="1"/><text x="37.2031%" y="335.50"></text></g><g><title>_ZN15fringe_vs_astar10algorithms12fringesearch6fringe6Fringe11new_process17hb92f5f788ea5ec49E.llvm.11196115670901850059 (41 samples, 0.92%)</title><rect x="37.2874%" y="677" width="0.9176%" height="15" fill="rgb(231,92,29)" fg:x="1666" fg:w="41"/><text x="37.4046%" y="687.50">_..</text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="38.1826%" y="661" width="0.0224%" height="15" fill="rgb(232,8,23)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="671.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="38.1826%" y="645" width="0.0224%" height="15" fill="rgb(216,211,34)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="38.1826%" y="629" width="0.0224%" height="15" fill="rgb(236,151,0)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="38.1826%" y="613" width="0.0224%" height="15" fill="rgb(209,168,3)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="38.1826%" y="597" width="0.0224%" height="15" fill="rgb(208,129,28)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="607.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="38.1826%" y="581" width="0.0224%" height="15" fill="rgb(229,78,22)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="591.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="38.1826%" y="565" width="0.0224%" height="15" fill="rgb(228,187,13)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="575.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.02%)</title><rect x="38.1826%" y="549" width="0.0224%" height="15" fill="rgb(240,119,24)" fg:x="1706" fg:w="1"/><text x="38.2998%" y="559.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="49.9105%" y="597" width="0.0224%" height="15" fill="rgb(209,194,42)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="607.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="49.9105%" y="581" width="0.0224%" height="15" fill="rgb(247,200,46)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="591.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="49.9105%" y="565" width="0.0224%" height="15" fill="rgb(218,76,16)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="575.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="49.9105%" y="549" width="0.0224%" height="15" fill="rgb(225,21,48)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="559.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="49.9105%" y="533" width="0.0224%" height="15" fill="rgb(239,223,50)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="543.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="49.9105%" y="517" width="0.0224%" height="15" fill="rgb(244,45,21)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="527.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="49.9105%" y="501" width="0.0224%" height="15" fill="rgb(232,33,43)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="511.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="49.9105%" y="485" width="0.0224%" height="15" fill="rgb(209,8,3)" fg:x="2230" fg:w="1"/><text x="50.0277%" y="495.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="49.9105%" y="661" width="0.0448%" height="15" fill="rgb(214,25,53)" fg:x="2230" fg:w="2"/><text x="50.0277%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="49.9105%" y="645" width="0.0448%" height="15" fill="rgb(254,186,54)" fg:x="2230" fg:w="2"/><text x="50.0277%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="49.9105%" y="629" width="0.0448%" height="15" fill="rgb(208,174,49)" fg:x="2230" fg:w="2"/><text x="50.0277%" y="639.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.04%)</title><rect x="49.9105%" y="613" width="0.0448%" height="15" fill="rgb(233,191,51)" fg:x="2230" fg:w="2"/><text x="50.0277%" y="623.50"></text></g><g><title>tick_program_event (1 samples, 0.02%)</title><rect x="49.9329%" y="597" width="0.0224%" height="15" fill="rgb(222,134,10)" fg:x="2231" fg:w="1"/><text x="50.0500%" y="607.50"></text></g><g><title>clockevents_program_event (1 samples, 0.02%)</title><rect x="49.9329%" y="581" width="0.0224%" height="15" fill="rgb(230,226,20)" fg:x="2231" fg:w="1"/><text x="50.0500%" y="591.50"></text></g><g><title>read_tsc (1 samples, 0.02%)</title><rect x="49.9329%" y="565" width="0.0224%" height="15" fill="rgb(251,111,25)" fg:x="2231" fg:w="1"/><text x="50.0500%" y="575.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::decide_action (16 samples, 0.36%)</title><rect x="49.9552%" y="661" width="0.3581%" height="15" fill="rgb(224,40,46)" fg:x="2232" fg:w="16"/><text x="50.0724%" y="671.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::construct_path (1 samples, 0.02%)</title><rect x="50.2910%" y="645" width="0.0224%" height="15" fill="rgb(236,108,47)" fg:x="2247" fg:w="1"/><text x="50.4081%" y="655.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::estimation_check (1,089 samples, 24.37%)</title><rect x="38.2050%" y="677" width="24.3733%" height="15" fill="rgb(234,93,0)" fg:x="1707" fg:w="1089"/><text x="38.3222%" y="687.50">fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::estimation_check</text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::get_estimate (548 samples, 12.26%)</title><rect x="50.3133%" y="661" width="12.2650%" height="15" fill="rgb(224,213,32)" fg:x="2248" fg:w="548"/><text x="50.4305%" y="671.50">fringe_vs_astar::algorithms::fringesearch:..</text></g><g><title>&lt;fringe_vs_astar::algorithms::fringesearch::cache::Cache as core::ops::index::Index&lt;u32&gt;&gt;::index (469 samples, 10.50%)</title><rect x="52.0815%" y="645" width="10.4969%" height="15" fill="rgb(251,11,48)" fg:x="2327" fg:w="469"/><text x="52.1987%" y="655.50">&lt;fringe_vs_astar::algorithms::fring..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (226 samples, 5.06%)</title><rect x="57.5201%" y="629" width="5.0582%" height="15" fill="rgb(236,173,5)" fg:x="2570" fg:w="226"/><text x="57.6373%" y="639.50">&lt;alloc::vec::Vec..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (226 samples, 5.06%)</title><rect x="57.5201%" y="613" width="5.0582%" height="15" fill="rgb(230,95,12)" fg:x="2570" fg:w="226"/><text x="57.6373%" y="623.50">core::slice::ind..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (226 samples, 5.06%)</title><rect x="57.5201%" y="597" width="5.0582%" height="15" fill="rgb(232,209,1)" fg:x="2570" fg:w="226"/><text x="57.6373%" y="607.50">&lt;usize as core::..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.20%)</title><rect x="70.0985%" y="661" width="0.2014%" height="15" fill="rgb(232,6,1)" fg:x="3132" fg:w="9"/><text x="70.2157%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.16%)</title><rect x="70.1432%" y="645" width="0.1567%" height="15" fill="rgb(210,224,50)" fg:x="3134" fg:w="7"/><text x="70.2604%" y="655.50"></text></g><g><title>&lt;fringe_vs_astar::algorithms::fringesearch::bucket::Bucket as core::convert::From&lt;f32&gt;&gt;::from (5 samples, 0.11%)</title><rect x="70.2999%" y="661" width="0.1119%" height="15" fill="rgb(228,127,35)" fg:x="3141" fg:w="5"/><text x="70.4171%" y="671.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::check (135 samples, 3.02%)</title><rect x="70.4118%" y="661" width="3.0215%" height="15" fill="rgb(245,102,45)" fg:x="3146" fg:w="135"/><text x="70.5290%" y="671.50">fringe_v..</text></g><g><title>&lt;fringe_vs_astar::algorithms::fringesearch::cache::Cache as core::ops::index::Index&lt;u32&gt;&gt;::index (10 samples, 0.22%)</title><rect x="73.2095%" y="645" width="0.2238%" height="15" fill="rgb(214,1,49)" fg:x="3271" fg:w="10"/><text x="73.3267%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.22%)</title><rect x="73.2095%" y="629" width="0.2238%" height="15" fill="rgb(226,163,40)" fg:x="3271" fg:w="10"/><text x="73.3267%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.22%)</title><rect x="73.2095%" y="613" width="0.2238%" height="15" fill="rgb(239,212,28)" fg:x="3271" fg:w="10"/><text x="73.3267%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.22%)</title><rect x="73.2095%" y="597" width="0.2238%" height="15" fill="rgb(220,20,13)" fg:x="3271" fg:w="10"/><text x="73.3267%" y="607.50"></text></g><g><title>_ZN15fringe_vs_astar10algorithms12fringesearch6fringe6Fringe11new_process17hb92f5f788ea5ec49E.llvm.11196115670901850059 (1 samples, 0.02%)</title><rect x="73.5004%" y="645" width="0.0224%" height="15" fill="rgb(210,164,35)" fg:x="3284" fg:w="1"/><text x="73.6176%" y="655.50"></text></g><g><title>_ZN15fringe_vs_astar10algorithms12fringesearch6fringe6Fringe11new_process17hb92f5f788ea5ec49E.llvm.11196115670901850059 (4 samples, 0.09%)</title><rect x="73.5900%" y="629" width="0.0895%" height="15" fill="rgb(248,109,41)" fg:x="3288" fg:w="4"/><text x="73.7072%" y="639.50"></text></g><g><title>fringe_vs_astar::index_to_xy (2 samples, 0.04%)</title><rect x="73.7914%" y="613" width="0.0448%" height="15" fill="rgb(238,23,50)" fg:x="3297" fg:w="2"/><text x="73.9086%" y="623.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::update (20 samples, 0.45%)</title><rect x="73.4333%" y="661" width="0.4476%" height="15" fill="rgb(211,48,49)" fg:x="3281" fg:w="20"/><text x="73.5505%" y="671.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::cache::Cache::get_heuristic (16 samples, 0.36%)</title><rect x="73.5228%" y="645" width="0.3581%" height="15" fill="rgb(223,36,21)" fg:x="3285" fg:w="16"/><text x="73.6400%" y="655.50"></text></g><g><title>fringe_vs_astar::algorithms::Heuristic::calc (9 samples, 0.20%)</title><rect x="73.6795%" y="629" width="0.2014%" height="15" fill="rgb(207,123,46)" fg:x="3292" fg:w="9"/><text x="73.7967%" y="639.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (2 samples, 0.04%)</title><rect x="73.8362%" y="613" width="0.0448%" height="15" fill="rgb(240,218,32)" fg:x="3299" fg:w="2"/><text x="73.9534%" y="623.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::push_bucket (20 samples, 0.45%)</title><rect x="73.8809%" y="661" width="0.4476%" height="15" fill="rgb(252,5,43)" fg:x="3301" fg:w="20"/><text x="73.9981%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.04%)</title><rect x="74.2838%" y="645" width="0.0448%" height="15" fill="rgb(252,84,19)" fg:x="3319" fg:w="2"/><text x="74.4010%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.04%)</title><rect x="74.2838%" y="629" width="0.0448%" height="15" fill="rgb(243,152,39)" fg:x="3319" fg:w="2"/><text x="74.4010%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.04%)</title><rect x="74.2838%" y="613" width="0.0448%" height="15" fill="rgb(234,160,15)" fg:x="3319" fg:w="2"/><text x="74.4010%" y="623.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_process (623 samples, 13.94%)</title><rect x="62.5783%" y="677" width="13.9436%" height="15" fill="rgb(237,34,20)" fg:x="2796" fg:w="623"/><text x="62.6955%" y="687.50">fringe_vs_astar::algorithms::fringesearch::fring..</text></g><g><title>fringe_vs_astar::structures::graph::Graph::neighbors (98 samples, 2.19%)</title><rect x="74.3286%" y="661" width="2.1934%" height="15" fill="rgb(229,97,13)" fg:x="3321" fg:w="98"/><text x="74.4457%" y="671.50">fring..</text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_run (9 samples, 0.20%)</title><rect x="76.5219%" y="677" width="0.2014%" height="15" fill="rgb(234,71,50)" fg:x="3419" fg:w="9"/><text x="76.6391%" y="687.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::refresh_limit (1 samples, 0.02%)</title><rect x="76.7234%" y="677" width="0.0224%" height="15" fill="rgb(253,155,4)" fg:x="3428" fg:w="1"/><text x="76.8406%" y="687.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::keep_current (233 samples, 5.21%)</title><rect x="76.7457%" y="677" width="5.2149%" height="15" fill="rgb(222,185,37)" fg:x="3429" fg:w="233"/><text x="76.8629%" y="687.50">fringe_vs_astar:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (219 samples, 4.90%)</title><rect x="87.2650%" y="661" width="4.9015%" height="15" fill="rgb(251,177,13)" fg:x="3899" fg:w="219"/><text x="87.3822%" y="671.50">&lt;alloc::vec::Ve..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (219 samples, 4.90%)</title><rect x="87.2650%" y="645" width="4.9015%" height="15" fill="rgb(250,179,40)" fg:x="3899" fg:w="219"/><text x="87.3822%" y="655.50">core::slice::in..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (219 samples, 4.90%)</title><rect x="87.2650%" y="629" width="4.9015%" height="15" fill="rgb(242,44,2)" fg:x="3899" fg:w="219"/><text x="87.3822%" y="639.50">&lt;usize as core:..</text></g><g><title>&lt;fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets as core::ops::index::Index&lt;fringe_vs_astar::algorithms::fringesearch::bucket::Bucket&gt;&gt;::index (1 samples, 0.02%)</title><rect x="92.2337%" y="613" width="0.0224%" height="15" fill="rgb(216,177,13)" fg:x="4121" fg:w="1"/><text x="92.3508%" y="623.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_run (5 samples, 0.11%)</title><rect x="92.1665%" y="661" width="0.1119%" height="15" fill="rgb(216,106,43)" fg:x="4118" fg:w="5"/><text x="92.2837%" y="671.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::refresh (5 samples, 0.11%)</title><rect x="92.1665%" y="645" width="0.1119%" height="15" fill="rgb(216,183,2)" fg:x="4118" fg:w="5"/><text x="92.2837%" y="655.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::refresh_index (3 samples, 0.07%)</title><rect x="92.2113%" y="629" width="0.0671%" height="15" fill="rgb(249,75,3)" fg:x="4120" fg:w="3"/><text x="92.3285%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="92.2560%" y="613" width="0.0224%" height="15" fill="rgb(219,67,39)" fg:x="4122" fg:w="1"/><text x="92.3732%" y="623.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::pop_later (220 samples, 4.92%)</title><rect x="92.2784%" y="661" width="4.9239%" height="15" fill="rgb(253,228,2)" fg:x="4123" fg:w="220"/><text x="92.3956%" y="671.50">fringe_vs_astar..</text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::pop (682 samples, 15.26%)</title><rect x="81.9606%" y="677" width="15.2641%" height="15" fill="rgb(235,138,27)" fg:x="3662" fg:w="682"/><text x="82.0778%" y="687.50">fringe_vs_astar::algorithms::fringesearch::fringe::bu..</text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="97.2023%" y="661" width="0.0224%" height="15" fill="rgb(236,97,51)" fg:x="4343" fg:w="1"/><text x="97.3195%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (10 samples, 0.22%)</title><rect x="97.2919%" y="661" width="0.2238%" height="15" fill="rgb(240,80,30)" fg:x="4347" fg:w="10"/><text x="97.4090%" y="671.50"></text></g><g><title>core::ptr::swap (8 samples, 0.18%)</title><rect x="97.3366%" y="645" width="0.1791%" height="15" fill="rgb(230,178,19)" fg:x="4349" fg:w="8"/><text x="97.4538%" y="655.50"></text></g><g><title>core::intrinsics::copy (8 samples, 0.18%)</title><rect x="97.3366%" y="629" width="0.1791%" height="15" fill="rgb(210,190,27)" fg:x="4349" fg:w="8"/><text x="97.4538%" y="639.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::FringeSearch::solve (2,725 samples, 60.99%)</title><rect x="36.5712%" y="709" width="60.9893%" height="15" fill="rgb(222,107,31)" fg:x="1634" fg:w="2725"/><text x="36.6884%" y="719.50">fringe_vs_astar::algorithms::fringesearch::FringeSearch::solve</text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_run (2,701 samples, 60.45%)</title><rect x="37.1083%" y="693" width="60.4521%" height="15" fill="rgb(216,127,34)" fg:x="1658" fg:w="2701"/><text x="37.2255%" y="703.50">fringe_vs_astar::algorithms::fringesearch::fringe::Fringe::new_run</text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::remove_current (15 samples, 0.34%)</title><rect x="97.2247%" y="677" width="0.3357%" height="15" fill="rgb(234,116,52)" fg:x="4344" fg:w="15"/><text x="97.3419%" y="687.50"></text></g><g><title>fringe_vs_astar::algorithms::fringesearch::fringe::buckets::Buckets::bucket_start (2 samples, 0.04%)</title><rect x="97.5157%" y="661" width="0.0448%" height="15" fill="rgb(222,124,15)" fg:x="4357" fg:w="2"/><text x="97.6329%" y="671.50"></text></g><g><title>_start (4,184 samples, 93.64%)</title><rect x="3.9391%" y="933" width="93.6437%" height="15" fill="rgb(231,179,28)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="943.50">_start</text></g><g><title>__libc_start_main_impl (4,184 samples, 93.64%)</title><rect x="3.9391%" y="917" width="93.6437%" height="15" fill="rgb(226,93,45)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="927.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (4,184 samples, 93.64%)</title><rect x="3.9391%" y="901" width="93.6437%" height="15" fill="rgb(215,8,51)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="911.50">__libc_start_call_main</text></g><g><title>main (4,184 samples, 93.64%)</title><rect x="3.9391%" y="885" width="93.6437%" height="15" fill="rgb(223,106,5)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (4,184 samples, 93.64%)</title><rect x="3.9391%" y="869" width="93.6437%" height="15" fill="rgb(250,191,5)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (4,184 samples, 93.64%)</title><rect x="3.9391%" y="853" width="93.6437%" height="15" fill="rgb(242,132,44)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="863.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,184 samples, 93.64%)</title><rect x="3.9391%" y="837" width="93.6437%" height="15" fill="rgb(251,152,29)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,184 samples, 93.64%)</title><rect x="3.9391%" y="821" width="93.6437%" height="15" fill="rgb(218,179,5)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="831.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (4,184 samples, 93.64%)</title><rect x="3.9391%" y="805" width="93.6437%" height="15" fill="rgb(227,67,19)" fg:x="176" fg:w="4184"/><text x="4.0563%" y="815.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (3,152 samples, 70.55%)</title><rect x="27.0367%" y="789" width="70.5461%" height="15" fill="rgb(233,119,31)" fg:x="1208" fg:w="3152"/><text x="27.1539%" y="799.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::context::Context::solve_mode (2,936 samples, 65.71%)</title><rect x="31.8711%" y="773" width="65.7117%" height="15" fill="rgb(241,120,22)" fg:x="1424" fg:w="2936"/><text x="31.9883%" y="783.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::use_solver (2,936 samples, 65.71%)</title><rect x="31.8711%" y="757" width="65.7117%" height="15" fill="rgb(224,102,30)" fg:x="1424" fg:w="2936"/><text x="31.9883%" y="767.50">fringe_vs_astar::context::Context::use_solver</text></g><g><title>fringe_vs_astar::algorithms::solver::Solver::run (2,926 samples, 65.49%)</title><rect x="32.0949%" y="741" width="65.4879%" height="15" fill="rgb(210,164,37)" fg:x="1434" fg:w="2926"/><text x="32.2121%" y="751.50">fringe_vs_astar::algorithms::solver::Solver::run</text></g><g><title>fringe_vs_astar::algorithms::solver::Solver::timed_fringe (2,915 samples, 65.24%)</title><rect x="32.3411%" y="725" width="65.2417%" height="15" fill="rgb(226,191,16)" fg:x="1445" fg:w="2915"/><text x="32.4583%" y="735.50">fringe_vs_astar::algorithms::solver::Solver::timed_fringe</text></g><g><title>fringe_vs_astar::printable::Printable::add_path (1 samples, 0.02%)</title><rect x="97.5604%" y="709" width="0.0224%" height="15" fill="rgb(214,40,45)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="97.5604%" y="693" width="0.0224%" height="15" fill="rgb(244,29,26)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.5604%" y="677" width="0.0224%" height="15" fill="rgb(216,16,5)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.5604%" y="661" width="0.0224%" height="15" fill="rgb(249,76,35)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="97.5604%" y="645" width="0.0224%" height="15" fill="rgb(207,11,44)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="97.5604%" y="629" width="0.0224%" height="15" fill="rgb(228,190,49)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="97.5604%" y="613" width="0.0224%" height="15" fill="rgb(214,173,12)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="97.5604%" y="597" width="0.0224%" height="15" fill="rgb(218,26,35)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="97.5604%" y="581" width="0.0224%" height="15" fill="rgb(220,200,19)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="97.5604%" y="565" width="0.0224%" height="15" fill="rgb(239,95,49)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="97.5604%" y="549" width="0.0224%" height="15" fill="rgb(235,85,53)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5604%" y="533" width="0.0224%" height="15" fill="rgb(233,133,31)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5604%" y="517" width="0.0224%" height="15" fill="rgb(218,25,20)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="97.5604%" y="501" width="0.0224%" height="15" fill="rgb(252,210,38)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="511.50"></text></g><g><title>fringe_vs_astar::printable::Printable::add_path::_{{closure}} (1 samples, 0.02%)</title><rect x="97.5604%" y="485" width="0.0224%" height="15" fill="rgb(242,134,21)" fg:x="4359" fg:w="1"/><text x="97.6776%" y="495.50"></text></g><g><title>asm_exc_page_fault (72 samples, 1.61%)</title><rect x="97.5828%" y="933" width="1.6115%" height="15" fill="rgb(213,28,48)" fg:x="4360" fg:w="72"/><text x="97.7000%" y="943.50">asm..</text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.1943%" y="885" width="0.0224%" height="15" fill="rgb(250,196,2)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="895.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.1943%" y="869" width="0.0224%" height="15" fill="rgb(227,5,17)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="879.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.1943%" y="853" width="0.0224%" height="15" fill="rgb(221,226,24)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="863.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="99.1943%" y="837" width="0.0224%" height="15" fill="rgb(211,5,48)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="847.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.1943%" y="821" width="0.0224%" height="15" fill="rgb(219,150,6)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="831.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.1943%" y="805" width="0.0224%" height="15" fill="rgb(251,46,16)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="815.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.1943%" y="789" width="0.0224%" height="15" fill="rgb(220,204,40)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="799.50"></text></g><g><title>elf_map (1 samples, 0.02%)</title><rect x="99.1943%" y="773" width="0.0224%" height="15" fill="rgb(211,85,2)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="783.50"></text></g><g><title>vm_mmap (1 samples, 0.02%)</title><rect x="99.1943%" y="757" width="0.0224%" height="15" fill="rgb(229,17,7)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="767.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.1943%" y="741" width="0.0224%" height="15" fill="rgb(239,72,28)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="751.50"></text></g><g><title>security_mmap_file (1 samples, 0.02%)</title><rect x="99.1943%" y="725" width="0.0224%" height="15" fill="rgb(230,47,54)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="735.50"></text></g><g><title>apparmor_mmap_file (1 samples, 0.02%)</title><rect x="99.1943%" y="709" width="0.0224%" height="15" fill="rgb(214,50,8)" fg:x="4432" fg:w="1"/><text x="99.3115%" y="719.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="99.2167%" y="773" width="0.0224%" height="15" fill="rgb(216,198,43)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="783.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="99.2167%" y="757" width="0.0224%" height="15" fill="rgb(234,20,35)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="767.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="99.2167%" y="741" width="0.0224%" height="15" fill="rgb(254,45,19)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="751.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="99.2167%" y="725" width="0.0224%" height="15" fill="rgb(219,14,44)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="735.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="99.2167%" y="709" width="0.0224%" height="15" fill="rgb(217,220,26)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="719.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="99.2167%" y="693" width="0.0224%" height="15" fill="rgb(213,158,28)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="703.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="99.2167%" y="677" width="0.0224%" height="15" fill="rgb(252,51,52)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="687.50"></text></g><g><title>__free_one_page (1 samples, 0.02%)</title><rect x="99.2167%" y="661" width="0.0224%" height="15" fill="rgb(246,89,16)" fg:x="4433" fg:w="1"/><text x="99.3338%" y="671.50"></text></g><g><title>_compound_head (4 samples, 0.09%)</title><rect x="99.2390%" y="709" width="0.0895%" height="15" fill="rgb(216,158,49)" fg:x="4434" fg:w="4"/><text x="99.3562%" y="719.50"></text></g><g><title>page_remove_rmap (3 samples, 0.07%)</title><rect x="99.3509%" y="693" width="0.0671%" height="15" fill="rgb(236,107,19)" fg:x="4439" fg:w="3"/><text x="99.4681%" y="703.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="99.3957%" y="677" width="0.0224%" height="15" fill="rgb(228,185,30)" fg:x="4441" fg:w="1"/><text x="99.5129%" y="687.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.3957%" y="661" width="0.0224%" height="15" fill="rgb(246,134,8)" fg:x="4441" fg:w="1"/><text x="99.5129%" y="671.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.02%)</title><rect x="99.4181%" y="645" width="0.0224%" height="15" fill="rgb(214,143,50)" fg:x="4442" fg:w="1"/><text x="99.5353%" y="655.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="99.5300%" y="629" width="0.0224%" height="15" fill="rgb(228,75,8)" fg:x="4447" fg:w="1"/><text x="99.6472%" y="639.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.07%)</title><rect x="99.5748%" y="613" width="0.0671%" height="15" fill="rgb(207,175,4)" fg:x="4449" fg:w="3"/><text x="99.6919%" y="623.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.07%)</title><rect x="99.5748%" y="597" width="0.0671%" height="15" fill="rgb(205,108,24)" fg:x="4449" fg:w="3"/><text x="99.6919%" y="607.50"></text></g><g><title>__free_one_page (3 samples, 0.07%)</title><rect x="99.5748%" y="581" width="0.0671%" height="15" fill="rgb(244,120,49)" fg:x="4449" fg:w="3"/><text x="99.6919%" y="591.50"></text></g><g><title>free_unref_page_list (5 samples, 0.11%)</title><rect x="99.5524%" y="629" width="0.1119%" height="15" fill="rgb(223,47,38)" fg:x="4448" fg:w="5"/><text x="99.6696%" y="639.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="99.6419%" y="613" width="0.0224%" height="15" fill="rgb(229,179,11)" fg:x="4452" fg:w="1"/><text x="99.7591%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (13 samples, 0.29%)</title><rect x="99.4181%" y="661" width="0.2910%" height="15" fill="rgb(231,122,1)" fg:x="4442" fg:w="13"/><text x="99.5353%" y="671.50"></text></g><g><title>release_pages (12 samples, 0.27%)</title><rect x="99.4405%" y="645" width="0.2686%" height="15" fill="rgb(245,119,9)" fg:x="4443" fg:w="12"/><text x="99.5577%" y="655.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (2 samples, 0.04%)</title><rect x="99.6643%" y="629" width="0.0448%" height="15" fill="rgb(241,163,25)" fg:x="4453" fg:w="2"/><text x="99.7815%" y="639.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.6867%" y="613" width="0.0224%" height="15" fill="rgb(217,214,3)" fg:x="4454" fg:w="1"/><text x="99.8038%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.54%)</title><rect x="99.1943%" y="933" width="0.5372%" height="15" fill="rgb(240,86,28)" fg:x="4432" fg:w="24"/><text x="99.3115%" y="943.50"></text></g><g><title>do_syscall_64 (24 samples, 0.54%)</title><rect x="99.1943%" y="917" width="0.5372%" height="15" fill="rgb(215,47,9)" fg:x="4432" fg:w="24"/><text x="99.3115%" y="927.50"></text></g><g><title>x64_sys_call (24 samples, 0.54%)</title><rect x="99.1943%" y="901" width="0.5372%" height="15" fill="rgb(252,25,45)" fg:x="4432" fg:w="24"/><text x="99.3115%" y="911.50"></text></g><g><title>__x64_sys_exit_group (23 samples, 0.51%)</title><rect x="99.2167%" y="885" width="0.5148%" height="15" fill="rgb(251,164,9)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="895.50"></text></g><g><title>do_group_exit (23 samples, 0.51%)</title><rect x="99.2167%" y="869" width="0.5148%" height="15" fill="rgb(233,194,0)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="879.50"></text></g><g><title>do_exit (23 samples, 0.51%)</title><rect x="99.2167%" y="853" width="0.5148%" height="15" fill="rgb(249,111,24)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="863.50"></text></g><g><title>exit_mm (23 samples, 0.51%)</title><rect x="99.2167%" y="837" width="0.5148%" height="15" fill="rgb(250,223,3)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="847.50"></text></g><g><title>mmput (23 samples, 0.51%)</title><rect x="99.2167%" y="821" width="0.5148%" height="15" fill="rgb(236,178,37)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="831.50"></text></g><g><title>__mmput (23 samples, 0.51%)</title><rect x="99.2167%" y="805" width="0.5148%" height="15" fill="rgb(241,158,50)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="815.50"></text></g><g><title>exit_mmap (23 samples, 0.51%)</title><rect x="99.2167%" y="789" width="0.5148%" height="15" fill="rgb(213,121,41)" fg:x="4433" fg:w="23"/><text x="99.3338%" y="799.50"></text></g><g><title>unmap_vmas (22 samples, 0.49%)</title><rect x="99.2390%" y="773" width="0.4924%" height="15" fill="rgb(240,92,3)" fg:x="4434" fg:w="22"/><text x="99.3562%" y="783.50"></text></g><g><title>unmap_single_vma (22 samples, 0.49%)</title><rect x="99.2390%" y="757" width="0.4924%" height="15" fill="rgb(205,123,3)" fg:x="4434" fg:w="22"/><text x="99.3562%" y="767.50"></text></g><g><title>unmap_page_range (22 samples, 0.49%)</title><rect x="99.2390%" y="741" width="0.4924%" height="15" fill="rgb(205,97,47)" fg:x="4434" fg:w="22"/><text x="99.3562%" y="751.50"></text></g><g><title>zap_pmd_range.isra.0 (22 samples, 0.49%)</title><rect x="99.2390%" y="725" width="0.4924%" height="15" fill="rgb(247,152,14)" fg:x="4434" fg:w="22"/><text x="99.3562%" y="735.50"></text></g><g><title>zap_pte_range (18 samples, 0.40%)</title><rect x="99.3286%" y="709" width="0.4029%" height="15" fill="rgb(248,195,53)" fg:x="4438" fg:w="18"/><text x="99.4457%" y="719.50"></text></g><g><title>tlb_flush_mmu (14 samples, 0.31%)</title><rect x="99.4181%" y="693" width="0.3133%" height="15" fill="rgb(226,201,16)" fg:x="4442" fg:w="14"/><text x="99.5353%" y="703.50"></text></g><g><title>tlb_batch_pages_flush (14 samples, 0.31%)</title><rect x="99.4181%" y="677" width="0.3133%" height="15" fill="rgb(205,98,0)" fg:x="4442" fg:w="14"/><text x="99.5353%" y="687.50"></text></g><g><title>free_swap_cache (1 samples, 0.02%)</title><rect x="99.7090%" y="661" width="0.0224%" height="15" fill="rgb(214,191,48)" fg:x="4455" fg:w="1"/><text x="99.8262%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.7314%" y="917" width="0.0224%" height="15" fill="rgb(237,112,39)" fg:x="4456" fg:w="1"/><text x="99.8486%" y="927.50"></text></g><g><title>fringe-vs-astar (4,463 samples, 99.89%)</title><rect x="0.0000%" y="949" width="99.8881%" height="15" fill="rgb(247,203,27)" fg:x="0" fg:w="4463"/><text x="0.1172%" y="959.50">fringe-vs-astar</text></g><g><title>main_arena (7 samples, 0.16%)</title><rect x="99.7314%" y="933" width="0.1567%" height="15" fill="rgb(235,124,28)" fg:x="4456" fg:w="7"/><text x="99.8486%" y="943.50"></text></g><g><title>_int_realloc (6 samples, 0.13%)</title><rect x="99.7538%" y="917" width="0.1343%" height="15" fill="rgb(208,207,46)" fg:x="4457" fg:w="6"/><text x="99.8710%" y="927.50"></text></g><g><title>all (4,468 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(234,176,4)" fg:x="0" fg:w="4468"/><text x="0.1172%" y="975.50"></text></g><g><title>perf-exec (5 samples, 0.11%)</title><rect x="99.8881%" y="949" width="0.1119%" height="15" fill="rgb(230,133,28)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.11%)</title><rect x="99.8881%" y="933" width="0.1119%" height="15" fill="rgb(211,137,40)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="943.50"></text></g><g><title>do_syscall_64 (5 samples, 0.11%)</title><rect x="99.8881%" y="917" width="0.1119%" height="15" fill="rgb(254,35,13)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="927.50"></text></g><g><title>x64_sys_call (5 samples, 0.11%)</title><rect x="99.8881%" y="901" width="0.1119%" height="15" fill="rgb(225,49,51)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="911.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.11%)</title><rect x="99.8881%" y="885" width="0.1119%" height="15" fill="rgb(251,10,15)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="895.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.11%)</title><rect x="99.8881%" y="869" width="0.1119%" height="15" fill="rgb(228,207,15)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="879.50"></text></g><g><title>bprm_execve (5 samples, 0.11%)</title><rect x="99.8881%" y="853" width="0.1119%" height="15" fill="rgb(241,99,19)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="863.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.11%)</title><rect x="99.8881%" y="837" width="0.1119%" height="15" fill="rgb(207,104,49)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="847.50"></text></g><g><title>exec_binprm (5 samples, 0.11%)</title><rect x="99.8881%" y="821" width="0.1119%" height="15" fill="rgb(234,99,18)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="831.50"></text></g><g><title>search_binary_handler (5 samples, 0.11%)</title><rect x="99.8881%" y="805" width="0.1119%" height="15" fill="rgb(213,191,49)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="815.50"></text></g><g><title>load_elf_binary (5 samples, 0.11%)</title><rect x="99.8881%" y="789" width="0.1119%" height="15" fill="rgb(210,226,19)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="799.50"></text></g><g><title>begin_new_exec (5 samples, 0.11%)</title><rect x="99.8881%" y="773" width="0.1119%" height="15" fill="rgb(229,97,18)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="783.50"></text></g><g><title>perf_event_exec (5 samples, 0.11%)</title><rect x="99.8881%" y="757" width="0.1119%" height="15" fill="rgb(211,167,15)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="767.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.11%)</title><rect x="99.8881%" y="741" width="0.1119%" height="15" fill="rgb(210,169,34)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="751.50"></text></g><g><title>ctx_resched (5 samples, 0.11%)</title><rect x="99.8881%" y="725" width="0.1119%" height="15" fill="rgb(241,121,31)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="735.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.11%)</title><rect x="99.8881%" y="709" width="0.1119%" height="15" fill="rgb(232,40,11)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="719.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.11%)</title><rect x="99.8881%" y="693" width="0.1119%" height="15" fill="rgb(205,86,26)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="703.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.11%)</title><rect x="99.8881%" y="677" width="0.1119%" height="15" fill="rgb(231,126,28)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="687.50"></text></g><g><title>native_write_msr (5 samples, 0.11%)</title><rect x="99.8881%" y="661" width="0.1119%" height="15" fill="rgb(219,221,18)" fg:x="4463" fg:w="5"/><text x="100.0053%" y="671.50"></text></g></svg></svg>