<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="822" onload="init(evt)" viewBox="0 0 2560 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="805.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="805.00"> </text><svg id="frames" x="10" width="2540" total_samples="20986"><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.03%)</title><rect x="0.0143%" y="725" width="0.0286%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="6"/><text x="0.1315%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="0.0191%" y="709" width="0.0238%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="5"/><text x="0.1362%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (5 samples, 0.02%)</title><rect x="0.0429%" y="725" width="0.0238%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="5"/><text x="0.1601%" y="735.50"></text></g><g><title>[[heap]] (16 samples, 0.08%)</title><rect x="0.0000%" y="741" width="0.0762%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="16"/><text x="0.1172%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="0.0810%" y="725" width="0.0143%" height="15" fill="rgb(208,68,35)" fg:x="17" fg:w="3"/><text x="0.1982%" y="735.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.04%)</title><rect x="0.1048%" y="725" width="0.0381%" height="15" fill="rgb(232,128,0)" fg:x="22" fg:w="8"/><text x="0.2220%" y="735.50"></text></g><g><title>__rdl_realloc (8 samples, 0.04%)</title><rect x="0.1430%" y="725" width="0.0381%" height="15" fill="rgb(207,160,47)" fg:x="30" fg:w="8"/><text x="0.2601%" y="735.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="0.1811%" y="725" width="0.0191%" height="15" fill="rgb(228,23,34)" fg:x="38" fg:w="4"/><text x="0.2983%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="0.2049%" y="725" width="0.0191%" height="15" fill="rgb(218,30,26)" fg:x="43" fg:w="4"/><text x="0.3221%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.05%)</title><rect x="0.2240%" y="725" width="0.0477%" height="15" fill="rgb(220,122,19)" fg:x="47" fg:w="10"/><text x="0.3411%" y="735.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (4 samples, 0.02%)</title><rect x="0.2716%" y="725" width="0.0191%" height="15" fill="rgb(250,228,42)" fg:x="57" fg:w="4"/><text x="0.3888%" y="735.50"></text></g><g><title>[[stack]] (52 samples, 0.25%)</title><rect x="0.0762%" y="741" width="0.2478%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="52"/><text x="0.1934%" y="751.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (7 samples, 0.03%)</title><rect x="0.2907%" y="725" width="0.0334%" height="15" fill="rgb(216,20,37)" fg:x="61" fg:w="7"/><text x="0.4079%" y="735.50"></text></g><g><title>[fringe-vs-astar] (6 samples, 0.03%)</title><rect x="0.3240%" y="741" width="0.0286%" height="15" fill="rgb(206,188,39)" fg:x="68" fg:w="6"/><text x="0.4412%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="0.3240%" y="725" width="0.0286%" height="15" fill="rgb(217,207,13)" fg:x="68" fg:w="6"/><text x="0.4412%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.03%)</title><rect x="0.3240%" y="709" width="0.0286%" height="15" fill="rgb(231,73,38)" fg:x="68" fg:w="6"/><text x="0.4412%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.03%)</title><rect x="0.3240%" y="693" width="0.0286%" height="15" fill="rgb(225,20,46)" fg:x="68" fg:w="6"/><text x="0.4412%" y="703.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.03%)</title><rect x="0.3240%" y="677" width="0.0286%" height="15" fill="rgb(210,31,41)" fg:x="68" fg:w="6"/><text x="0.4412%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.11%)</title><rect x="0.3574%" y="725" width="0.1096%" height="15" fill="rgb(221,200,47)" fg:x="75" fg:w="23"/><text x="0.4746%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.07%)</title><rect x="0.4003%" y="709" width="0.0667%" height="15" fill="rgb(226,26,5)" fg:x="84" fg:w="14"/><text x="0.5175%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.02%)</title><rect x="0.4479%" y="693" width="0.0191%" height="15" fill="rgb(249,33,26)" fg:x="94" fg:w="4"/><text x="0.5651%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="0.4479%" y="677" width="0.0191%" height="15" fill="rgb(235,183,28)" fg:x="94" fg:w="4"/><text x="0.5651%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="0.4479%" y="661" width="0.0191%" height="15" fill="rgb(221,5,38)" fg:x="94" fg:w="4"/><text x="0.5651%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.02%)</title><rect x="0.4479%" y="645" width="0.0191%" height="15" fill="rgb(247,18,42)" fg:x="94" fg:w="4"/><text x="0.5651%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="0.4479%" y="629" width="0.0191%" height="15" fill="rgb(241,131,45)" fg:x="94" fg:w="4"/><text x="0.5651%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="0.4479%" y="613" width="0.0191%" height="15" fill="rgb(249,31,29)" fg:x="94" fg:w="4"/><text x="0.5651%" y="623.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="0.4479%" y="597" width="0.0191%" height="15" fill="rgb(225,111,53)" fg:x="94" fg:w="4"/><text x="0.5651%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="0.4670%" y="725" width="0.0334%" height="15" fill="rgb(238,160,17)" fg:x="98" fg:w="7"/><text x="0.5842%" y="735.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::GridMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (25 samples, 0.12%)</title><rect x="0.5003%" y="725" width="0.1191%" height="15" fill="rgb(214,148,48)" fg:x="105" fg:w="25"/><text x="0.6175%" y="735.50"></text></g><g><title>[fringe-vs-astar] (12 samples, 0.06%)</title><rect x="0.6195%" y="725" width="0.0572%" height="15" fill="rgb(232,36,49)" fg:x="130" fg:w="12"/><text x="0.7366%" y="735.50"></text></g><g><title>_int_free (12 samples, 0.06%)</title><rect x="0.6195%" y="709" width="0.0572%" height="15" fill="rgb(209,103,24)" fg:x="130" fg:w="12"/><text x="0.7366%" y="719.50"></text></g><g><title>__GI___libc_free (12 samples, 0.06%)</title><rect x="0.6766%" y="725" width="0.0572%" height="15" fill="rgb(229,88,8)" fg:x="142" fg:w="12"/><text x="0.7938%" y="735.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.10%)</title><rect x="0.7338%" y="725" width="0.0953%" height="15" fill="rgb(213,181,19)" fg:x="154" fg:w="20"/><text x="0.8510%" y="735.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.03%)</title><rect x="0.8291%" y="725" width="0.0286%" height="15" fill="rgb(254,191,54)" fg:x="174" fg:w="6"/><text x="0.9463%" y="735.50"></text></g><g><title>__rdl_realloc (3 samples, 0.01%)</title><rect x="0.8625%" y="725" width="0.0143%" height="15" fill="rgb(241,83,37)" fg:x="181" fg:w="3"/><text x="0.9797%" y="735.50"></text></g><g><title>_int_free (27 samples, 0.13%)</title><rect x="0.8768%" y="725" width="0.1287%" height="15" fill="rgb(233,36,39)" fg:x="184" fg:w="27"/><text x="0.9940%" y="735.50"></text></g><g><title>_int_realloc (7 samples, 0.03%)</title><rect x="1.0054%" y="725" width="0.0334%" height="15" fill="rgb(226,3,54)" fg:x="211" fg:w="7"/><text x="1.1226%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="1.0388%" y="725" width="0.0191%" height="15" fill="rgb(245,192,40)" fg:x="218" fg:w="4"/><text x="1.1560%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="1.0626%" y="725" width="0.0191%" height="15" fill="rgb(238,167,29)" fg:x="223" fg:w="4"/><text x="1.1798%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="1.0674%" y="709" width="0.0143%" height="15" fill="rgb(232,182,51)" fg:x="224" fg:w="3"/><text x="1.1846%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="1.0674%" y="693" width="0.0143%" height="15" fill="rgb(231,60,39)" fg:x="224" fg:w="3"/><text x="1.1846%" y="703.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="1.0674%" y="677" width="0.0143%" height="15" fill="rgb(208,69,12)" fg:x="224" fg:w="3"/><text x="1.1846%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.03%)</title><rect x="1.2103%" y="709" width="0.0286%" height="15" fill="rgb(235,93,37)" fg:x="254" fg:w="6"/><text x="1.3275%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="1.2103%" y="693" width="0.0286%" height="15" fill="rgb(213,116,39)" fg:x="254" fg:w="6"/><text x="1.3275%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="1.2103%" y="677" width="0.0286%" height="15" fill="rgb(222,207,29)" fg:x="254" fg:w="6"/><text x="1.3275%" y="687.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="1.2103%" y="661" width="0.0286%" height="15" fill="rgb(206,96,30)" fg:x="254" fg:w="6"/><text x="1.3275%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.05%)</title><rect x="1.2485%" y="709" width="0.0477%" height="15" fill="rgb(218,138,4)" fg:x="262" fg:w="10"/><text x="1.3656%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (10 samples, 0.05%)</title><rect x="1.2485%" y="693" width="0.0477%" height="15" fill="rgb(250,191,14)" fg:x="262" fg:w="10"/><text x="1.3656%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (52 samples, 0.25%)</title><rect x="1.0912%" y="725" width="0.2478%" height="15" fill="rgb(239,60,40)" fg:x="229" fg:w="52"/><text x="1.2084%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (9 samples, 0.04%)</title><rect x="1.2961%" y="709" width="0.0429%" height="15" fill="rgb(206,27,48)" fg:x="272" fg:w="9"/><text x="1.4133%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (9 samples, 0.04%)</title><rect x="1.2961%" y="693" width="0.0429%" height="15" fill="rgb(225,35,8)" fg:x="272" fg:w="9"/><text x="1.4133%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.04%)</title><rect x="1.2961%" y="677" width="0.0429%" height="15" fill="rgb(250,213,24)" fg:x="272" fg:w="9"/><text x="1.4133%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.04%)</title><rect x="1.2961%" y="661" width="0.0429%" height="15" fill="rgb(247,123,22)" fg:x="272" fg:w="9"/><text x="1.4133%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.04%)</title><rect x="1.2961%" y="645" width="0.0429%" height="15" fill="rgb(231,138,38)" fg:x="272" fg:w="9"/><text x="1.4133%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (12 samples, 0.06%)</title><rect x="1.3390%" y="725" width="0.0572%" height="15" fill="rgb(231,145,46)" fg:x="281" fg:w="12"/><text x="1.4562%" y="735.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyGridGraph::new (12 samples, 0.06%)</title><rect x="1.3390%" y="709" width="0.0572%" height="15" fill="rgb(251,118,11)" fg:x="281" fg:w="12"/><text x="1.4562%" y="719.50"></text></g><g><title>[unknown] (224 samples, 1.07%)</title><rect x="0.3526%" y="741" width="1.0674%" height="15" fill="rgb(217,147,25)" fg:x="74" fg:w="224"/><text x="0.4698%" y="751.50">[..</text></g><g><title>unlink_chunk (4 samples, 0.02%)</title><rect x="1.4009%" y="725" width="0.0191%" height="15" fill="rgb(247,81,37)" fg:x="294" fg:w="4"/><text x="1.5181%" y="735.50"></text></g><g><title>_int_malloc (3 samples, 0.01%)</title><rect x="1.4200%" y="725" width="0.0143%" height="15" fill="rgb(209,12,38)" fg:x="298" fg:w="3"/><text x="1.5372%" y="735.50"></text></g><g><title>_IO_wide_data_0 (7 samples, 0.03%)</title><rect x="1.4200%" y="741" width="0.0334%" height="15" fill="rgb(227,1,9)" fg:x="298" fg:w="7"/><text x="1.5372%" y="751.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="1.4343%" y="725" width="0.0191%" height="15" fill="rgb(248,47,43)" fg:x="301" fg:w="4"/><text x="1.5515%" y="735.50"></text></g><g><title>free_perturb (3 samples, 0.01%)</title><rect x="2.5112%" y="325" width="0.0143%" height="15" fill="rgb(221,10,30)" fg:x="527" fg:w="3"/><text x="2.6284%" y="335.50"></text></g><g><title>_int_free (200 samples, 0.95%)</title><rect x="1.6630%" y="341" width="0.9530%" height="15" fill="rgb(210,229,1)" fg:x="349" fg:w="200"/><text x="1.7802%" y="351.50">_..</text></g><g><title>unlink_chunk (18 samples, 0.09%)</title><rect x="2.5303%" y="325" width="0.0858%" height="15" fill="rgb(222,148,37)" fg:x="531" fg:w="18"/><text x="2.6474%" y="335.50"></text></g><g><title>__GI___libc_free (213 samples, 1.01%)</title><rect x="1.6058%" y="357" width="1.0150%" height="15" fill="rgb(234,67,33)" fg:x="337" fg:w="213"/><text x="1.7230%" y="367.50">_..</text></g><g><title>__rdl_dealloc (5 samples, 0.02%)</title><rect x="2.6208%" y="357" width="0.0238%" height="15" fill="rgb(247,98,35)" fg:x="550" fg:w="5"/><text x="2.7380%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (222 samples, 1.06%)</title><rect x="1.5963%" y="373" width="1.0578%" height="15" fill="rgb(247,138,52)" fg:x="335" fg:w="222"/><text x="1.7135%" y="383.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (223 samples, 1.06%)</title><rect x="1.5963%" y="389" width="1.0626%" height="15" fill="rgb(213,79,30)" fg:x="335" fg:w="223"/><text x="1.7135%" y="399.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (265 samples, 1.26%)</title><rect x="1.4581%" y="469" width="1.2627%" height="15" fill="rgb(246,177,23)" fg:x="306" fg:w="265"/><text x="1.5753%" y="479.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;((usize,usize),f64)&gt;]&gt; (265 samples, 1.26%)</title><rect x="1.4581%" y="453" width="1.2627%" height="15" fill="rgb(230,62,27)" fg:x="306" fg:w="265"/><text x="1.5753%" y="463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (265 samples, 1.26%)</title><rect x="1.4581%" y="437" width="1.2627%" height="15" fill="rgb(216,154,8)" fg:x="306" fg:w="265"/><text x="1.5753%" y="447.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (265 samples, 1.26%)</title><rect x="1.4581%" y="421" width="1.2627%" height="15" fill="rgb(244,35,45)" fg:x="306" fg:w="265"/><text x="1.5753%" y="431.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (265 samples, 1.26%)</title><rect x="1.4581%" y="405" width="1.2627%" height="15" fill="rgb(251,115,12)" fg:x="306" fg:w="265"/><text x="1.5753%" y="415.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.06%)</title><rect x="2.6589%" y="389" width="0.0619%" height="15" fill="rgb(240,54,50)" fg:x="558" fg:w="13"/><text x="2.7761%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (268 samples, 1.28%)</title><rect x="1.4581%" y="581" width="1.2770%" height="15" fill="rgb(233,84,52)" fg:x="306" fg:w="268"/><text x="1.5753%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::graph::Graph&gt;&gt; (268 samples, 1.28%)</title><rect x="1.4581%" y="565" width="1.2770%" height="15" fill="rgb(207,117,47)" fg:x="306" fg:w="268"/><text x="1.5753%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph&gt; (268 samples, 1.28%)</title><rect x="1.4581%" y="549" width="1.2770%" height="15" fill="rgb(249,43,39)" fg:x="306" fg:w="268"/><text x="1.5753%" y="559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt;&gt; (268 samples, 1.28%)</title><rect x="1.4581%" y="533" width="1.2770%" height="15" fill="rgb(209,38,44)" fg:x="306" fg:w="268"/><text x="1.5753%" y="543.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (268 samples, 1.28%)</title><rect x="1.4581%" y="517" width="1.2770%" height="15" fill="rgb(236,212,23)" fg:x="306" fg:w="268"/><text x="1.5753%" y="527.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;]&gt; (268 samples, 1.28%)</title><rect x="1.4581%" y="501" width="1.2770%" height="15" fill="rgb(242,79,21)" fg:x="306" fg:w="268"/><text x="1.5753%" y="511.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt; (268 samples, 1.28%)</title><rect x="1.4581%" y="485" width="1.2770%" height="15" fill="rgb(211,96,35)" fg:x="306" fg:w="268"/><text x="1.5753%" y="495.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="2.7209%" y="469" width="0.0143%" height="15" fill="rgb(253,215,40)" fg:x="571" fg:w="3"/><text x="2.8380%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="2.7209%" y="453" width="0.0143%" height="15" fill="rgb(211,81,21)" fg:x="571" fg:w="3"/><text x="2.8380%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="2.7209%" y="437" width="0.0143%" height="15" fill="rgb(208,190,38)" fg:x="571" fg:w="3"/><text x="2.8380%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="2.7209%" y="421" width="0.0143%" height="15" fill="rgb(235,213,38)" fg:x="571" fg:w="3"/><text x="2.8380%" y="431.50"></text></g><g><title>__GI___libc_free (3 samples, 0.01%)</title><rect x="2.7209%" y="405" width="0.0143%" height="15" fill="rgb(237,122,38)" fg:x="571" fg:w="3"/><text x="2.8380%" y="415.50"></text></g><g><title>_int_free (3 samples, 0.01%)</title><rect x="2.7209%" y="389" width="0.0143%" height="15" fill="rgb(244,218,35)" fg:x="571" fg:w="3"/><text x="2.8380%" y="399.50"></text></g><g><title>systrim (3 samples, 0.01%)</title><rect x="2.7209%" y="373" width="0.0143%" height="15" fill="rgb(240,68,47)" fg:x="571" fg:w="3"/><text x="2.8380%" y="383.50"></text></g><g><title>__glibc_morecore (3 samples, 0.01%)</title><rect x="2.7209%" y="357" width="0.0143%" height="15" fill="rgb(210,16,53)" fg:x="571" fg:w="3"/><text x="2.8380%" y="367.50"></text></g><g><title>__GI___sbrk (3 samples, 0.01%)</title><rect x="2.7209%" y="341" width="0.0143%" height="15" fill="rgb(235,124,12)" fg:x="571" fg:w="3"/><text x="2.8380%" y="351.50"></text></g><g><title>__GI___sbrk (3 samples, 0.01%)</title><rect x="2.7209%" y="325" width="0.0143%" height="15" fill="rgb(224,169,11)" fg:x="571" fg:w="3"/><text x="2.8380%" y="335.50"></text></g><g><title>__brk (3 samples, 0.01%)</title><rect x="2.7209%" y="309" width="0.0143%" height="15" fill="rgb(250,166,2)" fg:x="571" fg:w="3"/><text x="2.8380%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="2.7209%" y="293" width="0.0143%" height="15" fill="rgb(242,216,29)" fg:x="571" fg:w="3"/><text x="2.8380%" y="303.50"></text></g><g><title>do_syscall_64 (3 samples, 0.01%)</title><rect x="2.7209%" y="277" width="0.0143%" height="15" fill="rgb(230,116,27)" fg:x="571" fg:w="3"/><text x="2.8380%" y="287.50"></text></g><g><title>x64_sys_call (3 samples, 0.01%)</title><rect x="2.7209%" y="261" width="0.0143%" height="15" fill="rgb(228,99,48)" fg:x="571" fg:w="3"/><text x="2.8380%" y="271.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.01%)</title><rect x="2.7209%" y="245" width="0.0143%" height="15" fill="rgb(253,11,6)" fg:x="571" fg:w="3"/><text x="2.8380%" y="255.50"></text></g><g><title>__do_sys_brk (3 samples, 0.01%)</title><rect x="2.7209%" y="229" width="0.0143%" height="15" fill="rgb(247,143,39)" fg:x="571" fg:w="3"/><text x="2.8380%" y="239.50"></text></g><g><title>do_vmi_align_munmap (3 samples, 0.01%)</title><rect x="2.7209%" y="213" width="0.0143%" height="15" fill="rgb(236,97,10)" fg:x="571" fg:w="3"/><text x="2.8380%" y="223.50"></text></g><g><title>unmap_region (3 samples, 0.01%)</title><rect x="2.7209%" y="197" width="0.0143%" height="15" fill="rgb(233,208,19)" fg:x="571" fg:w="3"/><text x="2.8380%" y="207.50"></text></g><g><title>__rcu_read_unlock (24 samples, 0.11%)</title><rect x="3.0878%" y="261" width="0.1144%" height="15" fill="rgb(216,164,2)" fg:x="648" fg:w="24"/><text x="3.2050%" y="271.50"></text></g><g><title>__count_memcg_events (4 samples, 0.02%)</title><rect x="3.2260%" y="245" width="0.0191%" height="15" fill="rgb(220,129,5)" fg:x="677" fg:w="4"/><text x="3.3431%" y="255.50"></text></g><g><title>charge_memcg (18 samples, 0.09%)</title><rect x="3.2021%" y="261" width="0.0858%" height="15" fill="rgb(242,17,10)" fg:x="672" fg:w="18"/><text x="3.3193%" y="271.50"></text></g><g><title>try_charge_memcg (7 samples, 0.03%)</title><rect x="3.2546%" y="245" width="0.0334%" height="15" fill="rgb(242,107,0)" fg:x="683" fg:w="7"/><text x="3.3717%" y="255.50"></text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.02%)</title><rect x="3.2879%" y="261" width="0.0191%" height="15" fill="rgb(251,28,31)" fg:x="690" fg:w="4"/><text x="3.4051%" y="271.50"></text></g><g><title>__mem_cgroup_charge (48 samples, 0.23%)</title><rect x="3.0830%" y="277" width="0.2287%" height="15" fill="rgb(233,223,10)" fg:x="647" fg:w="48"/><text x="3.2002%" y="287.50"></text></g><g><title>__pte_offset_map_lock (4 samples, 0.02%)</title><rect x="3.3117%" y="277" width="0.0191%" height="15" fill="rgb(215,21,27)" fg:x="695" fg:w="4"/><text x="3.4289%" y="287.50"></text></g><g><title>charge_memcg (3 samples, 0.01%)</title><rect x="3.3403%" y="277" width="0.0143%" height="15" fill="rgb(232,23,21)" fg:x="701" fg:w="3"/><text x="3.4575%" y="287.50"></text></g><g><title>folio_add_lru_vma (12 samples, 0.06%)</title><rect x="3.3546%" y="277" width="0.0572%" height="15" fill="rgb(244,5,23)" fg:x="704" fg:w="12"/><text x="3.4718%" y="287.50"></text></g><g><title>folio_add_lru (12 samples, 0.06%)</title><rect x="3.3546%" y="261" width="0.0572%" height="15" fill="rgb(226,81,46)" fg:x="704" fg:w="12"/><text x="3.4718%" y="271.50"></text></g><g><title>folio_batch_move_lru (10 samples, 0.05%)</title><rect x="3.3641%" y="245" width="0.0477%" height="15" fill="rgb(247,70,30)" fg:x="706" fg:w="10"/><text x="3.4813%" y="255.50"></text></g><g><title>lru_add_fn (10 samples, 0.05%)</title><rect x="3.3641%" y="229" width="0.0477%" height="15" fill="rgb(212,68,19)" fg:x="706" fg:w="10"/><text x="3.4813%" y="239.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.03%)</title><rect x="3.3832%" y="213" width="0.0286%" height="15" fill="rgb(240,187,13)" fg:x="710" fg:w="6"/><text x="3.5004%" y="223.50"></text></g><g><title>folio_add_new_anon_rmap (4 samples, 0.02%)</title><rect x="3.4118%" y="277" width="0.0191%" height="15" fill="rgb(223,113,26)" fg:x="716" fg:w="4"/><text x="3.5290%" y="287.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.02%)</title><rect x="3.4118%" y="261" width="0.0191%" height="15" fill="rgb(206,192,2)" fg:x="716" fg:w="4"/><text x="3.5290%" y="271.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.01%)</title><rect x="3.4166%" y="245" width="0.0143%" height="15" fill="rgb(241,108,4)" fg:x="717" fg:w="3"/><text x="3.5338%" y="255.50"></text></g><g><title>pageout (3 samples, 0.01%)</title><rect x="3.4928%" y="69" width="0.0143%" height="15" fill="rgb(247,173,49)" fg:x="733" fg:w="3"/><text x="3.6100%" y="79.50"></text></g><g><title>swap_writepage (3 samples, 0.01%)</title><rect x="3.4928%" y="53" width="0.0143%" height="15" fill="rgb(224,114,35)" fg:x="733" fg:w="3"/><text x="3.6100%" y="63.50"></text></g><g><title>__swap_writepage (3 samples, 0.01%)</title><rect x="3.4928%" y="37" width="0.0143%" height="15" fill="rgb(245,159,27)" fg:x="733" fg:w="3"/><text x="3.6100%" y="47.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (8 samples, 0.04%)</title><rect x="3.4737%" y="229" width="0.0381%" height="15" fill="rgb(245,172,44)" fg:x="729" fg:w="8"/><text x="3.5909%" y="239.50"></text></g><g><title>try_to_free_pages (6 samples, 0.03%)</title><rect x="3.4833%" y="213" width="0.0286%" height="15" fill="rgb(236,23,11)" fg:x="731" fg:w="6"/><text x="3.6005%" y="223.50"></text></g><g><title>do_try_to_free_pages (6 samples, 0.03%)</title><rect x="3.4833%" y="197" width="0.0286%" height="15" fill="rgb(205,117,38)" fg:x="731" fg:w="6"/><text x="3.6005%" y="207.50"></text></g><g><title>shrink_zones.constprop.0 (6 samples, 0.03%)</title><rect x="3.4833%" y="181" width="0.0286%" height="15" fill="rgb(237,72,25)" fg:x="731" fg:w="6"/><text x="3.6005%" y="191.50"></text></g><g><title>shrink_node (6 samples, 0.03%)</title><rect x="3.4833%" y="165" width="0.0286%" height="15" fill="rgb(244,70,9)" fg:x="731" fg:w="6"/><text x="3.6005%" y="175.50"></text></g><g><title>shrink_many (6 samples, 0.03%)</title><rect x="3.4833%" y="149" width="0.0286%" height="15" fill="rgb(217,125,39)" fg:x="731" fg:w="6"/><text x="3.6005%" y="159.50"></text></g><g><title>shrink_one (6 samples, 0.03%)</title><rect x="3.4833%" y="133" width="0.0286%" height="15" fill="rgb(235,36,10)" fg:x="731" fg:w="6"/><text x="3.6005%" y="143.50"></text></g><g><title>try_to_shrink_lruvec (6 samples, 0.03%)</title><rect x="3.4833%" y="117" width="0.0286%" height="15" fill="rgb(251,123,47)" fg:x="731" fg:w="6"/><text x="3.6005%" y="127.50"></text></g><g><title>evict_folios (6 samples, 0.03%)</title><rect x="3.4833%" y="101" width="0.0286%" height="15" fill="rgb(221,13,13)" fg:x="731" fg:w="6"/><text x="3.6005%" y="111.50"></text></g><g><title>shrink_folio_list (6 samples, 0.03%)</title><rect x="3.4833%" y="85" width="0.0286%" height="15" fill="rgb(238,131,9)" fg:x="731" fg:w="6"/><text x="3.6005%" y="95.50"></text></g><g><title>_raw_spin_trylock (3 samples, 0.01%)</title><rect x="3.5405%" y="213" width="0.0143%" height="15" fill="rgb(211,50,8)" fg:x="743" fg:w="3"/><text x="3.6576%" y="223.50"></text></g><g><title>clear_page_erms (6 samples, 0.03%)</title><rect x="3.5548%" y="213" width="0.0286%" height="15" fill="rgb(245,182,24)" fg:x="746" fg:w="6"/><text x="3.6719%" y="223.50"></text></g><g><title>do_anonymous_page (122 samples, 0.58%)</title><rect x="3.0782%" y="293" width="0.5813%" height="15" fill="rgb(242,14,37)" fg:x="646" fg:w="122"/><text x="3.1954%" y="303.50"></text></g><g><title>vma_alloc_folio (46 samples, 0.22%)</title><rect x="3.4404%" y="277" width="0.2192%" height="15" fill="rgb(246,228,12)" fg:x="722" fg:w="46"/><text x="3.5576%" y="287.50"></text></g><g><title>__folio_alloc (41 samples, 0.20%)</title><rect x="3.4642%" y="261" width="0.1954%" height="15" fill="rgb(213,55,15)" fg:x="727" fg:w="41"/><text x="3.5814%" y="271.50"></text></g><g><title>__alloc_pages (41 samples, 0.20%)</title><rect x="3.4642%" y="245" width="0.1954%" height="15" fill="rgb(209,9,3)" fg:x="727" fg:w="41"/><text x="3.5814%" y="255.50"></text></g><g><title>get_page_from_freelist (29 samples, 0.14%)</title><rect x="3.5214%" y="229" width="0.1382%" height="15" fill="rgb(230,59,30)" fg:x="739" fg:w="29"/><text x="3.6386%" y="239.50"></text></g><g><title>rmqueue (14 samples, 0.07%)</title><rect x="3.5929%" y="213" width="0.0667%" height="15" fill="rgb(209,121,21)" fg:x="754" fg:w="14"/><text x="3.7101%" y="223.50"></text></g><g><title>__rmqueue_pcplist (10 samples, 0.05%)</title><rect x="3.6119%" y="197" width="0.0477%" height="15" fill="rgb(220,109,13)" fg:x="758" fg:w="10"/><text x="3.7291%" y="207.50"></text></g><g><title>rmqueue_bulk (9 samples, 0.04%)</title><rect x="3.6167%" y="181" width="0.0429%" height="15" fill="rgb(232,18,1)" fg:x="759" fg:w="9"/><text x="3.7339%" y="191.50"></text></g><g><title>handle_pte_fault (124 samples, 0.59%)</title><rect x="3.0782%" y="309" width="0.5909%" height="15" fill="rgb(215,41,42)" fg:x="646" fg:w="124"/><text x="3.1954%" y="319.50"></text></g><g><title>__handle_mm_fault (136 samples, 0.65%)</title><rect x="3.0354%" y="325" width="0.6481%" height="15" fill="rgb(224,123,36)" fg:x="637" fg:w="136"/><text x="3.1525%" y="335.50"></text></g><g><title>pte_offset_map_nolock (3 samples, 0.01%)</title><rect x="3.6691%" y="309" width="0.0143%" height="15" fill="rgb(240,125,3)" fg:x="770" fg:w="3"/><text x="3.7863%" y="319.50"></text></g><g><title>count_memcg_events.constprop.0 (4 samples, 0.02%)</title><rect x="3.6882%" y="325" width="0.0191%" height="15" fill="rgb(205,98,50)" fg:x="774" fg:w="4"/><text x="3.8054%" y="335.50"></text></g><g><title>__count_memcg_events (3 samples, 0.01%)</title><rect x="3.6929%" y="309" width="0.0143%" height="15" fill="rgb(205,185,37)" fg:x="775" fg:w="3"/><text x="3.8101%" y="319.50"></text></g><g><title>cgroup_rstat_updated (3 samples, 0.01%)</title><rect x="3.6929%" y="293" width="0.0143%" height="15" fill="rgb(238,207,15)" fg:x="775" fg:w="3"/><text x="3.8101%" y="303.50"></text></g><g><title>handle_mm_fault (143 samples, 0.68%)</title><rect x="3.0306%" y="341" width="0.6814%" height="15" fill="rgb(213,199,42)" fg:x="636" fg:w="143"/><text x="3.1478%" y="351.50"></text></g><g><title>lock_vma_under_rcu (5 samples, 0.02%)</title><rect x="3.7120%" y="341" width="0.0238%" height="15" fill="rgb(235,201,11)" fg:x="779" fg:w="5"/><text x="3.8292%" y="351.50"></text></g><g><title>do_user_addr_fault (153 samples, 0.73%)</title><rect x="3.0258%" y="357" width="0.7291%" height="15" fill="rgb(207,46,11)" fg:x="635" fg:w="153"/><text x="3.1430%" y="367.50"></text></g><g><title>up_read (3 samples, 0.01%)</title><rect x="3.7406%" y="341" width="0.0143%" height="15" fill="rgb(241,35,35)" fg:x="785" fg:w="3"/><text x="3.8578%" y="351.50"></text></g><g><title>asm_exc_page_fault (159 samples, 0.76%)</title><rect x="3.0115%" y="389" width="0.7576%" height="15" fill="rgb(243,32,47)" fg:x="632" fg:w="159"/><text x="3.1287%" y="399.50"></text></g><g><title>exc_page_fault (157 samples, 0.75%)</title><rect x="3.0211%" y="373" width="0.7481%" height="15" fill="rgb(247,202,23)" fg:x="634" fg:w="157"/><text x="3.1382%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (207 samples, 0.99%)</title><rect x="2.8781%" y="405" width="0.9864%" height="15" fill="rgb(219,102,11)" fg:x="604" fg:w="207"/><text x="2.9953%" y="415.50">_..</text></g><g><title>sync_regs (18 samples, 0.09%)</title><rect x="3.7787%" y="389" width="0.0858%" height="15" fill="rgb(243,110,44)" fg:x="793" fg:w="18"/><text x="3.8959%" y="399.50"></text></g><g><title>__GI___mmap64 (7 samples, 0.03%)</title><rect x="3.8835%" y="357" width="0.0334%" height="15" fill="rgb(222,74,54)" fg:x="815" fg:w="7"/><text x="4.0007%" y="367.50"></text></g><g><title>__GI___mmap64 (7 samples, 0.03%)</title><rect x="3.8835%" y="341" width="0.0334%" height="15" fill="rgb(216,99,12)" fg:x="815" fg:w="7"/><text x="4.0007%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="3.8835%" y="325" width="0.0334%" height="15" fill="rgb(226,22,26)" fg:x="815" fg:w="7"/><text x="4.0007%" y="335.50"></text></g><g><title>do_syscall_64 (7 samples, 0.03%)</title><rect x="3.8835%" y="309" width="0.0334%" height="15" fill="rgb(217,163,10)" fg:x="815" fg:w="7"/><text x="4.0007%" y="319.50"></text></g><g><title>x64_sys_call (7 samples, 0.03%)</title><rect x="3.8835%" y="293" width="0.0334%" height="15" fill="rgb(213,25,53)" fg:x="815" fg:w="7"/><text x="4.0007%" y="303.50"></text></g><g><title>__x64_sys_mmap (7 samples, 0.03%)</title><rect x="3.8835%" y="277" width="0.0334%" height="15" fill="rgb(252,105,26)" fg:x="815" fg:w="7"/><text x="4.0007%" y="287.50"></text></g><g><title>ksys_mmap_pgoff (7 samples, 0.03%)</title><rect x="3.8835%" y="261" width="0.0334%" height="15" fill="rgb(220,39,43)" fg:x="815" fg:w="7"/><text x="4.0007%" y="271.50"></text></g><g><title>vm_mmap_pgoff (7 samples, 0.03%)</title><rect x="3.8835%" y="245" width="0.0334%" height="15" fill="rgb(229,68,48)" fg:x="815" fg:w="7"/><text x="4.0007%" y="255.50"></text></g><g><title>do_mmap (7 samples, 0.03%)</title><rect x="3.8835%" y="229" width="0.0334%" height="15" fill="rgb(252,8,32)" fg:x="815" fg:w="7"/><text x="4.0007%" y="239.50"></text></g><g><title>mmap_region (6 samples, 0.03%)</title><rect x="3.8883%" y="213" width="0.0286%" height="15" fill="rgb(223,20,43)" fg:x="816" fg:w="6"/><text x="4.0055%" y="223.50"></text></g><g><title>vma_expand (3 samples, 0.01%)</title><rect x="3.9026%" y="197" width="0.0143%" height="15" fill="rgb(229,81,49)" fg:x="819" fg:w="3"/><text x="4.0198%" y="207.50"></text></g><g><title>__mem_cgroup_charge (3 samples, 0.01%)</title><rect x="3.9169%" y="245" width="0.0143%" height="15" fill="rgb(236,28,36)" fg:x="822" fg:w="3"/><text x="4.0341%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (225 samples, 1.07%)</title><rect x="2.8781%" y="533" width="1.0721%" height="15" fill="rgb(249,185,26)" fg:x="604" fg:w="225"/><text x="2.9953%" y="543.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (225 samples, 1.07%)</title><rect x="2.8781%" y="517" width="1.0721%" height="15" fill="rgb(249,174,33)" fg:x="604" fg:w="225"/><text x="2.9953%" y="527.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (225 samples, 1.07%)</title><rect x="2.8781%" y="501" width="1.0721%" height="15" fill="rgb(233,201,37)" fg:x="604" fg:w="225"/><text x="2.9953%" y="511.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (225 samples, 1.07%)</title><rect x="2.8781%" y="485" width="1.0721%" height="15" fill="rgb(221,78,26)" fg:x="604" fg:w="225"/><text x="2.9953%" y="495.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (225 samples, 1.07%)</title><rect x="2.8781%" y="469" width="1.0721%" height="15" fill="rgb(250,127,30)" fg:x="604" fg:w="225"/><text x="2.9953%" y="479.50">a..</text></g><g><title>alloc::alloc::realloc (225 samples, 1.07%)</title><rect x="2.8781%" y="453" width="1.0721%" height="15" fill="rgb(230,49,44)" fg:x="604" fg:w="225"/><text x="2.9953%" y="463.50">a..</text></g><g><title>__GI___libc_realloc (225 samples, 1.07%)</title><rect x="2.8781%" y="437" width="1.0721%" height="15" fill="rgb(229,67,23)" fg:x="604" fg:w="225"/><text x="2.9953%" y="447.50">_..</text></g><g><title>_int_realloc (225 samples, 1.07%)</title><rect x="2.8781%" y="421" width="1.0721%" height="15" fill="rgb(249,83,47)" fg:x="604" fg:w="225"/><text x="2.9953%" y="431.50">_..</text></g><g><title>_int_malloc (17 samples, 0.08%)</title><rect x="3.8692%" y="405" width="0.0810%" height="15" fill="rgb(215,43,3)" fg:x="812" fg:w="17"/><text x="3.9864%" y="415.50"></text></g><g><title>sysmalloc (15 samples, 0.07%)</title><rect x="3.8788%" y="389" width="0.0715%" height="15" fill="rgb(238,154,13)" fg:x="814" fg:w="15"/><text x="3.9960%" y="399.50"></text></g><g><title>sysmalloc_mmap (15 samples, 0.07%)</title><rect x="3.8788%" y="373" width="0.0715%" height="15" fill="rgb(219,56,2)" fg:x="814" fg:w="15"/><text x="3.9960%" y="383.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.03%)</title><rect x="3.9169%" y="357" width="0.0334%" height="15" fill="rgb(233,0,4)" fg:x="822" fg:w="7"/><text x="4.0341%" y="367.50"></text></g><g><title>exc_page_fault (7 samples, 0.03%)</title><rect x="3.9169%" y="341" width="0.0334%" height="15" fill="rgb(235,30,7)" fg:x="822" fg:w="7"/><text x="4.0341%" y="351.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.03%)</title><rect x="3.9169%" y="325" width="0.0334%" height="15" fill="rgb(250,79,13)" fg:x="822" fg:w="7"/><text x="4.0341%" y="335.50"></text></g><g><title>handle_mm_fault (7 samples, 0.03%)</title><rect x="3.9169%" y="309" width="0.0334%" height="15" fill="rgb(211,146,34)" fg:x="822" fg:w="7"/><text x="4.0341%" y="319.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.03%)</title><rect x="3.9169%" y="293" width="0.0334%" height="15" fill="rgb(228,22,38)" fg:x="822" fg:w="7"/><text x="4.0341%" y="303.50"></text></g><g><title>handle_pte_fault (7 samples, 0.03%)</title><rect x="3.9169%" y="277" width="0.0334%" height="15" fill="rgb(235,168,5)" fg:x="822" fg:w="7"/><text x="4.0341%" y="287.50"></text></g><g><title>do_anonymous_page (7 samples, 0.03%)</title><rect x="3.9169%" y="261" width="0.0334%" height="15" fill="rgb(221,155,16)" fg:x="822" fg:w="7"/><text x="4.0341%" y="271.50"></text></g><g><title>vma_alloc_folio (3 samples, 0.01%)</title><rect x="3.9360%" y="245" width="0.0143%" height="15" fill="rgb(215,215,53)" fg:x="826" fg:w="3"/><text x="4.0531%" y="255.50"></text></g><g><title>__folio_alloc (3 samples, 0.01%)</title><rect x="3.9360%" y="229" width="0.0143%" height="15" fill="rgb(223,4,10)" fg:x="826" fg:w="3"/><text x="4.0531%" y="239.50"></text></g><g><title>__alloc_pages (3 samples, 0.01%)</title><rect x="3.9360%" y="213" width="0.0143%" height="15" fill="rgb(234,103,6)" fg:x="826" fg:w="3"/><text x="4.0531%" y="223.50"></text></g><g><title>__rcu_read_unlock (11 samples, 0.05%)</title><rect x="4.2219%" y="389" width="0.0524%" height="15" fill="rgb(227,97,0)" fg:x="886" fg:w="11"/><text x="4.3390%" y="399.50"></text></g><g><title>__count_memcg_events (5 samples, 0.02%)</title><rect x="4.2790%" y="373" width="0.0238%" height="15" fill="rgb(234,150,53)" fg:x="898" fg:w="5"/><text x="4.3962%" y="383.50"></text></g><g><title>charge_memcg (10 samples, 0.05%)</title><rect x="4.2743%" y="389" width="0.0477%" height="15" fill="rgb(228,201,54)" fg:x="897" fg:w="10"/><text x="4.3915%" y="399.50"></text></g><g><title>try_charge_memcg (4 samples, 0.02%)</title><rect x="4.3029%" y="373" width="0.0191%" height="15" fill="rgb(222,22,37)" fg:x="903" fg:w="4"/><text x="4.4201%" y="383.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="4.3219%" y="389" width="0.0143%" height="15" fill="rgb(237,53,32)" fg:x="907" fg:w="3"/><text x="4.4391%" y="399.50"></text></g><g><title>__mem_cgroup_charge (26 samples, 0.12%)</title><rect x="4.2171%" y="405" width="0.1239%" height="15" fill="rgb(233,25,53)" fg:x="885" fg:w="26"/><text x="4.3343%" y="415.50"></text></g><g><title>lru_add_fn (5 samples, 0.02%)</title><rect x="4.3648%" y="357" width="0.0238%" height="15" fill="rgb(210,40,34)" fg:x="916" fg:w="5"/><text x="4.4820%" y="367.50"></text></g><g><title>folio_add_lru_vma (8 samples, 0.04%)</title><rect x="4.3553%" y="405" width="0.0381%" height="15" fill="rgb(241,220,44)" fg:x="914" fg:w="8"/><text x="4.4725%" y="415.50"></text></g><g><title>folio_add_lru (8 samples, 0.04%)</title><rect x="4.3553%" y="389" width="0.0381%" height="15" fill="rgb(235,28,35)" fg:x="914" fg:w="8"/><text x="4.4725%" y="399.50"></text></g><g><title>folio_batch_move_lru (7 samples, 0.03%)</title><rect x="4.3600%" y="373" width="0.0334%" height="15" fill="rgb(210,56,17)" fg:x="915" fg:w="7"/><text x="4.4772%" y="383.50"></text></g><g><title>do_anonymous_page (60 samples, 0.29%)</title><rect x="4.2076%" y="421" width="0.2859%" height="15" fill="rgb(224,130,29)" fg:x="883" fg:w="60"/><text x="4.3248%" y="431.50"></text></g><g><title>vma_alloc_folio (18 samples, 0.09%)</title><rect x="4.4077%" y="405" width="0.0858%" height="15" fill="rgb(235,212,8)" fg:x="925" fg:w="18"/><text x="4.5249%" y="415.50"></text></g><g><title>__folio_alloc (16 samples, 0.08%)</title><rect x="4.4172%" y="389" width="0.0762%" height="15" fill="rgb(223,33,50)" fg:x="927" fg:w="16"/><text x="4.5344%" y="399.50"></text></g><g><title>__alloc_pages (16 samples, 0.08%)</title><rect x="4.4172%" y="373" width="0.0762%" height="15" fill="rgb(219,149,13)" fg:x="927" fg:w="16"/><text x="4.5344%" y="383.50"></text></g><g><title>get_page_from_freelist (12 samples, 0.06%)</title><rect x="4.4363%" y="357" width="0.0572%" height="15" fill="rgb(250,156,29)" fg:x="931" fg:w="12"/><text x="4.5535%" y="367.50"></text></g><g><title>rmqueue (6 samples, 0.03%)</title><rect x="4.4649%" y="341" width="0.0286%" height="15" fill="rgb(216,193,19)" fg:x="937" fg:w="6"/><text x="4.5821%" y="351.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.02%)</title><rect x="4.4696%" y="325" width="0.0238%" height="15" fill="rgb(216,135,14)" fg:x="938" fg:w="5"/><text x="4.5868%" y="335.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.02%)</title><rect x="4.4696%" y="309" width="0.0238%" height="15" fill="rgb(241,47,5)" fg:x="938" fg:w="5"/><text x="4.5868%" y="319.50"></text></g><g><title>__handle_mm_fault (68 samples, 0.32%)</title><rect x="4.1742%" y="453" width="0.3240%" height="15" fill="rgb(233,42,35)" fg:x="876" fg:w="68"/><text x="4.2914%" y="463.50"></text></g><g><title>handle_pte_fault (64 samples, 0.30%)</title><rect x="4.1933%" y="437" width="0.3050%" height="15" fill="rgb(231,13,6)" fg:x="880" fg:w="64"/><text x="4.3105%" y="447.50"></text></g><g><title>handle_mm_fault (72 samples, 0.34%)</title><rect x="4.1647%" y="469" width="0.3431%" height="15" fill="rgb(207,181,40)" fg:x="874" fg:w="72"/><text x="4.2819%" y="479.50"></text></g><g><title>do_user_addr_fault (74 samples, 0.35%)</title><rect x="4.1599%" y="485" width="0.3526%" height="15" fill="rgb(254,173,49)" fg:x="873" fg:w="74"/><text x="4.2771%" y="495.50"></text></g><g><title>asm_exc_page_fault (76 samples, 0.36%)</title><rect x="4.1599%" y="517" width="0.3621%" height="15" fill="rgb(221,1,38)" fg:x="873" fg:w="76"/><text x="4.2771%" y="527.50"></text></g><g><title>exc_page_fault (76 samples, 0.36%)</title><rect x="4.1599%" y="501" width="0.3621%" height="15" fill="rgb(206,124,46)" fg:x="873" fg:w="76"/><text x="4.2771%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (384 samples, 1.83%)</title><rect x="2.7542%" y="549" width="1.8298%" height="15" fill="rgb(249,21,11)" fg:x="578" fg:w="384"/><text x="2.8714%" y="559.50">allo..</text></g><g><title>core::ptr::write (131 samples, 0.62%)</title><rect x="3.9598%" y="533" width="0.6242%" height="15" fill="rgb(222,201,40)" fg:x="831" fg:w="131"/><text x="4.0770%" y="543.50"></text></g><g><title>sync_regs (10 samples, 0.05%)</title><rect x="4.5364%" y="517" width="0.0477%" height="15" fill="rgb(235,61,29)" fg:x="952" fg:w="10"/><text x="4.6535%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.03%)</title><rect x="4.5983%" y="533" width="0.0334%" height="15" fill="rgb(219,207,3)" fg:x="965" fg:w="7"/><text x="4.7155%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.03%)</title><rect x="4.5983%" y="517" width="0.0334%" height="15" fill="rgb(222,56,46)" fg:x="965" fg:w="7"/><text x="4.7155%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.03%)</title><rect x="4.5983%" y="501" width="0.0334%" height="15" fill="rgb(239,76,54)" fg:x="965" fg:w="7"/><text x="4.7155%" y="511.50"></text></g><g><title>__mem_cgroup_charge (5 samples, 0.02%)</title><rect x="4.7508%" y="261" width="0.0238%" height="15" fill="rgb(231,124,27)" fg:x="997" fg:w="5"/><text x="4.8680%" y="271.50"></text></g><g><title>clear_page_erms (3 samples, 0.01%)</title><rect x="4.8080%" y="197" width="0.0143%" height="15" fill="rgb(249,195,6)" fg:x="1009" fg:w="3"/><text x="4.9252%" y="207.50"></text></g><g><title>__folio_alloc (8 samples, 0.04%)</title><rect x="4.7984%" y="245" width="0.0381%" height="15" fill="rgb(237,174,47)" fg:x="1007" fg:w="8"/><text x="4.9156%" y="255.50"></text></g><g><title>__alloc_pages (8 samples, 0.04%)</title><rect x="4.7984%" y="229" width="0.0381%" height="15" fill="rgb(206,201,31)" fg:x="1007" fg:w="8"/><text x="4.9156%" y="239.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.04%)</title><rect x="4.7984%" y="213" width="0.0381%" height="15" fill="rgb(231,57,52)" fg:x="1007" fg:w="8"/><text x="4.9156%" y="223.50"></text></g><g><title>rmqueue (3 samples, 0.01%)</title><rect x="4.8223%" y="197" width="0.0143%" height="15" fill="rgb(248,177,22)" fg:x="1012" fg:w="3"/><text x="4.9394%" y="207.50"></text></g><g><title>__rmqueue_pcplist (3 samples, 0.01%)</title><rect x="4.8223%" y="181" width="0.0143%" height="15" fill="rgb(215,211,37)" fg:x="1012" fg:w="3"/><text x="4.9394%" y="191.50"></text></g><g><title>rmqueue_bulk (3 samples, 0.01%)</title><rect x="4.8223%" y="165" width="0.0143%" height="15" fill="rgb(241,128,51)" fg:x="1012" fg:w="3"/><text x="4.9394%" y="175.50"></text></g><g><title>do_anonymous_page (20 samples, 0.10%)</title><rect x="4.7460%" y="277" width="0.0953%" height="15" fill="rgb(227,165,31)" fg:x="996" fg:w="20"/><text x="4.8632%" y="287.50"></text></g><g><title>vma_alloc_folio (10 samples, 0.05%)</title><rect x="4.7937%" y="261" width="0.0477%" height="15" fill="rgb(228,167,24)" fg:x="1006" fg:w="10"/><text x="4.9109%" y="271.50"></text></g><g><title>handle_mm_fault (23 samples, 0.11%)</title><rect x="4.7365%" y="325" width="0.1096%" height="15" fill="rgb(228,143,12)" fg:x="994" fg:w="23"/><text x="4.8537%" y="335.50"></text></g><g><title>__handle_mm_fault (23 samples, 0.11%)</title><rect x="4.7365%" y="309" width="0.1096%" height="15" fill="rgb(249,149,8)" fg:x="994" fg:w="23"/><text x="4.8537%" y="319.50"></text></g><g><title>handle_pte_fault (21 samples, 0.10%)</title><rect x="4.7460%" y="293" width="0.1001%" height="15" fill="rgb(243,35,44)" fg:x="996" fg:w="21"/><text x="4.8632%" y="303.50"></text></g><g><title>asm_exc_page_fault (25 samples, 0.12%)</title><rect x="4.7317%" y="373" width="0.1191%" height="15" fill="rgb(246,89,9)" fg:x="993" fg:w="25"/><text x="4.8489%" y="383.50"></text></g><g><title>exc_page_fault (25 samples, 0.12%)</title><rect x="4.7317%" y="357" width="0.1191%" height="15" fill="rgb(233,213,13)" fg:x="993" fg:w="25"/><text x="4.8489%" y="367.50"></text></g><g><title>do_user_addr_fault (25 samples, 0.12%)</title><rect x="4.7317%" y="341" width="0.1191%" height="15" fill="rgb(233,141,41)" fg:x="993" fg:w="25"/><text x="4.8489%" y="351.50"></text></g><g><title>__memcpy_evex_unaligned_erms (33 samples, 0.16%)</title><rect x="4.7031%" y="389" width="0.1572%" height="15" fill="rgb(239,167,4)" fg:x="987" fg:w="33"/><text x="4.8203%" y="399.50"></text></g><g><title>_int_malloc (6 samples, 0.03%)</title><rect x="4.8699%" y="389" width="0.0286%" height="15" fill="rgb(209,217,16)" fg:x="1022" fg:w="6"/><text x="4.9871%" y="399.50"></text></g><g><title>sysmalloc (4 samples, 0.02%)</title><rect x="4.8794%" y="373" width="0.0191%" height="15" fill="rgb(219,88,35)" fg:x="1024" fg:w="4"/><text x="4.9966%" y="383.50"></text></g><g><title>__mem_cgroup_charge (4 samples, 0.02%)</title><rect x="4.8985%" y="277" width="0.0191%" height="15" fill="rgb(220,193,23)" fg:x="1028" fg:w="4"/><text x="5.0157%" y="287.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.03%)</title><rect x="4.8985%" y="389" width="0.0286%" height="15" fill="rgb(230,90,52)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="399.50"></text></g><g><title>exc_page_fault (6 samples, 0.03%)</title><rect x="4.8985%" y="373" width="0.0286%" height="15" fill="rgb(252,106,19)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="383.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.03%)</title><rect x="4.8985%" y="357" width="0.0286%" height="15" fill="rgb(206,74,20)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="367.50"></text></g><g><title>handle_mm_fault (6 samples, 0.03%)</title><rect x="4.8985%" y="341" width="0.0286%" height="15" fill="rgb(230,138,44)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="351.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="4.8985%" y="325" width="0.0286%" height="15" fill="rgb(235,182,43)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="335.50"></text></g><g><title>handle_pte_fault (6 samples, 0.03%)</title><rect x="4.8985%" y="309" width="0.0286%" height="15" fill="rgb(242,16,51)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="319.50"></text></g><g><title>do_anonymous_page (6 samples, 0.03%)</title><rect x="4.8985%" y="293" width="0.0286%" height="15" fill="rgb(248,9,4)" fg:x="1028" fg:w="6"/><text x="5.0157%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 0.24%)</title><rect x="4.6984%" y="517" width="0.2430%" height="15" fill="rgb(210,31,22)" fg:x="986" fg:w="51"/><text x="4.8156%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.24%)</title><rect x="4.6984%" y="501" width="0.2430%" height="15" fill="rgb(239,54,39)" fg:x="986" fg:w="51"/><text x="4.8156%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (51 samples, 0.24%)</title><rect x="4.6984%" y="485" width="0.2430%" height="15" fill="rgb(230,99,41)" fg:x="986" fg:w="51"/><text x="4.8156%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (51 samples, 0.24%)</title><rect x="4.6984%" y="469" width="0.2430%" height="15" fill="rgb(253,106,12)" fg:x="986" fg:w="51"/><text x="4.8156%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (51 samples, 0.24%)</title><rect x="4.6984%" y="453" width="0.2430%" height="15" fill="rgb(213,46,41)" fg:x="986" fg:w="51"/><text x="4.8156%" y="463.50"></text></g><g><title>alloc::alloc::realloc (51 samples, 0.24%)</title><rect x="4.6984%" y="437" width="0.2430%" height="15" fill="rgb(215,133,35)" fg:x="986" fg:w="51"/><text x="4.8156%" y="447.50"></text></g><g><title>__GI___libc_realloc (51 samples, 0.24%)</title><rect x="4.6984%" y="421" width="0.2430%" height="15" fill="rgb(213,28,5)" fg:x="986" fg:w="51"/><text x="4.8156%" y="431.50"></text></g><g><title>_int_realloc (51 samples, 0.24%)</title><rect x="4.6984%" y="405" width="0.2430%" height="15" fill="rgb(215,77,49)" fg:x="986" fg:w="51"/><text x="4.8156%" y="415.50"></text></g><g><title>sync_regs (3 samples, 0.01%)</title><rect x="4.9271%" y="389" width="0.0143%" height="15" fill="rgb(248,100,22)" fg:x="1034" fg:w="3"/><text x="5.0443%" y="399.50"></text></g><g><title>__rcu_read_unlock (11 samples, 0.05%)</title><rect x="5.1653%" y="373" width="0.0524%" height="15" fill="rgb(208,67,9)" fg:x="1084" fg:w="11"/><text x="5.2825%" y="383.50"></text></g><g><title>__count_memcg_events (3 samples, 0.01%)</title><rect x="5.2416%" y="357" width="0.0143%" height="15" fill="rgb(219,133,21)" fg:x="1100" fg:w="3"/><text x="5.3588%" y="367.50"></text></g><g><title>charge_memcg (9 samples, 0.04%)</title><rect x="5.2178%" y="373" width="0.0429%" height="15" fill="rgb(246,46,29)" fg:x="1095" fg:w="9"/><text x="5.3350%" y="383.50"></text></g><g><title>__mem_cgroup_charge (24 samples, 0.11%)</title><rect x="5.1558%" y="389" width="0.1144%" height="15" fill="rgb(246,185,52)" fg:x="1082" fg:w="24"/><text x="5.2730%" y="399.50"></text></g><g><title>folio_add_lru (3 samples, 0.01%)</title><rect x="5.2892%" y="373" width="0.0143%" height="15" fill="rgb(252,136,11)" fg:x="1110" fg:w="3"/><text x="5.4064%" y="383.50"></text></g><g><title>folio_batch_move_lru (3 samples, 0.01%)</title><rect x="5.2892%" y="357" width="0.0143%" height="15" fill="rgb(219,138,53)" fg:x="1110" fg:w="3"/><text x="5.4064%" y="367.50"></text></g><g><title>folio_add_lru_vma (4 samples, 0.02%)</title><rect x="5.2892%" y="389" width="0.0191%" height="15" fill="rgb(211,51,23)" fg:x="1110" fg:w="4"/><text x="5.4064%" y="399.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.01%)</title><rect x="5.3083%" y="389" width="0.0143%" height="15" fill="rgb(247,221,28)" fg:x="1114" fg:w="3"/><text x="5.4255%" y="399.50"></text></g><g><title>do_user_addr_fault (48 samples, 0.23%)</title><rect x="5.1225%" y="469" width="0.2287%" height="15" fill="rgb(251,222,45)" fg:x="1075" fg:w="48"/><text x="5.2397%" y="479.50"></text></g><g><title>handle_mm_fault (46 samples, 0.22%)</title><rect x="5.1320%" y="453" width="0.2192%" height="15" fill="rgb(217,162,53)" fg:x="1077" fg:w="46"/><text x="5.2492%" y="463.50"></text></g><g><title>__handle_mm_fault (46 samples, 0.22%)</title><rect x="5.1320%" y="437" width="0.2192%" height="15" fill="rgb(229,93,14)" fg:x="1077" fg:w="46"/><text x="5.2492%" y="447.50"></text></g><g><title>handle_pte_fault (46 samples, 0.22%)</title><rect x="5.1320%" y="421" width="0.2192%" height="15" fill="rgb(209,67,49)" fg:x="1077" fg:w="46"/><text x="5.2492%" y="431.50"></text></g><g><title>do_anonymous_page (45 samples, 0.21%)</title><rect x="5.1368%" y="405" width="0.2144%" height="15" fill="rgb(213,87,29)" fg:x="1078" fg:w="45"/><text x="5.2539%" y="415.50"></text></g><g><title>vma_alloc_folio (4 samples, 0.02%)</title><rect x="5.3321%" y="389" width="0.0191%" height="15" fill="rgb(205,151,52)" fg:x="1119" fg:w="4"/><text x="5.4493%" y="399.50"></text></g><g><title>__folio_alloc (4 samples, 0.02%)</title><rect x="5.3321%" y="373" width="0.0191%" height="15" fill="rgb(253,215,39)" fg:x="1119" fg:w="4"/><text x="5.4493%" y="383.50"></text></g><g><title>__alloc_pages (4 samples, 0.02%)</title><rect x="5.3321%" y="357" width="0.0191%" height="15" fill="rgb(221,220,41)" fg:x="1119" fg:w="4"/><text x="5.4493%" y="367.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="5.3369%" y="341" width="0.0143%" height="15" fill="rgb(218,133,21)" fg:x="1120" fg:w="3"/><text x="5.4541%" y="351.50"></text></g><g><title>asm_exc_page_fault (52 samples, 0.25%)</title><rect x="5.1177%" y="501" width="0.2478%" height="15" fill="rgb(221,193,43)" fg:x="1074" fg:w="52"/><text x="5.2349%" y="511.50"></text></g><g><title>exc_page_fault (51 samples, 0.24%)</title><rect x="5.1225%" y="485" width="0.2430%" height="15" fill="rgb(240,128,52)" fg:x="1075" fg:w="51"/><text x="5.2397%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (162 samples, 0.77%)</title><rect x="4.6317%" y="533" width="0.7719%" height="15" fill="rgb(253,114,12)" fg:x="972" fg:w="162"/><text x="4.7488%" y="543.50"></text></g><g><title>core::ptr::write (97 samples, 0.46%)</title><rect x="4.9414%" y="517" width="0.4622%" height="15" fill="rgb(215,223,47)" fg:x="1037" fg:w="97"/><text x="5.0586%" y="527.50"></text></g><g><title>sync_regs (7 samples, 0.03%)</title><rect x="5.3702%" y="501" width="0.0334%" height="15" fill="rgb(248,225,23)" fg:x="1127" fg:w="7"/><text x="5.4874%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::new (568 samples, 2.71%)</title><rect x="2.7352%" y="565" width="2.7066%" height="15" fill="rgb(250,108,0)" fg:x="574" fg:w="568"/><text x="2.8523%" y="575.50">fringe_..</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::new (179 samples, 0.85%)</title><rect x="4.5888%" y="549" width="0.8529%" height="15" fill="rgb(228,208,7)" fg:x="963" fg:w="179"/><text x="4.7060%" y="559.50">f..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.04%)</title><rect x="5.4036%" y="533" width="0.0381%" height="15" fill="rgb(244,45,10)" fg:x="1134" fg:w="8"/><text x="5.5208%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.04%)</title><rect x="5.4036%" y="517" width="0.0381%" height="15" fill="rgb(207,125,25)" fg:x="1134" fg:w="8"/><text x="5.5208%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8 samples, 0.04%)</title><rect x="5.4036%" y="501" width="0.0381%" height="15" fill="rgb(210,195,18)" fg:x="1134" fg:w="8"/><text x="5.5208%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (123 samples, 0.59%)</title><rect x="6.2708%" y="549" width="0.5861%" height="15" fill="rgb(249,80,12)" fg:x="1316" fg:w="123"/><text x="6.3880%" y="559.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph as fringe_vs_astar::structures::graph::Graph&gt;::neighbors (5 samples, 0.02%)</title><rect x="6.8617%" y="549" width="0.0238%" height="15" fill="rgb(221,65,9)" fg:x="1440" fg:w="5"/><text x="6.9789%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (22 samples, 0.10%)</title><rect x="6.8855%" y="549" width="0.1048%" height="15" fill="rgb(235,49,36)" fg:x="1445" fg:w="22"/><text x="7.0027%" y="559.50"></text></g><g><title>mas_preallocate (4 samples, 0.02%)</title><rect x="7.0285%" y="245" width="0.0191%" height="15" fill="rgb(225,32,20)" fg:x="1475" fg:w="4"/><text x="7.1457%" y="255.50"></text></g><g><title>mas_alloc_nodes (4 samples, 0.02%)</title><rect x="7.0285%" y="229" width="0.0191%" height="15" fill="rgb(215,141,46)" fg:x="1475" fg:w="4"/><text x="7.1457%" y="239.50"></text></g><g><title>kmem_cache_alloc_bulk (4 samples, 0.02%)</title><rect x="7.0285%" y="213" width="0.0191%" height="15" fill="rgb(250,160,47)" fg:x="1475" fg:w="4"/><text x="7.1457%" y="223.50"></text></g><g><title>__kmem_cache_alloc_bulk (4 samples, 0.02%)</title><rect x="7.0285%" y="197" width="0.0191%" height="15" fill="rgb(216,222,40)" fg:x="1475" fg:w="4"/><text x="7.1457%" y="207.50"></text></g><g><title>___slab_alloc (3 samples, 0.01%)</title><rect x="7.0333%" y="181" width="0.0143%" height="15" fill="rgb(234,217,39)" fg:x="1476" fg:w="3"/><text x="7.1504%" y="191.50"></text></g><g><title>mas_destroy (4 samples, 0.02%)</title><rect x="7.0523%" y="213" width="0.0191%" height="15" fill="rgb(207,178,40)" fg:x="1480" fg:w="4"/><text x="7.1695%" y="223.50"></text></g><g><title>__split_vma (13 samples, 0.06%)</title><rect x="7.0142%" y="261" width="0.0619%" height="15" fill="rgb(221,136,13)" fg:x="1472" fg:w="13"/><text x="7.1314%" y="271.50"></text></g><g><title>vma_complete (5 samples, 0.02%)</title><rect x="7.0523%" y="245" width="0.0238%" height="15" fill="rgb(249,199,10)" fg:x="1480" fg:w="5"/><text x="7.1695%" y="255.50"></text></g><g><title>mas_store_prealloc (5 samples, 0.02%)</title><rect x="7.0523%" y="229" width="0.0238%" height="15" fill="rgb(249,222,13)" fg:x="1480" fg:w="5"/><text x="7.1695%" y="239.50"></text></g><g><title>free_unref_page_commit (8 samples, 0.04%)</title><rect x="7.1238%" y="165" width="0.0381%" height="15" fill="rgb(244,185,38)" fg:x="1495" fg:w="8"/><text x="7.2410%" y="175.50"></text></g><g><title>free_pcppages_bulk (8 samples, 0.04%)</title><rect x="7.1238%" y="149" width="0.0381%" height="15" fill="rgb(236,202,9)" fg:x="1495" fg:w="8"/><text x="7.2410%" y="159.50"></text></g><g><title>__free_one_page (7 samples, 0.03%)</title><rect x="7.1286%" y="133" width="0.0334%" height="15" fill="rgb(250,229,37)" fg:x="1496" fg:w="7"/><text x="7.2457%" y="143.50"></text></g><g><title>free_unref_page_list (15 samples, 0.07%)</title><rect x="7.1095%" y="181" width="0.0715%" height="15" fill="rgb(206,174,23)" fg:x="1492" fg:w="15"/><text x="7.2267%" y="191.50"></text></g><g><title>free_unref_page_prepare (4 samples, 0.02%)</title><rect x="7.1619%" y="165" width="0.0191%" height="15" fill="rgb(211,33,43)" fg:x="1503" fg:w="4"/><text x="7.2791%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.01%)</title><rect x="7.2000%" y="149" width="0.0143%" height="15" fill="rgb(245,58,50)" fg:x="1511" fg:w="3"/><text x="7.3172%" y="159.50"></text></g><g><title>cgroup_rstat_updated (3 samples, 0.01%)</title><rect x="7.2000%" y="133" width="0.0143%" height="15" fill="rgb(244,68,36)" fg:x="1511" fg:w="3"/><text x="7.3172%" y="143.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (9 samples, 0.04%)</title><rect x="7.1810%" y="181" width="0.0429%" height="15" fill="rgb(232,229,15)" fg:x="1507" fg:w="9"/><text x="7.2982%" y="191.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.02%)</title><rect x="7.2000%" y="165" width="0.0238%" height="15" fill="rgb(254,30,23)" fg:x="1511" fg:w="5"/><text x="7.3172%" y="175.50"></text></g><g><title>tlb_finish_mmu (30 samples, 0.14%)</title><rect x="7.0857%" y="245" width="0.1430%" height="15" fill="rgb(235,160,14)" fg:x="1487" fg:w="30"/><text x="7.2029%" y="255.50"></text></g><g><title>tlb_batch_pages_flush (29 samples, 0.14%)</title><rect x="7.0904%" y="229" width="0.1382%" height="15" fill="rgb(212,155,44)" fg:x="1488" fg:w="29"/><text x="7.2076%" y="239.50"></text></g><g><title>free_pages_and_swap_cache (29 samples, 0.14%)</title><rect x="7.0904%" y="213" width="0.1382%" height="15" fill="rgb(226,2,50)" fg:x="1488" fg:w="29"/><text x="7.2076%" y="223.50"></text></g><g><title>release_pages (29 samples, 0.14%)</title><rect x="7.0904%" y="197" width="0.1382%" height="15" fill="rgb(234,177,6)" fg:x="1488" fg:w="29"/><text x="7.2076%" y="207.50"></text></g><g><title>_compound_head (6 samples, 0.03%)</title><rect x="7.2334%" y="181" width="0.0286%" height="15" fill="rgb(217,24,9)" fg:x="1518" fg:w="6"/><text x="7.3506%" y="191.50"></text></g><g><title>__mod_lruvec_state (6 samples, 0.03%)</title><rect x="7.3239%" y="133" width="0.0286%" height="15" fill="rgb(220,13,46)" fg:x="1537" fg:w="6"/><text x="7.4411%" y="143.50"></text></g><g><title>page_remove_rmap (8 samples, 0.04%)</title><rect x="7.3192%" y="165" width="0.0381%" height="15" fill="rgb(239,221,27)" fg:x="1536" fg:w="8"/><text x="7.4364%" y="175.50"></text></g><g><title>__mod_lruvec_page_state (8 samples, 0.04%)</title><rect x="7.3192%" y="149" width="0.0381%" height="15" fill="rgb(222,198,25)" fg:x="1536" fg:w="8"/><text x="7.4364%" y="159.50"></text></g><g><title>do_vmi_align_munmap (73 samples, 0.35%)</title><rect x="7.0142%" y="277" width="0.3479%" height="15" fill="rgb(211,99,13)" fg:x="1472" fg:w="73"/><text x="7.1314%" y="287.50"></text></g><g><title>unmap_region (59 samples, 0.28%)</title><rect x="7.0809%" y="261" width="0.2811%" height="15" fill="rgb(232,111,31)" fg:x="1486" fg:w="59"/><text x="7.1981%" y="271.50"></text></g><g><title>unmap_vmas (27 samples, 0.13%)</title><rect x="7.2334%" y="245" width="0.1287%" height="15" fill="rgb(245,82,37)" fg:x="1518" fg:w="27"/><text x="7.3506%" y="255.50"></text></g><g><title>unmap_single_vma (27 samples, 0.13%)</title><rect x="7.2334%" y="229" width="0.1287%" height="15" fill="rgb(227,149,46)" fg:x="1518" fg:w="27"/><text x="7.3506%" y="239.50"></text></g><g><title>unmap_page_range (27 samples, 0.13%)</title><rect x="7.2334%" y="213" width="0.1287%" height="15" fill="rgb(218,36,50)" fg:x="1518" fg:w="27"/><text x="7.3506%" y="223.50"></text></g><g><title>zap_pmd_range.isra.0 (27 samples, 0.13%)</title><rect x="7.2334%" y="197" width="0.1287%" height="15" fill="rgb(226,80,48)" fg:x="1518" fg:w="27"/><text x="7.3506%" y="207.50"></text></g><g><title>zap_pte_range (21 samples, 0.10%)</title><rect x="7.2620%" y="181" width="0.1001%" height="15" fill="rgb(238,224,15)" fg:x="1524" fg:w="21"/><text x="7.3792%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.38%)</title><rect x="6.9904%" y="517" width="0.3764%" height="15" fill="rgb(241,136,10)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;]&gt; (79 samples, 0.38%)</title><rect x="6.9904%" y="501" width="0.3764%" height="15" fill="rgb(208,32,45)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt; (79 samples, 0.38%)</title><rect x="6.9904%" y="485" width="0.3764%" height="15" fill="rgb(207,135,9)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt; (79 samples, 0.38%)</title><rect x="6.9904%" y="469" width="0.3764%" height="15" fill="rgb(206,86,44)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.38%)</title><rect x="6.9904%" y="453" width="0.3764%" height="15" fill="rgb(245,177,15)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.38%)</title><rect x="6.9904%" y="437" width="0.3764%" height="15" fill="rgb(206,64,50)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.38%)</title><rect x="6.9904%" y="421" width="0.3764%" height="15" fill="rgb(234,36,40)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="431.50"></text></g><g><title>__GI___libc_free (79 samples, 0.38%)</title><rect x="6.9904%" y="405" width="0.3764%" height="15" fill="rgb(213,64,8)" fg:x="1467" fg:w="79"/><text x="7.1076%" y="415.50"></text></g><g><title>__GI___munmap (78 samples, 0.37%)</title><rect x="6.9951%" y="389" width="0.3717%" height="15" fill="rgb(210,75,36)" fg:x="1468" fg:w="78"/><text x="7.1123%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (76 samples, 0.36%)</title><rect x="7.0047%" y="373" width="0.3621%" height="15" fill="rgb(229,88,21)" fg:x="1470" fg:w="76"/><text x="7.1219%" y="383.50"></text></g><g><title>do_syscall_64 (76 samples, 0.36%)</title><rect x="7.0047%" y="357" width="0.3621%" height="15" fill="rgb(252,204,47)" fg:x="1470" fg:w="76"/><text x="7.1219%" y="367.50"></text></g><g><title>x64_sys_call (75 samples, 0.36%)</title><rect x="7.0094%" y="341" width="0.3574%" height="15" fill="rgb(208,77,27)" fg:x="1471" fg:w="75"/><text x="7.1266%" y="351.50"></text></g><g><title>__x64_sys_munmap (75 samples, 0.36%)</title><rect x="7.0094%" y="325" width="0.3574%" height="15" fill="rgb(221,76,26)" fg:x="1471" fg:w="75"/><text x="7.1266%" y="335.50"></text></g><g><title>__vm_munmap (75 samples, 0.36%)</title><rect x="7.0094%" y="309" width="0.3574%" height="15" fill="rgb(225,139,18)" fg:x="1471" fg:w="75"/><text x="7.1266%" y="319.50"></text></g><g><title>do_vmi_munmap (74 samples, 0.35%)</title><rect x="7.0142%" y="293" width="0.3526%" height="15" fill="rgb(230,137,11)" fg:x="1472" fg:w="74"/><text x="7.1314%" y="303.50"></text></g><g><title>__mem_cgroup_uncharge_list (3 samples, 0.01%)</title><rect x="7.3811%" y="85" width="0.0143%" height="15" fill="rgb(212,28,1)" fg:x="1549" fg:w="3"/><text x="7.4983%" y="95.50"></text></g><g><title>uncharge_folio (3 samples, 0.01%)</title><rect x="7.3811%" y="69" width="0.0143%" height="15" fill="rgb(248,164,17)" fg:x="1549" fg:w="3"/><text x="7.4983%" y="79.50"></text></g><g><title>free_pages_and_swap_cache (8 samples, 0.04%)</title><rect x="7.3811%" y="117" width="0.0381%" height="15" fill="rgb(222,171,42)" fg:x="1549" fg:w="8"/><text x="7.4983%" y="127.50"></text></g><g><title>release_pages (8 samples, 0.04%)</title><rect x="7.3811%" y="101" width="0.0381%" height="15" fill="rgb(243,84,45)" fg:x="1549" fg:w="8"/><text x="7.4983%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt;&gt; (91 samples, 0.43%)</title><rect x="6.9904%" y="533" width="0.4336%" height="15" fill="rgb(252,49,23)" fg:x="1467" fg:w="91"/><text x="7.1076%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt;&gt; (12 samples, 0.06%)</title><rect x="7.3668%" y="517" width="0.0572%" height="15" fill="rgb(215,19,7)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="7.3668%" y="501" width="0.0572%" height="15" fill="rgb(238,81,41)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.06%)</title><rect x="7.3668%" y="485" width="0.0572%" height="15" fill="rgb(210,199,37)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.06%)</title><rect x="7.3668%" y="469" width="0.0572%" height="15" fill="rgb(244,192,49)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="479.50"></text></g><g><title>__GI___libc_free (12 samples, 0.06%)</title><rect x="7.3668%" y="453" width="0.0572%" height="15" fill="rgb(226,211,11)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="463.50"></text></g><g><title>_int_free (12 samples, 0.06%)</title><rect x="7.3668%" y="437" width="0.0572%" height="15" fill="rgb(236,162,54)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="447.50"></text></g><g><title>systrim (12 samples, 0.06%)</title><rect x="7.3668%" y="421" width="0.0572%" height="15" fill="rgb(220,229,9)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="431.50"></text></g><g><title>__glibc_morecore (12 samples, 0.06%)</title><rect x="7.3668%" y="405" width="0.0572%" height="15" fill="rgb(250,87,22)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="415.50"></text></g><g><title>__GI___sbrk (12 samples, 0.06%)</title><rect x="7.3668%" y="389" width="0.0572%" height="15" fill="rgb(239,43,17)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="399.50"></text></g><g><title>__GI___sbrk (12 samples, 0.06%)</title><rect x="7.3668%" y="373" width="0.0572%" height="15" fill="rgb(231,177,25)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="383.50"></text></g><g><title>__brk (12 samples, 0.06%)</title><rect x="7.3668%" y="357" width="0.0572%" height="15" fill="rgb(219,179,1)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="7.3668%" y="341" width="0.0572%" height="15" fill="rgb(238,219,53)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="351.50"></text></g><g><title>do_syscall_64 (12 samples, 0.06%)</title><rect x="7.3668%" y="325" width="0.0572%" height="15" fill="rgb(232,167,36)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="335.50"></text></g><g><title>x64_sys_call (12 samples, 0.06%)</title><rect x="7.3668%" y="309" width="0.0572%" height="15" fill="rgb(244,19,51)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="319.50"></text></g><g><title>__x64_sys_brk (12 samples, 0.06%)</title><rect x="7.3668%" y="293" width="0.0572%" height="15" fill="rgb(224,6,22)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="303.50"></text></g><g><title>__do_sys_brk (12 samples, 0.06%)</title><rect x="7.3668%" y="277" width="0.0572%" height="15" fill="rgb(224,145,5)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="287.50"></text></g><g><title>do_vmi_align_munmap (12 samples, 0.06%)</title><rect x="7.3668%" y="261" width="0.0572%" height="15" fill="rgb(234,130,49)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="271.50"></text></g><g><title>unmap_region (12 samples, 0.06%)</title><rect x="7.3668%" y="245" width="0.0572%" height="15" fill="rgb(254,6,2)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="255.50"></text></g><g><title>unmap_vmas (12 samples, 0.06%)</title><rect x="7.3668%" y="229" width="0.0572%" height="15" fill="rgb(208,96,46)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="239.50"></text></g><g><title>unmap_single_vma (12 samples, 0.06%)</title><rect x="7.3668%" y="213" width="0.0572%" height="15" fill="rgb(239,3,39)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="223.50"></text></g><g><title>unmap_page_range (12 samples, 0.06%)</title><rect x="7.3668%" y="197" width="0.0572%" height="15" fill="rgb(233,210,1)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="207.50"></text></g><g><title>zap_pmd_range.isra.0 (12 samples, 0.06%)</title><rect x="7.3668%" y="181" width="0.0572%" height="15" fill="rgb(244,137,37)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="191.50"></text></g><g><title>zap_pte_range (12 samples, 0.06%)</title><rect x="7.3668%" y="165" width="0.0572%" height="15" fill="rgb(240,136,2)" fg:x="1546" fg:w="12"/><text x="7.4840%" y="175.50"></text></g><g><title>tlb_flush_mmu (9 samples, 0.04%)</title><rect x="7.3811%" y="149" width="0.0429%" height="15" fill="rgb(239,18,37)" fg:x="1549" fg:w="9"/><text x="7.4983%" y="159.50"></text></g><g><title>tlb_batch_pages_flush (9 samples, 0.04%)</title><rect x="7.3811%" y="133" width="0.0429%" height="15" fill="rgb(218,185,22)" fg:x="1549" fg:w="9"/><text x="7.4983%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::astar::AStar&gt; (92 samples, 0.44%)</title><rect x="6.9904%" y="549" width="0.4384%" height="15" fill="rgb(225,218,4)" fg:x="1467" fg:w="92"/><text x="7.1076%" y="559.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (7 samples, 0.03%)</title><rect x="7.4288%" y="533" width="0.0334%" height="15" fill="rgb(230,182,32)" fg:x="1559" fg:w="7"/><text x="7.5459%" y="543.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve::_{{closure}} (20 samples, 0.10%)</title><rect x="7.4288%" y="549" width="0.0953%" height="15" fill="rgb(242,56,43)" fg:x="1559" fg:w="20"/><text x="7.5459%" y="559.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (13 samples, 0.06%)</title><rect x="7.4621%" y="533" width="0.0619%" height="15" fill="rgb(233,99,24)" fg:x="1566" fg:w="13"/><text x="7.5793%" y="543.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (3 samples, 0.01%)</title><rect x="7.5098%" y="517" width="0.0143%" height="15" fill="rgb(234,209,42)" fg:x="1576" fg:w="3"/><text x="7.6270%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.06%)</title><rect x="7.5717%" y="453" width="0.0619%" height="15" fill="rgb(227,7,12)" fg:x="1589" fg:w="13"/><text x="7.6889%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (14 samples, 0.07%)</title><rect x="7.5717%" y="469" width="0.0667%" height="15" fill="rgb(245,203,43)" fg:x="1589" fg:w="14"/><text x="7.6889%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (11 samples, 0.05%)</title><rect x="7.6384%" y="469" width="0.0524%" height="15" fill="rgb(238,205,33)" fg:x="1603" fg:w="11"/><text x="7.7556%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (6 samples, 0.03%)</title><rect x="7.6623%" y="453" width="0.0286%" height="15" fill="rgb(231,56,7)" fg:x="1608" fg:w="6"/><text x="7.7794%" y="463.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::pop (37 samples, 0.18%)</title><rect x="7.5241%" y="549" width="0.1763%" height="15" fill="rgb(244,186,29)" fg:x="1579" fg:w="37"/><text x="7.6413%" y="559.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (36 samples, 0.17%)</title><rect x="7.5288%" y="533" width="0.1715%" height="15" fill="rgb(234,111,31)" fg:x="1580" fg:w="36"/><text x="7.6460%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (35 samples, 0.17%)</title><rect x="7.5336%" y="517" width="0.1668%" height="15" fill="rgb(241,149,10)" fg:x="1581" fg:w="35"/><text x="7.6508%" y="527.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (35 samples, 0.17%)</title><rect x="7.5336%" y="501" width="0.1668%" height="15" fill="rgb(249,206,44)" fg:x="1581" fg:w="35"/><text x="7.6508%" y="511.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (33 samples, 0.16%)</title><rect x="7.5431%" y="485" width="0.1572%" height="15" fill="rgb(251,153,30)" fg:x="1583" fg:w="33"/><text x="7.6603%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (13 samples, 0.06%)</title><rect x="7.9339%" y="517" width="0.0619%" height="15" fill="rgb(239,152,38)" fg:x="1665" fg:w="13"/><text x="8.0510%" y="527.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (10 samples, 0.05%)</title><rect x="7.9482%" y="501" width="0.0477%" height="15" fill="rgb(249,139,47)" fg:x="1668" fg:w="10"/><text x="8.0653%" y="511.50"></text></g><g><title>__memcpy_evex_unaligned_erms (395 samples, 1.88%)</title><rect x="8.0149%" y="373" width="1.8822%" height="15" fill="rgb(244,64,35)" fg:x="1682" fg:w="395"/><text x="8.1321%" y="383.50">__me..</text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="9.8971%" y="373" width="0.0191%" height="15" fill="rgb(216,46,15)" fg:x="2077" fg:w="4"/><text x="10.0143%" y="383.50"></text></g><g><title>_int_realloc (404 samples, 1.93%)</title><rect x="7.9958%" y="389" width="1.9251%" height="15" fill="rgb(250,74,19)" fg:x="1678" fg:w="404"/><text x="8.1130%" y="399.50">_int..</text></g><g><title>alloc::raw_vec::finish_grow (405 samples, 1.93%)</title><rect x="7.9958%" y="469" width="1.9299%" height="15" fill="rgb(249,42,33)" fg:x="1678" fg:w="405"/><text x="8.1130%" y="479.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (405 samples, 1.93%)</title><rect x="7.9958%" y="453" width="1.9299%" height="15" fill="rgb(242,149,17)" fg:x="1678" fg:w="405"/><text x="8.1130%" y="463.50">&lt;all..</text></g><g><title>alloc::alloc::Global::grow_impl (405 samples, 1.93%)</title><rect x="7.9958%" y="437" width="1.9299%" height="15" fill="rgb(244,29,21)" fg:x="1678" fg:w="405"/><text x="8.1130%" y="447.50">allo..</text></g><g><title>alloc::alloc::realloc (405 samples, 1.93%)</title><rect x="7.9958%" y="421" width="1.9299%" height="15" fill="rgb(220,130,37)" fg:x="1678" fg:w="405"/><text x="8.1130%" y="431.50">allo..</text></g><g><title>__GI___libc_realloc (405 samples, 1.93%)</title><rect x="7.9958%" y="405" width="1.9299%" height="15" fill="rgb(211,67,2)" fg:x="1678" fg:w="405"/><text x="8.1130%" y="415.50">__GI..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (420 samples, 2.00%)</title><rect x="7.9291%" y="533" width="2.0013%" height="15" fill="rgb(235,68,52)" fg:x="1664" fg:w="420"/><text x="8.0463%" y="543.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (406 samples, 1.93%)</title><rect x="7.9958%" y="517" width="1.9346%" height="15" fill="rgb(246,142,3)" fg:x="1678" fg:w="406"/><text x="8.1130%" y="527.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (406 samples, 1.93%)</title><rect x="7.9958%" y="501" width="1.9346%" height="15" fill="rgb(241,25,7)" fg:x="1678" fg:w="406"/><text x="8.1130%" y="511.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (406 samples, 1.93%)</title><rect x="7.9958%" y="485" width="1.9346%" height="15" fill="rgb(242,119,39)" fg:x="1678" fg:w="406"/><text x="8.1130%" y="495.50">allo..</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.04%)</title><rect x="12.8514%" y="437" width="0.0381%" height="15" fill="rgb(241,98,45)" fg:x="2697" fg:w="8"/><text x="12.9686%" y="447.50"></text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (620 samples, 2.95%)</title><rect x="15.8677%" y="421" width="2.9544%" height="15" fill="rgb(254,28,30)" fg:x="3330" fg:w="620"/><text x="15.9849%" y="431.50">&lt;alloc::..</text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (610 samples, 2.91%)</title><rect x="18.8221%" y="421" width="2.9067%" height="15" fill="rgb(241,142,54)" fg:x="3950" fg:w="610"/><text x="18.9393%" y="431.50">alloc::c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (610 samples, 2.91%)</title><rect x="18.8221%" y="405" width="2.9067%" height="15" fill="rgb(222,85,15)" fg:x="3950" fg:w="610"/><text x="18.9393%" y="415.50">core::sl..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (610 samples, 2.91%)</title><rect x="18.8221%" y="389" width="2.9067%" height="15" fill="rgb(210,85,47)" fg:x="3950" fg:w="610"/><text x="18.9393%" y="399.50">&lt;usize a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (610 samples, 2.91%)</title><rect x="18.8221%" y="373" width="2.9067%" height="15" fill="rgb(224,206,25)" fg:x="3950" fg:w="610"/><text x="18.9393%" y="383.50">core::pt..</text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (512 samples, 2.44%)</title><rect x="21.7288%" y="421" width="2.4397%" height="15" fill="rgb(243,201,19)" fg:x="4560" fg:w="512"/><text x="21.8460%" y="431.50">alloc:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (499 samples, 2.38%)</title><rect x="21.7907%" y="405" width="2.3778%" height="15" fill="rgb(236,59,4)" fg:x="4573" fg:w="499"/><text x="21.9079%" y="415.50">core::..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (499 samples, 2.38%)</title><rect x="21.7907%" y="389" width="2.3778%" height="15" fill="rgb(254,179,45)" fg:x="4573" fg:w="499"/><text x="21.9079%" y="399.50">&lt;usize..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (499 samples, 2.38%)</title><rect x="21.7907%" y="373" width="2.3778%" height="15" fill="rgb(226,14,10)" fg:x="4573" fg:w="499"/><text x="21.9079%" y="383.50">core::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.30%)</title><rect x="24.1733%" y="421" width="0.3050%" height="15" fill="rgb(244,27,41)" fg:x="5073" fg:w="64"/><text x="24.2904%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.30%)</title><rect x="24.1733%" y="405" width="0.3050%" height="15" fill="rgb(235,35,32)" fg:x="5073" fg:w="64"/><text x="24.2904%" y="415.50"></text></g><g><title>&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.30%)</title><rect x="24.1733%" y="389" width="0.3050%" height="15" fill="rgb(218,68,31)" fg:x="5073" fg:w="64"/><text x="24.2904%" y="399.50"></text></g><g><title>&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell as core::cmp::Ord&gt;::cmp (64 samples, 0.30%)</title><rect x="24.1733%" y="373" width="0.3050%" height="15" fill="rgb(207,120,37)" fg:x="5073" fg:w="64"/><text x="24.2904%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1,158 samples, 5.52%)</title><rect x="24.4782%" y="421" width="5.5180%" height="15" fill="rgb(227,98,0)" fg:x="5137" fg:w="1158"/><text x="24.5954%" y="431.50">core::cmp::impls:..</text></g><g><title>core::cmp::PartialOrd::le (656 samples, 3.13%)</title><rect x="26.8703%" y="405" width="3.1259%" height="15" fill="rgb(207,7,3)" fg:x="5639" fg:w="656"/><text x="26.9875%" y="415.50">core::cmp..</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt;&gt;::from (4,248 samples, 20.24%)</title><rect x="9.9543%" y="485" width="20.2421%" height="15" fill="rgb(206,98,19)" fg:x="2089" fg:w="4248"/><text x="10.0714%" y="495.50">&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::convert::Fro..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::rebuild (4,244 samples, 20.22%)</title><rect x="9.9733%" y="469" width="20.2230%" height="15" fill="rgb(217,5,26)" fg:x="2093" fg:w="4244"/><text x="10.0905%" y="479.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::rebuild</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down (3,640 samples, 17.34%)</title><rect x="12.8514%" y="453" width="17.3449%" height="15" fill="rgb(235,190,38)" fg:x="2697" fg:w="3640"/><text x="12.9686%" y="463.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_range (3,632 samples, 17.31%)</title><rect x="12.8895%" y="437" width="17.3068%" height="15" fill="rgb(247,86,24)" fg:x="2705" fg:w="3632"/><text x="13.0067%" y="447.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (42 samples, 0.20%)</title><rect x="29.9962%" y="421" width="0.2001%" height="15" fill="rgb(205,101,16)" fg:x="6295" fg:w="42"/><text x="30.1134%" y="431.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.20%)</title><rect x="29.9962%" y="405" width="0.2001%" height="15" fill="rgb(246,168,33)" fg:x="6295" fg:w="42"/><text x="30.1134%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.20%)</title><rect x="29.9962%" y="389" width="0.2001%" height="15" fill="rgb(231,114,1)" fg:x="6295" fg:w="42"/><text x="30.1134%" y="399.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.05%)</title><rect x="30.1963%" y="453" width="0.0477%" height="15" fill="rgb(207,184,53)" fg:x="6337" fg:w="10"/><text x="30.3135%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.11%)</title><rect x="30.2487%" y="405" width="0.1144%" height="15" fill="rgb(224,95,51)" fg:x="6348" fg:w="24"/><text x="30.3659%" y="415.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.02%)</title><rect x="30.3440%" y="389" width="0.0191%" height="15" fill="rgb(212,188,45)" fg:x="6368" fg:w="4"/><text x="30.4612%" y="399.50"></text></g><g><title>common_interrupt (4 samples, 0.02%)</title><rect x="30.3440%" y="373" width="0.0191%" height="15" fill="rgb(223,154,38)" fg:x="6368" fg:w="4"/><text x="30.4612%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,409 samples, 6.71%)</title><rect x="40.8844%" y="341" width="6.7140%" height="15" fill="rgb(251,22,52)" fg:x="8580" fg:w="1409"/><text x="41.0016%" y="351.50">&lt;core::slice::iter::It..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,408 samples, 6.71%)</title><rect x="40.8892%" y="325" width="6.7092%" height="15" fill="rgb(229,209,22)" fg:x="8581" fg:w="1408"/><text x="41.0064%" y="335.50">&lt;core::ptr::non_null::..</text></g><g><title>&lt;alloc::collections::binary_heap::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,404 samples, 16.22%)</title><rect x="40.8844%" y="373" width="16.2203%" height="15" fill="rgb(234,138,34)" fg:x="8580" fg:w="3404"/><text x="41.0016%" y="383.50">&lt;alloc::collections::binary_heap::Drain&lt;T,A&gt; as core::it..</text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,404 samples, 16.22%)</title><rect x="40.8844%" y="357" width="16.2203%" height="15" fill="rgb(212,95,11)" fg:x="8580" fg:w="3404"/><text x="41.0016%" y="367.50">&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::it..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,995 samples, 9.51%)</title><rect x="47.5984%" y="341" width="9.5063%" height="15" fill="rgb(240,179,47)" fg:x="9989" fg:w="1995"/><text x="47.7156%" y="351.50">core::option::Option&lt;T&gt;::map</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,977 samples, 28.48%)</title><rect x="40.8844%" y="389" width="28.4809%" height="15" fill="rgb(240,163,11)" fg:x="8580" fg:w="5977"/><text x="41.0016%" y="399.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (2,573 samples, 12.26%)</title><rect x="57.1047%" y="373" width="12.2606%" height="15" fill="rgb(236,37,12)" fg:x="11984" fg:w="2573"/><text x="57.2219%" y="383.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,573 samples, 12.26%)</title><rect x="57.1047%" y="357" width="12.2606%" height="15" fill="rgb(232,164,16)" fg:x="11984" fg:w="2573"/><text x="57.2219%" y="367.50">core::ops::function::impls::&lt;impl core::op..</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::replace::_{{closure}} (2,572 samples, 12.26%)</title><rect x="57.1095%" y="341" width="12.2558%" height="15" fill="rgb(244,205,15)" fg:x="11985" fg:w="2572"/><text x="57.2267%" y="351.50">fringe_vs_astar::structures::frontier::Fro..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1,947 samples, 9.28%)</title><rect x="60.0877%" y="325" width="9.2776%" height="15" fill="rgb(223,117,47)" fg:x="12610" fg:w="1947"/><text x="60.2049%" y="335.50">core::tuple::&lt;impl core::cmp::P..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (103 samples, 0.49%)</title><rect x="68.8745%" y="309" width="0.4908%" height="15" fill="rgb(244,107,35)" fg:x="14454" fg:w="103"/><text x="68.9917%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (900 samples, 4.29%)</title><rect x="69.3653%" y="389" width="4.2886%" height="15" fill="rgb(205,140,8)" fg:x="14557" fg:w="900"/><text x="69.4825%" y="399.50">alloc::vec::V..</text></g><g><title>asm_common_interrupt (4 samples, 0.02%)</title><rect x="73.6539%" y="389" width="0.0191%" height="15" fill="rgb(228,84,46)" fg:x="15457" fg:w="4"/><text x="73.7711%" y="399.50"></text></g><g><title>common_interrupt (4 samples, 0.02%)</title><rect x="73.6539%" y="373" width="0.0191%" height="15" fill="rgb(254,188,9)" fg:x="15457" fg:w="4"/><text x="73.7711%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::binary_heap::Drain&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;,fringe_vs_astar::structures::frontier::Frontier::replace::{{closure}}&gt;&gt; (13 samples, 0.06%)</title><rect x="73.6777%" y="389" width="0.0619%" height="15" fill="rgb(206,112,54)" fg:x="15462" fg:w="13"/><text x="73.7949%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Drain&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (13 samples, 0.06%)</title><rect x="73.6777%" y="373" width="0.0619%" height="15" fill="rgb(216,84,49)" fg:x="15462" fg:w="13"/><text x="73.7949%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (13 samples, 0.06%)</title><rect x="73.6777%" y="357" width="0.0619%" height="15" fill="rgb(214,194,35)" fg:x="15462" fg:w="13"/><text x="73.7949%" y="367.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.06%)</title><rect x="73.6777%" y="341" width="0.0619%" height="15" fill="rgb(249,28,3)" fg:x="15462" fg:w="13"/><text x="73.7949%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell,alloc::alloc::Global&gt;&gt; (13 samples, 0.06%)</title><rect x="73.6777%" y="325" width="0.0619%" height="15" fill="rgb(222,56,52)" fg:x="15462" fg:w="13"/><text x="73.7949%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.06%)</title><rect x="73.6777%" y="309" width="0.0619%" height="15" fill="rgb(245,217,50)" fg:x="15462" fg:w="13"/><text x="73.7949%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12,728 samples, 60.65%)</title><rect x="30.2487%" y="421" width="60.6500%" height="15" fill="rgb(213,201,24)" fg:x="6348" fg:w="12728"/><text x="30.3659%" y="431.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12,704 samples, 60.54%)</title><rect x="30.3631%" y="405" width="60.5356%" height="15" fill="rgb(248,116,28)" fg:x="6372" fg:w="12704"/><text x="30.4803%" y="415.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (3,601 samples, 17.16%)</title><rect x="73.7396%" y="389" width="17.1591%" height="15" fill="rgb(219,72,43)" fg:x="15475" fg:w="3601"/><text x="73.8568%" y="399.50">core::ptr::write</text></g><g><title>&lt;alloc::collections::binary_heap::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="90.8987%" y="405" width="0.0238%" height="15" fill="rgb(209,138,14)" fg:x="19076" fg:w="5"/><text x="91.0159%" y="415.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="90.8987%" y="389" width="0.0238%" height="15" fill="rgb(222,18,33)" fg:x="19076" fg:w="5"/><text x="91.0159%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="90.9035%" y="373" width="0.0191%" height="15" fill="rgb(213,199,7)" fg:x="19077" fg:w="4"/><text x="91.0206%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="90.8987%" y="421" width="0.0286%" height="15" fill="rgb(250,110,10)" fg:x="19076" fg:w="6"/><text x="91.0159%" y="431.50"></text></g><g><title>_int_malloc (23 samples, 0.11%)</title><rect x="90.9463%" y="293" width="0.1096%" height="15" fill="rgb(248,123,6)" fg:x="19086" fg:w="23"/><text x="91.0635%" y="303.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.13%)</title><rect x="90.9320%" y="309" width="0.1287%" height="15" fill="rgb(206,91,31)" fg:x="19083" fg:w="27"/><text x="91.0492%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17,023 samples, 81.12%)</title><rect x="9.9543%" y="517" width="81.1160%" height="15" fill="rgb(211,154,13)" fg:x="2089" fg:w="17023"/><text x="10.0714%" y="527.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17,023 samples, 81.12%)</title><rect x="9.9543%" y="501" width="81.1160%" height="15" fill="rgb(225,148,7)" fg:x="2089" fg:w="17023"/><text x="10.0714%" y="511.50">&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>core::iter::traits::iterator::Iterator::collect (12,775 samples, 60.87%)</title><rect x="30.1963%" y="485" width="60.8739%" height="15" fill="rgb(220,160,43)" fg:x="6337" fg:w="12775"/><text x="30.3135%" y="495.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12,775 samples, 60.87%)</title><rect x="30.1963%" y="469" width="60.8739%" height="15" fill="rgb(213,52,39)" fg:x="6337" fg:w="12775"/><text x="30.3135%" y="479.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12,765 samples, 60.83%)</title><rect x="30.2440%" y="453" width="60.8263%" height="15" fill="rgb(243,137,7)" fg:x="6347" fg:w="12765"/><text x="30.3612%" y="463.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12,765 samples, 60.83%)</title><rect x="30.2440%" y="437" width="60.8263%" height="15" fill="rgb(230,79,13)" fg:x="6347" fg:w="12765"/><text x="30.3612%" y="447.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.14%)</title><rect x="90.9273%" y="421" width="0.1430%" height="15" fill="rgb(247,105,23)" fg:x="19082" fg:w="30"/><text x="91.0445%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.14%)</title><rect x="90.9273%" y="405" width="0.1430%" height="15" fill="rgb(223,179,41)" fg:x="19082" fg:w="30"/><text x="91.0445%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.14%)</title><rect x="90.9273%" y="389" width="0.1430%" height="15" fill="rgb(218,9,34)" fg:x="19082" fg:w="30"/><text x="91.0445%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (29 samples, 0.14%)</title><rect x="90.9320%" y="373" width="0.1382%" height="15" fill="rgb(222,106,8)" fg:x="19083" fg:w="29"/><text x="91.0492%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.14%)</title><rect x="90.9320%" y="357" width="0.1382%" height="15" fill="rgb(211,220,0)" fg:x="19083" fg:w="29"/><text x="91.0492%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.14%)</title><rect x="90.9320%" y="341" width="0.1382%" height="15" fill="rgb(229,52,16)" fg:x="19083" fg:w="29"/><text x="91.0492%" y="351.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.14%)</title><rect x="90.9320%" y="325" width="0.1382%" height="15" fill="rgb(212,155,18)" fg:x="19083" fg:w="29"/><text x="91.0492%" y="335.50"></text></g><g><title>_int_free (20 samples, 0.10%)</title><rect x="91.1084%" y="405" width="0.0953%" height="15" fill="rgb(242,21,14)" fg:x="19120" fg:w="20"/><text x="91.2255%" y="415.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (17,999 samples, 85.77%)</title><rect x="5.4417%" y="565" width="85.7667%" height="15" fill="rgb(222,19,48)" fg:x="1142" fg:w="17999"/><text x="5.5589%" y="575.50">fringe_vs_astar::algorithms::astar::AStar::solve</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (17,525 samples, 83.51%)</title><rect x="7.7004%" y="549" width="83.5081%" height="15" fill="rgb(232,45,27)" fg:x="1616" fg:w="17525"/><text x="7.8176%" y="559.50">fringe_vs_astar::structures::frontier::Frontier::push</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::replace (17,057 samples, 81.28%)</title><rect x="9.9304%" y="533" width="81.2780%" height="15" fill="rgb(249,103,42)" fg:x="2084" fg:w="17057"/><text x="10.0476%" y="543.50">fringe_vs_astar::structures::frontier::Frontier::replace</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::BinaryHeap&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (29 samples, 0.14%)</title><rect x="91.0702%" y="517" width="0.1382%" height="15" fill="rgb(246,81,33)" fg:x="19112" fg:w="29"/><text x="91.1874%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (29 samples, 0.14%)</title><rect x="91.0702%" y="501" width="0.1382%" height="15" fill="rgb(252,33,42)" fg:x="19112" fg:w="29"/><text x="91.1874%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (29 samples, 0.14%)</title><rect x="91.0702%" y="485" width="0.1382%" height="15" fill="rgb(209,212,41)" fg:x="19112" fg:w="29"/><text x="91.1874%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.14%)</title><rect x="91.0702%" y="469" width="0.1382%" height="15" fill="rgb(207,154,6)" fg:x="19112" fg:w="29"/><text x="91.1874%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.12%)</title><rect x="91.0845%" y="453" width="0.1239%" height="15" fill="rgb(223,64,47)" fg:x="19115" fg:w="26"/><text x="91.2017%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.12%)</title><rect x="91.0845%" y="437" width="0.1239%" height="15" fill="rgb(211,161,38)" fg:x="19115" fg:w="26"/><text x="91.2017%" y="447.50"></text></g><g><title>__GI___libc_free (26 samples, 0.12%)</title><rect x="91.0845%" y="421" width="0.1239%" height="15" fill="rgb(219,138,40)" fg:x="19115" fg:w="26"/><text x="91.2017%" y="431.50"></text></g><g><title>free_unref_page_list (3 samples, 0.01%)</title><rect x="91.2275%" y="101" width="0.0143%" height="15" fill="rgb(241,228,46)" fg:x="19145" fg:w="3"/><text x="91.3447%" y="111.50"></text></g><g><title>fringe_vs_astar::context::Context::solve (18,575 samples, 88.51%)</title><rect x="2.7352%" y="581" width="88.5114%" height="15" fill="rgb(223,209,38)" fg:x="574" fg:w="18575"/><text x="2.8523%" y="591.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::context::Context::print_solution (8 samples, 0.04%)</title><rect x="91.2084%" y="565" width="0.0381%" height="15" fill="rgb(236,164,45)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (8 samples, 0.04%)</title><rect x="91.2084%" y="549" width="0.0381%" height="15" fill="rgb(231,15,5)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (8 samples, 0.04%)</title><rect x="91.2084%" y="533" width="0.0381%" height="15" fill="rgb(252,35,15)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="91.2084%" y="517" width="0.0381%" height="15" fill="rgb(248,181,18)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.04%)</title><rect x="91.2084%" y="501" width="0.0381%" height="15" fill="rgb(233,39,42)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.04%)</title><rect x="91.2084%" y="485" width="0.0381%" height="15" fill="rgb(238,110,33)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="495.50"></text></g><g><title>__GI___libc_free (8 samples, 0.04%)</title><rect x="91.2084%" y="469" width="0.0381%" height="15" fill="rgb(233,195,10)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="479.50"></text></g><g><title>_int_free (8 samples, 0.04%)</title><rect x="91.2084%" y="453" width="0.0381%" height="15" fill="rgb(254,105,3)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="463.50"></text></g><g><title>systrim (8 samples, 0.04%)</title><rect x="91.2084%" y="437" width="0.0381%" height="15" fill="rgb(221,225,9)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="447.50"></text></g><g><title>__glibc_morecore (8 samples, 0.04%)</title><rect x="91.2084%" y="421" width="0.0381%" height="15" fill="rgb(224,227,45)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="431.50"></text></g><g><title>__GI___sbrk (8 samples, 0.04%)</title><rect x="91.2084%" y="405" width="0.0381%" height="15" fill="rgb(229,198,43)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="415.50"></text></g><g><title>__GI___sbrk (8 samples, 0.04%)</title><rect x="91.2084%" y="389" width="0.0381%" height="15" fill="rgb(206,209,35)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="399.50"></text></g><g><title>__brk (8 samples, 0.04%)</title><rect x="91.2084%" y="373" width="0.0381%" height="15" fill="rgb(245,195,53)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="91.2084%" y="357" width="0.0381%" height="15" fill="rgb(240,92,26)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="367.50"></text></g><g><title>do_syscall_64 (8 samples, 0.04%)</title><rect x="91.2084%" y="341" width="0.0381%" height="15" fill="rgb(207,40,23)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="351.50"></text></g><g><title>x64_sys_call (8 samples, 0.04%)</title><rect x="91.2084%" y="325" width="0.0381%" height="15" fill="rgb(223,111,35)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="335.50"></text></g><g><title>__x64_sys_brk (8 samples, 0.04%)</title><rect x="91.2084%" y="309" width="0.0381%" height="15" fill="rgb(229,147,28)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="319.50"></text></g><g><title>__do_sys_brk (8 samples, 0.04%)</title><rect x="91.2084%" y="293" width="0.0381%" height="15" fill="rgb(211,29,28)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="303.50"></text></g><g><title>do_vmi_align_munmap (8 samples, 0.04%)</title><rect x="91.2084%" y="277" width="0.0381%" height="15" fill="rgb(228,72,33)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="287.50"></text></g><g><title>unmap_region (8 samples, 0.04%)</title><rect x="91.2084%" y="261" width="0.0381%" height="15" fill="rgb(205,214,31)" fg:x="19141" fg:w="8"/><text x="91.3256%" y="271.50"></text></g><g><title>unmap_vmas (7 samples, 0.03%)</title><rect x="91.2132%" y="245" width="0.0334%" height="15" fill="rgb(224,111,15)" fg:x="19142" fg:w="7"/><text x="91.3304%" y="255.50"></text></g><g><title>unmap_single_vma (7 samples, 0.03%)</title><rect x="91.2132%" y="229" width="0.0334%" height="15" fill="rgb(253,21,26)" fg:x="19142" fg:w="7"/><text x="91.3304%" y="239.50"></text></g><g><title>unmap_page_range (7 samples, 0.03%)</title><rect x="91.2132%" y="213" width="0.0334%" height="15" fill="rgb(245,139,43)" fg:x="19142" fg:w="7"/><text x="91.3304%" y="223.50"></text></g><g><title>zap_pmd_range.isra.0 (7 samples, 0.03%)</title><rect x="91.2132%" y="197" width="0.0334%" height="15" fill="rgb(252,170,7)" fg:x="19142" fg:w="7"/><text x="91.3304%" y="207.50"></text></g><g><title>zap_pte_range (7 samples, 0.03%)</title><rect x="91.2132%" y="181" width="0.0334%" height="15" fill="rgb(231,118,14)" fg:x="19142" fg:w="7"/><text x="91.3304%" y="191.50"></text></g><g><title>tlb_flush_mmu (5 samples, 0.02%)</title><rect x="91.2227%" y="165" width="0.0238%" height="15" fill="rgb(238,83,0)" fg:x="19144" fg:w="5"/><text x="91.3399%" y="175.50"></text></g><g><title>tlb_batch_pages_flush (5 samples, 0.02%)</title><rect x="91.2227%" y="149" width="0.0238%" height="15" fill="rgb(221,39,39)" fg:x="19144" fg:w="5"/><text x="91.3399%" y="159.50"></text></g><g><title>free_pages_and_swap_cache (5 samples, 0.02%)</title><rect x="91.2227%" y="133" width="0.0238%" height="15" fill="rgb(222,119,46)" fg:x="19144" fg:w="5"/><text x="91.3399%" y="143.50"></text></g><g><title>release_pages (5 samples, 0.02%)</title><rect x="91.2227%" y="117" width="0.0238%" height="15" fill="rgb(222,165,49)" fg:x="19144" fg:w="5"/><text x="91.3399%" y="127.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::GridMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (20 samples, 0.10%)</title><rect x="91.3418%" y="549" width="0.0953%" height="15" fill="rgb(219,113,52)" fg:x="19169" fg:w="20"/><text x="91.4590%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.05%)</title><rect x="91.3847%" y="533" width="0.0524%" height="15" fill="rgb(214,7,15)" fg:x="19178" fg:w="11"/><text x="91.5019%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11 samples, 0.05%)</title><rect x="91.3847%" y="517" width="0.0524%" height="15" fill="rgb(235,32,4)" fg:x="19178" fg:w="11"/><text x="91.5019%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.05%)</title><rect x="91.3847%" y="501" width="0.0524%" height="15" fill="rgb(238,90,54)" fg:x="19178" fg:w="11"/><text x="91.5019%" y="511.50"></text></g><g><title>__folio_throttle_swaprate (3 samples, 0.01%)</title><rect x="91.7183%" y="277" width="0.0143%" height="15" fill="rgb(213,208,19)" fg:x="19248" fg:w="3"/><text x="91.8355%" y="287.50"></text></g><g><title>blk_cgroup_congested (3 samples, 0.01%)</title><rect x="91.7183%" y="261" width="0.0143%" height="15" fill="rgb(233,156,4)" fg:x="19248" fg:w="3"/><text x="91.8355%" y="271.50"></text></g><g><title>__rcu_read_unlock (21 samples, 0.10%)</title><rect x="91.7516%" y="261" width="0.1001%" height="15" fill="rgb(207,194,5)" fg:x="19255" fg:w="21"/><text x="91.8688%" y="271.50"></text></g><g><title>__count_memcg_events (7 samples, 0.03%)</title><rect x="91.8755%" y="245" width="0.0334%" height="15" fill="rgb(206,111,30)" fg:x="19281" fg:w="7"/><text x="91.9927%" y="255.50"></text></g><g><title>cgroup_rstat_updated (3 samples, 0.01%)</title><rect x="91.8946%" y="229" width="0.0143%" height="15" fill="rgb(243,70,54)" fg:x="19285" fg:w="3"/><text x="92.0118%" y="239.50"></text></g><g><title>charge_memcg (19 samples, 0.09%)</title><rect x="91.8517%" y="261" width="0.0905%" height="15" fill="rgb(242,28,8)" fg:x="19276" fg:w="19"/><text x="91.9689%" y="271.50"></text></g><g><title>try_charge_memcg (5 samples, 0.02%)</title><rect x="91.9184%" y="245" width="0.0238%" height="15" fill="rgb(219,106,18)" fg:x="19290" fg:w="5"/><text x="92.0356%" y="255.50"></text></g><g><title>consume_stock (3 samples, 0.01%)</title><rect x="91.9280%" y="229" width="0.0143%" height="15" fill="rgb(244,222,10)" fg:x="19292" fg:w="3"/><text x="92.0451%" y="239.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.02%)</title><rect x="91.9422%" y="261" width="0.0238%" height="15" fill="rgb(236,179,52)" fg:x="19295" fg:w="5"/><text x="92.0594%" y="271.50"></text></g><g><title>__mem_cgroup_charge (51 samples, 0.24%)</title><rect x="91.7373%" y="277" width="0.2430%" height="15" fill="rgb(213,23,39)" fg:x="19252" fg:w="51"/><text x="91.8545%" y="287.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.01%)</title><rect x="91.9804%" y="277" width="0.0143%" height="15" fill="rgb(238,48,10)" fg:x="19303" fg:w="3"/><text x="92.0976%" y="287.50"></text></g><g><title>lru_add_fn (8 samples, 0.04%)</title><rect x="92.0185%" y="229" width="0.0381%" height="15" fill="rgb(251,196,23)" fg:x="19311" fg:w="8"/><text x="92.1357%" y="239.50"></text></g><g><title>lru_gen_add_folio (4 samples, 0.02%)</title><rect x="92.0375%" y="213" width="0.0191%" height="15" fill="rgb(250,152,24)" fg:x="19315" fg:w="4"/><text x="92.1547%" y="223.50"></text></g><g><title>folio_add_lru_vma (13 samples, 0.06%)</title><rect x="91.9994%" y="277" width="0.0619%" height="15" fill="rgb(209,150,17)" fg:x="19307" fg:w="13"/><text x="92.1166%" y="287.50"></text></g><g><title>folio_add_lru (13 samples, 0.06%)</title><rect x="91.9994%" y="261" width="0.0619%" height="15" fill="rgb(234,202,34)" fg:x="19307" fg:w="13"/><text x="92.1166%" y="271.50"></text></g><g><title>folio_batch_move_lru (11 samples, 0.05%)</title><rect x="92.0090%" y="245" width="0.0524%" height="15" fill="rgb(253,148,53)" fg:x="19309" fg:w="11"/><text x="92.1261%" y="255.50"></text></g><g><title>folio_add_new_anon_rmap (6 samples, 0.03%)</title><rect x="92.0614%" y="277" width="0.0286%" height="15" fill="rgb(218,129,16)" fg:x="19320" fg:w="6"/><text x="92.1786%" y="287.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.02%)</title><rect x="92.0709%" y="261" width="0.0191%" height="15" fill="rgb(216,85,19)" fg:x="19322" fg:w="4"/><text x="92.1881%" y="271.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.01%)</title><rect x="92.0757%" y="245" width="0.0143%" height="15" fill="rgb(235,228,7)" fg:x="19323" fg:w="3"/><text x="92.1929%" y="255.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="92.1424%" y="213" width="0.0238%" height="15" fill="rgb(245,175,0)" fg:x="19337" fg:w="5"/><text x="92.2596%" y="223.50"></text></g><g><title>do_anonymous_page (109 samples, 0.52%)</title><rect x="91.7040%" y="293" width="0.5194%" height="15" fill="rgb(208,168,36)" fg:x="19245" fg:w="109"/><text x="91.8212%" y="303.50"></text></g><g><title>vma_alloc_folio (27 samples, 0.13%)</title><rect x="92.0947%" y="277" width="0.1287%" height="15" fill="rgb(246,171,24)" fg:x="19327" fg:w="27"/><text x="92.2119%" y="287.50"></text></g><g><title>__folio_alloc (24 samples, 0.11%)</title><rect x="92.1090%" y="261" width="0.1144%" height="15" fill="rgb(215,142,24)" fg:x="19330" fg:w="24"/><text x="92.2262%" y="271.50"></text></g><g><title>__alloc_pages (24 samples, 0.11%)</title><rect x="92.1090%" y="245" width="0.1144%" height="15" fill="rgb(250,187,7)" fg:x="19330" fg:w="24"/><text x="92.2262%" y="255.50"></text></g><g><title>get_page_from_freelist (23 samples, 0.11%)</title><rect x="92.1138%" y="229" width="0.1096%" height="15" fill="rgb(228,66,33)" fg:x="19331" fg:w="23"/><text x="92.2310%" y="239.50"></text></g><g><title>rmqueue (11 samples, 0.05%)</title><rect x="92.1710%" y="213" width="0.0524%" height="15" fill="rgb(234,215,21)" fg:x="19343" fg:w="11"/><text x="92.2882%" y="223.50"></text></g><g><title>__rmqueue_pcplist (10 samples, 0.05%)</title><rect x="92.1757%" y="197" width="0.0477%" height="15" fill="rgb(222,191,20)" fg:x="19344" fg:w="10"/><text x="92.2929%" y="207.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.04%)</title><rect x="92.1853%" y="181" width="0.0381%" height="15" fill="rgb(245,79,54)" fg:x="19346" fg:w="8"/><text x="92.3025%" y="191.50"></text></g><g><title>__handle_mm_fault (114 samples, 0.54%)</title><rect x="91.6897%" y="325" width="0.5432%" height="15" fill="rgb(240,10,37)" fg:x="19242" fg:w="114"/><text x="91.8069%" y="335.50"></text></g><g><title>handle_pte_fault (111 samples, 0.53%)</title><rect x="91.7040%" y="309" width="0.5289%" height="15" fill="rgb(214,192,32)" fg:x="19245" fg:w="111"/><text x="91.8212%" y="319.50"></text></g><g><title>handle_mm_fault (118 samples, 0.56%)</title><rect x="91.6849%" y="341" width="0.5623%" height="15" fill="rgb(209,36,54)" fg:x="19241" fg:w="118"/><text x="91.8021%" y="351.50"></text></g><g><title>do_user_addr_fault (128 samples, 0.61%)</title><rect x="91.6563%" y="357" width="0.6099%" height="15" fill="rgb(220,10,11)" fg:x="19235" fg:w="128"/><text x="91.7735%" y="367.50"></text></g><g><title>lock_vma_under_rcu (4 samples, 0.02%)</title><rect x="92.2472%" y="341" width="0.0191%" height="15" fill="rgb(221,106,17)" fg:x="19359" fg:w="4"/><text x="92.3644%" y="351.50"></text></g><g><title>mas_walk (4 samples, 0.02%)</title><rect x="92.2472%" y="325" width="0.0191%" height="15" fill="rgb(251,142,44)" fg:x="19359" fg:w="4"/><text x="92.3644%" y="335.50"></text></g><g><title>mtree_range_walk (3 samples, 0.01%)</title><rect x="92.2520%" y="309" width="0.0143%" height="15" fill="rgb(238,13,15)" fg:x="19360" fg:w="3"/><text x="92.3692%" y="319.50"></text></g><g><title>asm_exc_page_fault (136 samples, 0.65%)</title><rect x="91.6325%" y="389" width="0.6481%" height="15" fill="rgb(208,107,27)" fg:x="19230" fg:w="136"/><text x="91.7497%" y="399.50"></text></g><g><title>exc_page_fault (134 samples, 0.64%)</title><rect x="91.6420%" y="373" width="0.6385%" height="15" fill="rgb(205,136,37)" fg:x="19232" fg:w="134"/><text x="91.7592%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (167 samples, 0.80%)</title><rect x="91.5610%" y="405" width="0.7958%" height="15" fill="rgb(250,205,27)" fg:x="19215" fg:w="167"/><text x="91.6782%" y="415.50"></text></g><g><title>sync_regs (15 samples, 0.07%)</title><rect x="92.2853%" y="389" width="0.0715%" height="15" fill="rgb(210,80,43)" fg:x="19367" fg:w="15"/><text x="92.4025%" y="399.50"></text></g><g><title>handle_mm_fault (3 samples, 0.01%)</title><rect x="92.3616%" y="341" width="0.0143%" height="15" fill="rgb(247,160,36)" fg:x="19383" fg:w="3"/><text x="92.4788%" y="351.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="92.3616%" y="325" width="0.0143%" height="15" fill="rgb(234,13,49)" fg:x="19383" fg:w="3"/><text x="92.4788%" y="335.50"></text></g><g><title>handle_pte_fault (3 samples, 0.01%)</title><rect x="92.3616%" y="309" width="0.0143%" height="15" fill="rgb(234,122,0)" fg:x="19383" fg:w="3"/><text x="92.4788%" y="319.50"></text></g><g><title>do_anonymous_page (3 samples, 0.01%)</title><rect x="92.3616%" y="293" width="0.0143%" height="15" fill="rgb(207,146,38)" fg:x="19383" fg:w="3"/><text x="92.4788%" y="303.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.02%)</title><rect x="92.3616%" y="389" width="0.0191%" height="15" fill="rgb(207,177,25)" fg:x="19383" fg:w="4"/><text x="92.4788%" y="399.50"></text></g><g><title>exc_page_fault (4 samples, 0.02%)</title><rect x="92.3616%" y="373" width="0.0191%" height="15" fill="rgb(211,178,42)" fg:x="19383" fg:w="4"/><text x="92.4788%" y="383.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="92.3616%" y="357" width="0.0191%" height="15" fill="rgb(230,69,54)" fg:x="19383" fg:w="4"/><text x="92.4788%" y="367.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.01%)</title><rect x="92.4235%" y="181" width="0.0143%" height="15" fill="rgb(214,135,41)" fg:x="19396" fg:w="3"/><text x="92.5407%" y="191.50"></text></g><g><title>mas_preallocate (6 samples, 0.03%)</title><rect x="92.4235%" y="213" width="0.0286%" height="15" fill="rgb(237,67,25)" fg:x="19396" fg:w="6"/><text x="92.5407%" y="223.50"></text></g><g><title>mas_alloc_nodes (6 samples, 0.03%)</title><rect x="92.4235%" y="197" width="0.0286%" height="15" fill="rgb(222,189,50)" fg:x="19396" fg:w="6"/><text x="92.5407%" y="207.50"></text></g><g><title>do_syscall_64 (11 samples, 0.05%)</title><rect x="92.4140%" y="293" width="0.0524%" height="15" fill="rgb(245,148,34)" fg:x="19394" fg:w="11"/><text x="92.5312%" y="303.50"></text></g><g><title>x64_sys_call (11 samples, 0.05%)</title><rect x="92.4140%" y="277" width="0.0524%" height="15" fill="rgb(222,29,6)" fg:x="19394" fg:w="11"/><text x="92.5312%" y="287.50"></text></g><g><title>__x64_sys_brk (11 samples, 0.05%)</title><rect x="92.4140%" y="261" width="0.0524%" height="15" fill="rgb(221,189,43)" fg:x="19394" fg:w="11"/><text x="92.5312%" y="271.50"></text></g><g><title>__do_sys_brk (11 samples, 0.05%)</title><rect x="92.4140%" y="245" width="0.0524%" height="15" fill="rgb(207,36,27)" fg:x="19394" fg:w="11"/><text x="92.5312%" y="255.50"></text></g><g><title>do_brk_flags (9 samples, 0.04%)</title><rect x="92.4235%" y="229" width="0.0429%" height="15" fill="rgb(217,90,24)" fg:x="19396" fg:w="9"/><text x="92.5407%" y="239.50"></text></g><g><title>__glibc_morecore (13 samples, 0.06%)</title><rect x="92.4092%" y="373" width="0.0619%" height="15" fill="rgb(224,66,35)" fg:x="19393" fg:w="13"/><text x="92.5264%" y="383.50"></text></g><g><title>__GI___sbrk (13 samples, 0.06%)</title><rect x="92.4092%" y="357" width="0.0619%" height="15" fill="rgb(221,13,50)" fg:x="19393" fg:w="13"/><text x="92.5264%" y="367.50"></text></g><g><title>__GI___sbrk (13 samples, 0.06%)</title><rect x="92.4092%" y="341" width="0.0619%" height="15" fill="rgb(236,68,49)" fg:x="19393" fg:w="13"/><text x="92.5264%" y="351.50"></text></g><g><title>__brk (13 samples, 0.06%)</title><rect x="92.4092%" y="325" width="0.0619%" height="15" fill="rgb(229,146,28)" fg:x="19393" fg:w="13"/><text x="92.5264%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="92.4140%" y="309" width="0.0572%" height="15" fill="rgb(225,31,38)" fg:x="19394" fg:w="12"/><text x="92.5312%" y="319.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="92.4712%" y="309" width="0.0143%" height="15" fill="rgb(250,208,3)" fg:x="19406" fg:w="3"/><text x="92.5884%" y="319.50"></text></g><g><title>handle_pte_fault (3 samples, 0.01%)</title><rect x="92.4712%" y="293" width="0.0143%" height="15" fill="rgb(246,54,23)" fg:x="19406" fg:w="3"/><text x="92.5884%" y="303.50"></text></g><g><title>do_anonymous_page (3 samples, 0.01%)</title><rect x="92.4712%" y="277" width="0.0143%" height="15" fill="rgb(243,76,11)" fg:x="19406" fg:w="3"/><text x="92.5884%" y="287.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.02%)</title><rect x="92.4712%" y="373" width="0.0191%" height="15" fill="rgb(245,21,50)" fg:x="19406" fg:w="4"/><text x="92.5884%" y="383.50"></text></g><g><title>exc_page_fault (4 samples, 0.02%)</title><rect x="92.4712%" y="357" width="0.0191%" height="15" fill="rgb(228,9,43)" fg:x="19406" fg:w="4"/><text x="92.5884%" y="367.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="92.4712%" y="341" width="0.0191%" height="15" fill="rgb(208,100,47)" fg:x="19406" fg:w="4"/><text x="92.5884%" y="351.50"></text></g><g><title>handle_mm_fault (4 samples, 0.02%)</title><rect x="92.4712%" y="325" width="0.0191%" height="15" fill="rgb(232,26,8)" fg:x="19406" fg:w="4"/><text x="92.5884%" y="335.50"></text></g><g><title>_int_malloc (29 samples, 0.14%)</title><rect x="92.3616%" y="405" width="0.1382%" height="15" fill="rgb(216,166,38)" fg:x="19383" fg:w="29"/><text x="92.4788%" y="415.50"></text></g><g><title>sysmalloc (22 samples, 0.10%)</title><rect x="92.3949%" y="389" width="0.1048%" height="15" fill="rgb(251,202,51)" fg:x="19390" fg:w="22"/><text x="92.5121%" y="399.50"></text></g><g><title>__mem_cgroup_charge (4 samples, 0.02%)</title><rect x="92.5093%" y="293" width="0.0191%" height="15" fill="rgb(254,216,34)" fg:x="19414" fg:w="4"/><text x="92.6265%" y="303.50"></text></g><g><title>do_anonymous_page (7 samples, 0.03%)</title><rect x="92.5093%" y="309" width="0.0334%" height="15" fill="rgb(251,32,27)" fg:x="19414" fg:w="7"/><text x="92.6265%" y="319.50"></text></g><g><title>__handle_mm_fault (9 samples, 0.04%)</title><rect x="92.5045%" y="341" width="0.0429%" height="15" fill="rgb(208,127,28)" fg:x="19413" fg:w="9"/><text x="92.6217%" y="351.50"></text></g><g><title>handle_pte_fault (8 samples, 0.04%)</title><rect x="92.5093%" y="325" width="0.0381%" height="15" fill="rgb(224,137,22)" fg:x="19414" fg:w="8"/><text x="92.6265%" y="335.50"></text></g><g><title>do_user_addr_fault (11 samples, 0.05%)</title><rect x="92.4998%" y="373" width="0.0524%" height="15" fill="rgb(254,70,32)" fg:x="19412" fg:w="11"/><text x="92.6169%" y="383.50"></text></g><g><title>handle_mm_fault (11 samples, 0.05%)</title><rect x="92.4998%" y="357" width="0.0524%" height="15" fill="rgb(229,75,37)" fg:x="19412" fg:w="11"/><text x="92.6169%" y="367.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.06%)</title><rect x="92.4998%" y="405" width="0.0572%" height="15" fill="rgb(252,64,23)" fg:x="19412" fg:w="12"/><text x="92.6169%" y="415.50"></text></g><g><title>exc_page_fault (12 samples, 0.06%)</title><rect x="92.4998%" y="389" width="0.0572%" height="15" fill="rgb(232,162,48)" fg:x="19412" fg:w="12"/><text x="92.6169%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (212 samples, 1.01%)</title><rect x="91.5563%" y="501" width="1.0102%" height="15" fill="rgb(246,160,12)" fg:x="19214" fg:w="212"/><text x="91.6735%" y="511.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (212 samples, 1.01%)</title><rect x="91.5563%" y="485" width="1.0102%" height="15" fill="rgb(247,166,0)" fg:x="19214" fg:w="212"/><text x="91.6735%" y="495.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (212 samples, 1.01%)</title><rect x="91.5563%" y="469" width="1.0102%" height="15" fill="rgb(249,219,21)" fg:x="19214" fg:w="212"/><text x="91.6735%" y="479.50">a..</text></g><g><title>alloc::alloc::realloc (212 samples, 1.01%)</title><rect x="91.5563%" y="453" width="1.0102%" height="15" fill="rgb(205,209,3)" fg:x="19214" fg:w="212"/><text x="91.6735%" y="463.50">a..</text></g><g><title>__GI___libc_realloc (212 samples, 1.01%)</title><rect x="91.5563%" y="437" width="1.0102%" height="15" fill="rgb(243,44,1)" fg:x="19214" fg:w="212"/><text x="91.6735%" y="447.50">_..</text></g><g><title>_int_realloc (212 samples, 1.01%)</title><rect x="91.5563%" y="421" width="1.0102%" height="15" fill="rgb(206,159,16)" fg:x="19214" fg:w="212"/><text x="91.6735%" y="431.50">_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (214 samples, 1.02%)</title><rect x="91.5515%" y="533" width="1.0197%" height="15" fill="rgb(244,77,30)" fg:x="19213" fg:w="214"/><text x="91.6687%" y="543.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (214 samples, 1.02%)</title><rect x="91.5515%" y="517" width="1.0197%" height="15" fill="rgb(218,69,12)" fg:x="19213" fg:w="214"/><text x="91.6687%" y="527.50">a..</text></g><g><title>__rcu_read_unlock (13 samples, 0.06%)</title><rect x="92.7618%" y="389" width="0.0619%" height="15" fill="rgb(212,87,7)" fg:x="19467" fg:w="13"/><text x="92.8790%" y="399.50"></text></g><g><title>__count_memcg_events (5 samples, 0.02%)</title><rect x="92.8381%" y="373" width="0.0238%" height="15" fill="rgb(245,114,25)" fg:x="19483" fg:w="5"/><text x="92.9553%" y="383.50"></text></g><g><title>charge_memcg (11 samples, 0.05%)</title><rect x="92.8238%" y="389" width="0.0524%" height="15" fill="rgb(210,61,42)" fg:x="19480" fg:w="11"/><text x="92.9410%" y="399.50"></text></g><g><title>__mem_cgroup_charge (42 samples, 0.20%)</title><rect x="92.7428%" y="405" width="0.2001%" height="15" fill="rgb(211,52,33)" fg:x="19463" fg:w="42"/><text x="92.8600%" y="415.50"></text></g><g><title>get_mem_cgroup_from_mm (14 samples, 0.07%)</title><rect x="92.8762%" y="389" width="0.0667%" height="15" fill="rgb(234,58,33)" fg:x="19491" fg:w="14"/><text x="92.9934%" y="399.50"></text></g><g><title>folio_add_lru_vma (8 samples, 0.04%)</title><rect x="92.9572%" y="405" width="0.0381%" height="15" fill="rgb(220,115,36)" fg:x="19508" fg:w="8"/><text x="93.0744%" y="415.50"></text></g><g><title>folio_add_lru (8 samples, 0.04%)</title><rect x="92.9572%" y="389" width="0.0381%" height="15" fill="rgb(243,153,54)" fg:x="19508" fg:w="8"/><text x="93.0744%" y="399.50"></text></g><g><title>folio_batch_move_lru (6 samples, 0.03%)</title><rect x="92.9667%" y="373" width="0.0286%" height="15" fill="rgb(251,47,18)" fg:x="19510" fg:w="6"/><text x="93.0839%" y="383.50"></text></g><g><title>lru_add_fn (4 samples, 0.02%)</title><rect x="92.9763%" y="357" width="0.0191%" height="15" fill="rgb(242,102,42)" fg:x="19512" fg:w="4"/><text x="93.0935%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.02%)</title><rect x="92.9953%" y="405" width="0.0238%" height="15" fill="rgb(234,31,38)" fg:x="19516" fg:w="5"/><text x="93.1125%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.01%)</title><rect x="93.0049%" y="389" width="0.0143%" height="15" fill="rgb(221,117,51)" fg:x="19518" fg:w="3"/><text x="93.1220%" y="399.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.01%)</title><rect x="93.0049%" y="373" width="0.0143%" height="15" fill="rgb(212,20,18)" fg:x="19518" fg:w="3"/><text x="93.1220%" y="383.50"></text></g><g><title>inc_mm_counter (3 samples, 0.01%)</title><rect x="93.0192%" y="405" width="0.0143%" height="15" fill="rgb(245,133,36)" fg:x="19521" fg:w="3"/><text x="93.1363%" y="415.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.01%)</title><rect x="93.0192%" y="389" width="0.0143%" height="15" fill="rgb(212,6,19)" fg:x="19521" fg:w="3"/><text x="93.1363%" y="399.50"></text></g><g><title>__next_zones_zonelist (3 samples, 0.01%)</title><rect x="93.0430%" y="357" width="0.0143%" height="15" fill="rgb(218,1,36)" fg:x="19526" fg:w="3"/><text x="93.1602%" y="367.50"></text></g><g><title>_raw_spin_trylock (3 samples, 0.01%)</title><rect x="93.0668%" y="341" width="0.0143%" height="15" fill="rgb(246,84,54)" fg:x="19531" fg:w="3"/><text x="93.1840%" y="351.50"></text></g><g><title>clear_page_erms (4 samples, 0.02%)</title><rect x="93.0811%" y="341" width="0.0191%" height="15" fill="rgb(242,110,6)" fg:x="19534" fg:w="4"/><text x="93.1983%" y="351.50"></text></g><g><title>__alloc_pages (23 samples, 0.11%)</title><rect x="93.0382%" y="373" width="0.1096%" height="15" fill="rgb(214,47,5)" fg:x="19525" fg:w="23"/><text x="93.1554%" y="383.50"></text></g><g><title>get_page_from_freelist (19 samples, 0.09%)</title><rect x="93.0573%" y="357" width="0.0905%" height="15" fill="rgb(218,159,25)" fg:x="19529" fg:w="19"/><text x="93.1745%" y="367.50"></text></g><g><title>rmqueue (10 samples, 0.05%)</title><rect x="93.1002%" y="341" width="0.0477%" height="15" fill="rgb(215,211,28)" fg:x="19538" fg:w="10"/><text x="93.2173%" y="351.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.04%)</title><rect x="93.1049%" y="325" width="0.0429%" height="15" fill="rgb(238,59,32)" fg:x="19539" fg:w="9"/><text x="93.2221%" y="335.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.04%)</title><rect x="93.1097%" y="309" width="0.0381%" height="15" fill="rgb(226,82,3)" fg:x="19540" fg:w="8"/><text x="93.2269%" y="319.50"></text></g><g><title>do_anonymous_page (86 samples, 0.41%)</title><rect x="92.7428%" y="421" width="0.4098%" height="15" fill="rgb(240,164,32)" fg:x="19463" fg:w="86"/><text x="92.8600%" y="431.50"></text></g><g><title>vma_alloc_folio (25 samples, 0.12%)</title><rect x="93.0335%" y="405" width="0.1191%" height="15" fill="rgb(232,46,7)" fg:x="19524" fg:w="25"/><text x="93.1506%" y="415.50"></text></g><g><title>__folio_alloc (24 samples, 0.11%)</title><rect x="93.0382%" y="389" width="0.1144%" height="15" fill="rgb(229,129,53)" fg:x="19525" fg:w="24"/><text x="93.1554%" y="399.50"></text></g><g><title>__handle_mm_fault (98 samples, 0.47%)</title><rect x="92.6999%" y="453" width="0.4670%" height="15" fill="rgb(234,188,29)" fg:x="19454" fg:w="98"/><text x="92.8171%" y="463.50"></text></g><g><title>handle_pte_fault (92 samples, 0.44%)</title><rect x="92.7285%" y="437" width="0.4384%" height="15" fill="rgb(246,141,4)" fg:x="19460" fg:w="92"/><text x="92.8457%" y="447.50"></text></g><g><title>handle_mm_fault (103 samples, 0.49%)</title><rect x="92.6951%" y="469" width="0.4908%" height="15" fill="rgb(229,23,39)" fg:x="19453" fg:w="103"/><text x="92.8123%" y="479.50"></text></g><g><title>do_user_addr_fault (111 samples, 0.53%)</title><rect x="92.6713%" y="485" width="0.5289%" height="15" fill="rgb(206,12,3)" fg:x="19448" fg:w="111"/><text x="92.7885%" y="495.50"></text></g><g><title>lock_vma_under_rcu (3 samples, 0.01%)</title><rect x="93.1859%" y="469" width="0.0143%" height="15" fill="rgb(252,226,20)" fg:x="19556" fg:w="3"/><text x="93.3031%" y="479.50"></text></g><g><title>asm_exc_page_fault (114 samples, 0.54%)</title><rect x="92.6618%" y="517" width="0.5432%" height="15" fill="rgb(216,123,35)" fg:x="19446" fg:w="114"/><text x="92.7790%" y="527.50"></text></g><g><title>exc_page_fault (112 samples, 0.53%)</title><rect x="92.6713%" y="501" width="0.5337%" height="15" fill="rgb(212,68,40)" fg:x="19448" fg:w="112"/><text x="92.7885%" y="511.50"></text></g><g><title>error_entry (5 samples, 0.02%)</title><rect x="93.2050%" y="517" width="0.0238%" height="15" fill="rgb(254,125,32)" fg:x="19560" fg:w="5"/><text x="93.3222%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (382 samples, 1.82%)</title><rect x="91.4371%" y="549" width="1.8203%" height="15" fill="rgb(253,97,22)" fg:x="19189" fg:w="382"/><text x="91.5543%" y="559.50">allo..</text></g><g><title>core::ptr::write (144 samples, 0.69%)</title><rect x="92.5712%" y="533" width="0.6862%" height="15" fill="rgb(241,101,14)" fg:x="19427" fg:w="144"/><text x="92.6884%" y="543.50"></text></g><g><title>sync_regs (6 samples, 0.03%)</title><rect x="93.2288%" y="517" width="0.0286%" height="15" fill="rgb(238,103,29)" fg:x="19565" fg:w="6"/><text x="93.3460%" y="527.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::GridMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (14 samples, 0.07%)</title><rect x="93.5147%" y="533" width="0.0667%" height="15" fill="rgb(233,195,47)" fg:x="19625" fg:w="14"/><text x="93.6319%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.02%)</title><rect x="93.5624%" y="517" width="0.0191%" height="15" fill="rgb(246,218,30)" fg:x="19635" fg:w="4"/><text x="93.6796%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.02%)</title><rect x="93.5624%" y="501" width="0.0191%" height="15" fill="rgb(219,145,47)" fg:x="19635" fg:w="4"/><text x="93.6796%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.02%)</title><rect x="93.5624%" y="485" width="0.0191%" height="15" fill="rgb(243,12,26)" fg:x="19635" fg:w="4"/><text x="93.6796%" y="495.50"></text></g><g><title>checked_request2size (6 samples, 0.03%)</title><rect x="93.7339%" y="453" width="0.0286%" height="15" fill="rgb(214,87,16)" fg:x="19671" fg:w="6"/><text x="93.8511%" y="463.50"></text></g><g><title>__GI___libc_malloc (47 samples, 0.22%)</title><rect x="93.5814%" y="469" width="0.2240%" height="15" fill="rgb(208,99,42)" fg:x="19639" fg:w="47"/><text x="93.6986%" y="479.50"></text></g><g><title>tcache_get (9 samples, 0.04%)</title><rect x="93.7625%" y="453" width="0.0429%" height="15" fill="rgb(253,99,2)" fg:x="19677" fg:w="9"/><text x="93.8797%" y="463.50"></text></g><g><title>__rdl_alloc (7 samples, 0.03%)</title><rect x="93.8054%" y="469" width="0.0334%" height="15" fill="rgb(220,168,23)" fg:x="19686" fg:w="7"/><text x="93.9226%" y="479.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="93.8387%" y="469" width="0.0143%" height="15" fill="rgb(242,38,24)" fg:x="19693" fg:w="3"/><text x="93.9559%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (61 samples, 0.29%)</title><rect x="93.5814%" y="533" width="0.2907%" height="15" fill="rgb(225,182,9)" fg:x="19639" fg:w="61"/><text x="93.6986%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.29%)</title><rect x="93.5814%" y="517" width="0.2907%" height="15" fill="rgb(243,178,37)" fg:x="19639" fg:w="61"/><text x="93.6986%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.29%)</title><rect x="93.5814%" y="501" width="0.2907%" height="15" fill="rgb(232,139,19)" fg:x="19639" fg:w="61"/><text x="93.6986%" y="511.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.29%)</title><rect x="93.5814%" y="485" width="0.2907%" height="15" fill="rgb(225,201,24)" fg:x="19639" fg:w="61"/><text x="93.6986%" y="495.50"></text></g><g><title>core::ptr::read_volatile (4 samples, 0.02%)</title><rect x="93.8530%" y="469" width="0.0191%" height="15" fill="rgb(221,47,46)" fg:x="19696" fg:w="4"/><text x="93.9702%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (3 samples, 0.01%)</title><rect x="93.8721%" y="533" width="0.0143%" height="15" fill="rgb(249,23,13)" fg:x="19700" fg:w="3"/><text x="93.9893%" y="543.50"></text></g><g><title>alloc::slice::hack::into_vec (3 samples, 0.01%)</title><rect x="93.8721%" y="517" width="0.0143%" height="15" fill="rgb(219,9,5)" fg:x="19700" fg:w="3"/><text x="93.9893%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (3 samples, 0.01%)</title><rect x="93.8721%" y="501" width="0.0143%" height="15" fill="rgb(254,171,16)" fg:x="19700" fg:w="3"/><text x="93.9893%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (8 samples, 0.04%)</title><rect x="93.8959%" y="533" width="0.0381%" height="15" fill="rgb(230,171,20)" fg:x="19705" fg:w="8"/><text x="94.0131%" y="543.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (8 samples, 0.04%)</title><rect x="93.8959%" y="517" width="0.0381%" height="15" fill="rgb(210,71,41)" fg:x="19705" fg:w="8"/><text x="94.0131%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.06%)</title><rect x="93.9341%" y="485" width="0.0619%" height="15" fill="rgb(206,173,20)" fg:x="19713" fg:w="13"/><text x="94.0512%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="94.1199%" y="229" width="0.0286%" height="15" fill="rgb(233,88,34)" fg:x="19752" fg:w="6"/><text x="94.2371%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="94.1485%" y="229" width="0.0334%" height="15" fill="rgb(223,209,46)" fg:x="19758" fg:w="7"/><text x="94.2657%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="94.1628%" y="213" width="0.0191%" height="15" fill="rgb(250,43,18)" fg:x="19761" fg:w="4"/><text x="94.2800%" y="223.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.07%)</title><rect x="94.1199%" y="245" width="0.0667%" height="15" fill="rgb(208,13,10)" fg:x="19752" fg:w="14"/><text x="94.2371%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (25 samples, 0.12%)</title><rect x="94.1056%" y="373" width="0.1191%" height="15" fill="rgb(212,200,36)" fg:x="19749" fg:w="25"/><text x="94.2228%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (25 samples, 0.12%)</title><rect x="94.1056%" y="357" width="0.1191%" height="15" fill="rgb(225,90,30)" fg:x="19749" fg:w="25"/><text x="94.2228%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.12%)</title><rect x="94.1056%" y="341" width="0.1191%" height="15" fill="rgb(236,182,39)" fg:x="19749" fg:w="25"/><text x="94.2228%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.12%)</title><rect x="94.1056%" y="325" width="0.1191%" height="15" fill="rgb(212,144,35)" fg:x="19749" fg:w="25"/><text x="94.2228%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.12%)</title><rect x="94.1056%" y="309" width="0.1191%" height="15" fill="rgb(228,63,44)" fg:x="19749" fg:w="25"/><text x="94.2228%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.12%)</title><rect x="94.1056%" y="293" width="0.1191%" height="15" fill="rgb(228,109,6)" fg:x="19749" fg:w="25"/><text x="94.2228%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (24 samples, 0.11%)</title><rect x="94.1104%" y="277" width="0.1144%" height="15" fill="rgb(238,117,24)" fg:x="19750" fg:w="24"/><text x="94.2275%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.10%)</title><rect x="94.1199%" y="261" width="0.1048%" height="15" fill="rgb(242,26,26)" fg:x="19752" fg:w="22"/><text x="94.2371%" y="271.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (8 samples, 0.04%)</title><rect x="94.1866%" y="245" width="0.0381%" height="15" fill="rgb(221,92,48)" fg:x="19766" fg:w="8"/><text x="94.3038%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (8 samples, 0.04%)</title><rect x="94.1866%" y="229" width="0.0381%" height="15" fill="rgb(209,209,32)" fg:x="19766" fg:w="8"/><text x="94.3038%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (8 samples, 0.04%)</title><rect x="94.1866%" y="213" width="0.0381%" height="15" fill="rgb(221,70,22)" fg:x="19766" fg:w="8"/><text x="94.3038%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (15 samples, 0.07%)</title><rect x="94.2247%" y="373" width="0.0715%" height="15" fill="rgb(248,145,5)" fg:x="19774" fg:w="15"/><text x="94.3419%" y="383.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (45 samples, 0.21%)</title><rect x="94.1056%" y="389" width="0.2144%" height="15" fill="rgb(226,116,26)" fg:x="19749" fg:w="45"/><text x="94.2228%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="373" width="0.0238%" height="15" fill="rgb(244,5,17)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="357" width="0.0238%" height="15" fill="rgb(252,159,33)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="341" width="0.0238%" height="15" fill="rgb(206,71,0)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="325" width="0.0238%" height="15" fill="rgb(233,118,54)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="309" width="0.0238%" height="15" fill="rgb(234,83,48)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="293" width="0.0238%" height="15" fill="rgb(228,3,54)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="94.2962%" y="277" width="0.0238%" height="15" fill="rgb(226,155,13)" fg:x="19789" fg:w="5"/><text x="94.4134%" y="287.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="94.3010%" y="261" width="0.0191%" height="15" fill="rgb(241,28,37)" fg:x="19790" fg:w="4"/><text x="94.4182%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="94.3010%" y="245" width="0.0191%" height="15" fill="rgb(233,93,10)" fg:x="19790" fg:w="4"/><text x="94.4182%" y="255.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="94.3010%" y="229" width="0.0191%" height="15" fill="rgb(225,113,19)" fg:x="19790" fg:w="4"/><text x="94.4182%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.07%)</title><rect x="94.3200%" y="229" width="0.0715%" height="15" fill="rgb(241,2,18)" fg:x="19794" fg:w="15"/><text x="94.4372%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="94.3915%" y="229" width="0.0381%" height="15" fill="rgb(228,207,21)" fg:x="19809" fg:w="8"/><text x="94.5087%" y="239.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.03%)</title><rect x="94.3963%" y="213" width="0.0334%" height="15" fill="rgb(213,211,35)" fg:x="19810" fg:w="7"/><text x="94.5135%" y="223.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.12%)</title><rect x="94.3200%" y="245" width="0.1191%" height="15" fill="rgb(209,83,10)" fg:x="19794" fg:w="25"/><text x="94.4372%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.36%)</title><rect x="94.1056%" y="421" width="0.3574%" height="15" fill="rgb(209,164,1)" fg:x="19749" fg:w="75"/><text x="94.2228%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (75 samples, 0.36%)</title><rect x="94.1056%" y="405" width="0.3574%" height="15" fill="rgb(213,184,43)" fg:x="19749" fg:w="75"/><text x="94.2228%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (30 samples, 0.14%)</title><rect x="94.3200%" y="389" width="0.1430%" height="15" fill="rgb(231,61,34)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (30 samples, 0.14%)</title><rect x="94.3200%" y="373" width="0.1430%" height="15" fill="rgb(235,75,3)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (30 samples, 0.14%)</title><rect x="94.3200%" y="357" width="0.1430%" height="15" fill="rgb(220,106,47)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.14%)</title><rect x="94.3200%" y="341" width="0.1430%" height="15" fill="rgb(210,196,33)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.14%)</title><rect x="94.3200%" y="325" width="0.1430%" height="15" fill="rgb(229,154,42)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.14%)</title><rect x="94.3200%" y="309" width="0.1430%" height="15" fill="rgb(228,114,26)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.14%)</title><rect x="94.3200%" y="293" width="0.1430%" height="15" fill="rgb(208,144,1)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (30 samples, 0.14%)</title><rect x="94.3200%" y="277" width="0.1430%" height="15" fill="rgb(239,112,37)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 0.14%)</title><rect x="94.3200%" y="261" width="0.1430%" height="15" fill="rgb(210,96,50)" fg:x="19794" fg:w="30"/><text x="94.4372%" y="271.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (5 samples, 0.02%)</title><rect x="94.4391%" y="245" width="0.0238%" height="15" fill="rgb(222,178,2)" fg:x="19819" fg:w="5"/><text x="94.5563%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (5 samples, 0.02%)</title><rect x="94.4391%" y="229" width="0.0238%" height="15" fill="rgb(226,74,18)" fg:x="19819" fg:w="5"/><text x="94.5563%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4 samples, 0.02%)</title><rect x="94.4439%" y="213" width="0.0191%" height="15" fill="rgb(225,67,54)" fg:x="19820" fg:w="4"/><text x="94.5611%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.41%)</title><rect x="94.0961%" y="437" width="0.4098%" height="15" fill="rgb(251,92,32)" fg:x="19747" fg:w="86"/><text x="94.2133%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.04%)</title><rect x="94.4630%" y="421" width="0.0429%" height="15" fill="rgb(228,149,22)" fg:x="19824" fg:w="9"/><text x="94.5802%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.01%)</title><rect x="94.5059%" y="437" width="0.0143%" height="15" fill="rgb(243,54,13)" fg:x="19833" fg:w="3"/><text x="94.6230%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.01%)</title><rect x="94.5059%" y="421" width="0.0143%" height="15" fill="rgb(243,180,28)" fg:x="19833" fg:w="3"/><text x="94.6230%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.02%)</title><rect x="94.5440%" y="373" width="0.0238%" height="15" fill="rgb(208,167,24)" fg:x="19841" fg:w="5"/><text x="94.6612%" y="383.50"></text></g><g><title>malloc_consolidate (4 samples, 0.02%)</title><rect x="94.9109%" y="261" width="0.0191%" height="15" fill="rgb(245,73,45)" fg:x="19918" fg:w="4"/><text x="95.0281%" y="271.50"></text></g><g><title>_int_free (22 samples, 0.10%)</title><rect x="94.8299%" y="277" width="0.1048%" height="15" fill="rgb(237,203,48)" fg:x="19901" fg:w="22"/><text x="94.9471%" y="287.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.02%)</title><rect x="95.0014%" y="133" width="0.0238%" height="15" fill="rgb(211,197,16)" fg:x="19937" fg:w="5"/><text x="95.1186%" y="143.50"></text></g><g><title>charge_memcg (5 samples, 0.02%)</title><rect x="95.0253%" y="133" width="0.0238%" height="15" fill="rgb(243,99,51)" fg:x="19942" fg:w="5"/><text x="95.1424%" y="143.50"></text></g><g><title>try_charge_memcg (3 samples, 0.01%)</title><rect x="95.0348%" y="117" width="0.0143%" height="15" fill="rgb(215,123,29)" fg:x="19944" fg:w="3"/><text x="95.1520%" y="127.50"></text></g><g><title>__mem_cgroup_charge (14 samples, 0.07%)</title><rect x="94.9967%" y="149" width="0.0667%" height="15" fill="rgb(239,186,37)" fg:x="19936" fg:w="14"/><text x="95.1139%" y="159.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="95.0491%" y="133" width="0.0143%" height="15" fill="rgb(252,136,39)" fg:x="19947" fg:w="3"/><text x="95.1663%" y="143.50"></text></g><g><title>folio_add_lru_vma (3 samples, 0.01%)</title><rect x="95.0729%" y="149" width="0.0143%" height="15" fill="rgb(223,213,32)" fg:x="19952" fg:w="3"/><text x="95.1901%" y="159.50"></text></g><g><title>folio_add_lru (3 samples, 0.01%)</title><rect x="95.0729%" y="133" width="0.0143%" height="15" fill="rgb(233,115,5)" fg:x="19952" fg:w="3"/><text x="95.1901%" y="143.50"></text></g><g><title>__handle_mm_fault (29 samples, 0.14%)</title><rect x="94.9919%" y="197" width="0.1382%" height="15" fill="rgb(207,226,44)" fg:x="19935" fg:w="29"/><text x="95.1091%" y="207.50"></text></g><g><title>handle_pte_fault (29 samples, 0.14%)</title><rect x="94.9919%" y="181" width="0.1382%" height="15" fill="rgb(208,126,0)" fg:x="19935" fg:w="29"/><text x="95.1091%" y="191.50"></text></g><g><title>do_anonymous_page (29 samples, 0.14%)</title><rect x="94.9919%" y="165" width="0.1382%" height="15" fill="rgb(244,66,21)" fg:x="19935" fg:w="29"/><text x="95.1091%" y="175.50"></text></g><g><title>vma_alloc_folio (8 samples, 0.04%)</title><rect x="95.0920%" y="149" width="0.0381%" height="15" fill="rgb(222,97,12)" fg:x="19956" fg:w="8"/><text x="95.2092%" y="159.50"></text></g><g><title>__folio_alloc (5 samples, 0.02%)</title><rect x="95.1063%" y="133" width="0.0238%" height="15" fill="rgb(219,213,19)" fg:x="19959" fg:w="5"/><text x="95.2234%" y="143.50"></text></g><g><title>__alloc_pages (5 samples, 0.02%)</title><rect x="95.1063%" y="117" width="0.0238%" height="15" fill="rgb(252,169,30)" fg:x="19959" fg:w="5"/><text x="95.2234%" y="127.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="95.1158%" y="101" width="0.0143%" height="15" fill="rgb(206,32,51)" fg:x="19961" fg:w="3"/><text x="95.2330%" y="111.50"></text></g><g><title>handle_mm_fault (30 samples, 0.14%)</title><rect x="94.9919%" y="213" width="0.1430%" height="15" fill="rgb(250,172,42)" fg:x="19935" fg:w="30"/><text x="95.1091%" y="223.50"></text></g><g><title>do_user_addr_fault (32 samples, 0.15%)</title><rect x="94.9871%" y="229" width="0.1525%" height="15" fill="rgb(209,34,43)" fg:x="19934" fg:w="32"/><text x="95.1043%" y="239.50"></text></g><g><title>asm_exc_page_fault (34 samples, 0.16%)</title><rect x="94.9824%" y="261" width="0.1620%" height="15" fill="rgb(223,11,35)" fg:x="19933" fg:w="34"/><text x="95.0996%" y="271.50"></text></g><g><title>exc_page_fault (34 samples, 0.16%)</title><rect x="94.9824%" y="245" width="0.1620%" height="15" fill="rgb(251,219,26)" fg:x="19933" fg:w="34"/><text x="95.0996%" y="255.50"></text></g><g><title>sync_regs (3 samples, 0.01%)</title><rect x="95.1491%" y="261" width="0.0143%" height="15" fill="rgb(231,119,3)" fg:x="19968" fg:w="3"/><text x="95.2663%" y="271.50"></text></g><g><title>_int_malloc (54 samples, 0.26%)</title><rect x="94.9347%" y="277" width="0.2573%" height="15" fill="rgb(216,97,11)" fg:x="19923" fg:w="54"/><text x="95.0519%" y="287.50"></text></g><g><title>sysmalloc (6 samples, 0.03%)</title><rect x="95.1634%" y="261" width="0.0286%" height="15" fill="rgb(223,59,9)" fg:x="19971" fg:w="6"/><text x="95.2806%" y="271.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.01%)</title><rect x="95.1777%" y="245" width="0.0143%" height="15" fill="rgb(233,93,31)" fg:x="19974" fg:w="3"/><text x="95.2949%" y="255.50"></text></g><g><title>exc_page_fault (3 samples, 0.01%)</title><rect x="95.1777%" y="229" width="0.0143%" height="15" fill="rgb(239,81,33)" fg:x="19974" fg:w="3"/><text x="95.2949%" y="239.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.01%)</title><rect x="95.1777%" y="213" width="0.0143%" height="15" fill="rgb(213,120,34)" fg:x="19974" fg:w="3"/><text x="95.2949%" y="223.50"></text></g><g><title>down_read_trylock (3 samples, 0.01%)</title><rect x="95.1920%" y="229" width="0.0143%" height="15" fill="rgb(243,49,53)" fg:x="19977" fg:w="3"/><text x="95.3092%" y="239.50"></text></g><g><title>__rcu_read_unlock (8 samples, 0.04%)</title><rect x="95.2444%" y="149" width="0.0381%" height="15" fill="rgb(247,216,33)" fg:x="19988" fg:w="8"/><text x="95.3616%" y="159.50"></text></g><g><title>__count_memcg_events (4 samples, 0.02%)</title><rect x="95.2921%" y="133" width="0.0191%" height="15" fill="rgb(226,26,14)" fg:x="19998" fg:w="4"/><text x="95.4093%" y="143.50"></text></g><g><title>charge_memcg (8 samples, 0.04%)</title><rect x="95.2826%" y="149" width="0.0381%" height="15" fill="rgb(215,49,53)" fg:x="19996" fg:w="8"/><text x="95.3998%" y="159.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.02%)</title><rect x="95.3207%" y="149" width="0.0238%" height="15" fill="rgb(245,162,40)" fg:x="20004" fg:w="5"/><text x="95.4379%" y="159.50"></text></g><g><title>__mem_cgroup_charge (24 samples, 0.11%)</title><rect x="95.2349%" y="165" width="0.1144%" height="15" fill="rgb(229,68,17)" fg:x="19986" fg:w="24"/><text x="95.3521%" y="175.50"></text></g><g><title>folio_add_lru_vma (9 samples, 0.04%)</title><rect x="95.3636%" y="165" width="0.0429%" height="15" fill="rgb(213,182,10)" fg:x="20013" fg:w="9"/><text x="95.4808%" y="175.50"></text></g><g><title>folio_add_lru (9 samples, 0.04%)</title><rect x="95.3636%" y="149" width="0.0429%" height="15" fill="rgb(245,125,30)" fg:x="20013" fg:w="9"/><text x="95.4808%" y="159.50"></text></g><g><title>folio_batch_move_lru (7 samples, 0.03%)</title><rect x="95.3731%" y="133" width="0.0334%" height="15" fill="rgb(232,202,2)" fg:x="20015" fg:w="7"/><text x="95.4903%" y="143.50"></text></g><g><title>lru_add_fn (5 samples, 0.02%)</title><rect x="95.3826%" y="117" width="0.0238%" height="15" fill="rgb(237,140,51)" fg:x="20017" fg:w="5"/><text x="95.4998%" y="127.50"></text></g><g><title>lru_gen_add_folio (3 samples, 0.01%)</title><rect x="95.3922%" y="101" width="0.0143%" height="15" fill="rgb(236,157,25)" fg:x="20019" fg:w="3"/><text x="95.5094%" y="111.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.07%)</title><rect x="95.4351%" y="117" width="0.0667%" height="15" fill="rgb(219,209,0)" fg:x="20028" fg:w="14"/><text x="95.5522%" y="127.50"></text></g><g><title>rmqueue (7 samples, 0.03%)</title><rect x="95.4684%" y="101" width="0.0334%" height="15" fill="rgb(240,116,54)" fg:x="20035" fg:w="7"/><text x="95.5856%" y="111.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.02%)</title><rect x="95.4779%" y="85" width="0.0238%" height="15" fill="rgb(216,10,36)" fg:x="20037" fg:w="5"/><text x="95.5951%" y="95.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.02%)</title><rect x="95.4779%" y="69" width="0.0238%" height="15" fill="rgb(222,72,44)" fg:x="20037" fg:w="5"/><text x="95.5951%" y="79.50"></text></g><g><title>do_anonymous_page (61 samples, 0.29%)</title><rect x="95.2206%" y="181" width="0.2907%" height="15" fill="rgb(232,159,9)" fg:x="19983" fg:w="61"/><text x="95.3378%" y="191.50"></text></g><g><title>vma_alloc_folio (19 samples, 0.09%)</title><rect x="95.4208%" y="165" width="0.0905%" height="15" fill="rgb(210,39,32)" fg:x="20025" fg:w="19"/><text x="95.5379%" y="175.50"></text></g><g><title>__folio_alloc (19 samples, 0.09%)</title><rect x="95.4208%" y="149" width="0.0905%" height="15" fill="rgb(216,194,45)" fg:x="20025" fg:w="19"/><text x="95.5379%" y="159.50"></text></g><g><title>__alloc_pages (19 samples, 0.09%)</title><rect x="95.4208%" y="133" width="0.0905%" height="15" fill="rgb(218,18,35)" fg:x="20025" fg:w="19"/><text x="95.5379%" y="143.50"></text></g><g><title>handle_pte_fault (62 samples, 0.30%)</title><rect x="95.2206%" y="197" width="0.2954%" height="15" fill="rgb(207,83,51)" fg:x="19983" fg:w="62"/><text x="95.3378%" y="207.50"></text></g><g><title>__handle_mm_fault (65 samples, 0.31%)</title><rect x="95.2111%" y="213" width="0.3097%" height="15" fill="rgb(225,63,43)" fg:x="19981" fg:w="65"/><text x="95.3283%" y="223.50"></text></g><g><title>handle_mm_fault (67 samples, 0.32%)</title><rect x="95.2063%" y="229" width="0.3193%" height="15" fill="rgb(207,57,36)" fg:x="19980" fg:w="67"/><text x="95.3235%" y="239.50"></text></g><g><title>do_user_addr_fault (71 samples, 0.34%)</title><rect x="95.1920%" y="245" width="0.3383%" height="15" fill="rgb(216,99,33)" fg:x="19977" fg:w="71"/><text x="95.3092%" y="255.50"></text></g><g><title>asm_exc_page_fault (76 samples, 0.36%)</title><rect x="95.1920%" y="277" width="0.3621%" height="15" fill="rgb(225,42,16)" fg:x="19977" fg:w="76"/><text x="95.3092%" y="287.50"></text></g><g><title>exc_page_fault (76 samples, 0.36%)</title><rect x="95.1920%" y="261" width="0.3621%" height="15" fill="rgb(220,201,45)" fg:x="19977" fg:w="76"/><text x="95.3092%" y="271.50"></text></g><g><title>irqentry_exit (5 samples, 0.02%)</title><rect x="95.5304%" y="245" width="0.0238%" height="15" fill="rgb(225,33,4)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="255.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.02%)</title><rect x="95.5304%" y="229" width="0.0238%" height="15" fill="rgb(224,33,50)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="95.5304%" y="213" width="0.0238%" height="15" fill="rgb(246,198,51)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="223.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.02%)</title><rect x="95.5304%" y="197" width="0.0238%" height="15" fill="rgb(205,22,4)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="207.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="95.5304%" y="181" width="0.0238%" height="15" fill="rgb(206,3,8)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="191.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="95.5304%" y="165" width="0.0238%" height="15" fill="rgb(251,23,15)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="175.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="95.5304%" y="149" width="0.0238%" height="15" fill="rgb(252,88,28)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="159.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="95.5304%" y="133" width="0.0238%" height="15" fill="rgb(212,127,14)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="143.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.02%)</title><rect x="95.5304%" y="117" width="0.0238%" height="15" fill="rgb(247,145,37)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="127.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.02%)</title><rect x="95.5304%" y="101" width="0.0238%" height="15" fill="rgb(209,117,53)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="111.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.02%)</title><rect x="95.5304%" y="85" width="0.0238%" height="15" fill="rgb(212,90,42)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="95.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="95.5304%" y="69" width="0.0238%" height="15" fill="rgb(218,164,37)" fg:x="20048" fg:w="5"/><text x="95.6475%" y="79.50"></text></g><g><title>sync_regs (6 samples, 0.03%)</title><rect x="95.5542%" y="277" width="0.0286%" height="15" fill="rgb(246,65,34)" fg:x="20053" fg:w="6"/><text x="95.6714%" y="287.50"></text></g><g><title>_int_realloc (195 samples, 0.93%)</title><rect x="94.6965%" y="293" width="0.9292%" height="15" fill="rgb(231,100,33)" fg:x="19873" fg:w="195"/><text x="94.8137%" y="303.50">_..</text></g><g><title>unlink_chunk (9 samples, 0.04%)</title><rect x="95.5828%" y="277" width="0.0429%" height="15" fill="rgb(228,126,14)" fg:x="20059" fg:w="9"/><text x="95.7000%" y="287.50"></text></g><g><title>arena_for_chunk (7 samples, 0.03%)</title><rect x="95.6257%" y="293" width="0.0334%" height="15" fill="rgb(215,173,21)" fg:x="20068" fg:w="7"/><text x="95.7428%" y="303.50"></text></g><g><title>__GI___libc_realloc (223 samples, 1.06%)</title><rect x="94.6059%" y="309" width="1.0626%" height="15" fill="rgb(210,6,40)" fg:x="19854" fg:w="223"/><text x="94.7231%" y="319.50">_..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (226 samples, 1.08%)</title><rect x="94.6059%" y="357" width="1.0769%" height="15" fill="rgb(212,48,18)" fg:x="19854" fg:w="226"/><text x="94.7231%" y="367.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (226 samples, 1.08%)</title><rect x="94.6059%" y="341" width="1.0769%" height="15" fill="rgb(230,214,11)" fg:x="19854" fg:w="226"/><text x="94.7231%" y="351.50">a..</text></g><g><title>alloc::alloc::realloc (226 samples, 1.08%)</title><rect x="94.6059%" y="325" width="1.0769%" height="15" fill="rgb(254,105,39)" fg:x="19854" fg:w="226"/><text x="94.7231%" y="335.50">a..</text></g><g><title>__rdl_realloc (3 samples, 0.01%)</title><rect x="95.6685%" y="309" width="0.0143%" height="15" fill="rgb(245,158,5)" fg:x="20077" fg:w="3"/><text x="95.7857%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (239 samples, 1.14%)</title><rect x="94.5726%" y="373" width="1.1389%" height="15" fill="rgb(249,208,11)" fg:x="19847" fg:w="239"/><text x="94.6898%" y="383.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.02%)</title><rect x="95.6876%" y="357" width="0.0238%" height="15" fill="rgb(210,39,28)" fg:x="20081" fg:w="5"/><text x="95.8048%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (255 samples, 1.22%)</title><rect x="94.5202%" y="437" width="1.2151%" height="15" fill="rgb(211,56,53)" fg:x="19836" fg:w="255"/><text x="94.6373%" y="447.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (255 samples, 1.22%)</title><rect x="94.5202%" y="421" width="1.2151%" height="15" fill="rgb(226,201,30)" fg:x="19836" fg:w="255"/><text x="94.6373%" y="431.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (255 samples, 1.22%)</title><rect x="94.5202%" y="405" width="1.2151%" height="15" fill="rgb(239,101,34)" fg:x="19836" fg:w="255"/><text x="94.6373%" y="415.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (255 samples, 1.22%)</title><rect x="94.5202%" y="389" width="1.2151%" height="15" fill="rgb(226,209,5)" fg:x="19836" fg:w="255"/><text x="94.6373%" y="399.50">al..</text></g><g><title>core::cmp::max (4 samples, 0.02%)</title><rect x="95.7162%" y="373" width="0.0191%" height="15" fill="rgb(250,105,47)" fg:x="20087" fg:w="4"/><text x="95.8334%" y="383.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.02%)</title><rect x="95.7162%" y="357" width="0.0191%" height="15" fill="rgb(230,72,3)" fg:x="20087" fg:w="4"/><text x="95.8334%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="95.7162%" y="341" width="0.0191%" height="15" fill="rgb(232,218,39)" fg:x="20087" fg:w="4"/><text x="95.8334%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (8 samples, 0.04%)</title><rect x="95.7353%" y="437" width="0.0381%" height="15" fill="rgb(248,166,6)" fg:x="20091" fg:w="8"/><text x="95.8524%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (5 samples, 0.02%)</title><rect x="95.7734%" y="437" width="0.0238%" height="15" fill="rgb(247,89,20)" fg:x="20099" fg:w="5"/><text x="95.8906%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (5 samples, 0.02%)</title><rect x="95.7734%" y="421" width="0.0238%" height="15" fill="rgb(248,130,54)" fg:x="20099" fg:w="5"/><text x="95.8906%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="95.7734%" y="405" width="0.0238%" height="15" fill="rgb(234,196,4)" fg:x="20099" fg:w="5"/><text x="95.8906%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="389" width="0.0143%" height="15" fill="rgb(250,143,31)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="373" width="0.0143%" height="15" fill="rgb(211,110,34)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="357" width="0.0143%" height="15" fill="rgb(215,124,48)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="341" width="0.0143%" height="15" fill="rgb(216,46,13)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="325" width="0.0143%" height="15" fill="rgb(205,184,25)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="309" width="0.0143%" height="15" fill="rgb(228,1,10)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="293" width="0.0143%" height="15" fill="rgb(213,116,27)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="303.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="95.7829%" y="277" width="0.0143%" height="15" fill="rgb(241,95,50)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="95.7829%" y="261" width="0.0143%" height="15" fill="rgb(238,48,32)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="271.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="95.7829%" y="245" width="0.0143%" height="15" fill="rgb(235,113,49)" fg:x="20101" fg:w="3"/><text x="95.9001%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (386 samples, 1.84%)</title><rect x="94.0198%" y="469" width="1.8393%" height="15" fill="rgb(205,127,43)" fg:x="19731" fg:w="386"/><text x="94.1370%" y="479.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (386 samples, 1.84%)</title><rect x="94.0198%" y="453" width="1.8393%" height="15" fill="rgb(250,162,2)" fg:x="19731" fg:w="386"/><text x="94.1370%" y="463.50">allo..</text></g><g><title>core::ptr::write (13 samples, 0.06%)</title><rect x="95.7972%" y="437" width="0.0619%" height="15" fill="rgb(220,13,41)" fg:x="20104" fg:w="13"/><text x="95.9144%" y="447.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="95.8830%" y="277" width="0.0191%" height="15" fill="rgb(249,221,25)" fg:x="20122" fg:w="4"/><text x="96.0002%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="95.8830%" y="261" width="0.0191%" height="15" fill="rgb(215,208,19)" fg:x="20122" fg:w="4"/><text x="96.0002%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.05%)</title><rect x="95.8591%" y="453" width="0.0524%" height="15" fill="rgb(236,175,2)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (11 samples, 0.05%)</title><rect x="95.8591%" y="437" width="0.0524%" height="15" fill="rgb(241,52,2)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="447.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (11 samples, 0.05%)</title><rect x="95.8591%" y="421" width="0.0524%" height="15" fill="rgb(248,140,14)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (11 samples, 0.05%)</title><rect x="95.8591%" y="405" width="0.0524%" height="15" fill="rgb(253,22,42)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.05%)</title><rect x="95.8591%" y="389" width="0.0524%" height="15" fill="rgb(234,61,47)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.05%)</title><rect x="95.8591%" y="373" width="0.0524%" height="15" fill="rgb(208,226,15)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.05%)</title><rect x="95.8591%" y="357" width="0.0524%" height="15" fill="rgb(217,221,4)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.05%)</title><rect x="95.8591%" y="341" width="0.0524%" height="15" fill="rgb(212,174,34)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.05%)</title><rect x="95.8591%" y="325" width="0.0524%" height="15" fill="rgb(253,83,4)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (11 samples, 0.05%)</title><rect x="95.8591%" y="309" width="0.0524%" height="15" fill="rgb(250,195,49)" fg:x="20117" fg:w="11"/><text x="95.9763%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.03%)</title><rect x="95.8830%" y="293" width="0.0286%" height="15" fill="rgb(241,192,25)" fg:x="20122" fg:w="6"/><text x="96.0002%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.08%)</title><rect x="95.8591%" y="469" width="0.0762%" height="15" fill="rgb(208,124,10)" fg:x="20117" fg:w="16"/><text x="95.9763%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.02%)</title><rect x="95.9116%" y="453" width="0.0238%" height="15" fill="rgb(222,33,0)" fg:x="20128" fg:w="5"/><text x="96.0287%" y="463.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14 samples, 0.07%)</title><rect x="95.9354%" y="469" width="0.0667%" height="15" fill="rgb(234,209,28)" fg:x="20133" fg:w="14"/><text x="96.0526%" y="479.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.01%)</title><rect x="96.6454%" y="197" width="0.0143%" height="15" fill="rgb(224,11,23)" fg:x="20282" fg:w="3"/><text x="96.7626%" y="207.50"></text></g><g><title>__rcu_read_unlock (16 samples, 0.08%)</title><rect x="96.6597%" y="197" width="0.0762%" height="15" fill="rgb(232,99,1)" fg:x="20285" fg:w="16"/><text x="96.7769%" y="207.50"></text></g><g><title>__mem_cgroup_charge (31 samples, 0.15%)</title><rect x="96.6311%" y="213" width="0.1477%" height="15" fill="rgb(237,95,45)" fg:x="20279" fg:w="31"/><text x="96.7483%" y="223.50"></text></g><g><title>charge_memcg (9 samples, 0.04%)</title><rect x="96.7359%" y="197" width="0.0429%" height="15" fill="rgb(208,109,11)" fg:x="20301" fg:w="9"/><text x="96.8531%" y="207.50"></text></g><g><title>folio_add_lru_vma (9 samples, 0.04%)</title><rect x="96.7883%" y="213" width="0.0429%" height="15" fill="rgb(216,190,48)" fg:x="20312" fg:w="9"/><text x="96.9055%" y="223.50"></text></g><g><title>folio_add_lru (9 samples, 0.04%)</title><rect x="96.7883%" y="197" width="0.0429%" height="15" fill="rgb(251,171,36)" fg:x="20312" fg:w="9"/><text x="96.9055%" y="207.50"></text></g><g><title>folio_batch_move_lru (7 samples, 0.03%)</title><rect x="96.7979%" y="181" width="0.0334%" height="15" fill="rgb(230,62,22)" fg:x="20314" fg:w="7"/><text x="96.9151%" y="191.50"></text></g><g><title>lru_add_fn (4 samples, 0.02%)</title><rect x="96.8122%" y="165" width="0.0191%" height="15" fill="rgb(225,114,35)" fg:x="20317" fg:w="4"/><text x="96.9293%" y="175.50"></text></g><g><title>lru_gen_add_folio (3 samples, 0.01%)</title><rect x="96.8169%" y="149" width="0.0143%" height="15" fill="rgb(215,118,42)" fg:x="20318" fg:w="3"/><text x="96.9341%" y="159.50"></text></g><g><title>clear_page_erms (5 samples, 0.02%)</title><rect x="96.8789%" y="149" width="0.0238%" height="15" fill="rgb(243,119,21)" fg:x="20331" fg:w="5"/><text x="96.9961%" y="159.50"></text></g><g><title>post_alloc_hook (3 samples, 0.01%)</title><rect x="96.9027%" y="149" width="0.0143%" height="15" fill="rgb(252,177,53)" fg:x="20336" fg:w="3"/><text x="97.0199%" y="159.50"></text></g><g><title>__alloc_pages (18 samples, 0.09%)</title><rect x="96.8598%" y="181" width="0.0858%" height="15" fill="rgb(237,209,29)" fg:x="20327" fg:w="18"/><text x="96.9770%" y="191.50"></text></g><g><title>get_page_from_freelist (18 samples, 0.09%)</title><rect x="96.8598%" y="165" width="0.0858%" height="15" fill="rgb(212,65,23)" fg:x="20327" fg:w="18"/><text x="96.9770%" y="175.50"></text></g><g><title>rmqueue (6 samples, 0.03%)</title><rect x="96.9170%" y="149" width="0.0286%" height="15" fill="rgb(230,222,46)" fg:x="20339" fg:w="6"/><text x="97.0342%" y="159.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.02%)</title><rect x="96.9218%" y="133" width="0.0238%" height="15" fill="rgb(215,135,32)" fg:x="20340" fg:w="5"/><text x="97.0389%" y="143.50"></text></g><g><title>rmqueue_bulk (4 samples, 0.02%)</title><rect x="96.9265%" y="117" width="0.0191%" height="15" fill="rgb(246,101,22)" fg:x="20341" fg:w="4"/><text x="97.0437%" y="127.50"></text></g><g><title>do_anonymous_page (69 samples, 0.33%)</title><rect x="96.6216%" y="229" width="0.3288%" height="15" fill="rgb(206,107,13)" fg:x="20277" fg:w="69"/><text x="96.7387%" y="239.50"></text></g><g><title>vma_alloc_folio (21 samples, 0.10%)</title><rect x="96.8503%" y="213" width="0.1001%" height="15" fill="rgb(250,100,44)" fg:x="20325" fg:w="21"/><text x="96.9675%" y="223.50"></text></g><g><title>__folio_alloc (20 samples, 0.10%)</title><rect x="96.8550%" y="197" width="0.0953%" height="15" fill="rgb(231,147,38)" fg:x="20326" fg:w="20"/><text x="96.9722%" y="207.50"></text></g><g><title>__handle_mm_fault (73 samples, 0.35%)</title><rect x="96.6073%" y="261" width="0.3479%" height="15" fill="rgb(229,8,40)" fg:x="20274" fg:w="73"/><text x="96.7244%" y="271.50"></text></g><g><title>handle_pte_fault (71 samples, 0.34%)</title><rect x="96.6168%" y="245" width="0.3383%" height="15" fill="rgb(221,135,30)" fg:x="20276" fg:w="71"/><text x="96.7340%" y="255.50"></text></g><g><title>asm_exc_page_fault (80 samples, 0.38%)</title><rect x="96.5930%" y="325" width="0.3812%" height="15" fill="rgb(249,193,18)" fg:x="20271" fg:w="80"/><text x="96.7102%" y="335.50"></text></g><g><title>exc_page_fault (80 samples, 0.38%)</title><rect x="96.5930%" y="309" width="0.3812%" height="15" fill="rgb(209,133,39)" fg:x="20271" fg:w="80"/><text x="96.7102%" y="319.50"></text></g><g><title>do_user_addr_fault (78 samples, 0.37%)</title><rect x="96.6025%" y="293" width="0.3717%" height="15" fill="rgb(232,100,14)" fg:x="20273" fg:w="78"/><text x="96.7197%" y="303.50"></text></g><g><title>handle_mm_fault (77 samples, 0.37%)</title><rect x="96.6073%" y="277" width="0.3669%" height="15" fill="rgb(224,185,1)" fg:x="20274" fg:w="77"/><text x="96.7244%" y="287.50"></text></g><g><title>checked_request2size (4 samples, 0.02%)</title><rect x="96.9742%" y="325" width="0.0191%" height="15" fill="rgb(223,139,8)" fg:x="20351" fg:w="4"/><text x="97.0914%" y="335.50"></text></g><g><title>sync_regs (9 samples, 0.04%)</title><rect x="96.9932%" y="325" width="0.0429%" height="15" fill="rgb(232,213,38)" fg:x="20355" fg:w="9"/><text x="97.1104%" y="335.50"></text></g><g><title>tcache_put (4 samples, 0.02%)</title><rect x="97.0409%" y="325" width="0.0191%" height="15" fill="rgb(207,94,22)" fg:x="20365" fg:w="4"/><text x="97.1581%" y="335.50"></text></g><g><title>_int_malloc (215 samples, 1.02%)</title><rect x="96.0688%" y="341" width="1.0245%" height="15" fill="rgb(219,183,54)" fg:x="20161" fg:w="215"/><text x="96.1860%" y="351.50">_..</text></g><g><title>unlink_chunk (7 samples, 0.03%)</title><rect x="97.0599%" y="325" width="0.0334%" height="15" fill="rgb(216,185,54)" fg:x="20369" fg:w="7"/><text x="97.1771%" y="335.50"></text></g><g><title>checked_request2size (4 samples, 0.02%)</title><rect x="97.0981%" y="341" width="0.0191%" height="15" fill="rgb(254,217,39)" fg:x="20377" fg:w="4"/><text x="97.2153%" y="351.50"></text></g><g><title>__GI___libc_malloc (233 samples, 1.11%)</title><rect x="96.0116%" y="357" width="1.1103%" height="15" fill="rgb(240,178,23)" fg:x="20149" fg:w="233"/><text x="96.1288%" y="367.50">__..</text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="97.1219%" y="357" width="0.0191%" height="15" fill="rgb(218,11,47)" fg:x="20382" fg:w="4"/><text x="97.2391%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (243 samples, 1.16%)</title><rect x="96.0021%" y="469" width="1.1579%" height="15" fill="rgb(218,51,51)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="479.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (243 samples, 1.16%)</title><rect x="96.0021%" y="453" width="1.1579%" height="15" fill="rgb(238,126,27)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="463.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (243 samples, 1.16%)</title><rect x="96.0021%" y="437" width="1.1579%" height="15" fill="rgb(249,202,22)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="447.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (243 samples, 1.16%)</title><rect x="96.0021%" y="421" width="1.1579%" height="15" fill="rgb(254,195,49)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="431.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (243 samples, 1.16%)</title><rect x="96.0021%" y="405" width="1.1579%" height="15" fill="rgb(208,123,14)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="415.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (243 samples, 1.16%)</title><rect x="96.0021%" y="389" width="1.1579%" height="15" fill="rgb(224,200,8)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="399.50">al..</text></g><g><title>alloc::alloc::alloc (243 samples, 1.16%)</title><rect x="96.0021%" y="373" width="1.1579%" height="15" fill="rgb(217,61,36)" fg:x="20147" fg:w="243"/><text x="96.1193%" y="383.50">al..</text></g><g><title>__rust_alloc (4 samples, 0.02%)</title><rect x="97.1410%" y="357" width="0.0191%" height="15" fill="rgb(206,35,45)" fg:x="20386" fg:w="4"/><text x="97.2581%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (679 samples, 3.24%)</title><rect x="93.9341%" y="533" width="3.2355%" height="15" fill="rgb(217,65,33)" fg:x="19713" fg:w="679"/><text x="94.0512%" y="543.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (679 samples, 3.24%)</title><rect x="93.9341%" y="517" width="3.2355%" height="15" fill="rgb(222,158,48)" fg:x="19713" fg:w="679"/><text x="94.0512%" y="527.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (679 samples, 3.24%)</title><rect x="93.9341%" y="501" width="3.2355%" height="15" fill="rgb(254,2,54)" fg:x="19713" fg:w="679"/><text x="94.0512%" y="511.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (666 samples, 3.17%)</title><rect x="93.9960%" y="485" width="3.1735%" height="15" fill="rgb(250,143,38)" fg:x="19726" fg:w="666"/><text x="94.1132%" y="495.50">&lt;alloc::v..</text></g><g><title>core::iter::traits::iterator::Iterator::flatten (9 samples, 0.04%)</title><rect x="97.1695%" y="533" width="0.0429%" height="15" fill="rgb(248,25,0)" fg:x="20392" fg:w="9"/><text x="97.2867%" y="543.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (9 samples, 0.04%)</title><rect x="97.1695%" y="517" width="0.0429%" height="15" fill="rgb(206,152,27)" fg:x="20392" fg:w="9"/><text x="97.2867%" y="527.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (9 samples, 0.04%)</title><rect x="97.1695%" y="501" width="0.0429%" height="15" fill="rgb(240,77,30)" fg:x="20392" fg:w="9"/><text x="97.2867%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (9 samples, 0.04%)</title><rect x="97.1695%" y="485" width="0.0429%" height="15" fill="rgb(231,5,3)" fg:x="20392" fg:w="9"/><text x="97.2867%" y="495.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (9 samples, 0.04%)</title><rect x="97.1695%" y="469" width="0.0429%" height="15" fill="rgb(207,226,32)" fg:x="20392" fg:w="9"/><text x="97.2867%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_sub (4 samples, 0.02%)</title><rect x="97.2172%" y="517" width="0.0191%" height="15" fill="rgb(222,207,47)" fg:x="20402" fg:w="4"/><text x="97.3344%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (5 samples, 0.02%)</title><rect x="97.2172%" y="533" width="0.0238%" height="15" fill="rgb(229,115,45)" fg:x="20402" fg:w="5"/><text x="97.3344%" y="543.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (3 samples, 0.01%)</title><rect x="97.2410%" y="485" width="0.0143%" height="15" fill="rgb(224,191,6)" fg:x="20407" fg:w="3"/><text x="97.3582%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (11 samples, 0.05%)</title><rect x="97.2410%" y="533" width="0.0524%" height="15" fill="rgb(230,227,24)" fg:x="20407" fg:w="11"/><text x="97.3582%" y="543.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (11 samples, 0.05%)</title><rect x="97.2410%" y="517" width="0.0524%" height="15" fill="rgb(228,80,19)" fg:x="20407" fg:w="11"/><text x="97.3582%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.05%)</title><rect x="97.2410%" y="501" width="0.0524%" height="15" fill="rgb(247,229,0)" fg:x="20407" fg:w="11"/><text x="97.3582%" y="511.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (8 samples, 0.04%)</title><rect x="97.2553%" y="485" width="0.0381%" height="15" fill="rgb(237,194,15)" fg:x="20410" fg:w="8"/><text x="97.3725%" y="495.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::GridMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (3 samples, 0.01%)</title><rect x="97.2791%" y="469" width="0.0143%" height="15" fill="rgb(219,203,20)" fg:x="20415" fg:w="3"/><text x="97.3963%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.18%)</title><rect x="97.2934%" y="533" width="0.1763%" height="15" fill="rgb(234,128,8)" fg:x="20418" fg:w="37"/><text x="97.4106%" y="543.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (37 samples, 0.18%)</title><rect x="97.2934%" y="517" width="0.1763%" height="15" fill="rgb(248,202,8)" fg:x="20418" fg:w="37"/><text x="97.4106%" y="527.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::GridMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (26 samples, 0.12%)</title><rect x="97.3458%" y="501" width="0.1239%" height="15" fill="rgb(206,104,37)" fg:x="20429" fg:w="26"/><text x="97.4630%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.05%)</title><rect x="97.4221%" y="485" width="0.0477%" height="15" fill="rgb(223,8,27)" fg:x="20445" fg:w="10"/><text x="97.5393%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.05%)</title><rect x="97.4221%" y="469" width="0.0477%" height="15" fill="rgb(216,217,28)" fg:x="20445" fg:w="10"/><text x="97.5393%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.05%)</title><rect x="97.4221%" y="453" width="0.0477%" height="15" fill="rgb(249,199,1)" fg:x="20445" fg:w="10"/><text x="97.5393%" y="463.50"></text></g><g><title>_int_free (52 samples, 0.25%)</title><rect x="97.5603%" y="437" width="0.2478%" height="15" fill="rgb(240,85,17)" fg:x="20474" fg:w="52"/><text x="97.6775%" y="447.50"></text></g><g><title>tcache_put (7 samples, 0.03%)</title><rect x="97.7747%" y="421" width="0.0334%" height="15" fill="rgb(206,108,45)" fg:x="20519" fg:w="7"/><text x="97.8919%" y="431.50"></text></g><g><title>__GI___libc_free (70 samples, 0.33%)</title><rect x="97.4888%" y="453" width="0.3336%" height="15" fill="rgb(245,210,41)" fg:x="20459" fg:w="70"/><text x="97.6060%" y="463.50"></text></g><g><title>arena_for_chunk (3 samples, 0.01%)</title><rect x="97.8081%" y="437" width="0.0143%" height="15" fill="rgb(206,13,37)" fg:x="20526" fg:w="3"/><text x="97.9253%" y="447.50"></text></g><g><title>__rdl_dealloc (8 samples, 0.04%)</title><rect x="97.8224%" y="453" width="0.0381%" height="15" fill="rgb(250,61,18)" fg:x="20529" fg:w="8"/><text x="97.9395%" y="463.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,390 samples, 6.62%)</title><rect x="91.2465%" y="581" width="6.6235%" height="15" fill="rgb(235,172,48)" fg:x="19149" fg:w="1390"/><text x="91.3637%" y="591.50">fringe_vs_astar::stru..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyGridGraph::new (1,390 samples, 6.62%)</title><rect x="91.2465%" y="565" width="6.6235%" height="15" fill="rgb(249,201,17)" fg:x="19149" fg:w="1390"/><text x="91.3637%" y="575.50">fringe_vs_astar::stru..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (965 samples, 4.60%)</title><rect x="93.2717%" y="549" width="4.5983%" height="15" fill="rgb(219,208,6)" fg:x="19574" fg:w="965"/><text x="93.3889%" y="559.50">fringe_vs_asta..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (84 samples, 0.40%)</title><rect x="97.4697%" y="533" width="0.4003%" height="15" fill="rgb(248,31,23)" fg:x="20455" fg:w="84"/><text x="97.5869%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (84 samples, 0.40%)</title><rect x="97.4697%" y="517" width="0.4003%" height="15" fill="rgb(245,15,42)" fg:x="20455" fg:w="84"/><text x="97.5869%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.40%)</title><rect x="97.4697%" y="501" width="0.4003%" height="15" fill="rgb(222,217,39)" fg:x="20455" fg:w="84"/><text x="97.5869%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (80 samples, 0.38%)</title><rect x="97.4888%" y="485" width="0.3812%" height="15" fill="rgb(210,219,27)" fg:x="20459" fg:w="80"/><text x="97.6060%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (80 samples, 0.38%)</title><rect x="97.4888%" y="469" width="0.3812%" height="15" fill="rgb(252,166,36)" fg:x="20459" fg:w="80"/><text x="97.6060%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="97.8700%" y="309" width="0.0143%" height="15" fill="rgb(245,132,34)" fg:x="20539" fg:w="3"/><text x="97.9872%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="97.8700%" y="293" width="0.0143%" height="15" fill="rgb(236,54,3)" fg:x="20539" fg:w="3"/><text x="97.9872%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="97.8700%" y="277" width="0.0143%" height="15" fill="rgb(241,173,43)" fg:x="20539" fg:w="3"/><text x="97.9872%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="97.8700%" y="261" width="0.0143%" height="15" fill="rgb(215,190,9)" fg:x="20539" fg:w="3"/><text x="97.9872%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="97.8700%" y="245" width="0.0143%" height="15" fill="rgb(242,101,16)" fg:x="20539" fg:w="3"/><text x="97.9872%" y="255.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (4 samples, 0.02%)</title><rect x="97.8700%" y="565" width="0.0191%" height="15" fill="rgb(223,190,21)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.02%)</title><rect x="97.8700%" y="549" width="0.0191%" height="15" fill="rgb(215,228,25)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="97.8700%" y="533" width="0.0191%" height="15" fill="rgb(225,36,22)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="97.8700%" y="517" width="0.0191%" height="15" fill="rgb(251,106,46)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="97.8700%" y="501" width="0.0191%" height="15" fill="rgb(208,90,1)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="97.8700%" y="485" width="0.0191%" height="15" fill="rgb(243,10,4)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.02%)</title><rect x="97.8700%" y="469" width="0.0191%" height="15" fill="rgb(212,137,27)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="97.8700%" y="453" width="0.0191%" height="15" fill="rgb(231,220,49)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="463.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="97.8700%" y="437" width="0.0191%" height="15" fill="rgb(237,96,20)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="447.50"></text></g><g><title>std::io::BufRead::read_line (4 samples, 0.02%)</title><rect x="97.8700%" y="421" width="0.0191%" height="15" fill="rgb(239,229,30)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="431.50"></text></g><g><title>std::io::append_to_string (4 samples, 0.02%)</title><rect x="97.8700%" y="405" width="0.0191%" height="15" fill="rgb(219,65,33)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="415.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (4 samples, 0.02%)</title><rect x="97.8700%" y="389" width="0.0191%" height="15" fill="rgb(243,134,7)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="399.50"></text></g><g><title>std::io::read_until (4 samples, 0.02%)</title><rect x="97.8700%" y="373" width="0.0191%" height="15" fill="rgb(216,177,54)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="97.8700%" y="357" width="0.0191%" height="15" fill="rgb(211,160,20)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="97.8700%" y="341" width="0.0191%" height="15" fill="rgb(239,85,39)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="97.8700%" y="325" width="0.0191%" height="15" fill="rgb(232,125,22)" fg:x="20539" fg:w="4"/><text x="97.9872%" y="335.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.07%)</title><rect x="97.8938%" y="261" width="0.0715%" height="15" fill="rgb(244,57,34)" fg:x="20544" fg:w="15"/><text x="98.0110%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.07%)</title><rect x="97.8938%" y="245" width="0.0715%" height="15" fill="rgb(214,203,32)" fg:x="20544" fg:w="15"/><text x="98.0110%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.08%)</title><rect x="97.8938%" y="277" width="0.0810%" height="15" fill="rgb(207,58,43)" fg:x="20544" fg:w="17"/><text x="98.0110%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="97.9748%" y="277" width="0.0191%" height="15" fill="rgb(215,193,15)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="97.9748%" y="261" width="0.0191%" height="15" fill="rgb(232,15,44)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="97.9748%" y="245" width="0.0191%" height="15" fill="rgb(212,3,48)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="97.9748%" y="229" width="0.0191%" height="15" fill="rgb(218,128,7)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="97.9748%" y="213" width="0.0191%" height="15" fill="rgb(226,216,39)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="97.9748%" y="197" width="0.0191%" height="15" fill="rgb(243,47,51)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="97.9748%" y="181" width="0.0191%" height="15" fill="rgb(241,183,40)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="191.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="97.9748%" y="165" width="0.0191%" height="15" fill="rgb(231,217,32)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="175.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="97.9748%" y="149" width="0.0191%" height="15" fill="rgb(229,61,38)" fg:x="20561" fg:w="4"/><text x="98.0920%" y="159.50"></text></g><g><title>_int_realloc (3 samples, 0.01%)</title><rect x="97.9796%" y="133" width="0.0143%" height="15" fill="rgb(225,210,5)" fg:x="20562" fg:w="3"/><text x="98.0968%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 0.13%)</title><rect x="97.8891%" y="309" width="0.1287%" height="15" fill="rgb(231,79,45)" fg:x="20543" fg:w="27"/><text x="98.0063%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (27 samples, 0.13%)</title><rect x="97.8891%" y="293" width="0.1287%" height="15" fill="rgb(224,100,7)" fg:x="20543" fg:w="27"/><text x="98.0063%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (5 samples, 0.02%)</title><rect x="97.9939%" y="277" width="0.0238%" height="15" fill="rgb(241,198,18)" fg:x="20565" fg:w="5"/><text x="98.1111%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.13%)</title><rect x="97.8891%" y="549" width="0.1334%" height="15" fill="rgb(252,97,53)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.13%)</title><rect x="97.8891%" y="533" width="0.1334%" height="15" fill="rgb(220,88,7)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.13%)</title><rect x="97.8891%" y="517" width="0.1334%" height="15" fill="rgb(213,176,14)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.13%)</title><rect x="97.8891%" y="501" width="0.1334%" height="15" fill="rgb(246,73,7)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.13%)</title><rect x="97.8891%" y="485" width="0.1334%" height="15" fill="rgb(245,64,36)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (28 samples, 0.13%)</title><rect x="97.8891%" y="469" width="0.1334%" height="15" fill="rgb(245,80,10)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (28 samples, 0.13%)</title><rect x="97.8891%" y="453" width="0.1334%" height="15" fill="rgb(232,107,50)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.13%)</title><rect x="97.8891%" y="437" width="0.1334%" height="15" fill="rgb(253,3,0)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.13%)</title><rect x="97.8891%" y="421" width="0.1334%" height="15" fill="rgb(212,99,53)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (28 samples, 0.13%)</title><rect x="97.8891%" y="405" width="0.1334%" height="15" fill="rgb(249,111,54)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="415.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (28 samples, 0.13%)</title><rect x="97.8891%" y="389" width="0.1334%" height="15" fill="rgb(249,55,30)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.13%)</title><rect x="97.8891%" y="373" width="0.1334%" height="15" fill="rgb(237,47,42)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.13%)</title><rect x="97.8891%" y="357" width="0.1334%" height="15" fill="rgb(211,20,18)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.13%)</title><rect x="97.8891%" y="341" width="0.1334%" height="15" fill="rgb(231,203,46)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.13%)</title><rect x="97.8891%" y="325" width="0.1334%" height="15" fill="rgb(237,142,3)" fg:x="20543" fg:w="28"/><text x="98.0063%" y="335.50"></text></g><g><title>_start (20,266 samples, 96.57%)</title><rect x="1.4581%" y="741" width="96.5691%" height="15" fill="rgb(241,107,1)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="751.50">_start</text></g><g><title>__libc_start_main_impl (20,266 samples, 96.57%)</title><rect x="1.4581%" y="725" width="96.5691%" height="15" fill="rgb(229,83,13)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="735.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (20,266 samples, 96.57%)</title><rect x="1.4581%" y="709" width="96.5691%" height="15" fill="rgb(241,91,40)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="719.50">__libc_start_call_main</text></g><g><title>main (20,266 samples, 96.57%)</title><rect x="1.4581%" y="693" width="96.5691%" height="15" fill="rgb(225,3,45)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="703.50">main</text></g><g><title>std::rt::lang_start_internal (20,266 samples, 96.57%)</title><rect x="1.4581%" y="677" width="96.5691%" height="15" fill="rgb(244,223,14)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="687.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (20,266 samples, 96.57%)</title><rect x="1.4581%" y="661" width="96.5691%" height="15" fill="rgb(224,124,37)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="671.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20,266 samples, 96.57%)</title><rect x="1.4581%" y="645" width="96.5691%" height="15" fill="rgb(251,171,30)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (20,266 samples, 96.57%)</title><rect x="1.4581%" y="629" width="96.5691%" height="15" fill="rgb(236,46,54)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (20,266 samples, 96.57%)</title><rect x="1.4581%" y="613" width="96.5691%" height="15" fill="rgb(245,213,5)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="623.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (20,266 samples, 96.57%)</title><rect x="1.4581%" y="597" width="96.5691%" height="15" fill="rgb(230,144,27)" fg:x="306" fg:w="20266"/><text x="1.5753%" y="607.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (33 samples, 0.16%)</title><rect x="97.8700%" y="581" width="0.1572%" height="15" fill="rgb(220,86,6)" fg:x="20539" fg:w="33"/><text x="97.9872%" y="591.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map (29 samples, 0.14%)</title><rect x="97.8891%" y="565" width="0.1382%" height="15" fill="rgb(240,20,13)" fg:x="20543" fg:w="29"/><text x="98.0063%" y="575.50"></text></g><g><title>anon.f14d96d496978cb533c03713b5a28e0f.7.llvm.17327010617350029673 (4 samples, 0.02%)</title><rect x="98.0273%" y="741" width="0.0191%" height="15" fill="rgb(217,89,34)" fg:x="20572" fg:w="4"/><text x="98.1444%" y="751.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="98.0273%" y="725" width="0.0191%" height="15" fill="rgb(229,13,5)" fg:x="20572" fg:w="4"/><text x="98.1444%" y="735.50"></text></g><g><title>asm_exc_page_fault (274 samples, 1.31%)</title><rect x="98.0463%" y="741" width="1.3056%" height="15" fill="rgb(244,67,35)" fg:x="20576" fg:w="274"/><text x="98.1635%" y="751.50">as..</text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="99.3519%" y="741" width="0.0143%" height="15" fill="rgb(221,40,2)" fg:x="20850" fg:w="3"/><text x="99.4691%" y="751.50"></text></g><g><title>_compound_head (17 samples, 0.08%)</title><rect x="99.3758%" y="517" width="0.0810%" height="15" fill="rgb(237,157,21)" fg:x="20855" fg:w="17"/><text x="99.4930%" y="527.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.01%)</title><rect x="99.5473%" y="453" width="0.0143%" height="15" fill="rgb(222,94,11)" fg:x="20891" fg:w="3"/><text x="99.6645%" y="463.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.02%)</title><rect x="99.5426%" y="469" width="0.0238%" height="15" fill="rgb(249,113,6)" fg:x="20890" fg:w="5"/><text x="99.6597%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (9 samples, 0.04%)</title><rect x="99.5330%" y="485" width="0.0429%" height="15" fill="rgb(238,137,36)" fg:x="20888" fg:w="9"/><text x="99.6502%" y="495.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.01%)</title><rect x="99.5759%" y="485" width="0.0143%" height="15" fill="rgb(210,102,26)" fg:x="20897" fg:w="3"/><text x="99.6931%" y="495.50"></text></g><g><title>page_remove_rmap (24 samples, 0.11%)</title><rect x="99.4806%" y="501" width="0.1144%" height="15" fill="rgb(218,30,30)" fg:x="20877" fg:w="24"/><text x="99.5978%" y="511.50"></text></g><g><title>__mem_cgroup_uncharge_list (3 samples, 0.01%)</title><rect x="99.6521%" y="437" width="0.0143%" height="15" fill="rgb(214,67,26)" fg:x="20913" fg:w="3"/><text x="99.7693%" y="447.50"></text></g><g><title>uncharge_folio (3 samples, 0.01%)</title><rect x="99.6521%" y="421" width="0.0143%" height="15" fill="rgb(251,9,53)" fg:x="20913" fg:w="3"/><text x="99.7693%" y="431.50"></text></g><g><title>free_unref_page_commit (26 samples, 0.12%)</title><rect x="99.6903%" y="421" width="0.1239%" height="15" fill="rgb(228,204,25)" fg:x="20921" fg:w="26"/><text x="99.8075%" y="431.50"></text></g><g><title>free_pcppages_bulk (23 samples, 0.11%)</title><rect x="99.7046%" y="405" width="0.1096%" height="15" fill="rgb(207,153,8)" fg:x="20924" fg:w="23"/><text x="99.8218%" y="415.50"></text></g><g><title>__free_one_page (20 samples, 0.10%)</title><rect x="99.7189%" y="389" width="0.0953%" height="15" fill="rgb(242,9,16)" fg:x="20927" fg:w="20"/><text x="99.8360%" y="399.50"></text></g><g><title>free_unref_page_list (35 samples, 0.17%)</title><rect x="99.6760%" y="437" width="0.1668%" height="15" fill="rgb(217,211,10)" fg:x="20918" fg:w="35"/><text x="99.7932%" y="447.50"></text></g><g><title>free_unref_page_prepare (6 samples, 0.03%)</title><rect x="99.8142%" y="421" width="0.0286%" height="15" fill="rgb(219,228,52)" fg:x="20947" fg:w="6"/><text x="99.9313%" y="431.50"></text></g><g><title>free_unref_page_prepare (3 samples, 0.01%)</title><rect x="99.8428%" y="437" width="0.0143%" height="15" fill="rgb(231,92,29)" fg:x="20953" fg:w="3"/><text x="99.9599%" y="447.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.01%)</title><rect x="99.8999%" y="405" width="0.0143%" height="15" fill="rgb(232,8,23)" fg:x="20965" fg:w="3"/><text x="100.0171%" y="415.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.02%)</title><rect x="99.8999%" y="421" width="0.0191%" height="15" fill="rgb(216,211,34)" fg:x="20965" fg:w="4"/><text x="100.0171%" y="431.50"></text></g><g><title>free_pages_and_swap_cache (72 samples, 0.34%)</title><rect x="99.5950%" y="469" width="0.3431%" height="15" fill="rgb(236,151,0)" fg:x="20901" fg:w="72"/><text x="99.7122%" y="479.50"></text></g><g><title>release_pages (71 samples, 0.34%)</title><rect x="99.5997%" y="453" width="0.3383%" height="15" fill="rgb(209,168,3)" fg:x="20902" fg:w="71"/><text x="99.7169%" y="463.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (17 samples, 0.08%)</title><rect x="99.8570%" y="437" width="0.0810%" height="15" fill="rgb(208,129,28)" fg:x="20956" fg:w="17"/><text x="99.9742%" y="447.50"></text></g><g><title>__mod_zone_page_state (3 samples, 0.01%)</title><rect x="99.9238%" y="421" width="0.0143%" height="15" fill="rgb(229,78,22)" fg:x="20970" fg:w="3"/><text x="100.0409%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (125 samples, 0.60%)</title><rect x="99.3662%" y="741" width="0.5956%" height="15" fill="rgb(228,187,13)" fg:x="20853" fg:w="125"/><text x="99.4834%" y="751.50"></text></g><g><title>do_syscall_64 (125 samples, 0.60%)</title><rect x="99.3662%" y="725" width="0.5956%" height="15" fill="rgb(240,119,24)" fg:x="20853" fg:w="125"/><text x="99.4834%" y="735.50"></text></g><g><title>x64_sys_call (125 samples, 0.60%)</title><rect x="99.3662%" y="709" width="0.5956%" height="15" fill="rgb(209,194,42)" fg:x="20853" fg:w="125"/><text x="99.4834%" y="719.50"></text></g><g><title>__x64_sys_exit_group (124 samples, 0.59%)</title><rect x="99.3710%" y="693" width="0.5909%" height="15" fill="rgb(247,200,46)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="703.50"></text></g><g><title>do_group_exit (124 samples, 0.59%)</title><rect x="99.3710%" y="677" width="0.5909%" height="15" fill="rgb(218,76,16)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="687.50"></text></g><g><title>do_exit (124 samples, 0.59%)</title><rect x="99.3710%" y="661" width="0.5909%" height="15" fill="rgb(225,21,48)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="671.50"></text></g><g><title>exit_mm (124 samples, 0.59%)</title><rect x="99.3710%" y="645" width="0.5909%" height="15" fill="rgb(239,223,50)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="655.50"></text></g><g><title>mmput (124 samples, 0.59%)</title><rect x="99.3710%" y="629" width="0.5909%" height="15" fill="rgb(244,45,21)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="639.50"></text></g><g><title>__mmput (124 samples, 0.59%)</title><rect x="99.3710%" y="613" width="0.5909%" height="15" fill="rgb(232,33,43)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="623.50"></text></g><g><title>exit_mmap (124 samples, 0.59%)</title><rect x="99.3710%" y="597" width="0.5909%" height="15" fill="rgb(209,8,3)" fg:x="20854" fg:w="124"/><text x="99.4882%" y="607.50"></text></g><g><title>unmap_vmas (123 samples, 0.59%)</title><rect x="99.3758%" y="581" width="0.5861%" height="15" fill="rgb(214,25,53)" fg:x="20855" fg:w="123"/><text x="99.4930%" y="591.50"></text></g><g><title>unmap_single_vma (123 samples, 0.59%)</title><rect x="99.3758%" y="565" width="0.5861%" height="15" fill="rgb(254,186,54)" fg:x="20855" fg:w="123"/><text x="99.4930%" y="575.50"></text></g><g><title>unmap_page_range (123 samples, 0.59%)</title><rect x="99.3758%" y="549" width="0.5861%" height="15" fill="rgb(208,174,49)" fg:x="20855" fg:w="123"/><text x="99.4930%" y="559.50"></text></g><g><title>zap_pmd_range.isra.0 (123 samples, 0.59%)</title><rect x="99.3758%" y="533" width="0.5861%" height="15" fill="rgb(233,191,51)" fg:x="20855" fg:w="123"/><text x="99.4930%" y="543.50"></text></g><g><title>zap_pte_range (104 samples, 0.50%)</title><rect x="99.4663%" y="517" width="0.4956%" height="15" fill="rgb(222,134,10)" fg:x="20874" fg:w="104"/><text x="99.5835%" y="527.50"></text></g><g><title>tlb_flush_mmu (77 samples, 0.37%)</title><rect x="99.5950%" y="501" width="0.3669%" height="15" fill="rgb(230,226,20)" fg:x="20901" fg:w="77"/><text x="99.7122%" y="511.50"></text></g><g><title>tlb_batch_pages_flush (77 samples, 0.37%)</title><rect x="99.5950%" y="485" width="0.3669%" height="15" fill="rgb(251,111,25)" fg:x="20901" fg:w="77"/><text x="99.7122%" y="495.50"></text></g><g><title>free_swap_cache (5 samples, 0.02%)</title><rect x="99.9381%" y="469" width="0.0238%" height="15" fill="rgb(224,40,46)" fg:x="20973" fg:w="5"/><text x="100.0552%" y="479.50"></text></g><g><title>fringe-vs-astar (20,981 samples, 99.98%)</title><rect x="0.0000%" y="757" width="99.9762%" height="15" fill="rgb(236,108,47)" fg:x="0" fg:w="20981"/><text x="0.1172%" y="767.50">fringe-vs-astar</text></g><g><title>main_arena (3 samples, 0.01%)</title><rect x="99.9619%" y="741" width="0.0143%" height="15" fill="rgb(234,93,0)" fg:x="20978" fg:w="3"/><text x="100.0791%" y="751.50"></text></g><g><title>all (20,986 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(224,213,32)" fg:x="0" fg:w="20986"/><text x="0.1172%" y="783.50"></text></g><g><title>perf-exec (5 samples, 0.02%)</title><rect x="99.9762%" y="757" width="0.0238%" height="15" fill="rgb(251,11,48)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="99.9762%" y="741" width="0.0238%" height="15" fill="rgb(236,173,5)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="751.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="99.9762%" y="725" width="0.0238%" height="15" fill="rgb(230,95,12)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="735.50"></text></g><g><title>x64_sys_call (5 samples, 0.02%)</title><rect x="99.9762%" y="709" width="0.0238%" height="15" fill="rgb(232,209,1)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="719.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.02%)</title><rect x="99.9762%" y="693" width="0.0238%" height="15" fill="rgb(232,6,1)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="703.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.02%)</title><rect x="99.9762%" y="677" width="0.0238%" height="15" fill="rgb(210,224,50)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="687.50"></text></g><g><title>bprm_execve (5 samples, 0.02%)</title><rect x="99.9762%" y="661" width="0.0238%" height="15" fill="rgb(228,127,35)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="671.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.02%)</title><rect x="99.9762%" y="645" width="0.0238%" height="15" fill="rgb(245,102,45)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="655.50"></text></g><g><title>exec_binprm (5 samples, 0.02%)</title><rect x="99.9762%" y="629" width="0.0238%" height="15" fill="rgb(214,1,49)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="639.50"></text></g><g><title>search_binary_handler (5 samples, 0.02%)</title><rect x="99.9762%" y="613" width="0.0238%" height="15" fill="rgb(226,163,40)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="623.50"></text></g><g><title>load_elf_binary (5 samples, 0.02%)</title><rect x="99.9762%" y="597" width="0.0238%" height="15" fill="rgb(239,212,28)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="607.50"></text></g><g><title>begin_new_exec (5 samples, 0.02%)</title><rect x="99.9762%" y="581" width="0.0238%" height="15" fill="rgb(220,20,13)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="591.50"></text></g><g><title>perf_event_exec (5 samples, 0.02%)</title><rect x="99.9762%" y="565" width="0.0238%" height="15" fill="rgb(210,164,35)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="575.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.02%)</title><rect x="99.9762%" y="549" width="0.0238%" height="15" fill="rgb(248,109,41)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="559.50"></text></g><g><title>ctx_resched (5 samples, 0.02%)</title><rect x="99.9762%" y="533" width="0.0238%" height="15" fill="rgb(238,23,50)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="543.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.02%)</title><rect x="99.9762%" y="517" width="0.0238%" height="15" fill="rgb(211,48,49)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="527.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.02%)</title><rect x="99.9762%" y="501" width="0.0238%" height="15" fill="rgb(223,36,21)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="511.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.02%)</title><rect x="99.9762%" y="485" width="0.0238%" height="15" fill="rgb(207,123,46)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="495.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="99.9762%" y="469" width="0.0238%" height="15" fill="rgb(240,218,32)" fg:x="20981" fg:w="5"/><text x="100.0934%" y="479.50"></text></g></svg></svg>