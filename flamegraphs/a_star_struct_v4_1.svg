<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="1014" onload="init(evt)" viewBox="0 0 2560 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="997.00"> </text><svg id="frames" x="10" width="2540" total_samples="2611"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.15%)</title><rect x="0.4596%" y="901" width="0.1532%" height="15" fill="rgb(227,0,7)" fg:x="12" fg:w="4"/><text x="0.5768%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.15%)</title><rect x="0.4596%" y="885" width="0.1532%" height="15" fill="rgb(217,0,24)" fg:x="12" fg:w="4"/><text x="0.5768%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.15%)</title><rect x="0.4596%" y="869" width="0.1532%" height="15" fill="rgb(221,193,54)" fg:x="12" fg:w="4"/><text x="0.5768%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.15%)</title><rect x="0.4596%" y="853" width="0.1532%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="4"/><text x="0.5768%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.77%)</title><rect x="0.0000%" y="933" width="0.7660%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="20"/><text x="0.1172%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.61%)</title><rect x="0.1532%" y="917" width="0.6128%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="16"/><text x="0.2704%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.15%)</title><rect x="0.6128%" y="901" width="0.1532%" height="15" fill="rgb(207,160,47)" fg:x="16" fg:w="4"/><text x="0.7300%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.15%)</title><rect x="0.6128%" y="885" width="0.1532%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="4"/><text x="0.7300%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.15%)</title><rect x="0.6128%" y="869" width="0.1532%" height="15" fill="rgb(218,30,26)" fg:x="16" fg:w="4"/><text x="0.7300%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.15%)</title><rect x="0.6128%" y="853" width="0.1532%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="4"/><text x="0.7300%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.15%)</title><rect x="0.6128%" y="837" width="0.1532%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="4"/><text x="0.7300%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.15%)</title><rect x="0.6128%" y="821" width="0.1532%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="4"/><text x="0.7300%" y="831.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.15%)</title><rect x="0.6128%" y="805" width="0.1532%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="4"/><text x="0.7300%" y="815.50"></text></g><g><title>[fringe-vs-astar] (1 samples, 0.04%)</title><rect x="0.7660%" y="917" width="0.0383%" height="15" fill="rgb(206,188,39)" fg:x="20" fg:w="1"/><text x="0.8832%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="0.7660%" y="901" width="0.0383%" height="15" fill="rgb(217,207,13)" fg:x="20" fg:w="1"/><text x="0.8832%" y="911.50"></text></g><g><title>_int_free (4 samples, 0.15%)</title><rect x="0.8043%" y="917" width="0.1532%" height="15" fill="rgb(231,73,38)" fg:x="21" fg:w="4"/><text x="0.9215%" y="927.50"></text></g><g><title>[[heap]] (12 samples, 0.46%)</title><rect x="0.7660%" y="933" width="0.4596%" height="15" fill="rgb(225,20,46)" fg:x="20" fg:w="12"/><text x="0.8832%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.27%)</title><rect x="0.9575%" y="917" width="0.2681%" height="15" fill="rgb(210,31,41)" fg:x="25" fg:w="7"/><text x="1.0747%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.19%)</title><rect x="1.0341%" y="901" width="0.1915%" height="15" fill="rgb(221,200,47)" fg:x="27" fg:w="5"/><text x="1.1513%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="1.2256%" y="917" width="0.0766%" height="15" fill="rgb(226,26,5)" fg:x="32" fg:w="2"/><text x="1.3428%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="1.2256%" y="901" width="0.0766%" height="15" fill="rgb(249,33,26)" fg:x="32" fg:w="2"/><text x="1.3428%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.08%)</title><rect x="1.2256%" y="885" width="0.0766%" height="15" fill="rgb(235,183,28)" fg:x="32" fg:w="2"/><text x="1.3428%" y="895.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (2 samples, 0.08%)</title><rect x="1.2256%" y="869" width="0.0766%" height="15" fill="rgb(221,5,38)" fg:x="32" fg:w="2"/><text x="1.3428%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.08%)</title><rect x="1.2256%" y="853" width="0.0766%" height="15" fill="rgb(247,18,42)" fg:x="32" fg:w="2"/><text x="1.3428%" y="863.50"></text></g><g><title>__GI___libc_free (2 samples, 0.08%)</title><rect x="1.3022%" y="917" width="0.0766%" height="15" fill="rgb(241,131,45)" fg:x="34" fg:w="2"/><text x="1.4194%" y="927.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.31%)</title><rect x="1.3788%" y="917" width="0.3064%" height="15" fill="rgb(249,31,29)" fg:x="36" fg:w="8"/><text x="1.4960%" y="927.50"></text></g><g><title>__rdl_realloc (2 samples, 0.08%)</title><rect x="1.6852%" y="917" width="0.0766%" height="15" fill="rgb(225,111,53)" fg:x="44" fg:w="2"/><text x="1.8024%" y="927.50"></text></g><g><title>[[stack]] (39 samples, 1.49%)</title><rect x="1.2256%" y="933" width="1.4937%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="39"/><text x="1.3428%" y="943.50">[[s..</text></g><g><title>_int_free (25 samples, 0.96%)</title><rect x="1.7618%" y="917" width="0.9575%" height="15" fill="rgb(214,148,48)" fg:x="46" fg:w="25"/><text x="1.8790%" y="927.50">_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.54%)</title><rect x="2.7193%" y="917" width="0.5362%" height="15" fill="rgb(232,36,49)" fg:x="71" fg:w="14"/><text x="2.8365%" y="927.50"></text></g><g><title>__GI___libc_free (12 samples, 0.46%)</title><rect x="3.2555%" y="917" width="0.4596%" height="15" fill="rgb(209,103,24)" fg:x="85" fg:w="12"/><text x="3.3726%" y="927.50"></text></g><g><title>[anon] (33 samples, 1.26%)</title><rect x="2.7193%" y="933" width="1.2639%" height="15" fill="rgb(229,88,8)" fg:x="71" fg:w="33"/><text x="2.8365%" y="943.50">[a..</text></g><g><title>__GI___libc_malloc (7 samples, 0.27%)</title><rect x="3.7151%" y="917" width="0.2681%" height="15" fill="rgb(213,181,19)" fg:x="97" fg:w="7"/><text x="3.8322%" y="927.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.23%)</title><rect x="3.9831%" y="917" width="0.2298%" height="15" fill="rgb(254,191,54)" fg:x="104" fg:w="6"/><text x="4.1003%" y="927.50"></text></g><g><title>[fringe-vs-astar] (12 samples, 0.46%)</title><rect x="3.9831%" y="933" width="0.4596%" height="15" fill="rgb(241,83,37)" fg:x="104" fg:w="12"/><text x="4.1003%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.23%)</title><rect x="4.2129%" y="917" width="0.2298%" height="15" fill="rgb(233,36,39)" fg:x="110" fg:w="6"/><text x="4.3301%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.23%)</title><rect x="4.2129%" y="901" width="0.2298%" height="15" fill="rgb(226,3,54)" fg:x="110" fg:w="6"/><text x="4.3301%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.23%)</title><rect x="4.2129%" y="885" width="0.2298%" height="15" fill="rgb(245,192,40)" fg:x="110" fg:w="6"/><text x="4.3301%" y="895.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.23%)</title><rect x="4.2129%" y="869" width="0.2298%" height="15" fill="rgb(238,167,29)" fg:x="110" fg:w="6"/><text x="4.3301%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.19%)</title><rect x="4.4427%" y="917" width="0.1915%" height="15" fill="rgb(232,182,51)" fg:x="116" fg:w="5"/><text x="4.5599%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.19%)</title><rect x="4.4427%" y="901" width="0.1915%" height="15" fill="rgb(231,60,39)" fg:x="116" fg:w="5"/><text x="4.5599%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.19%)</title><rect x="4.4427%" y="885" width="0.1915%" height="15" fill="rgb(208,69,12)" fg:x="116" fg:w="5"/><text x="4.5599%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.19%)</title><rect x="4.4427%" y="869" width="0.1915%" height="15" fill="rgb(235,93,37)" fg:x="116" fg:w="5"/><text x="4.5599%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.19%)</title><rect x="4.4427%" y="853" width="0.1915%" height="15" fill="rgb(213,116,39)" fg:x="116" fg:w="5"/><text x="4.5599%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.19%)</title><rect x="4.4427%" y="837" width="0.1915%" height="15" fill="rgb(222,207,29)" fg:x="116" fg:w="5"/><text x="4.5599%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.19%)</title><rect x="4.4427%" y="821" width="0.1915%" height="15" fill="rgb(206,96,30)" fg:x="116" fg:w="5"/><text x="4.5599%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.19%)</title><rect x="4.4427%" y="805" width="0.1915%" height="15" fill="rgb(218,138,4)" fg:x="116" fg:w="5"/><text x="4.5599%" y="815.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.19%)</title><rect x="4.4427%" y="789" width="0.1915%" height="15" fill="rgb(250,191,14)" fg:x="116" fg:w="5"/><text x="4.5599%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.11%)</title><rect x="4.6342%" y="917" width="0.1149%" height="15" fill="rgb(239,60,40)" fg:x="121" fg:w="3"/><text x="4.7514%" y="927.50"></text></g><g><title>__GI___libc_free (12 samples, 0.46%)</title><rect x="4.7491%" y="917" width="0.4596%" height="15" fill="rgb(206,27,48)" fg:x="124" fg:w="12"/><text x="4.8663%" y="927.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.23%)</title><rect x="5.2087%" y="917" width="0.2298%" height="15" fill="rgb(225,35,8)" fg:x="136" fg:w="6"/><text x="5.3259%" y="927.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.23%)</title><rect x="5.4385%" y="917" width="0.2298%" height="15" fill="rgb(250,213,24)" fg:x="142" fg:w="6"/><text x="5.5557%" y="927.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.11%)</title><rect x="5.6683%" y="917" width="0.1149%" height="15" fill="rgb(247,123,22)" fg:x="148" fg:w="3"/><text x="5.7855%" y="927.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="5.7832%" y="917" width="0.0383%" height="15" fill="rgb(231,138,38)" fg:x="151" fg:w="1"/><text x="5.9004%" y="927.50"></text></g><g><title>_int_free (10 samples, 0.38%)</title><rect x="5.8215%" y="917" width="0.3830%" height="15" fill="rgb(231,145,46)" fg:x="152" fg:w="10"/><text x="5.9387%" y="927.50"></text></g><g><title>_int_malloc (13 samples, 0.50%)</title><rect x="6.2045%" y="917" width="0.4979%" height="15" fill="rgb(251,118,11)" fg:x="162" fg:w="13"/><text x="6.3217%" y="927.50"></text></g><g><title>_int_realloc (19 samples, 0.73%)</title><rect x="6.7024%" y="917" width="0.7277%" height="15" fill="rgb(217,147,25)" fg:x="175" fg:w="19"/><text x="6.8196%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.11%)</title><rect x="7.4301%" y="917" width="0.1149%" height="15" fill="rgb(247,81,37)" fg:x="194" fg:w="3"/><text x="7.5473%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.27%)</title><rect x="7.5450%" y="917" width="0.2681%" height="15" fill="rgb(209,12,38)" fg:x="197" fg:w="7"/><text x="7.6622%" y="927.50"></text></g><g><title>fringe_vs_astar::context::Context::run (2 samples, 0.08%)</title><rect x="7.8131%" y="917" width="0.0766%" height="15" fill="rgb(227,1,9)" fg:x="204" fg:w="2"/><text x="7.9303%" y="927.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (2 samples, 0.08%)</title><rect x="7.8131%" y="901" width="0.0766%" height="15" fill="rgb(248,47,43)" fg:x="204" fg:w="2"/><text x="7.9303%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (2 samples, 0.08%)</title><rect x="7.8131%" y="885" width="0.0766%" height="15" fill="rgb(221,10,30)" fg:x="204" fg:w="2"/><text x="7.9303%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (2 samples, 0.08%)</title><rect x="7.8131%" y="869" width="0.0766%" height="15" fill="rgb(210,229,1)" fg:x="204" fg:w="2"/><text x="7.9303%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="7.8131%" y="853" width="0.0766%" height="15" fill="rgb(222,148,37)" fg:x="204" fg:w="2"/><text x="7.9303%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="7.8131%" y="837" width="0.0766%" height="15" fill="rgb(234,67,33)" fg:x="204" fg:w="2"/><text x="7.9303%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (2 samples, 0.08%)</title><rect x="7.8131%" y="821" width="0.0766%" height="15" fill="rgb(247,98,35)" fg:x="204" fg:w="2"/><text x="7.9303%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (2 samples, 0.08%)</title><rect x="7.8131%" y="805" width="0.0766%" height="15" fill="rgb(247,138,52)" fg:x="204" fg:w="2"/><text x="7.9303%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (2 samples, 0.08%)</title><rect x="7.8131%" y="789" width="0.0766%" height="15" fill="rgb(213,79,30)" fg:x="204" fg:w="2"/><text x="7.9303%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="7.8131%" y="773" width="0.0766%" height="15" fill="rgb(246,177,23)" fg:x="204" fg:w="2"/><text x="7.9303%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="7.8131%" y="757" width="0.0766%" height="15" fill="rgb(230,62,27)" fg:x="204" fg:w="2"/><text x="7.9303%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="7.8131%" y="741" width="0.0766%" height="15" fill="rgb(216,154,8)" fg:x="204" fg:w="2"/><text x="7.9303%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.08%)</title><rect x="7.8897%" y="885" width="0.0766%" height="15" fill="rgb(244,35,45)" fg:x="206" fg:w="2"/><text x="8.0069%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="7.8897%" y="869" width="0.0766%" height="15" fill="rgb(251,115,12)" fg:x="206" fg:w="2"/><text x="8.0069%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.08%)</title><rect x="7.9663%" y="885" width="0.0766%" height="15" fill="rgb(240,54,50)" fg:x="208" fg:w="2"/><text x="8.0835%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.08%)</title><rect x="7.9663%" y="869" width="0.0766%" height="15" fill="rgb(233,84,52)" fg:x="208" fg:w="2"/><text x="8.0835%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="7.9663%" y="853" width="0.0766%" height="15" fill="rgb(207,117,47)" fg:x="208" fg:w="2"/><text x="8.0835%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="7.9663%" y="837" width="0.0766%" height="15" fill="rgb(249,43,39)" fg:x="208" fg:w="2"/><text x="8.0835%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="7.9663%" y="821" width="0.0766%" height="15" fill="rgb(209,38,44)" fg:x="208" fg:w="2"/><text x="8.0835%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.34%)</title><rect x="8.0429%" y="869" width="0.3447%" height="15" fill="rgb(236,212,23)" fg:x="210" fg:w="9"/><text x="8.1601%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.34%)</title><rect x="8.0429%" y="853" width="0.3447%" height="15" fill="rgb(242,79,21)" fg:x="210" fg:w="9"/><text x="8.1601%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.34%)</title><rect x="8.0429%" y="837" width="0.3447%" height="15" fill="rgb(211,96,35)" fg:x="210" fg:w="9"/><text x="8.1601%" y="847.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.34%)</title><rect x="8.0429%" y="821" width="0.3447%" height="15" fill="rgb(253,215,40)" fg:x="210" fg:w="9"/><text x="8.1601%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="8.3876%" y="869" width="0.0383%" height="15" fill="rgb(211,81,21)" fg:x="219" fg:w="1"/><text x="8.5048%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="8.3876%" y="853" width="0.0383%" height="15" fill="rgb(208,190,38)" fg:x="219" fg:w="1"/><text x="8.5048%" y="863.50"></text></g><g><title>[unknown] (114 samples, 4.37%)</title><rect x="4.4427%" y="933" width="4.3661%" height="15" fill="rgb(235,213,38)" fg:x="116" fg:w="114"/><text x="4.5599%" y="943.50">[unknown]</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (24 samples, 0.92%)</title><rect x="7.8897%" y="917" width="0.9192%" height="15" fill="rgb(237,122,38)" fg:x="206" fg:w="24"/><text x="8.0069%" y="927.50">f..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (24 samples, 0.92%)</title><rect x="7.8897%" y="901" width="0.9192%" height="15" fill="rgb(244,218,35)" fg:x="206" fg:w="24"/><text x="8.0069%" y="911.50">f..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (20 samples, 0.77%)</title><rect x="8.0429%" y="885" width="0.7660%" height="15" fill="rgb(240,68,47)" fg:x="210" fg:w="20"/><text x="8.1601%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.38%)</title><rect x="8.4259%" y="869" width="0.3830%" height="15" fill="rgb(210,16,53)" fg:x="220" fg:w="10"/><text x="8.5431%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.38%)</title><rect x="8.4259%" y="853" width="0.3830%" height="15" fill="rgb(235,124,12)" fg:x="220" fg:w="10"/><text x="8.5431%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.38%)</title><rect x="8.4259%" y="837" width="0.3830%" height="15" fill="rgb(224,169,11)" fg:x="220" fg:w="10"/><text x="8.5431%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.38%)</title><rect x="8.4259%" y="821" width="0.3830%" height="15" fill="rgb(250,166,2)" fg:x="220" fg:w="10"/><text x="8.5431%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.38%)</title><rect x="8.4259%" y="805" width="0.3830%" height="15" fill="rgb(242,216,29)" fg:x="220" fg:w="10"/><text x="8.5431%" y="815.50"></text></g><g><title>_IO_wide_data_0 (6 samples, 0.23%)</title><rect x="8.8089%" y="933" width="0.2298%" height="15" fill="rgb(230,116,27)" fg:x="230" fg:w="6"/><text x="8.9261%" y="943.50"></text></g><g><title>_int_malloc (6 samples, 0.23%)</title><rect x="8.8089%" y="917" width="0.2298%" height="15" fill="rgb(228,99,48)" fg:x="230" fg:w="6"/><text x="8.9261%" y="927.50"></text></g><g><title>_int_free (17 samples, 0.65%)</title><rect x="9.0387%" y="933" width="0.6511%" height="15" fill="rgb(253,11,6)" fg:x="236" fg:w="17"/><text x="9.1559%" y="943.50"></text></g><g><title>malloc_consolidate (9 samples, 0.34%)</title><rect x="14.9751%" y="565" width="0.3447%" height="15" fill="rgb(247,143,39)" fg:x="391" fg:w="9"/><text x="15.0923%" y="575.50"></text></g><g><title>unlink_chunk (2 samples, 0.08%)</title><rect x="15.2432%" y="549" width="0.0766%" height="15" fill="rgb(236,97,10)" fg:x="398" fg:w="2"/><text x="15.3604%" y="559.50"></text></g><g><title>_int_free (121 samples, 4.63%)</title><rect x="10.9920%" y="581" width="4.6342%" height="15" fill="rgb(233,208,19)" fg:x="287" fg:w="121"/><text x="11.1091%" y="591.50">_int_free</text></g><g><title>unlink_chunk (8 samples, 0.31%)</title><rect x="15.3198%" y="565" width="0.3064%" height="15" fill="rgb(216,164,2)" fg:x="400" fg:w="8"/><text x="15.4370%" y="575.50"></text></g><g><title>__GI___libc_free (128 samples, 4.90%)</title><rect x="10.8005%" y="597" width="4.9023%" height="15" fill="rgb(220,129,5)" fg:x="282" fg:w="128"/><text x="10.9176%" y="607.50">__GI___libc_free</text></g><g><title>arena_for_chunk (2 samples, 0.08%)</title><rect x="15.6262%" y="581" width="0.0766%" height="15" fill="rgb(242,17,10)" fg:x="408" fg:w="2"/><text x="15.7434%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (135 samples, 5.17%)</title><rect x="10.6856%" y="613" width="5.1704%" height="15" fill="rgb(242,107,0)" fg:x="279" fg:w="135"/><text x="10.8027%" y="623.50">alloc::alloc::de..</text></g><g><title>__rdl_dealloc (4 samples, 0.15%)</title><rect x="15.7028%" y="597" width="0.1532%" height="15" fill="rgb(251,28,31)" fg:x="410" fg:w="4"/><text x="15.8200%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (138 samples, 5.29%)</title><rect x="10.6856%" y="629" width="5.2853%" height="15" fill="rgb(233,223,10)" fg:x="279" fg:w="138"/><text x="10.8027%" y="639.50">&lt;alloc::alloc::Gl..</text></g><g><title>fringe_vs_astar::context::Context::run (3 samples, 0.11%)</title><rect x="15.8560%" y="613" width="0.1149%" height="15" fill="rgb(215,21,27)" fg:x="414" fg:w="3"/><text x="15.9732%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 6.93%)</title><rect x="9.6898%" y="709" width="6.9322%" height="15" fill="rgb(232,23,21)" fg:x="253" fg:w="181"/><text x="9.8070%" y="719.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (181 samples, 6.93%)</title><rect x="9.6898%" y="693" width="6.9322%" height="15" fill="rgb(244,5,23)" fg:x="253" fg:w="181"/><text x="9.8070%" y="703.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (181 samples, 6.93%)</title><rect x="9.6898%" y="677" width="6.9322%" height="15" fill="rgb(226,81,46)" fg:x="253" fg:w="181"/><text x="9.8070%" y="687.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (181 samples, 6.93%)</title><rect x="9.6898%" y="661" width="6.9322%" height="15" fill="rgb(247,70,30)" fg:x="253" fg:w="181"/><text x="9.8070%" y="671.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 6.93%)</title><rect x="9.6898%" y="645" width="6.9322%" height="15" fill="rgb(212,68,19)" fg:x="253" fg:w="181"/><text x="9.8070%" y="655.50">&lt;alloc::raw_vec::RawVec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (17 samples, 0.65%)</title><rect x="15.9709%" y="629" width="0.6511%" height="15" fill="rgb(240,187,13)" fg:x="417" fg:w="17"/><text x="16.0881%" y="639.50"></text></g><g><title>_compound_head (5 samples, 0.19%)</title><rect x="16.6220%" y="421" width="0.1915%" height="15" fill="rgb(223,113,26)" fg:x="434" fg:w="5"/><text x="16.7392%" y="431.50"></text></g><g><title>page_remove_rmap (5 samples, 0.19%)</title><rect x="16.9284%" y="405" width="0.1915%" height="15" fill="rgb(206,192,2)" fg:x="442" fg:w="5"/><text x="17.0456%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.04%)</title><rect x="17.0816%" y="389" width="0.0383%" height="15" fill="rgb(241,108,4)" fg:x="446" fg:w="1"/><text x="17.1988%" y="399.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="17.0816%" y="373" width="0.0383%" height="15" fill="rgb(247,173,49)" fg:x="446" fg:w="1"/><text x="17.1988%" y="383.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.08%)</title><rect x="17.1582%" y="341" width="0.0766%" height="15" fill="rgb(224,114,35)" fg:x="448" fg:w="2"/><text x="17.2754%" y="351.50"></text></g><g><title>uncharge_folio (2 samples, 0.08%)</title><rect x="17.1582%" y="325" width="0.0766%" height="15" fill="rgb(245,159,27)" fg:x="448" fg:w="2"/><text x="17.2754%" y="335.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="17.2348%" y="341" width="0.0383%" height="15" fill="rgb(245,172,44)" fg:x="450" fg:w="1"/><text x="17.3520%" y="351.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="17.2731%" y="325" width="0.0383%" height="15" fill="rgb(236,23,11)" fg:x="451" fg:w="1"/><text x="17.3903%" y="335.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.08%)</title><rect x="17.3114%" y="325" width="0.0766%" height="15" fill="rgb(205,117,38)" fg:x="452" fg:w="2"/><text x="17.4286%" y="335.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.08%)</title><rect x="17.3114%" y="309" width="0.0766%" height="15" fill="rgb(237,72,25)" fg:x="452" fg:w="2"/><text x="17.4286%" y="319.50"></text></g><g><title>__free_one_page (1 samples, 0.04%)</title><rect x="17.3497%" y="293" width="0.0383%" height="15" fill="rgb(244,70,9)" fg:x="453" fg:w="1"/><text x="17.4669%" y="303.50"></text></g><g><title>free_unref_page_list (5 samples, 0.19%)</title><rect x="17.2731%" y="341" width="0.1915%" height="15" fill="rgb(217,125,39)" fg:x="451" fg:w="5"/><text x="17.3903%" y="351.50"></text></g><g><title>free_unref_page_prepare (2 samples, 0.08%)</title><rect x="17.3880%" y="325" width="0.0766%" height="15" fill="rgb(235,36,10)" fg:x="454" fg:w="2"/><text x="17.5052%" y="335.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.08%)</title><rect x="17.5029%" y="325" width="0.0766%" height="15" fill="rgb(251,123,47)" fg:x="457" fg:w="2"/><text x="17.6201%" y="335.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.08%)</title><rect x="17.5029%" y="309" width="0.0766%" height="15" fill="rgb(221,13,13)" fg:x="457" fg:w="2"/><text x="17.6201%" y="319.50"></text></g><g><title>free_pages_and_swap_cache (13 samples, 0.50%)</title><rect x="17.1199%" y="373" width="0.4979%" height="15" fill="rgb(238,131,9)" fg:x="447" fg:w="13"/><text x="17.2371%" y="383.50"></text></g><g><title>release_pages (13 samples, 0.50%)</title><rect x="17.1199%" y="357" width="0.4979%" height="15" fill="rgb(211,50,8)" fg:x="447" fg:w="13"/><text x="17.2371%" y="367.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (4 samples, 0.15%)</title><rect x="17.4646%" y="341" width="0.1532%" height="15" fill="rgb(245,182,24)" fg:x="456" fg:w="4"/><text x="17.5818%" y="351.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.04%)</title><rect x="17.5795%" y="325" width="0.0383%" height="15" fill="rgb(242,14,37)" fg:x="459" fg:w="1"/><text x="17.6967%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (208 samples, 7.97%)</title><rect x="9.6898%" y="741" width="7.9663%" height="15" fill="rgb(246,228,12)" fg:x="253" fg:w="208"/><text x="9.8070%" y="751.50">core::ptr::drop_in_place&lt;f..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (208 samples, 7.97%)</title><rect x="9.6898%" y="725" width="7.9663%" height="15" fill="rgb(213,55,15)" fg:x="253" fg:w="208"/><text x="9.8070%" y="735.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (27 samples, 1.03%)</title><rect x="16.6220%" y="709" width="1.0341%" height="15" fill="rgb(209,9,3)" fg:x="434" fg:w="27"/><text x="16.7392%" y="719.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 1.03%)</title><rect x="16.6220%" y="693" width="1.0341%" height="15" fill="rgb(230,59,30)" fg:x="434" fg:w="27"/><text x="16.7392%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 1.03%)</title><rect x="16.6220%" y="677" width="1.0341%" height="15" fill="rgb(209,121,21)" fg:x="434" fg:w="27"/><text x="16.7392%" y="687.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (27 samples, 1.03%)</title><rect x="16.6220%" y="661" width="1.0341%" height="15" fill="rgb(220,109,13)" fg:x="434" fg:w="27"/><text x="16.7392%" y="671.50">a..</text></g><g><title>__GI___libc_free (27 samples, 1.03%)</title><rect x="16.6220%" y="645" width="1.0341%" height="15" fill="rgb(232,18,1)" fg:x="434" fg:w="27"/><text x="16.7392%" y="655.50">_..</text></g><g><title>__GI___munmap (27 samples, 1.03%)</title><rect x="16.6220%" y="629" width="1.0341%" height="15" fill="rgb(215,41,42)" fg:x="434" fg:w="27"/><text x="16.7392%" y="639.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 1.03%)</title><rect x="16.6220%" y="613" width="1.0341%" height="15" fill="rgb(224,123,36)" fg:x="434" fg:w="27"/><text x="16.7392%" y="623.50">e..</text></g><g><title>do_syscall_64 (27 samples, 1.03%)</title><rect x="16.6220%" y="597" width="1.0341%" height="15" fill="rgb(240,125,3)" fg:x="434" fg:w="27"/><text x="16.7392%" y="607.50">d..</text></g><g><title>x64_sys_call (27 samples, 1.03%)</title><rect x="16.6220%" y="581" width="1.0341%" height="15" fill="rgb(205,98,50)" fg:x="434" fg:w="27"/><text x="16.7392%" y="591.50">x..</text></g><g><title>__x64_sys_munmap (27 samples, 1.03%)</title><rect x="16.6220%" y="565" width="1.0341%" height="15" fill="rgb(205,185,37)" fg:x="434" fg:w="27"/><text x="16.7392%" y="575.50">_..</text></g><g><title>__vm_munmap (27 samples, 1.03%)</title><rect x="16.6220%" y="549" width="1.0341%" height="15" fill="rgb(238,207,15)" fg:x="434" fg:w="27"/><text x="16.7392%" y="559.50">_..</text></g><g><title>do_vmi_munmap (27 samples, 1.03%)</title><rect x="16.6220%" y="533" width="1.0341%" height="15" fill="rgb(213,199,42)" fg:x="434" fg:w="27"/><text x="16.7392%" y="543.50">d..</text></g><g><title>do_vmi_align_munmap (27 samples, 1.03%)</title><rect x="16.6220%" y="517" width="1.0341%" height="15" fill="rgb(235,201,11)" fg:x="434" fg:w="27"/><text x="16.7392%" y="527.50">d..</text></g><g><title>unmap_region (27 samples, 1.03%)</title><rect x="16.6220%" y="501" width="1.0341%" height="15" fill="rgb(207,46,11)" fg:x="434" fg:w="27"/><text x="16.7392%" y="511.50">u..</text></g><g><title>unmap_vmas (27 samples, 1.03%)</title><rect x="16.6220%" y="485" width="1.0341%" height="15" fill="rgb(241,35,35)" fg:x="434" fg:w="27"/><text x="16.7392%" y="495.50">u..</text></g><g><title>unmap_single_vma (27 samples, 1.03%)</title><rect x="16.6220%" y="469" width="1.0341%" height="15" fill="rgb(243,32,47)" fg:x="434" fg:w="27"/><text x="16.7392%" y="479.50">u..</text></g><g><title>unmap_page_range (27 samples, 1.03%)</title><rect x="16.6220%" y="453" width="1.0341%" height="15" fill="rgb(247,202,23)" fg:x="434" fg:w="27"/><text x="16.7392%" y="463.50">u..</text></g><g><title>zap_pmd_range.isra.0 (27 samples, 1.03%)</title><rect x="16.6220%" y="437" width="1.0341%" height="15" fill="rgb(219,102,11)" fg:x="434" fg:w="27"/><text x="16.7392%" y="447.50">z..</text></g><g><title>zap_pte_range (22 samples, 0.84%)</title><rect x="16.8135%" y="421" width="0.8426%" height="15" fill="rgb(243,110,44)" fg:x="439" fg:w="22"/><text x="16.9307%" y="431.50">z..</text></g><g><title>tlb_flush_mmu (14 samples, 0.54%)</title><rect x="17.1199%" y="405" width="0.5362%" height="15" fill="rgb(222,74,54)" fg:x="447" fg:w="14"/><text x="17.2371%" y="415.50"></text></g><g><title>tlb_batch_pages_flush (14 samples, 0.54%)</title><rect x="17.1199%" y="389" width="0.5362%" height="15" fill="rgb(216,99,12)" fg:x="447" fg:w="14"/><text x="17.2371%" y="399.50"></text></g><g><title>free_swap_cache (1 samples, 0.04%)</title><rect x="17.6178%" y="373" width="0.0383%" height="15" fill="rgb(226,22,26)" fg:x="460" fg:w="1"/><text x="17.7350%" y="383.50"></text></g><g><title>__split_vma (1 samples, 0.04%)</title><rect x="17.6561%" y="501" width="0.0383%" height="15" fill="rgb(217,163,10)" fg:x="461" fg:w="1"/><text x="17.7733%" y="511.50"></text></g><g><title>vm_area_dup (1 samples, 0.04%)</title><rect x="17.6561%" y="485" width="0.0383%" height="15" fill="rgb(213,25,53)" fg:x="461" fg:w="1"/><text x="17.7733%" y="495.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="17.6561%" y="469" width="0.0383%" height="15" fill="rgb(252,105,26)" fg:x="461" fg:w="1"/><text x="17.7733%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (210 samples, 8.04%)</title><rect x="9.6898%" y="757" width="8.0429%" height="15" fill="rgb(220,39,43)" fg:x="253" fg:w="210"/><text x="9.8070%" y="767.50">core::ptr::drop_in_place&lt;fr..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::ArrayMap&gt; (2 samples, 0.08%)</title><rect x="17.6561%" y="741" width="0.0766%" height="15" fill="rgb(229,68,48)" fg:x="461" fg:w="2"/><text x="17.7733%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.08%)</title><rect x="17.6561%" y="725" width="0.0766%" height="15" fill="rgb(252,8,32)" fg:x="461" fg:w="2"/><text x="17.7733%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.08%)</title><rect x="17.6561%" y="709" width="0.0766%" height="15" fill="rgb(223,20,43)" fg:x="461" fg:w="2"/><text x="17.7733%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="17.6561%" y="693" width="0.0766%" height="15" fill="rgb(229,81,49)" fg:x="461" fg:w="2"/><text x="17.7733%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="17.6561%" y="677" width="0.0766%" height="15" fill="rgb(236,28,36)" fg:x="461" fg:w="2"/><text x="17.7733%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="17.6561%" y="661" width="0.0766%" height="15" fill="rgb(249,185,26)" fg:x="461" fg:w="2"/><text x="17.7733%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.08%)</title><rect x="17.6561%" y="645" width="0.0766%" height="15" fill="rgb(249,174,33)" fg:x="461" fg:w="2"/><text x="17.7733%" y="655.50"></text></g><g><title>__GI___munmap (2 samples, 0.08%)</title><rect x="17.6561%" y="629" width="0.0766%" height="15" fill="rgb(233,201,37)" fg:x="461" fg:w="2"/><text x="17.7733%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="17.6561%" y="613" width="0.0766%" height="15" fill="rgb(221,78,26)" fg:x="461" fg:w="2"/><text x="17.7733%" y="623.50"></text></g><g><title>do_syscall_64 (2 samples, 0.08%)</title><rect x="17.6561%" y="597" width="0.0766%" height="15" fill="rgb(250,127,30)" fg:x="461" fg:w="2"/><text x="17.7733%" y="607.50"></text></g><g><title>x64_sys_call (2 samples, 0.08%)</title><rect x="17.6561%" y="581" width="0.0766%" height="15" fill="rgb(230,49,44)" fg:x="461" fg:w="2"/><text x="17.7733%" y="591.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.08%)</title><rect x="17.6561%" y="565" width="0.0766%" height="15" fill="rgb(229,67,23)" fg:x="461" fg:w="2"/><text x="17.7733%" y="575.50"></text></g><g><title>__vm_munmap (2 samples, 0.08%)</title><rect x="17.6561%" y="549" width="0.0766%" height="15" fill="rgb(249,83,47)" fg:x="461" fg:w="2"/><text x="17.7733%" y="559.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.08%)</title><rect x="17.6561%" y="533" width="0.0766%" height="15" fill="rgb(215,43,3)" fg:x="461" fg:w="2"/><text x="17.7733%" y="543.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.08%)</title><rect x="17.6561%" y="517" width="0.0766%" height="15" fill="rgb(238,154,13)" fg:x="461" fg:w="2"/><text x="17.7733%" y="527.50"></text></g><g><title>unmap_region (1 samples, 0.04%)</title><rect x="17.6944%" y="501" width="0.0383%" height="15" fill="rgb(219,56,2)" fg:x="462" fg:w="1"/><text x="17.8116%" y="511.50"></text></g><g><title>unmap_vmas (1 samples, 0.04%)</title><rect x="17.6944%" y="485" width="0.0383%" height="15" fill="rgb(233,0,4)" fg:x="462" fg:w="1"/><text x="17.8116%" y="495.50"></text></g><g><title>unmap_single_vma (1 samples, 0.04%)</title><rect x="17.6944%" y="469" width="0.0383%" height="15" fill="rgb(235,30,7)" fg:x="462" fg:w="1"/><text x="17.8116%" y="479.50"></text></g><g><title>unmap_page_range (1 samples, 0.04%)</title><rect x="17.6944%" y="453" width="0.0383%" height="15" fill="rgb(250,79,13)" fg:x="462" fg:w="1"/><text x="17.8116%" y="463.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.04%)</title><rect x="17.6944%" y="437" width="0.0383%" height="15" fill="rgb(211,146,34)" fg:x="462" fg:w="1"/><text x="17.8116%" y="447.50"></text></g><g><title>zap_pte_range (1 samples, 0.04%)</title><rect x="17.6944%" y="421" width="0.0383%" height="15" fill="rgb(228,22,38)" fg:x="462" fg:w="1"/><text x="17.8116%" y="431.50"></text></g><g><title>page_remove_rmap (1 samples, 0.04%)</title><rect x="17.6944%" y="405" width="0.0383%" height="15" fill="rgb(235,168,5)" fg:x="462" fg:w="1"/><text x="17.8116%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.04%)</title><rect x="17.6944%" y="389" width="0.0383%" height="15" fill="rgb(221,155,16)" fg:x="462" fg:w="1"/><text x="17.8116%" y="399.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="19.7625%" y="453" width="0.0383%" height="15" fill="rgb(215,215,53)" fg:x="516" fg:w="1"/><text x="19.8797%" y="463.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.04%)</title><rect x="19.9923%" y="421" width="0.0383%" height="15" fill="rgb(223,4,10)" fg:x="522" fg:w="1"/><text x="20.1095%" y="431.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.04%)</title><rect x="19.9923%" y="405" width="0.0383%" height="15" fill="rgb(234,103,6)" fg:x="522" fg:w="1"/><text x="20.1095%" y="415.50"></text></g><g><title>__get_vma_policy (2 samples, 0.08%)</title><rect x="20.0306%" y="421" width="0.0766%" height="15" fill="rgb(227,97,0)" fg:x="523" fg:w="2"/><text x="20.1478%" y="431.50"></text></g><g><title>__rcu_read_unlock (34 samples, 1.30%)</title><rect x="20.3753%" y="405" width="1.3022%" height="15" fill="rgb(234,150,53)" fg:x="532" fg:w="34"/><text x="20.4925%" y="415.50">__..</text></g><g><title>__count_memcg_events (7 samples, 0.27%)</title><rect x="21.9456%" y="389" width="0.2681%" height="15" fill="rgb(228,201,54)" fg:x="573" fg:w="7"/><text x="22.0628%" y="399.50"></text></g><g><title>cgroup_rstat_updated (6 samples, 0.23%)</title><rect x="21.9839%" y="373" width="0.2298%" height="15" fill="rgb(222,22,37)" fg:x="574" fg:w="6"/><text x="22.1011%" y="383.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="22.2137%" y="389" width="0.0383%" height="15" fill="rgb(237,53,32)" fg:x="580" fg:w="1"/><text x="22.3309%" y="399.50"></text></g><g><title>charge_memcg (24 samples, 0.92%)</title><rect x="21.6775%" y="405" width="0.9192%" height="15" fill="rgb(233,25,53)" fg:x="566" fg:w="24"/><text x="21.7947%" y="415.50">c..</text></g><g><title>try_charge_memcg (9 samples, 0.34%)</title><rect x="22.2520%" y="389" width="0.3447%" height="15" fill="rgb(210,40,34)" fg:x="581" fg:w="9"/><text x="22.3692%" y="399.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="22.5584%" y="373" width="0.0383%" height="15" fill="rgb(241,220,44)" fg:x="589" fg:w="1"/><text x="22.6756%" y="383.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.19%)</title><rect x="22.5967%" y="405" width="0.1915%" height="15" fill="rgb(235,28,35)" fg:x="590" fg:w="5"/><text x="22.7139%" y="415.50"></text></g><g><title>memcg_check_events (1 samples, 0.04%)</title><rect x="22.7882%" y="405" width="0.0383%" height="15" fill="rgb(210,56,17)" fg:x="595" fg:w="1"/><text x="22.9054%" y="415.50"></text></g><g><title>__mem_cgroup_charge (72 samples, 2.76%)</title><rect x="20.1072%" y="421" width="2.7576%" height="15" fill="rgb(224,130,29)" fg:x="525" fg:w="72"/><text x="20.2244%" y="431.50">__mem_c..</text></g><g><title>try_charge_memcg (1 samples, 0.04%)</title><rect x="22.8265%" y="405" width="0.0383%" height="15" fill="rgb(235,212,8)" fg:x="596" fg:w="1"/><text x="22.9437%" y="415.50"></text></g><g><title>__pte_offset_map_lock (5 samples, 0.19%)</title><rect x="22.8648%" y="421" width="0.1915%" height="15" fill="rgb(223,33,50)" fg:x="597" fg:w="5"/><text x="22.9820%" y="431.50"></text></g><g><title>__pte_offset_map (2 samples, 0.08%)</title><rect x="22.9797%" y="405" width="0.0766%" height="15" fill="rgb(219,149,13)" fg:x="600" fg:w="2"/><text x="23.0969%" y="415.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.08%)</title><rect x="23.0563%" y="421" width="0.0766%" height="15" fill="rgb(250,156,29)" fg:x="602" fg:w="2"/><text x="23.1735%" y="431.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.11%)</title><rect x="23.1329%" y="421" width="0.1149%" height="15" fill="rgb(216,193,19)" fg:x="604" fg:w="3"/><text x="23.2501%" y="431.50"></text></g><g><title>folio_add_lru (2 samples, 0.08%)</title><rect x="23.2478%" y="421" width="0.0766%" height="15" fill="rgb(216,135,14)" fg:x="607" fg:w="2"/><text x="23.3650%" y="431.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.04%)</title><rect x="23.5542%" y="373" width="0.0383%" height="15" fill="rgb(241,47,5)" fg:x="615" fg:w="1"/><text x="23.6714%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="23.5542%" y="357" width="0.0383%" height="15" fill="rgb(233,42,35)" fg:x="615" fg:w="1"/><text x="23.6714%" y="367.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="23.5542%" y="341" width="0.0383%" height="15" fill="rgb(231,13,6)" fg:x="615" fg:w="1"/><text x="23.6714%" y="351.50"></text></g><g><title>folio_mapping (1 samples, 0.04%)</title><rect x="23.7840%" y="357" width="0.0383%" height="15" fill="rgb(207,181,40)" fg:x="621" fg:w="1"/><text x="23.9012%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.08%)</title><rect x="23.8989%" y="325" width="0.0766%" height="15" fill="rgb(254,173,49)" fg:x="624" fg:w="2"/><text x="24.0161%" y="335.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="23.9372%" y="309" width="0.0383%" height="15" fill="rgb(221,1,38)" fg:x="625" fg:w="1"/><text x="24.0544%" y="319.50"></text></g><g><title>lru_add_fn (11 samples, 0.42%)</title><rect x="23.5925%" y="373" width="0.4213%" height="15" fill="rgb(206,124,46)" fg:x="616" fg:w="11"/><text x="23.7097%" y="383.50"></text></g><g><title>lru_gen_add_folio (5 samples, 0.19%)</title><rect x="23.8223%" y="357" width="0.1915%" height="15" fill="rgb(249,21,11)" fg:x="622" fg:w="5"/><text x="23.9395%" y="367.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.15%)</title><rect x="23.8606%" y="341" width="0.1532%" height="15" fill="rgb(222,201,40)" fg:x="623" fg:w="4"/><text x="23.9778%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="23.9755%" y="325" width="0.0383%" height="15" fill="rgb(235,61,29)" fg:x="626" fg:w="1"/><text x="24.0927%" y="335.50"></text></g><g><title>folio_add_lru_vma (19 samples, 0.73%)</title><rect x="23.3244%" y="421" width="0.7277%" height="15" fill="rgb(219,207,3)" fg:x="609" fg:w="19"/><text x="23.4416%" y="431.50"></text></g><g><title>folio_add_lru (19 samples, 0.73%)</title><rect x="23.3244%" y="405" width="0.7277%" height="15" fill="rgb(222,56,46)" fg:x="609" fg:w="19"/><text x="23.4416%" y="415.50"></text></g><g><title>folio_batch_move_lru (17 samples, 0.65%)</title><rect x="23.4010%" y="389" width="0.6511%" height="15" fill="rgb(239,76,54)" fg:x="611" fg:w="17"/><text x="23.5182%" y="399.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="24.0138%" y="373" width="0.0383%" height="15" fill="rgb(231,124,27)" fg:x="627" fg:w="1"/><text x="24.1310%" y="383.50"></text></g><g><title>folio_add_new_anon_rmap (6 samples, 0.23%)</title><rect x="24.0521%" y="421" width="0.2298%" height="15" fill="rgb(249,195,6)" fg:x="628" fg:w="6"/><text x="24.1693%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.04%)</title><rect x="24.2436%" y="405" width="0.0383%" height="15" fill="rgb(237,174,47)" fg:x="633" fg:w="1"/><text x="24.3608%" y="415.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="24.2436%" y="389" width="0.0383%" height="15" fill="rgb(206,201,31)" fg:x="633" fg:w="1"/><text x="24.3608%" y="399.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="24.2436%" y="373" width="0.0383%" height="15" fill="rgb(231,57,52)" fg:x="633" fg:w="1"/><text x="24.3608%" y="383.50"></text></g><g><title>inc_mm_counter (5 samples, 0.19%)</title><rect x="24.2819%" y="421" width="0.1915%" height="15" fill="rgb(248,177,22)" fg:x="634" fg:w="5"/><text x="24.3991%" y="431.50"></text></g><g><title>percpu_counter_add_batch (5 samples, 0.19%)</title><rect x="24.2819%" y="405" width="0.1915%" height="15" fill="rgb(215,211,37)" fg:x="634" fg:w="5"/><text x="24.3991%" y="415.50"></text></g><g><title>policy_node (1 samples, 0.04%)</title><rect x="24.4734%" y="421" width="0.0383%" height="15" fill="rgb(241,128,51)" fg:x="639" fg:w="1"/><text x="24.5906%" y="431.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.04%)</title><rect x="24.7798%" y="373" width="0.0383%" height="15" fill="rgb(227,165,31)" fg:x="647" fg:w="1"/><text x="24.8970%" y="383.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.04%)</title><rect x="25.0862%" y="357" width="0.0383%" height="15" fill="rgb(228,167,24)" fg:x="655" fg:w="1"/><text x="25.2034%" y="367.50"></text></g><g><title>clear_page_erms (6 samples, 0.23%)</title><rect x="25.1245%" y="357" width="0.2298%" height="15" fill="rgb(228,143,12)" fg:x="656" fg:w="6"/><text x="25.2417%" y="367.50"></text></g><g><title>__alloc_pages (29 samples, 1.11%)</title><rect x="24.6649%" y="389" width="1.1107%" height="15" fill="rgb(249,149,8)" fg:x="644" fg:w="29"/><text x="24.7821%" y="399.50">__..</text></g><g><title>get_page_from_freelist (25 samples, 0.96%)</title><rect x="24.8181%" y="373" width="0.9575%" height="15" fill="rgb(243,35,44)" fg:x="648" fg:w="25"/><text x="24.9353%" y="383.50">g..</text></g><g><title>rmqueue (11 samples, 0.42%)</title><rect x="25.3543%" y="357" width="0.4213%" height="15" fill="rgb(246,89,9)" fg:x="662" fg:w="11"/><text x="25.4715%" y="367.50"></text></g><g><title>__rmqueue_pcplist (10 samples, 0.38%)</title><rect x="25.3926%" y="341" width="0.3830%" height="15" fill="rgb(233,213,13)" fg:x="663" fg:w="10"/><text x="25.5098%" y="351.50"></text></g><g><title>rmqueue_bulk (9 samples, 0.34%)</title><rect x="25.4309%" y="325" width="0.3447%" height="15" fill="rgb(233,141,41)" fg:x="664" fg:w="9"/><text x="25.5481%" y="335.50"></text></g><g><title>__folio_alloc (30 samples, 1.15%)</title><rect x="24.6649%" y="405" width="1.1490%" height="15" fill="rgb(239,167,4)" fg:x="644" fg:w="30"/><text x="24.7821%" y="415.50">__..</text></g><g><title>should_fail_alloc_page (1 samples, 0.04%)</title><rect x="25.7756%" y="389" width="0.0383%" height="15" fill="rgb(209,217,16)" fg:x="673" fg:w="1"/><text x="25.8928%" y="399.50"></text></g><g><title>do_anonymous_page (156 samples, 5.97%)</title><rect x="19.8774%" y="437" width="5.9747%" height="15" fill="rgb(219,88,35)" fg:x="519" fg:w="156"/><text x="19.9946%" y="447.50">do_anonymous_page</text></g><g><title>vma_alloc_folio (35 samples, 1.34%)</title><rect x="24.5117%" y="421" width="1.3405%" height="15" fill="rgb(220,193,23)" fg:x="640" fg:w="35"/><text x="24.6289%" y="431.50">vm..</text></g><g><title>policy_nodemask (1 samples, 0.04%)</title><rect x="25.8139%" y="405" width="0.0383%" height="15" fill="rgb(230,90,52)" fg:x="674" fg:w="1"/><text x="25.9311%" y="415.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.04%)</title><rect x="25.8522%" y="437" width="0.0383%" height="15" fill="rgb(252,106,19)" fg:x="675" fg:w="1"/><text x="25.9694%" y="447.50"></text></g><g><title>pfn_pte (1 samples, 0.04%)</title><rect x="25.8905%" y="437" width="0.0383%" height="15" fill="rgb(206,74,20)" fg:x="676" fg:w="1"/><text x="26.0077%" y="447.50"></text></g><g><title>handle_pte_fault (163 samples, 6.24%)</title><rect x="19.8008%" y="453" width="6.2428%" height="15" fill="rgb(230,138,44)" fg:x="517" fg:w="163"/><text x="19.9180%" y="463.50">handle_pte_fault</text></g><g><title>pte_offset_map_nolock (3 samples, 0.11%)</title><rect x="25.9288%" y="437" width="0.1149%" height="15" fill="rgb(235,182,43)" fg:x="677" fg:w="3"/><text x="26.0460%" y="447.50"></text></g><g><title>__pte_offset_map (3 samples, 0.11%)</title><rect x="25.9288%" y="421" width="0.1149%" height="15" fill="rgb(242,16,51)" fg:x="677" fg:w="3"/><text x="26.0460%" y="431.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.04%)</title><rect x="26.0437%" y="453" width="0.0383%" height="15" fill="rgb(248,9,4)" fg:x="680" fg:w="1"/><text x="26.1608%" y="463.50"></text></g><g><title>__handle_mm_fault (174 samples, 6.66%)</title><rect x="19.4561%" y="469" width="6.6641%" height="15" fill="rgb(210,31,22)" fg:x="508" fg:w="174"/><text x="19.5733%" y="479.50">__handle_mm_fault</text></g><g><title>pud_val (1 samples, 0.04%)</title><rect x="26.0820%" y="453" width="0.0383%" height="15" fill="rgb(239,54,39)" fg:x="681" fg:w="1"/><text x="26.1991%" y="463.50"></text></g><g><title>handle_mm_fault (178 samples, 6.82%)</title><rect x="19.4561%" y="485" width="6.8173%" height="15" fill="rgb(230,99,41)" fg:x="508" fg:w="178"/><text x="19.5733%" y="495.50">handle_mm_fault</text></g><g><title>count_memcg_events.constprop.0 (4 samples, 0.15%)</title><rect x="26.1203%" y="469" width="0.1532%" height="15" fill="rgb(253,106,12)" fg:x="682" fg:w="4"/><text x="26.2374%" y="479.50"></text></g><g><title>__count_memcg_events (2 samples, 0.08%)</title><rect x="26.1969%" y="453" width="0.0766%" height="15" fill="rgb(213,46,41)" fg:x="684" fg:w="2"/><text x="26.3140%" y="463.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="26.2352%" y="437" width="0.0383%" height="15" fill="rgb(215,133,35)" fg:x="685" fg:w="1"/><text x="26.3523%" y="447.50"></text></g><g><title>lock_vma_under_rcu (5 samples, 0.19%)</title><rect x="26.2735%" y="485" width="0.1915%" height="15" fill="rgb(213,28,5)" fg:x="686" fg:w="5"/><text x="26.3906%" y="495.50"></text></g><g><title>mas_walk (4 samples, 0.15%)</title><rect x="26.3118%" y="469" width="0.1532%" height="15" fill="rgb(215,77,49)" fg:x="687" fg:w="4"/><text x="26.4289%" y="479.50"></text></g><g><title>mtree_range_walk (3 samples, 0.11%)</title><rect x="26.3501%" y="453" width="0.1149%" height="15" fill="rgb(248,100,22)" fg:x="688" fg:w="3"/><text x="26.4672%" y="463.50"></text></g><g><title>do_user_addr_fault (186 samples, 7.12%)</title><rect x="19.4178%" y="501" width="7.1237%" height="15" fill="rgb(208,67,9)" fg:x="507" fg:w="186"/><text x="19.5350%" y="511.50">do_user_addr_fault</text></g><g><title>up_read (2 samples, 0.08%)</title><rect x="26.4650%" y="485" width="0.0766%" height="15" fill="rgb(219,133,21)" fg:x="691" fg:w="2"/><text x="26.5821%" y="495.50"></text></g><g><title>asm_exc_page_fault (187 samples, 7.16%)</title><rect x="19.4178%" y="533" width="7.1620%" height="15" fill="rgb(246,46,29)" fg:x="507" fg:w="187"/><text x="19.5350%" y="543.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (187 samples, 7.16%)</title><rect x="19.4178%" y="517" width="7.1620%" height="15" fill="rgb(246,185,52)" fg:x="507" fg:w="187"/><text x="19.5350%" y="527.50">exc_page_fault</text></g><g><title>irqentry_exit (1 samples, 0.04%)</title><rect x="26.5416%" y="501" width="0.0383%" height="15" fill="rgb(252,136,11)" fg:x="693" fg:w="1"/><text x="26.6587%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.04%)</title><rect x="26.5416%" y="485" width="0.0383%" height="15" fill="rgb(219,138,53)" fg:x="693" fg:w="1"/><text x="26.6587%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.04%)</title><rect x="26.5416%" y="469" width="0.0383%" height="15" fill="rgb(211,51,23)" fg:x="693" fg:w="1"/><text x="26.6587%" y="479.50"></text></g><g><title>error_entry (2 samples, 0.08%)</title><rect x="26.5799%" y="533" width="0.0766%" height="15" fill="rgb(247,221,28)" fg:x="694" fg:w="2"/><text x="26.6970%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (253 samples, 9.69%)</title><rect x="17.7327%" y="725" width="9.6898%" height="15" fill="rgb(251,222,45)" fg:x="463" fg:w="253"/><text x="17.8499%" y="735.50">core::iter::traits::iterator::Ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (253 samples, 9.69%)</title><rect x="17.7327%" y="709" width="9.6898%" height="15" fill="rgb(217,162,53)" fg:x="463" fg:w="253"/><text x="17.8499%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (253 samples, 9.69%)</title><rect x="17.7327%" y="693" width="9.6898%" height="15" fill="rgb(229,93,14)" fg:x="463" fg:w="253"/><text x="17.8499%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (253 samples, 9.69%)</title><rect x="17.7327%" y="677" width="9.6898%" height="15" fill="rgb(209,67,49)" fg:x="463" fg:w="253"/><text x="17.8499%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (253 samples, 9.69%)</title><rect x="17.7327%" y="661" width="9.6898%" height="15" fill="rgb(213,87,29)" fg:x="463" fg:w="253"/><text x="17.8499%" y="671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (253 samples, 9.69%)</title><rect x="17.7327%" y="645" width="9.6898%" height="15" fill="rgb(205,151,52)" fg:x="463" fg:w="253"/><text x="17.8499%" y="655.50">alloc::vec::Vec&lt;T,A&gt;::extend_trus..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (253 samples, 9.69%)</title><rect x="17.7327%" y="629" width="9.6898%" height="15" fill="rgb(253,215,39)" fg:x="463" fg:w="253"/><text x="17.8499%" y="639.50">&lt;core::iter::adapters::take::Take..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (253 samples, 9.69%)</title><rect x="17.7327%" y="613" width="9.6898%" height="15" fill="rgb(221,220,41)" fg:x="463" fg:w="253"/><text x="17.8499%" y="623.50">&lt;core::iter::adapters::take::Take..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (253 samples, 9.69%)</title><rect x="17.7327%" y="597" width="9.6898%" height="15" fill="rgb(218,133,21)" fg:x="463" fg:w="253"/><text x="17.8499%" y="607.50">core::iter::traits::iterator::Ite..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (244 samples, 9.35%)</title><rect x="18.0774%" y="581" width="9.3451%" height="15" fill="rgb(221,193,43)" fg:x="472" fg:w="244"/><text x="18.1946%" y="591.50">&lt;core::iter::adapters::take::Ta..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (244 samples, 9.35%)</title><rect x="18.0774%" y="565" width="9.3451%" height="15" fill="rgb(240,128,52)" fg:x="472" fg:w="244"/><text x="18.1946%" y="575.50">alloc::vec::Vec&lt;T,A&gt;::extend_tr..</text></g><g><title>core::ptr::write (244 samples, 9.35%)</title><rect x="18.0774%" y="549" width="9.3451%" height="15" fill="rgb(253,114,12)" fg:x="472" fg:w="244"/><text x="18.1946%" y="559.50">core::ptr::write</text></g><g><title>sync_regs (20 samples, 0.77%)</title><rect x="26.6565%" y="533" width="0.7660%" height="15" fill="rgb(215,223,47)" fg:x="696" fg:w="20"/><text x="26.7736%" y="543.50"></text></g><g><title>access_error (1 samples, 0.04%)</title><rect x="27.9203%" y="485" width="0.0383%" height="15" fill="rgb(248,225,23)" fg:x="729" fg:w="1"/><text x="28.0375%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="28.0352%" y="469" width="0.0383%" height="15" fill="rgb(250,108,0)" fg:x="732" fg:w="1"/><text x="28.1524%" y="479.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="28.0735%" y="469" width="0.0383%" height="15" fill="rgb(228,208,7)" fg:x="733" fg:w="1"/><text x="28.1907%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="28.0735%" y="453" width="0.0383%" height="15" fill="rgb(244,45,10)" fg:x="733" fg:w="1"/><text x="28.1907%" y="463.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="28.0735%" y="437" width="0.0383%" height="15" fill="rgb(207,125,25)" fg:x="733" fg:w="1"/><text x="28.1907%" y="447.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="28.0735%" y="421" width="0.0383%" height="15" fill="rgb(210,195,18)" fg:x="733" fg:w="1"/><text x="28.1907%" y="431.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="28.0735%" y="405" width="0.0383%" height="15" fill="rgb(249,80,12)" fg:x="733" fg:w="1"/><text x="28.1907%" y="415.50"></text></g><g><title>enqueue_hrtimer (1 samples, 0.04%)</title><rect x="28.0735%" y="389" width="0.0383%" height="15" fill="rgb(221,65,9)" fg:x="733" fg:w="1"/><text x="28.1907%" y="399.50"></text></g><g><title>timerqueue_add (1 samples, 0.04%)</title><rect x="28.0735%" y="373" width="0.0383%" height="15" fill="rgb(235,49,36)" fg:x="733" fg:w="1"/><text x="28.1907%" y="383.50"></text></g><g><title>down_read_trylock (1 samples, 0.04%)</title><rect x="28.1118%" y="469" width="0.0383%" height="15" fill="rgb(225,32,20)" fg:x="734" fg:w="1"/><text x="28.2290%" y="479.50"></text></g><g><title>__pte_offset_map (2 samples, 0.08%)</title><rect x="28.3033%" y="421" width="0.0766%" height="15" fill="rgb(215,141,46)" fg:x="739" fg:w="2"/><text x="28.4205%" y="431.50"></text></g><g><title>__rcu_read_unlock (15 samples, 0.57%)</title><rect x="28.5331%" y="389" width="0.5745%" height="15" fill="rgb(250,160,47)" fg:x="745" fg:w="15"/><text x="28.6503%" y="399.50"></text></g><g><title>__count_memcg_events (2 samples, 0.08%)</title><rect x="29.2225%" y="373" width="0.0766%" height="15" fill="rgb(216,222,40)" fg:x="763" fg:w="2"/><text x="29.3397%" y="383.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.08%)</title><rect x="29.2225%" y="357" width="0.0766%" height="15" fill="rgb(234,217,39)" fg:x="763" fg:w="2"/><text x="29.3397%" y="367.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="29.2991%" y="373" width="0.0383%" height="15" fill="rgb(207,178,40)" fg:x="765" fg:w="1"/><text x="29.4163%" y="383.50"></text></g><g><title>refill_stock (1 samples, 0.04%)</title><rect x="29.3374%" y="373" width="0.0383%" height="15" fill="rgb(221,136,13)" fg:x="766" fg:w="1"/><text x="29.4546%" y="383.50"></text></g><g><title>charge_memcg (13 samples, 0.50%)</title><rect x="29.1076%" y="389" width="0.4979%" height="15" fill="rgb(249,199,10)" fg:x="760" fg:w="13"/><text x="29.2248%" y="399.50"></text></g><g><title>try_charge_memcg (6 samples, 0.23%)</title><rect x="29.3757%" y="373" width="0.2298%" height="15" fill="rgb(249,222,13)" fg:x="767" fg:w="6"/><text x="29.4929%" y="383.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="29.5672%" y="357" width="0.0383%" height="15" fill="rgb(244,185,38)" fg:x="772" fg:w="1"/><text x="29.6844%" y="367.50"></text></g><g><title>__mem_cgroup_charge (34 samples, 1.30%)</title><rect x="28.4565%" y="405" width="1.3022%" height="15" fill="rgb(236,202,9)" fg:x="743" fg:w="34"/><text x="28.5737%" y="415.50">__..</text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.15%)</title><rect x="29.6055%" y="389" width="0.1532%" height="15" fill="rgb(250,229,37)" fg:x="773" fg:w="4"/><text x="29.7227%" y="399.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="29.7204%" y="373" width="0.0383%" height="15" fill="rgb(206,174,23)" fg:x="776" fg:w="1"/><text x="29.8376%" y="383.50"></text></g><g><title>__pte_offset_map (2 samples, 0.08%)</title><rect x="29.7587%" y="405" width="0.0766%" height="15" fill="rgb(211,33,43)" fg:x="777" fg:w="2"/><text x="29.8759%" y="415.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.04%)</title><rect x="29.8353%" y="405" width="0.0383%" height="15" fill="rgb(245,58,50)" fg:x="779" fg:w="1"/><text x="29.9525%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="29.8736%" y="405" width="0.0383%" height="15" fill="rgb(244,68,36)" fg:x="780" fg:w="1"/><text x="29.9908%" y="415.50"></text></g><g><title>lru_add_fn (1 samples, 0.04%)</title><rect x="30.1034%" y="357" width="0.0383%" height="15" fill="rgb(232,229,15)" fg:x="786" fg:w="1"/><text x="30.2206%" y="367.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.04%)</title><rect x="30.1034%" y="341" width="0.0383%" height="15" fill="rgb(254,30,23)" fg:x="786" fg:w="1"/><text x="30.2206%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="30.1034%" y="325" width="0.0383%" height="15" fill="rgb(235,160,14)" fg:x="786" fg:w="1"/><text x="30.2206%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="30.1034%" y="309" width="0.0383%" height="15" fill="rgb(212,155,44)" fg:x="786" fg:w="1"/><text x="30.2206%" y="319.50"></text></g><g><title>folio_add_lru_vma (7 samples, 0.27%)</title><rect x="29.9119%" y="405" width="0.2681%" height="15" fill="rgb(226,2,50)" fg:x="781" fg:w="7"/><text x="30.0291%" y="415.50"></text></g><g><title>folio_add_lru (7 samples, 0.27%)</title><rect x="29.9119%" y="389" width="0.2681%" height="15" fill="rgb(234,177,6)" fg:x="781" fg:w="7"/><text x="30.0291%" y="399.50"></text></g><g><title>folio_batch_move_lru (3 samples, 0.11%)</title><rect x="30.0651%" y="373" width="0.1149%" height="15" fill="rgb(217,24,9)" fg:x="785" fg:w="3"/><text x="30.1823%" y="383.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="30.1417%" y="357" width="0.0383%" height="15" fill="rgb(220,13,46)" fg:x="787" fg:w="1"/><text x="30.2589%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (2 samples, 0.08%)</title><rect x="30.1800%" y="405" width="0.0766%" height="15" fill="rgb(239,221,27)" fg:x="788" fg:w="2"/><text x="30.2972%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.08%)</title><rect x="30.1800%" y="389" width="0.0766%" height="15" fill="rgb(222,198,25)" fg:x="788" fg:w="2"/><text x="30.2972%" y="399.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="30.2183%" y="373" width="0.0383%" height="15" fill="rgb(211,99,13)" fg:x="789" fg:w="1"/><text x="30.3355%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="30.2183%" y="357" width="0.0383%" height="15" fill="rgb(232,111,31)" fg:x="789" fg:w="1"/><text x="30.3355%" y="367.50"></text></g><g><title>inc_mm_counter (1 samples, 0.04%)</title><rect x="30.2566%" y="405" width="0.0383%" height="15" fill="rgb(245,82,37)" fg:x="790" fg:w="1"/><text x="30.3738%" y="415.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.04%)</title><rect x="30.2566%" y="389" width="0.0383%" height="15" fill="rgb(227,149,46)" fg:x="790" fg:w="1"/><text x="30.3738%" y="399.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.04%)</title><rect x="30.4098%" y="357" width="0.0383%" height="15" fill="rgb(218,36,50)" fg:x="794" fg:w="1"/><text x="30.5270%" y="367.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.04%)</title><rect x="30.5247%" y="341" width="0.0383%" height="15" fill="rgb(226,80,48)" fg:x="797" fg:w="1"/><text x="30.6419%" y="351.50"></text></g><g><title>clear_page_erms (3 samples, 0.11%)</title><rect x="30.5630%" y="341" width="0.1149%" height="15" fill="rgb(238,224,15)" fg:x="798" fg:w="3"/><text x="30.6802%" y="351.50"></text></g><g><title>post_alloc_hook (1 samples, 0.04%)</title><rect x="30.6779%" y="341" width="0.0383%" height="15" fill="rgb(241,136,10)" fg:x="801" fg:w="1"/><text x="30.7951%" y="351.50"></text></g><g><title>__folio_alloc (19 samples, 0.73%)</title><rect x="30.3332%" y="389" width="0.7277%" height="15" fill="rgb(208,32,45)" fg:x="792" fg:w="19"/><text x="30.4504%" y="399.50"></text></g><g><title>__alloc_pages (19 samples, 0.73%)</title><rect x="30.3332%" y="373" width="0.7277%" height="15" fill="rgb(207,135,9)" fg:x="792" fg:w="19"/><text x="30.4504%" y="383.50"></text></g><g><title>get_page_from_freelist (16 samples, 0.61%)</title><rect x="30.4481%" y="357" width="0.6128%" height="15" fill="rgb(206,86,44)" fg:x="795" fg:w="16"/><text x="30.5653%" y="367.50"></text></g><g><title>rmqueue (9 samples, 0.34%)</title><rect x="30.7162%" y="341" width="0.3447%" height="15" fill="rgb(245,177,15)" fg:x="802" fg:w="9"/><text x="30.8334%" y="351.50"></text></g><g><title>__rmqueue_pcplist (7 samples, 0.27%)</title><rect x="30.7928%" y="325" width="0.2681%" height="15" fill="rgb(206,64,50)" fg:x="804" fg:w="7"/><text x="30.9100%" y="335.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.19%)</title><rect x="30.8694%" y="309" width="0.1915%" height="15" fill="rgb(234,36,40)" fg:x="806" fg:w="5"/><text x="30.9866%" y="319.50"></text></g><g><title>do_anonymous_page (71 samples, 2.72%)</title><rect x="28.3799%" y="421" width="2.7193%" height="15" fill="rgb(213,64,8)" fg:x="741" fg:w="71"/><text x="28.4971%" y="431.50">do_anon..</text></g><g><title>vma_alloc_folio (21 samples, 0.80%)</title><rect x="30.2949%" y="405" width="0.8043%" height="15" fill="rgb(210,75,36)" fg:x="791" fg:w="21"/><text x="30.4121%" y="415.50"></text></g><g><title>policy_nodemask (1 samples, 0.04%)</title><rect x="31.0609%" y="389" width="0.0383%" height="15" fill="rgb(229,88,21)" fg:x="811" fg:w="1"/><text x="31.1781%" y="399.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.04%)</title><rect x="31.0992%" y="421" width="0.0383%" height="15" fill="rgb(252,204,47)" fg:x="812" fg:w="1"/><text x="31.2164%" y="431.50"></text></g><g><title>set_pte (1 samples, 0.04%)</title><rect x="31.1375%" y="421" width="0.0383%" height="15" fill="rgb(208,77,27)" fg:x="813" fg:w="1"/><text x="31.2547%" y="431.50"></text></g><g><title>__handle_mm_fault (80 samples, 3.06%)</title><rect x="28.1884%" y="453" width="3.0640%" height="15" fill="rgb(221,76,26)" fg:x="736" fg:w="80"/><text x="28.3056%" y="463.50">__handle_..</text></g><g><title>handle_pte_fault (77 samples, 2.95%)</title><rect x="28.3033%" y="437" width="2.9491%" height="15" fill="rgb(225,139,18)" fg:x="739" fg:w="77"/><text x="28.4205%" y="447.50">handle_p..</text></g><g><title>vma_alloc_folio (2 samples, 0.08%)</title><rect x="31.1758%" y="421" width="0.0766%" height="15" fill="rgb(230,137,11)" fg:x="814" fg:w="2"/><text x="31.2930%" y="431.50"></text></g><g><title>handle_mm_fault (83 samples, 3.18%)</title><rect x="28.1501%" y="469" width="3.1789%" height="15" fill="rgb(212,28,1)" fg:x="735" fg:w="83"/><text x="28.2673%" y="479.50">handle_mm..</text></g><g><title>count_memcg_events.constprop.0 (2 samples, 0.08%)</title><rect x="31.2524%" y="453" width="0.0766%" height="15" fill="rgb(248,164,17)" fg:x="816" fg:w="2"/><text x="31.3696%" y="463.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.04%)</title><rect x="31.3290%" y="469" width="0.0383%" height="15" fill="rgb(222,171,42)" fg:x="818" fg:w="1"/><text x="31.4462%" y="479.50"></text></g><g><title>mas_walk (1 samples, 0.04%)</title><rect x="31.3290%" y="453" width="0.0383%" height="15" fill="rgb(243,84,45)" fg:x="818" fg:w="1"/><text x="31.4462%" y="463.50"></text></g><g><title>mtree_range_walk (1 samples, 0.04%)</title><rect x="31.3290%" y="437" width="0.0383%" height="15" fill="rgb(252,49,23)" fg:x="818" fg:w="1"/><text x="31.4462%" y="447.50"></text></g><g><title>asm_exc_page_fault (91 samples, 3.49%)</title><rect x="27.9203%" y="517" width="3.4853%" height="15" fill="rgb(215,19,7)" fg:x="729" fg:w="91"/><text x="28.0375%" y="527.50">asm_exc_pa..</text></g><g><title>exc_page_fault (91 samples, 3.49%)</title><rect x="27.9203%" y="501" width="3.4853%" height="15" fill="rgb(238,81,41)" fg:x="729" fg:w="91"/><text x="28.0375%" y="511.50">exc_page_f..</text></g><g><title>do_user_addr_fault (90 samples, 3.45%)</title><rect x="27.9586%" y="485" width="3.4470%" height="15" fill="rgb(210,199,37)" fg:x="730" fg:w="90"/><text x="28.0758%" y="495.50">do_user_ad..</text></g><g><title>up_read (1 samples, 0.04%)</title><rect x="31.3673%" y="469" width="0.0383%" height="15" fill="rgb(244,192,49)" fg:x="819" fg:w="1"/><text x="31.4845%" y="479.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::new (373 samples, 14.29%)</title><rect x="17.7327%" y="741" width="14.2857%" height="15" fill="rgb(226,211,11)" fg:x="463" fg:w="373"/><text x="17.8499%" y="751.50">fringe_vs_astar::algorithms::astar::AStar::new</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::new (120 samples, 4.60%)</title><rect x="27.4224%" y="725" width="4.5959%" height="15" fill="rgb(236,162,54)" fg:x="716" fg:w="120"/><text x="27.5396%" y="735.50">fringe_vs_asta..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (120 samples, 4.60%)</title><rect x="27.4224%" y="709" width="4.5959%" height="15" fill="rgb(220,229,9)" fg:x="716" fg:w="120"/><text x="27.5396%" y="719.50">core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (120 samples, 4.60%)</title><rect x="27.4224%" y="693" width="4.5959%" height="15" fill="rgb(250,87,22)" fg:x="716" fg:w="120"/><text x="27.5396%" y="703.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (120 samples, 4.60%)</title><rect x="27.4224%" y="677" width="4.5959%" height="15" fill="rgb(239,43,17)" fg:x="716" fg:w="120"/><text x="27.5396%" y="687.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (120 samples, 4.60%)</title><rect x="27.4224%" y="661" width="4.5959%" height="15" fill="rgb(231,177,25)" fg:x="716" fg:w="120"/><text x="27.5396%" y="671.50">&lt;alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (120 samples, 4.60%)</title><rect x="27.4224%" y="645" width="4.5959%" height="15" fill="rgb(219,179,1)" fg:x="716" fg:w="120"/><text x="27.5396%" y="655.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (120 samples, 4.60%)</title><rect x="27.4224%" y="629" width="4.5959%" height="15" fill="rgb(238,219,53)" fg:x="716" fg:w="120"/><text x="27.5396%" y="639.50">alloc::vec::Ve..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (120 samples, 4.60%)</title><rect x="27.4224%" y="613" width="4.5959%" height="15" fill="rgb(232,167,36)" fg:x="716" fg:w="120"/><text x="27.5396%" y="623.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (120 samples, 4.60%)</title><rect x="27.4224%" y="597" width="4.5959%" height="15" fill="rgb(244,19,51)" fg:x="716" fg:w="120"/><text x="27.5396%" y="607.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (120 samples, 4.60%)</title><rect x="27.4224%" y="581" width="4.5959%" height="15" fill="rgb(224,6,22)" fg:x="716" fg:w="120"/><text x="27.5396%" y="591.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (119 samples, 4.56%)</title><rect x="27.4607%" y="565" width="4.5576%" height="15" fill="rgb(224,145,5)" fg:x="717" fg:w="119"/><text x="27.5779%" y="575.50">&lt;core::iter::a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (119 samples, 4.56%)</title><rect x="27.4607%" y="549" width="4.5576%" height="15" fill="rgb(234,130,49)" fg:x="717" fg:w="119"/><text x="27.5779%" y="559.50">alloc::vec::Ve..</text></g><g><title>core::ptr::write (119 samples, 4.56%)</title><rect x="27.4607%" y="533" width="4.5576%" height="15" fill="rgb(254,6,2)" fg:x="717" fg:w="119"/><text x="27.5779%" y="543.50">core::ptr::wri..</text></g><g><title>sync_regs (16 samples, 0.61%)</title><rect x="31.4056%" y="517" width="0.6128%" height="15" fill="rgb(208,96,46)" fg:x="820" fg:w="16"/><text x="31.5228%" y="527.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.11%)</title><rect x="33.1674%" y="725" width="0.1149%" height="15" fill="rgb(239,3,39)" fg:x="866" fg:w="3"/><text x="33.2846%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="33.2823%" y="725" width="0.0383%" height="15" fill="rgb(233,210,1)" fg:x="869" fg:w="1"/><text x="33.3995%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="33.2823%" y="709" width="0.0383%" height="15" fill="rgb(244,137,37)" fg:x="869" fg:w="1"/><text x="33.3995%" y="719.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="33.2823%" y="693" width="0.0383%" height="15" fill="rgb(240,136,2)" fg:x="869" fg:w="1"/><text x="33.3995%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="33.3206%" y="725" width="0.0766%" height="15" fill="rgb(239,18,37)" fg:x="870" fg:w="2"/><text x="33.4378%" y="735.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="33.6653%" y="341" width="0.0383%" height="15" fill="rgb(218,185,22)" fg:x="879" fg:w="1"/><text x="33.7824%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="33.6653%" y="325" width="0.0383%" height="15" fill="rgb(225,218,4)" fg:x="879" fg:w="1"/><text x="33.7824%" y="335.50"></text></g><g><title>page_remove_rmap (7 samples, 0.27%)</title><rect x="33.4738%" y="389" width="0.2681%" height="15" fill="rgb(230,182,32)" fg:x="874" fg:w="7"/><text x="33.5910%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.11%)</title><rect x="33.6270%" y="373" width="0.1149%" height="15" fill="rgb(242,56,43)" fg:x="878" fg:w="3"/><text x="33.7442%" y="383.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.11%)</title><rect x="33.6270%" y="357" width="0.1149%" height="15" fill="rgb(233,99,24)" fg:x="878" fg:w="3"/><text x="33.7442%" y="367.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="33.7036%" y="341" width="0.0383%" height="15" fill="rgb(234,209,42)" fg:x="880" fg:w="1"/><text x="33.8207%" y="351.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.04%)</title><rect x="33.7419%" y="325" width="0.0383%" height="15" fill="rgb(227,7,12)" fg:x="881" fg:w="1"/><text x="33.8590%" y="335.50"></text></g><g><title>uncharge_folio (1 samples, 0.04%)</title><rect x="33.7419%" y="309" width="0.0383%" height="15" fill="rgb(245,203,43)" fg:x="881" fg:w="1"/><text x="33.8590%" y="319.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="33.7802%" y="325" width="0.0383%" height="15" fill="rgb(238,205,33)" fg:x="882" fg:w="1"/><text x="33.8973%" y="335.50"></text></g><g><title>free_unref_page_list (5 samples, 0.19%)</title><rect x="33.8185%" y="325" width="0.1915%" height="15" fill="rgb(231,56,7)" fg:x="883" fg:w="5"/><text x="33.9356%" y="335.50"></text></g><g><title>free_unref_page_prepare (2 samples, 0.08%)</title><rect x="33.9334%" y="309" width="0.0766%" height="15" fill="rgb(244,186,29)" fg:x="886" fg:w="2"/><text x="34.0505%" y="319.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.08%)</title><rect x="34.1249%" y="309" width="0.0766%" height="15" fill="rgb(234,111,31)" fg:x="891" fg:w="2"/><text x="34.2420%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.08%)</title><rect x="34.1249%" y="293" width="0.0766%" height="15" fill="rgb(241,149,10)" fg:x="891" fg:w="2"/><text x="34.2420%" y="303.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.08%)</title><rect x="34.1249%" y="277" width="0.0766%" height="15" fill="rgb(249,206,44)" fg:x="891" fg:w="2"/><text x="34.2420%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="34.2015%" y="309" width="0.0383%" height="15" fill="rgb(251,153,30)" fg:x="893" fg:w="1"/><text x="34.3186%" y="319.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (8 samples, 0.31%)</title><rect x="34.0100%" y="325" width="0.3064%" height="15" fill="rgb(239,152,38)" fg:x="888" fg:w="8"/><text x="34.1271%" y="335.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.08%)</title><rect x="34.2398%" y="309" width="0.0766%" height="15" fill="rgb(249,139,47)" fg:x="894" fg:w="2"/><text x="34.3569%" y="319.50"></text></g><g><title>tlb_flush_mmu (16 samples, 0.61%)</title><rect x="33.7419%" y="389" width="0.6128%" height="15" fill="rgb(244,64,35)" fg:x="881" fg:w="16"/><text x="33.8590%" y="399.50"></text></g><g><title>tlb_batch_pages_flush (16 samples, 0.61%)</title><rect x="33.7419%" y="373" width="0.6128%" height="15" fill="rgb(216,46,15)" fg:x="881" fg:w="16"/><text x="33.8590%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (16 samples, 0.61%)</title><rect x="33.7419%" y="357" width="0.6128%" height="15" fill="rgb(250,74,19)" fg:x="881" fg:w="16"/><text x="33.8590%" y="367.50"></text></g><g><title>release_pages (16 samples, 0.61%)</title><rect x="33.7419%" y="341" width="0.6128%" height="15" fill="rgb(249,42,33)" fg:x="881" fg:w="16"/><text x="33.8590%" y="351.50"></text></g><g><title>uncharge_folio (1 samples, 0.04%)</title><rect x="34.3164%" y="325" width="0.0383%" height="15" fill="rgb(242,149,17)" fg:x="896" fg:w="1"/><text x="34.4335%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64,core::option::Option&lt;f64&gt;)&gt;&gt; (26 samples, 1.00%)</title><rect x="33.3972%" y="709" width="0.9958%" height="15" fill="rgb(244,29,21)" fg:x="872" fg:w="26"/><text x="33.5144%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64,core::option::Option&lt;f64&gt;)&gt;&gt; (26 samples, 1.00%)</title><rect x="33.3972%" y="693" width="0.9958%" height="15" fill="rgb(220,130,37)" fg:x="872" fg:w="26"/><text x="33.5144%" y="703.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 1.00%)</title><rect x="33.3972%" y="677" width="0.9958%" height="15" fill="rgb(211,67,2)" fg:x="872" fg:w="26"/><text x="33.5144%" y="687.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 1.00%)</title><rect x="33.3972%" y="661" width="0.9958%" height="15" fill="rgb(235,68,52)" fg:x="872" fg:w="26"/><text x="33.5144%" y="671.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (26 samples, 1.00%)</title><rect x="33.3972%" y="645" width="0.9958%" height="15" fill="rgb(246,142,3)" fg:x="872" fg:w="26"/><text x="33.5144%" y="655.50">a..</text></g><g><title>__GI___libc_free (26 samples, 1.00%)</title><rect x="33.3972%" y="629" width="0.9958%" height="15" fill="rgb(241,25,7)" fg:x="872" fg:w="26"/><text x="33.5144%" y="639.50">_..</text></g><g><title>__GI___munmap (26 samples, 1.00%)</title><rect x="33.3972%" y="613" width="0.9958%" height="15" fill="rgb(242,119,39)" fg:x="872" fg:w="26"/><text x="33.5144%" y="623.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 1.00%)</title><rect x="33.3972%" y="597" width="0.9958%" height="15" fill="rgb(241,98,45)" fg:x="872" fg:w="26"/><text x="33.5144%" y="607.50">e..</text></g><g><title>do_syscall_64 (26 samples, 1.00%)</title><rect x="33.3972%" y="581" width="0.9958%" height="15" fill="rgb(254,28,30)" fg:x="872" fg:w="26"/><text x="33.5144%" y="591.50">d..</text></g><g><title>x64_sys_call (26 samples, 1.00%)</title><rect x="33.3972%" y="565" width="0.9958%" height="15" fill="rgb(241,142,54)" fg:x="872" fg:w="26"/><text x="33.5144%" y="575.50">x..</text></g><g><title>__x64_sys_munmap (26 samples, 1.00%)</title><rect x="33.3972%" y="549" width="0.9958%" height="15" fill="rgb(222,85,15)" fg:x="872" fg:w="26"/><text x="33.5144%" y="559.50">_..</text></g><g><title>__vm_munmap (26 samples, 1.00%)</title><rect x="33.3972%" y="533" width="0.9958%" height="15" fill="rgb(210,85,47)" fg:x="872" fg:w="26"/><text x="33.5144%" y="543.50">_..</text></g><g><title>do_vmi_munmap (26 samples, 1.00%)</title><rect x="33.3972%" y="517" width="0.9958%" height="15" fill="rgb(224,206,25)" fg:x="872" fg:w="26"/><text x="33.5144%" y="527.50">d..</text></g><g><title>do_vmi_align_munmap (26 samples, 1.00%)</title><rect x="33.3972%" y="501" width="0.9958%" height="15" fill="rgb(243,201,19)" fg:x="872" fg:w="26"/><text x="33.5144%" y="511.50">d..</text></g><g><title>unmap_region (26 samples, 1.00%)</title><rect x="33.3972%" y="485" width="0.9958%" height="15" fill="rgb(236,59,4)" fg:x="872" fg:w="26"/><text x="33.5144%" y="495.50">u..</text></g><g><title>unmap_vmas (26 samples, 1.00%)</title><rect x="33.3972%" y="469" width="0.9958%" height="15" fill="rgb(254,179,45)" fg:x="872" fg:w="26"/><text x="33.5144%" y="479.50">u..</text></g><g><title>unmap_single_vma (26 samples, 1.00%)</title><rect x="33.3972%" y="453" width="0.9958%" height="15" fill="rgb(226,14,10)" fg:x="872" fg:w="26"/><text x="33.5144%" y="463.50">u..</text></g><g><title>unmap_page_range (26 samples, 1.00%)</title><rect x="33.3972%" y="437" width="0.9958%" height="15" fill="rgb(244,27,41)" fg:x="872" fg:w="26"/><text x="33.5144%" y="447.50">u..</text></g><g><title>zap_pmd_range.isra.0 (26 samples, 1.00%)</title><rect x="33.3972%" y="421" width="0.9958%" height="15" fill="rgb(235,35,32)" fg:x="872" fg:w="26"/><text x="33.5144%" y="431.50">z..</text></g><g><title>zap_pte_range (26 samples, 1.00%)</title><rect x="33.3972%" y="405" width="0.9958%" height="15" fill="rgb(218,68,31)" fg:x="872" fg:w="26"/><text x="33.5144%" y="415.50">z..</text></g><g><title>vm_normal_page (1 samples, 0.04%)</title><rect x="34.3547%" y="389" width="0.0383%" height="15" fill="rgb(207,120,37)" fg:x="897" fg:w="1"/><text x="34.4718%" y="399.50"></text></g><g><title>_compound_head (1 samples, 0.04%)</title><rect x="34.3930%" y="389" width="0.0383%" height="15" fill="rgb(227,98,0)" fg:x="898" fg:w="1"/><text x="34.5101%" y="399.50"></text></g><g><title>page_remove_rmap (2 samples, 0.08%)</title><rect x="34.4696%" y="373" width="0.0766%" height="15" fill="rgb(207,7,3)" fg:x="900" fg:w="2"/><text x="34.5867%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.08%)</title><rect x="34.4696%" y="357" width="0.0766%" height="15" fill="rgb(206,98,19)" fg:x="900" fg:w="2"/><text x="34.5867%" y="367.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.08%)</title><rect x="34.4696%" y="341" width="0.0766%" height="15" fill="rgb(217,5,26)" fg:x="900" fg:w="2"/><text x="34.5867%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.08%)</title><rect x="34.4696%" y="325" width="0.0766%" height="15" fill="rgb(235,190,38)" fg:x="900" fg:w="2"/><text x="34.5867%" y="335.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.04%)</title><rect x="34.5845%" y="309" width="0.0383%" height="15" fill="rgb(247,86,24)" fg:x="903" fg:w="1"/><text x="34.7016%" y="319.50"></text></g><g><title>uncharge_folio (1 samples, 0.04%)</title><rect x="34.5845%" y="293" width="0.0383%" height="15" fill="rgb(205,101,16)" fg:x="903" fg:w="1"/><text x="34.7016%" y="303.50"></text></g><g><title>free_unref_page_list (5 samples, 0.19%)</title><rect x="34.6227%" y="309" width="0.1915%" height="15" fill="rgb(246,168,33)" fg:x="904" fg:w="5"/><text x="34.7399%" y="319.50"></text></g><g><title>free_unref_page_commit (4 samples, 0.15%)</title><rect x="34.6610%" y="293" width="0.1532%" height="15" fill="rgb(231,114,1)" fg:x="905" fg:w="4"/><text x="34.7782%" y="303.50"></text></g><g><title>free_pcppages_bulk (4 samples, 0.15%)</title><rect x="34.6610%" y="277" width="0.1532%" height="15" fill="rgb(207,184,53)" fg:x="905" fg:w="4"/><text x="34.7782%" y="287.50"></text></g><g><title>__free_one_page (3 samples, 0.11%)</title><rect x="34.6993%" y="261" width="0.1149%" height="15" fill="rgb(224,95,51)" fg:x="906" fg:w="3"/><text x="34.8165%" y="271.50"></text></g><g><title>free_pages_and_swap_cache (9 samples, 0.34%)</title><rect x="34.5462%" y="341" width="0.3447%" height="15" fill="rgb(212,188,45)" fg:x="902" fg:w="9"/><text x="34.6633%" y="351.50"></text></g><g><title>release_pages (9 samples, 0.34%)</title><rect x="34.5462%" y="325" width="0.3447%" height="15" fill="rgb(223,154,38)" fg:x="902" fg:w="9"/><text x="34.6633%" y="335.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (2 samples, 0.08%)</title><rect x="34.8142%" y="309" width="0.0766%" height="15" fill="rgb(251,22,52)" fg:x="909" fg:w="2"/><text x="34.9314%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::astar::AStar&gt; (41 samples, 1.57%)</title><rect x="33.3972%" y="725" width="1.5703%" height="15" fill="rgb(229,209,22)" fg:x="872" fg:w="41"/><text x="33.5144%" y="735.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::frontier::Frontier&gt; (15 samples, 0.57%)</title><rect x="34.3930%" y="709" width="0.5745%" height="15" fill="rgb(234,138,34)" fg:x="898" fg:w="15"/><text x="34.5101%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;f64&gt;&gt;&gt; (15 samples, 0.57%)</title><rect x="34.3930%" y="693" width="0.5745%" height="15" fill="rgb(212,95,11)" fg:x="898" fg:w="15"/><text x="34.5101%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;f64&gt;&gt;&gt; (15 samples, 0.57%)</title><rect x="34.3930%" y="677" width="0.5745%" height="15" fill="rgb(240,179,47)" fg:x="898" fg:w="15"/><text x="34.5101%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.57%)</title><rect x="34.3930%" y="661" width="0.5745%" height="15" fill="rgb(240,163,11)" fg:x="898" fg:w="15"/><text x="34.5101%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.57%)</title><rect x="34.3930%" y="645" width="0.5745%" height="15" fill="rgb(236,37,12)" fg:x="898" fg:w="15"/><text x="34.5101%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.57%)</title><rect x="34.3930%" y="629" width="0.5745%" height="15" fill="rgb(232,164,16)" fg:x="898" fg:w="15"/><text x="34.5101%" y="639.50"></text></g><g><title>__GI___libc_free (15 samples, 0.57%)</title><rect x="34.3930%" y="613" width="0.5745%" height="15" fill="rgb(244,205,15)" fg:x="898" fg:w="15"/><text x="34.5101%" y="623.50"></text></g><g><title>__GI___munmap (15 samples, 0.57%)</title><rect x="34.3930%" y="597" width="0.5745%" height="15" fill="rgb(223,117,47)" fg:x="898" fg:w="15"/><text x="34.5101%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.57%)</title><rect x="34.3930%" y="581" width="0.5745%" height="15" fill="rgb(244,107,35)" fg:x="898" fg:w="15"/><text x="34.5101%" y="591.50"></text></g><g><title>do_syscall_64 (15 samples, 0.57%)</title><rect x="34.3930%" y="565" width="0.5745%" height="15" fill="rgb(205,140,8)" fg:x="898" fg:w="15"/><text x="34.5101%" y="575.50"></text></g><g><title>x64_sys_call (15 samples, 0.57%)</title><rect x="34.3930%" y="549" width="0.5745%" height="15" fill="rgb(228,84,46)" fg:x="898" fg:w="15"/><text x="34.5101%" y="559.50"></text></g><g><title>__x64_sys_munmap (15 samples, 0.57%)</title><rect x="34.3930%" y="533" width="0.5745%" height="15" fill="rgb(254,188,9)" fg:x="898" fg:w="15"/><text x="34.5101%" y="543.50"></text></g><g><title>__vm_munmap (15 samples, 0.57%)</title><rect x="34.3930%" y="517" width="0.5745%" height="15" fill="rgb(206,112,54)" fg:x="898" fg:w="15"/><text x="34.5101%" y="527.50"></text></g><g><title>do_vmi_munmap (15 samples, 0.57%)</title><rect x="34.3930%" y="501" width="0.5745%" height="15" fill="rgb(216,84,49)" fg:x="898" fg:w="15"/><text x="34.5101%" y="511.50"></text></g><g><title>do_vmi_align_munmap (15 samples, 0.57%)</title><rect x="34.3930%" y="485" width="0.5745%" height="15" fill="rgb(214,194,35)" fg:x="898" fg:w="15"/><text x="34.5101%" y="495.50"></text></g><g><title>unmap_region (15 samples, 0.57%)</title><rect x="34.3930%" y="469" width="0.5745%" height="15" fill="rgb(249,28,3)" fg:x="898" fg:w="15"/><text x="34.5101%" y="479.50"></text></g><g><title>unmap_vmas (15 samples, 0.57%)</title><rect x="34.3930%" y="453" width="0.5745%" height="15" fill="rgb(222,56,52)" fg:x="898" fg:w="15"/><text x="34.5101%" y="463.50"></text></g><g><title>unmap_single_vma (15 samples, 0.57%)</title><rect x="34.3930%" y="437" width="0.5745%" height="15" fill="rgb(245,217,50)" fg:x="898" fg:w="15"/><text x="34.5101%" y="447.50"></text></g><g><title>unmap_page_range (15 samples, 0.57%)</title><rect x="34.3930%" y="421" width="0.5745%" height="15" fill="rgb(213,201,24)" fg:x="898" fg:w="15"/><text x="34.5101%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (15 samples, 0.57%)</title><rect x="34.3930%" y="405" width="0.5745%" height="15" fill="rgb(248,116,28)" fg:x="898" fg:w="15"/><text x="34.5101%" y="415.50"></text></g><g><title>zap_pte_range (14 samples, 0.54%)</title><rect x="34.4313%" y="389" width="0.5362%" height="15" fill="rgb(219,72,43)" fg:x="899" fg:w="14"/><text x="34.5484%" y="399.50"></text></g><g><title>tlb_flush_mmu (11 samples, 0.42%)</title><rect x="34.5462%" y="373" width="0.4213%" height="15" fill="rgb(209,138,14)" fg:x="902" fg:w="11"/><text x="34.6633%" y="383.50"></text></g><g><title>tlb_batch_pages_flush (11 samples, 0.42%)</title><rect x="34.5462%" y="357" width="0.4213%" height="15" fill="rgb(222,18,33)" fg:x="902" fg:w="11"/><text x="34.6633%" y="367.50"></text></g><g><title>free_swap_cache (2 samples, 0.08%)</title><rect x="34.8908%" y="341" width="0.0766%" height="15" fill="rgb(213,199,7)" fg:x="911" fg:w="2"/><text x="35.0080%" y="351.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve::_{{closure}} (1 samples, 0.04%)</title><rect x="34.9674%" y="725" width="0.0383%" height="15" fill="rgb(250,110,10)" fg:x="913" fg:w="1"/><text x="35.0846%" y="735.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (1 samples, 0.04%)</title><rect x="34.9674%" y="709" width="0.0383%" height="15" fill="rgb(248,123,6)" fg:x="913" fg:w="1"/><text x="35.0846%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.04%)</title><rect x="35.0057%" y="693" width="0.0383%" height="15" fill="rgb(206,91,31)" fg:x="914" fg:w="1"/><text x="35.1229%" y="703.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (2 samples, 0.08%)</title><rect x="35.0823%" y="661" width="0.0766%" height="15" fill="rgb(211,154,13)" fg:x="916" fg:w="2"/><text x="35.1995%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (2 samples, 0.08%)</title><rect x="35.2738%" y="645" width="0.0766%" height="15" fill="rgb(225,148,7)" fg:x="921" fg:w="2"/><text x="35.3910%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.04%)</title><rect x="35.3887%" y="629" width="0.0383%" height="15" fill="rgb(220,160,43)" fg:x="924" fg:w="1"/><text x="35.5059%" y="639.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (3 samples, 0.11%)</title><rect x="35.3504%" y="645" width="0.1149%" height="15" fill="rgb(213,52,39)" fg:x="923" fg:w="3"/><text x="35.4676%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (1 samples, 0.04%)</title><rect x="35.4270%" y="629" width="0.0383%" height="15" fill="rgb(243,137,7)" fg:x="925" fg:w="1"/><text x="35.5442%" y="639.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="35.4270%" y="613" width="0.0383%" height="15" fill="rgb(230,79,13)" fg:x="925" fg:w="1"/><text x="35.5442%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="35.4270%" y="597" width="0.0383%" height="15" fill="rgb(247,105,23)" fg:x="925" fg:w="1"/><text x="35.5442%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.54%)</title><rect x="35.4653%" y="629" width="0.5362%" height="15" fill="rgb(223,179,41)" fg:x="926" fg:w="14"/><text x="35.5825%" y="639.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (18 samples, 0.69%)</title><rect x="35.4653%" y="645" width="0.6894%" height="15" fill="rgb(218,9,34)" fg:x="926" fg:w="18"/><text x="35.5825%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.15%)</title><rect x="36.0015%" y="629" width="0.1532%" height="15" fill="rgb(222,106,8)" fg:x="940" fg:w="4"/><text x="36.1187%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (13 samples, 0.50%)</title><rect x="36.1547%" y="645" width="0.4979%" height="15" fill="rgb(211,220,0)" fg:x="944" fg:w="13"/><text x="36.2719%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::le (6 samples, 0.23%)</title><rect x="36.4228%" y="629" width="0.2298%" height="15" fill="rgb(229,52,16)" fg:x="951" fg:w="6"/><text x="36.5400%" y="639.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (44 samples, 1.69%)</title><rect x="35.0057%" y="709" width="1.6852%" height="15" fill="rgb(212,155,18)" fg:x="914" fg:w="44"/><text x="35.1229%" y="719.50">allo..</text></g><g><title>core::option::Option&lt;T&gt;::map (43 samples, 1.65%)</title><rect x="35.0440%" y="693" width="1.6469%" height="15" fill="rgb(242,21,14)" fg:x="915" fg:w="43"/><text x="35.1612%" y="703.50">cor..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (42 samples, 1.61%)</title><rect x="35.0823%" y="677" width="1.6086%" height="15" fill="rgb(222,19,48)" fg:x="916" fg:w="42"/><text x="35.1995%" y="687.50">all..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (40 samples, 1.53%)</title><rect x="35.1589%" y="661" width="1.5320%" height="15" fill="rgb(232,45,27)" fg:x="918" fg:w="40"/><text x="35.2761%" y="671.50">all..</text></g><g><title>core::mem::drop (1 samples, 0.04%)</title><rect x="36.6526%" y="645" width="0.0383%" height="15" fill="rgb(249,103,42)" fg:x="957" fg:w="1"/><text x="36.7698%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (1 samples, 0.04%)</title><rect x="36.6526%" y="629" width="0.0383%" height="15" fill="rgb(246,81,33)" fg:x="957" fg:w="1"/><text x="36.7698%" y="639.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="36.6526%" y="613" width="0.0383%" height="15" fill="rgb(252,33,42)" fg:x="957" fg:w="1"/><text x="36.7698%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="36.6526%" y="597" width="0.0383%" height="15" fill="rgb(209,212,41)" fg:x="957" fg:w="1"/><text x="36.7698%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="36.6526%" y="581" width="0.0383%" height="15" fill="rgb(207,154,6)" fg:x="957" fg:w="1"/><text x="36.7698%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="36.6526%" y="565" width="0.0383%" height="15" fill="rgb(223,64,47)" fg:x="957" fg:w="1"/><text x="36.7698%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::pop (47 samples, 1.80%)</title><rect x="35.0057%" y="725" width="1.8001%" height="15" fill="rgb(211,161,38)" fg:x="914" fg:w="47"/><text x="35.1229%" y="735.50">frin..</text></g><g><title>core::option::Option&lt;T&gt;::is_some_and (3 samples, 0.11%)</title><rect x="36.6909%" y="709" width="0.1149%" height="15" fill="rgb(219,138,40)" fg:x="958" fg:w="3"/><text x="36.8081%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="37.1122%" y="693" width="0.0383%" height="15" fill="rgb(241,228,46)" fg:x="969" fg:w="1"/><text x="37.2294%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="37.1122%" y="677" width="0.0383%" height="15" fill="rgb(223,209,38)" fg:x="969" fg:w="1"/><text x="37.2294%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (3 samples, 0.11%)</title><rect x="37.1505%" y="677" width="0.1149%" height="15" fill="rgb(236,164,45)" fg:x="970" fg:w="3"/><text x="37.2677%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.11%)</title><rect x="37.1505%" y="661" width="0.1149%" height="15" fill="rgb(231,15,5)" fg:x="970" fg:w="3"/><text x="37.2677%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="37.2654%" y="677" width="0.0383%" height="15" fill="rgb(252,35,15)" fg:x="973" fg:w="1"/><text x="37.3826%" y="687.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="37.2654%" y="661" width="0.0383%" height="15" fill="rgb(248,181,18)" fg:x="973" fg:w="1"/><text x="37.3826%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (5 samples, 0.19%)</title><rect x="37.1505%" y="693" width="0.1915%" height="15" fill="rgb(233,39,42)" fg:x="970" fg:w="5"/><text x="37.2677%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.04%)</title><rect x="37.3037%" y="677" width="0.0383%" height="15" fill="rgb(238,110,33)" fg:x="974" fg:w="1"/><text x="37.4209%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.04%)</title><rect x="37.3037%" y="661" width="0.0383%" height="15" fill="rgb(233,195,10)" fg:x="974" fg:w="1"/><text x="37.4209%" y="671.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (723 samples, 27.69%)</title><rect x="9.6898%" y="773" width="27.6905%" height="15" fill="rgb(254,105,3)" fg:x="253" fg:w="723"/><text x="9.8070%" y="783.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (513 samples, 19.65%)</title><rect x="17.7327%" y="757" width="19.6476%" height="15" fill="rgb(221,225,9)" fg:x="463" fg:w="513"/><text x="17.8499%" y="767.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (140 samples, 5.36%)</title><rect x="32.0184%" y="741" width="5.3619%" height="15" fill="rgb(224,227,45)" fg:x="836" fg:w="140"/><text x="32.1356%" y="751.50">fringe_vs_astar::..</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (15 samples, 0.57%)</title><rect x="36.8058%" y="725" width="0.5745%" height="15" fill="rgb(229,198,43)" fg:x="961" fg:w="15"/><text x="36.9230%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (7 samples, 0.27%)</title><rect x="37.1122%" y="709" width="0.2681%" height="15" fill="rgb(206,209,35)" fg:x="969" fg:w="7"/><text x="37.2294%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="37.3420%" y="693" width="0.0383%" height="15" fill="rgb(245,195,53)" fg:x="975" fg:w="1"/><text x="37.4592%" y="703.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="40.3677%" y="661" width="0.0383%" height="15" fill="rgb(240,92,26)" fg:x="1054" fg:w="1"/><text x="40.4849%" y="671.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="40.4060%" y="661" width="0.0383%" height="15" fill="rgb(207,40,23)" fg:x="1055" fg:w="1"/><text x="40.5232%" y="671.50"></text></g><g><title>down_read_trylock (3 samples, 0.11%)</title><rect x="40.4443%" y="661" width="0.1149%" height="15" fill="rgb(223,111,35)" fg:x="1056" fg:w="3"/><text x="40.5615%" y="671.50"></text></g><g><title>__pte_offset_map (1 samples, 0.04%)</title><rect x="40.7890%" y="613" width="0.0383%" height="15" fill="rgb(229,147,28)" fg:x="1065" fg:w="1"/><text x="40.9062%" y="623.50"></text></g><g><title>__get_vma_policy (1 samples, 0.04%)</title><rect x="40.8656%" y="597" width="0.0383%" height="15" fill="rgb(211,29,28)" fg:x="1067" fg:w="1"/><text x="40.9828%" y="607.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="40.9422%" y="581" width="0.0383%" height="15" fill="rgb(228,72,33)" fg:x="1069" fg:w="1"/><text x="41.0594%" y="591.50"></text></g><g><title>__rcu_read_unlock (14 samples, 0.54%)</title><rect x="40.9805%" y="581" width="0.5362%" height="15" fill="rgb(205,214,31)" fg:x="1070" fg:w="14"/><text x="41.0977%" y="591.50"></text></g><g><title>__count_memcg_events (6 samples, 0.23%)</title><rect x="41.6699%" y="565" width="0.2298%" height="15" fill="rgb(224,111,15)" fg:x="1088" fg:w="6"/><text x="41.7870%" y="575.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="41.8614%" y="549" width="0.0383%" height="15" fill="rgb(253,21,26)" fg:x="1093" fg:w="1"/><text x="41.9785%" y="559.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="41.8997%" y="565" width="0.0383%" height="15" fill="rgb(245,139,43)" fg:x="1094" fg:w="1"/><text x="42.0168%" y="575.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="42.0529%" y="549" width="0.0383%" height="15" fill="rgb(252,170,7)" fg:x="1098" fg:w="1"/><text x="42.1700%" y="559.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.04%)</title><rect x="42.0912%" y="549" width="0.0383%" height="15" fill="rgb(231,118,14)" fg:x="1099" fg:w="1"/><text x="42.2083%" y="559.50"></text></g><g><title>charge_memcg (17 samples, 0.65%)</title><rect x="41.5167%" y="581" width="0.6511%" height="15" fill="rgb(238,83,0)" fg:x="1084" fg:w="17"/><text x="41.6338%" y="591.50"></text></g><g><title>try_charge_memcg (6 samples, 0.23%)</title><rect x="41.9380%" y="565" width="0.2298%" height="15" fill="rgb(221,39,39)" fg:x="1095" fg:w="6"/><text x="42.0551%" y="575.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.04%)</title><rect x="42.1295%" y="549" width="0.0383%" height="15" fill="rgb(222,119,46)" fg:x="1100" fg:w="1"/><text x="42.2466%" y="559.50"></text></g><g><title>__mem_cgroup_charge (37 samples, 1.42%)</title><rect x="40.9039%" y="597" width="1.4171%" height="15" fill="rgb(222,165,49)" fg:x="1068" fg:w="37"/><text x="41.0211%" y="607.50">__m..</text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.15%)</title><rect x="42.1678%" y="581" width="0.1532%" height="15" fill="rgb(219,113,52)" fg:x="1101" fg:w="4"/><text x="42.2849%" y="591.50"></text></g><g><title>__pte_alloc (1 samples, 0.04%)</title><rect x="42.3209%" y="597" width="0.0383%" height="15" fill="rgb(214,7,15)" fg:x="1105" fg:w="1"/><text x="42.4381%" y="607.50"></text></g><g><title>mod_lruvec_page_state.constprop.0 (1 samples, 0.04%)</title><rect x="42.3209%" y="581" width="0.0383%" height="15" fill="rgb(235,32,4)" fg:x="1105" fg:w="1"/><text x="42.4381%" y="591.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.04%)</title><rect x="42.3592%" y="597" width="0.0383%" height="15" fill="rgb(238,90,54)" fg:x="1106" fg:w="1"/><text x="42.4764%" y="607.50"></text></g><g><title>__pte_offset_map (1 samples, 0.04%)</title><rect x="42.3592%" y="581" width="0.0383%" height="15" fill="rgb(213,208,19)" fg:x="1106" fg:w="1"/><text x="42.4764%" y="591.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="42.3975%" y="597" width="0.0383%" height="15" fill="rgb(233,156,4)" fg:x="1107" fg:w="1"/><text x="42.5147%" y="607.50"></text></g><g><title>charge_memcg (2 samples, 0.08%)</title><rect x="42.4358%" y="597" width="0.0766%" height="15" fill="rgb(207,194,5)" fg:x="1108" fg:w="2"/><text x="42.5530%" y="607.50"></text></g><g><title>folio_mapping (1 samples, 0.04%)</title><rect x="42.6656%" y="533" width="0.0383%" height="15" fill="rgb(206,111,30)" fg:x="1114" fg:w="1"/><text x="42.7828%" y="543.50"></text></g><g><title>folio_add_lru_vma (7 samples, 0.27%)</title><rect x="42.5124%" y="597" width="0.2681%" height="15" fill="rgb(243,70,54)" fg:x="1110" fg:w="7"/><text x="42.6296%" y="607.50"></text></g><g><title>folio_add_lru (6 samples, 0.23%)</title><rect x="42.5507%" y="581" width="0.2298%" height="15" fill="rgb(242,28,8)" fg:x="1111" fg:w="6"/><text x="42.6679%" y="591.50"></text></g><g><title>folio_batch_move_lru (5 samples, 0.19%)</title><rect x="42.5890%" y="565" width="0.1915%" height="15" fill="rgb(219,106,18)" fg:x="1112" fg:w="5"/><text x="42.7062%" y="575.50"></text></g><g><title>lru_add_fn (4 samples, 0.15%)</title><rect x="42.6273%" y="549" width="0.1532%" height="15" fill="rgb(244,222,10)" fg:x="1113" fg:w="4"/><text x="42.7445%" y="559.50"></text></g><g><title>lru_gen_add_folio (2 samples, 0.08%)</title><rect x="42.7039%" y="533" width="0.0766%" height="15" fill="rgb(236,179,52)" fg:x="1115" fg:w="2"/><text x="42.8211%" y="543.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.04%)</title><rect x="42.7805%" y="597" width="0.0383%" height="15" fill="rgb(213,23,39)" fg:x="1117" fg:w="1"/><text x="42.8977%" y="607.50"></text></g><g><title>inc_mm_counter (2 samples, 0.08%)</title><rect x="42.8188%" y="597" width="0.0766%" height="15" fill="rgb(238,48,10)" fg:x="1118" fg:w="2"/><text x="42.9360%" y="607.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.08%)</title><rect x="42.8188%" y="581" width="0.0766%" height="15" fill="rgb(251,196,23)" fg:x="1118" fg:w="2"/><text x="42.9360%" y="591.50"></text></g><g><title>pfn_pte (1 samples, 0.04%)</title><rect x="42.8954%" y="597" width="0.0383%" height="15" fill="rgb(250,152,24)" fg:x="1120" fg:w="1"/><text x="43.0126%" y="607.50"></text></g><g><title>__alloc_pages (1 samples, 0.04%)</title><rect x="43.1252%" y="581" width="0.0383%" height="15" fill="rgb(209,150,17)" fg:x="1126" fg:w="1"/><text x="43.2424%" y="591.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.04%)</title><rect x="43.2018%" y="533" width="0.0383%" height="15" fill="rgb(234,202,34)" fg:x="1128" fg:w="1"/><text x="43.3190%" y="543.50"></text></g><g><title>clear_page_erms (1 samples, 0.04%)</title><rect x="43.2401%" y="533" width="0.0383%" height="15" fill="rgb(253,148,53)" fg:x="1129" fg:w="1"/><text x="43.3573%" y="543.50"></text></g><g><title>post_alloc_hook (1 samples, 0.04%)</title><rect x="43.2784%" y="533" width="0.0383%" height="15" fill="rgb(218,129,16)" fg:x="1130" fg:w="1"/><text x="43.3956%" y="543.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.34%)</title><rect x="43.3933%" y="517" width="0.3447%" height="15" fill="rgb(216,85,19)" fg:x="1133" fg:w="9"/><text x="43.5105%" y="527.50"></text></g><g><title>rmqueue_bulk (9 samples, 0.34%)</title><rect x="43.3933%" y="501" width="0.3447%" height="15" fill="rgb(235,228,7)" fg:x="1133" fg:w="9"/><text x="43.5105%" y="511.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.57%)</title><rect x="43.2018%" y="549" width="0.5745%" height="15" fill="rgb(245,175,0)" fg:x="1128" fg:w="15"/><text x="43.3190%" y="559.50"></text></g><g><title>rmqueue (12 samples, 0.46%)</title><rect x="43.3167%" y="533" width="0.4596%" height="15" fill="rgb(208,168,36)" fg:x="1131" fg:w="12"/><text x="43.4339%" y="543.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.04%)</title><rect x="43.7380%" y="517" width="0.0383%" height="15" fill="rgb(246,171,24)" fg:x="1142" fg:w="1"/><text x="43.8552%" y="527.50"></text></g><g><title>__alloc_pages (18 samples, 0.69%)</title><rect x="43.1635%" y="565" width="0.6894%" height="15" fill="rgb(215,142,24)" fg:x="1127" fg:w="18"/><text x="43.2807%" y="575.50"></text></g><g><title>rmqueue (2 samples, 0.08%)</title><rect x="43.7763%" y="549" width="0.0766%" height="15" fill="rgb(250,187,7)" fg:x="1143" fg:w="2"/><text x="43.8935%" y="559.50"></text></g><g><title>do_anonymous_page (80 samples, 3.06%)</title><rect x="40.8273%" y="613" width="3.0640%" height="15" fill="rgb(228,66,33)" fg:x="1066" fg:w="80"/><text x="40.9445%" y="623.50">do_anonym..</text></g><g><title>vma_alloc_folio (25 samples, 0.96%)</title><rect x="42.9337%" y="597" width="0.9575%" height="15" fill="rgb(234,215,21)" fg:x="1121" fg:w="25"/><text x="43.0509%" y="607.50">v..</text></g><g><title>__folio_alloc (19 samples, 0.73%)</title><rect x="43.1635%" y="581" width="0.7277%" height="15" fill="rgb(222,191,20)" fg:x="1127" fg:w="19"/><text x="43.2807%" y="591.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.04%)</title><rect x="43.8529%" y="565" width="0.0383%" height="15" fill="rgb(245,79,54)" fg:x="1145" fg:w="1"/><text x="43.9701%" y="575.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.04%)</title><rect x="43.8912%" y="613" width="0.0383%" height="15" fill="rgb(240,10,37)" fg:x="1146" fg:w="1"/><text x="44.0084%" y="623.50"></text></g><g><title>pte_offset_map_nolock (3 samples, 0.11%)</title><rect x="43.9295%" y="613" width="0.1149%" height="15" fill="rgb(214,192,32)" fg:x="1147" fg:w="3"/><text x="44.0467%" y="623.50"></text></g><g><title>__pte_offset_map (3 samples, 0.11%)</title><rect x="43.9295%" y="597" width="0.1149%" height="15" fill="rgb(209,36,54)" fg:x="1147" fg:w="3"/><text x="44.0467%" y="607.50"></text></g><g><title>__handle_mm_fault (92 samples, 3.52%)</title><rect x="40.5592%" y="645" width="3.5236%" height="15" fill="rgb(220,10,11)" fg:x="1059" fg:w="92"/><text x="40.6764%" y="655.50">__handle_m..</text></g><g><title>handle_pte_fault (88 samples, 3.37%)</title><rect x="40.7124%" y="629" width="3.3704%" height="15" fill="rgb(221,106,17)" fg:x="1063" fg:w="88"/><text x="40.8296%" y="639.50">handle_pte..</text></g><g><title>vma_alloc_folio (1 samples, 0.04%)</title><rect x="44.0444%" y="613" width="0.0383%" height="15" fill="rgb(251,142,44)" fg:x="1150" fg:w="1"/><text x="44.1616%" y="623.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.04%)</title><rect x="44.0827%" y="645" width="0.0383%" height="15" fill="rgb(238,13,15)" fg:x="1151" fg:w="1"/><text x="44.1999%" y="655.50"></text></g><g><title>__count_memcg_events (1 samples, 0.04%)</title><rect x="44.0827%" y="629" width="0.0383%" height="15" fill="rgb(208,107,27)" fg:x="1151" fg:w="1"/><text x="44.1999%" y="639.50"></text></g><g><title>handle_mm_fault (94 samples, 3.60%)</title><rect x="40.5592%" y="661" width="3.6002%" height="15" fill="rgb(205,136,37)" fg:x="1059" fg:w="94"/><text x="40.6764%" y="671.50">handle_mm_f..</text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="44.1210%" y="645" width="0.0383%" height="15" fill="rgb(250,205,27)" fg:x="1152" fg:w="1"/><text x="44.2382%" y="655.50"></text></g><g><title>lock_vma_under_rcu (5 samples, 0.19%)</title><rect x="44.1593%" y="661" width="0.1915%" height="15" fill="rgb(210,80,43)" fg:x="1153" fg:w="5"/><text x="44.2765%" y="671.50"></text></g><g><title>mas_walk (3 samples, 0.11%)</title><rect x="44.2359%" y="645" width="0.1149%" height="15" fill="rgb(247,160,36)" fg:x="1155" fg:w="3"/><text x="44.3531%" y="655.50"></text></g><g><title>mtree_range_walk (3 samples, 0.11%)</title><rect x="44.2359%" y="629" width="0.1149%" height="15" fill="rgb(234,13,49)" fg:x="1155" fg:w="3"/><text x="44.3531%" y="639.50"></text></g><g><title>do_user_addr_fault (106 samples, 4.06%)</title><rect x="40.3677%" y="677" width="4.0597%" height="15" fill="rgb(234,122,0)" fg:x="1054" fg:w="106"/><text x="40.4849%" y="687.50">do_user_addr..</text></g><g><title>up_read (2 samples, 0.08%)</title><rect x="44.3508%" y="661" width="0.0766%" height="15" fill="rgb(207,146,38)" fg:x="1158" fg:w="2"/><text x="44.4680%" y="671.50"></text></g><g><title>asm_exc_page_fault (108 samples, 4.14%)</title><rect x="40.3294%" y="709" width="4.1363%" height="15" fill="rgb(207,177,25)" fg:x="1053" fg:w="108"/><text x="40.4466%" y="719.50">asm_exc_page..</text></g><g><title>exc_page_fault (107 samples, 4.10%)</title><rect x="40.3677%" y="693" width="4.0980%" height="15" fill="rgb(211,178,42)" fg:x="1054" fg:w="107"/><text x="40.4849%" y="703.50">exc_page_fau..</text></g><g><title>irqentry_exit (1 samples, 0.04%)</title><rect x="44.4274%" y="677" width="0.0383%" height="15" fill="rgb(230,69,54)" fg:x="1160" fg:w="1"/><text x="44.5446%" y="687.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.04%)</title><rect x="44.4274%" y="661" width="0.0383%" height="15" fill="rgb(214,135,41)" fg:x="1160" fg:w="1"/><text x="44.5446%" y="671.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.04%)</title><rect x="44.4274%" y="645" width="0.0383%" height="15" fill="rgb(237,67,25)" fg:x="1160" fg:w="1"/><text x="44.5446%" y="655.50"></text></g><g><title>error_entry (3 samples, 0.11%)</title><rect x="44.4657%" y="709" width="0.1149%" height="15" fill="rgb(222,189,50)" fg:x="1161" fg:w="3"/><text x="44.5829%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (192 samples, 7.35%)</title><rect x="37.8016%" y="741" width="7.3535%" height="15" fill="rgb(245,148,34)" fg:x="987" fg:w="192"/><text x="37.9188%" y="751.50">alloc::vec::Vec&lt;T,A&gt;::pu..</text></g><g><title>core::ptr::write (165 samples, 6.32%)</title><rect x="38.8357%" y="725" width="6.3194%" height="15" fill="rgb(222,29,6)" fg:x="1014" fg:w="165"/><text x="38.9529%" y="735.50">core::ptr::write</text></g><g><title>sync_regs (15 samples, 0.57%)</title><rect x="44.5806%" y="709" width="0.5745%" height="15" fill="rgb(221,189,43)" fg:x="1164" fg:w="15"/><text x="44.6978%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.27%)</title><rect x="45.1551%" y="741" width="0.2681%" height="15" fill="rgb(207,36,27)" fg:x="1179" fg:w="7"/><text x="45.2723%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.27%)</title><rect x="45.1551%" y="725" width="0.2681%" height="15" fill="rgb(217,90,24)" fg:x="1179" fg:w="7"/><text x="45.2723%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.27%)</title><rect x="45.1551%" y="709" width="0.2681%" height="15" fill="rgb(224,66,35)" fg:x="1179" fg:w="7"/><text x="45.2723%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.11%)</title><rect x="45.7679%" y="645" width="0.1149%" height="15" fill="rgb(221,13,50)" fg:x="1195" fg:w="3"/><text x="45.8851%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.11%)</title><rect x="45.7679%" y="629" width="0.1149%" height="15" fill="rgb(236,68,49)" fg:x="1195" fg:w="3"/><text x="45.8851%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.11%)</title><rect x="45.7679%" y="613" width="0.1149%" height="15" fill="rgb(229,146,28)" fg:x="1195" fg:w="3"/><text x="45.8851%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (3 samples, 0.11%)</title><rect x="45.7679%" y="597" width="0.1149%" height="15" fill="rgb(225,31,38)" fg:x="1195" fg:w="3"/><text x="45.8851%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.11%)</title><rect x="45.7679%" y="581" width="0.1149%" height="15" fill="rgb(250,208,3)" fg:x="1195" fg:w="3"/><text x="45.8851%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="45.8828%" y="645" width="0.0766%" height="15" fill="rgb(246,54,23)" fg:x="1198" fg:w="2"/><text x="46.0000%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="45.8828%" y="629" width="0.0766%" height="15" fill="rgb(243,76,11)" fg:x="1198" fg:w="2"/><text x="46.0000%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 1.15%)</title><rect x="45.9594%" y="581" width="1.1490%" height="15" fill="rgb(245,21,50)" fg:x="1200" fg:w="30"/><text x="46.0766%" y="591.50">&lt;c..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.50%)</title><rect x="46.6105%" y="565" width="0.4979%" height="15" fill="rgb(228,9,43)" fg:x="1217" fg:w="13"/><text x="46.7277%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 1.26%)</title><rect x="45.9594%" y="597" width="1.2639%" height="15" fill="rgb(208,100,47)" fg:x="1200" fg:w="33"/><text x="46.0766%" y="607.50">&lt;a..</text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.11%)</title><rect x="47.1084%" y="581" width="0.1149%" height="15" fill="rgb(232,26,8)" fg:x="1230" fg:w="3"/><text x="47.2256%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.19%)</title><rect x="47.2233%" y="581" width="0.1915%" height="15" fill="rgb(216,166,38)" fg:x="1233" fg:w="5"/><text x="47.3405%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (5 samples, 0.19%)</title><rect x="47.2233%" y="565" width="0.1915%" height="15" fill="rgb(251,202,51)" fg:x="1233" fg:w="5"/><text x="47.3405%" y="575.50"></text></g><g><title>core::ptr::write (5 samples, 0.19%)</title><rect x="47.2233%" y="549" width="0.1915%" height="15" fill="rgb(254,216,34)" fg:x="1233" fg:w="5"/><text x="47.3405%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (13 samples, 0.50%)</title><rect x="47.2233%" y="597" width="0.4979%" height="15" fill="rgb(251,32,27)" fg:x="1233" fg:w="13"/><text x="47.3405%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (8 samples, 0.31%)</title><rect x="47.4148%" y="581" width="0.3064%" height="15" fill="rgb(208,127,28)" fg:x="1238" fg:w="8"/><text x="47.5320%" y="591.50"></text></g><g><title>fringe_vs_astar::xy_to_index (8 samples, 0.31%)</title><rect x="47.4148%" y="565" width="0.3064%" height="15" fill="rgb(224,137,22)" fg:x="1238" fg:w="8"/><text x="47.5320%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (53 samples, 2.03%)</title><rect x="45.7296%" y="677" width="2.0299%" height="15" fill="rgb(254,70,32)" fg:x="1194" fg:w="53"/><text x="45.8468%" y="687.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (53 samples, 2.03%)</title><rect x="45.7296%" y="661" width="2.0299%" height="15" fill="rgb(229,75,37)" fg:x="1194" fg:w="53"/><text x="45.8468%" y="671.50">alloc..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 1.80%)</title><rect x="45.9594%" y="645" width="1.8001%" height="15" fill="rgb(252,64,23)" fg:x="1200" fg:w="47"/><text x="46.0766%" y="655.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 1.80%)</title><rect x="45.9594%" y="629" width="1.8001%" height="15" fill="rgb(232,162,48)" fg:x="1200" fg:w="47"/><text x="46.0766%" y="639.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 1.80%)</title><rect x="45.9594%" y="613" width="1.8001%" height="15" fill="rgb(246,160,12)" fg:x="1200" fg:w="47"/><text x="46.0766%" y="623.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (1 samples, 0.04%)</title><rect x="47.7212%" y="597" width="0.0383%" height="15" fill="rgb(247,166,0)" fg:x="1246" fg:w="1"/><text x="47.8384%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="47.7212%" y="581" width="0.0383%" height="15" fill="rgb(249,219,21)" fg:x="1246" fg:w="1"/><text x="47.8384%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="47.7212%" y="565" width="0.0383%" height="15" fill="rgb(205,209,3)" fg:x="1246" fg:w="1"/><text x="47.8384%" y="575.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="47.7212%" y="549" width="0.0383%" height="15" fill="rgb(243,44,1)" fg:x="1246" fg:w="1"/><text x="47.8384%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.08%)</title><rect x="47.7595%" y="677" width="0.0766%" height="15" fill="rgb(206,159,16)" fg:x="1247" fg:w="2"/><text x="47.8767%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.08%)</title><rect x="47.7595%" y="661" width="0.0766%" height="15" fill="rgb(244,77,30)" fg:x="1247" fg:w="2"/><text x="47.8767%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.08%)</title><rect x="47.7595%" y="645" width="0.0766%" height="15" fill="rgb(218,69,12)" fg:x="1247" fg:w="2"/><text x="47.8767%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.08%)</title><rect x="47.7595%" y="629" width="0.0766%" height="15" fill="rgb(212,87,7)" fg:x="1247" fg:w="2"/><text x="47.8767%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.08%)</title><rect x="47.7595%" y="613" width="0.0766%" height="15" fill="rgb(245,114,25)" fg:x="1247" fg:w="2"/><text x="47.8767%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.15%)</title><rect x="47.9510%" y="629" width="0.1532%" height="15" fill="rgb(210,61,42)" fg:x="1252" fg:w="4"/><text x="48.0682%" y="639.50"></text></g><g><title>alloc_perturb (2 samples, 0.08%)</title><rect x="52.5852%" y="533" width="0.0766%" height="15" fill="rgb(211,52,33)" fg:x="1373" fg:w="2"/><text x="52.7024%" y="543.50"></text></g><g><title>access_error (1 samples, 0.04%)</title><rect x="52.8150%" y="501" width="0.0383%" height="15" fill="rgb(234,58,33)" fg:x="1379" fg:w="1"/><text x="52.9322%" y="511.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.04%)</title><rect x="52.8916%" y="485" width="0.0383%" height="15" fill="rgb(220,115,36)" fg:x="1381" fg:w="1"/><text x="53.0088%" y="495.50"></text></g><g><title>__count_memcg_events (1 samples, 0.04%)</title><rect x="53.0065%" y="469" width="0.0383%" height="15" fill="rgb(243,153,54)" fg:x="1384" fg:w="1"/><text x="53.1237%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="53.3129%" y="453" width="0.0383%" height="15" fill="rgb(251,47,18)" fg:x="1392" fg:w="1"/><text x="53.4301%" y="463.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.04%)</title><rect x="53.4278%" y="437" width="0.0383%" height="15" fill="rgb(242,102,42)" fg:x="1395" fg:w="1"/><text x="53.5450%" y="447.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.04%)</title><rect x="53.5427%" y="421" width="0.0383%" height="15" fill="rgb(234,31,38)" fg:x="1398" fg:w="1"/><text x="53.6599%" y="431.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.04%)</title><rect x="53.5427%" y="405" width="0.0383%" height="15" fill="rgb(221,117,51)" fg:x="1398" fg:w="1"/><text x="53.6599%" y="415.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.08%)</title><rect x="53.8491%" y="405" width="0.0766%" height="15" fill="rgb(212,20,18)" fg:x="1406" fg:w="2"/><text x="53.9663%" y="415.50"></text></g><g><title>__rcu_read_unlock (32 samples, 1.23%)</title><rect x="53.9257%" y="405" width="1.2256%" height="15" fill="rgb(245,133,36)" fg:x="1408" fg:w="32"/><text x="54.0429%" y="415.50">__..</text></g><g><title>__count_memcg_events (7 samples, 0.27%)</title><rect x="55.3428%" y="389" width="0.2681%" height="15" fill="rgb(212,6,19)" fg:x="1445" fg:w="7"/><text x="55.4600%" y="399.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="55.5726%" y="373" width="0.0383%" height="15" fill="rgb(218,1,36)" fg:x="1451" fg:w="1"/><text x="55.6898%" y="383.50"></text></g><g><title>charge_memcg (25 samples, 0.96%)</title><rect x="55.1513%" y="405" width="0.9575%" height="15" fill="rgb(246,84,54)" fg:x="1440" fg:w="25"/><text x="55.2685%" y="415.50">c..</text></g><g><title>try_charge_memcg (13 samples, 0.50%)</title><rect x="55.6109%" y="389" width="0.4979%" height="15" fill="rgb(242,110,6)" fg:x="1452" fg:w="13"/><text x="55.7281%" y="399.50"></text></g><g><title>consume_stock (2 samples, 0.08%)</title><rect x="56.0322%" y="373" width="0.0766%" height="15" fill="rgb(214,47,5)" fg:x="1463" fg:w="2"/><text x="56.1494%" y="383.50"></text></g><g><title>get_mem_cgroup_from_mm (13 samples, 0.50%)</title><rect x="56.1088%" y="405" width="0.4979%" height="15" fill="rgb(218,159,25)" fg:x="1465" fg:w="13"/><text x="56.2260%" y="415.50"></text></g><g><title>__mem_cgroup_charge (80 samples, 3.06%)</title><rect x="53.5810%" y="421" width="3.0640%" height="15" fill="rgb(215,211,28)" fg:x="1399" fg:w="80"/><text x="53.6982%" y="431.50">__mem_cgr..</text></g><g><title>try_charge_memcg (1 samples, 0.04%)</title><rect x="56.6067%" y="405" width="0.0383%" height="15" fill="rgb(238,59,32)" fg:x="1478" fg:w="1"/><text x="56.7239%" y="415.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.04%)</title><rect x="56.6450%" y="421" width="0.0383%" height="15" fill="rgb(226,82,3)" fg:x="1479" fg:w="1"/><text x="56.7622%" y="431.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.08%)</title><rect x="56.6833%" y="421" width="0.0766%" height="15" fill="rgb(240,164,32)" fg:x="1480" fg:w="2"/><text x="56.8005%" y="431.50"></text></g><g><title>charge_memcg (2 samples, 0.08%)</title><rect x="56.7599%" y="421" width="0.0766%" height="15" fill="rgb(232,46,7)" fg:x="1482" fg:w="2"/><text x="56.8770%" y="431.50"></text></g><g><title>folio_lruvec_lock_irqsave (2 samples, 0.08%)</title><rect x="57.1046%" y="373" width="0.0766%" height="15" fill="rgb(229,129,53)" fg:x="1491" fg:w="2"/><text x="57.2217%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.08%)</title><rect x="57.1046%" y="357" width="0.0766%" height="15" fill="rgb(234,188,29)" fg:x="1491" fg:w="2"/><text x="57.2217%" y="367.50"></text></g><g><title>__raw_spin_lock_irqsave (2 samples, 0.08%)</title><rect x="57.1046%" y="341" width="0.0766%" height="15" fill="rgb(246,141,4)" fg:x="1491" fg:w="2"/><text x="57.2217%" y="351.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.08%)</title><rect x="57.4876%" y="341" width="0.0766%" height="15" fill="rgb(229,23,39)" fg:x="1501" fg:w="2"/><text x="57.6047%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="57.5259%" y="325" width="0.0383%" height="15" fill="rgb(206,12,3)" fg:x="1502" fg:w="1"/><text x="57.6430%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="57.5642%" y="341" width="0.0383%" height="15" fill="rgb(252,226,20)" fg:x="1503" fg:w="1"/><text x="57.6813%" y="351.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="57.6025%" y="341" width="0.0383%" height="15" fill="rgb(216,123,35)" fg:x="1504" fg:w="1"/><text x="57.7196%" y="351.50"></text></g><g><title>lru_add_fn (13 samples, 0.50%)</title><rect x="57.1812%" y="373" width="0.4979%" height="15" fill="rgb(212,68,40)" fg:x="1493" fg:w="13"/><text x="57.2983%" y="383.50"></text></g><g><title>lru_gen_add_folio (8 samples, 0.31%)</title><rect x="57.3727%" y="357" width="0.3064%" height="15" fill="rgb(254,125,32)" fg:x="1498" fg:w="8"/><text x="57.4898%" y="367.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.04%)</title><rect x="57.6408%" y="341" width="0.0383%" height="15" fill="rgb(253,97,22)" fg:x="1505" fg:w="1"/><text x="57.7579%" y="351.50"></text></g><g><title>folio_add_lru_vma (24 samples, 0.92%)</title><rect x="56.8365%" y="421" width="0.9192%" height="15" fill="rgb(241,101,14)" fg:x="1484" fg:w="24"/><text x="56.9536%" y="431.50">f..</text></g><g><title>folio_add_lru (24 samples, 0.92%)</title><rect x="56.8365%" y="405" width="0.9192%" height="15" fill="rgb(238,103,29)" fg:x="1484" fg:w="24"/><text x="56.9536%" y="415.50">f..</text></g><g><title>folio_batch_move_lru (20 samples, 0.77%)</title><rect x="56.9897%" y="389" width="0.7660%" height="15" fill="rgb(233,195,47)" fg:x="1488" fg:w="20"/><text x="57.1068%" y="399.50"></text></g><g><title>release_pages (2 samples, 0.08%)</title><rect x="57.6791%" y="373" width="0.0766%" height="15" fill="rgb(246,218,30)" fg:x="1506" fg:w="2"/><text x="57.7962%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (4 samples, 0.15%)</title><rect x="57.7939%" y="373" width="0.1532%" height="15" fill="rgb(219,145,47)" fg:x="1509" fg:w="4"/><text x="57.9111%" y="383.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="57.9088%" y="357" width="0.0383%" height="15" fill="rgb(243,12,26)" fg:x="1512" fg:w="1"/><text x="58.0260%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (6 samples, 0.23%)</title><rect x="57.7556%" y="421" width="0.2298%" height="15" fill="rgb(214,87,16)" fg:x="1508" fg:w="6"/><text x="57.8728%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (5 samples, 0.19%)</title><rect x="57.7939%" y="405" width="0.1915%" height="15" fill="rgb(208,99,42)" fg:x="1509" fg:w="5"/><text x="57.9111%" y="415.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.19%)</title><rect x="57.7939%" y="389" width="0.1915%" height="15" fill="rgb(253,99,2)" fg:x="1509" fg:w="5"/><text x="57.9111%" y="399.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="57.9471%" y="373" width="0.0383%" height="15" fill="rgb(220,168,23)" fg:x="1513" fg:w="1"/><text x="58.0643%" y="383.50"></text></g><g><title>inc_mm_counter (3 samples, 0.11%)</title><rect x="57.9854%" y="421" width="0.1149%" height="15" fill="rgb(242,38,24)" fg:x="1514" fg:w="3"/><text x="58.1026%" y="431.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.11%)</title><rect x="57.9854%" y="405" width="0.1149%" height="15" fill="rgb(225,182,9)" fg:x="1514" fg:w="3"/><text x="58.1026%" y="415.50"></text></g><g><title>__alloc_pages (2 samples, 0.08%)</title><rect x="58.1769%" y="405" width="0.0766%" height="15" fill="rgb(243,178,37)" fg:x="1519" fg:w="2"/><text x="58.2941%" y="415.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.04%)</title><rect x="58.4833%" y="373" width="0.0383%" height="15" fill="rgb(232,139,19)" fg:x="1527" fg:w="1"/><text x="58.6005%" y="383.50"></text></g><g><title>_raw_spin_trylock (2 samples, 0.08%)</title><rect x="58.5599%" y="357" width="0.0766%" height="15" fill="rgb(225,201,24)" fg:x="1529" fg:w="2"/><text x="58.6771%" y="367.50"></text></g><g><title>clear_page_erms (5 samples, 0.19%)</title><rect x="58.6365%" y="357" width="0.1915%" height="15" fill="rgb(221,47,46)" fg:x="1531" fg:w="5"/><text x="58.7537%" y="367.50"></text></g><g><title>post_alloc_hook (1 samples, 0.04%)</title><rect x="58.8280%" y="357" width="0.0383%" height="15" fill="rgb(249,23,13)" fg:x="1536" fg:w="1"/><text x="58.9452%" y="367.50"></text></g><g><title>get_page_from_freelist (23 samples, 0.88%)</title><rect x="58.5216%" y="373" width="0.8809%" height="15" fill="rgb(219,9,5)" fg:x="1528" fg:w="23"/><text x="58.6388%" y="383.50">g..</text></g><g><title>rmqueue (14 samples, 0.54%)</title><rect x="58.8663%" y="357" width="0.5362%" height="15" fill="rgb(254,171,16)" fg:x="1537" fg:w="14"/><text x="58.9835%" y="367.50"></text></g><g><title>__rmqueue_pcplist (10 samples, 0.38%)</title><rect x="59.0195%" y="341" width="0.3830%" height="15" fill="rgb(230,171,20)" fg:x="1541" fg:w="10"/><text x="59.1367%" y="351.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.31%)</title><rect x="59.0961%" y="325" width="0.3064%" height="15" fill="rgb(210,71,41)" fg:x="1543" fg:w="8"/><text x="59.2133%" y="335.50"></text></g><g><title>__alloc_pages (31 samples, 1.19%)</title><rect x="58.2535%" y="389" width="1.1873%" height="15" fill="rgb(206,173,20)" fg:x="1521" fg:w="31"/><text x="58.3707%" y="399.50">__..</text></g><g><title>should_fail_alloc_page (1 samples, 0.04%)</title><rect x="59.4025%" y="373" width="0.0383%" height="15" fill="rgb(233,88,34)" fg:x="1551" fg:w="1"/><text x="59.5197%" y="383.50"></text></g><g><title>__folio_alloc (32 samples, 1.23%)</title><rect x="58.2535%" y="405" width="1.2256%" height="15" fill="rgb(223,209,46)" fg:x="1521" fg:w="32"/><text x="58.3707%" y="415.50">__..</text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="59.4408%" y="389" width="0.0383%" height="15" fill="rgb(250,43,18)" fg:x="1552" fg:w="1"/><text x="59.5580%" y="399.50"></text></g><g><title>do_anonymous_page (158 samples, 6.05%)</title><rect x="53.4661%" y="437" width="6.0513%" height="15" fill="rgb(208,13,10)" fg:x="1396" fg:w="158"/><text x="53.5833%" y="447.50">do_anonymous_page</text></g><g><title>vma_alloc_folio (37 samples, 1.42%)</title><rect x="58.1003%" y="421" width="1.4171%" height="15" fill="rgb(212,200,36)" fg:x="1517" fg:w="37"/><text x="58.2175%" y="431.50">vma..</text></g><g><title>policy_nodemask (1 samples, 0.04%)</title><rect x="59.4791%" y="405" width="0.0383%" height="15" fill="rgb(225,90,30)" fg:x="1553" fg:w="1"/><text x="59.5963%" y="415.50"></text></g><g><title>inc_mm_counter (1 samples, 0.04%)</title><rect x="59.5174%" y="437" width="0.0383%" height="15" fill="rgb(236,182,39)" fg:x="1554" fg:w="1"/><text x="59.6346%" y="447.50"></text></g><g><title>pfn_pte (1 samples, 0.04%)</title><rect x="59.5557%" y="437" width="0.0383%" height="15" fill="rgb(212,144,35)" fg:x="1555" fg:w="1"/><text x="59.6729%" y="447.50"></text></g><g><title>handle_pte_fault (165 samples, 6.32%)</title><rect x="53.3512%" y="453" width="6.3194%" height="15" fill="rgb(228,63,44)" fg:x="1393" fg:w="165"/><text x="53.4684%" y="463.50">handle_pte_fault</text></g><g><title>pte_offset_map_nolock (2 samples, 0.08%)</title><rect x="59.5940%" y="437" width="0.0766%" height="15" fill="rgb(228,109,6)" fg:x="1556" fg:w="2"/><text x="59.7112%" y="447.50"></text></g><g><title>__pte_offset_map (2 samples, 0.08%)</title><rect x="59.5940%" y="421" width="0.0766%" height="15" fill="rgb(238,117,24)" fg:x="1556" fg:w="2"/><text x="59.7112%" y="431.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.04%)</title><rect x="59.6706%" y="453" width="0.0383%" height="15" fill="rgb(242,26,26)" fg:x="1558" fg:w="1"/><text x="59.7878%" y="463.50"></text></g><g><title>__handle_mm_fault (175 samples, 6.70%)</title><rect x="53.0448%" y="469" width="6.7024%" height="15" fill="rgb(221,92,48)" fg:x="1385" fg:w="175"/><text x="53.1620%" y="479.50">__handle_mm_fault</text></g><g><title>pud_val (1 samples, 0.04%)</title><rect x="59.7089%" y="453" width="0.0383%" height="15" fill="rgb(209,209,32)" fg:x="1559" fg:w="1"/><text x="59.8261%" y="463.50"></text></g><g><title>count_memcg_events.constprop.0 (2 samples, 0.08%)</title><rect x="59.7472%" y="469" width="0.0766%" height="15" fill="rgb(221,70,22)" fg:x="1560" fg:w="2"/><text x="59.8644%" y="479.50"></text></g><g><title>__count_memcg_events (2 samples, 0.08%)</title><rect x="59.7472%" y="453" width="0.0766%" height="15" fill="rgb(248,145,5)" fg:x="1560" fg:w="2"/><text x="59.8644%" y="463.50"></text></g><g><title>handle_mm_fault (181 samples, 6.93%)</title><rect x="52.9299%" y="485" width="6.9322%" height="15" fill="rgb(226,116,26)" fg:x="1382" fg:w="181"/><text x="53.0471%" y="495.50">handle_mm_fault</text></g><g><title>pud_val (1 samples, 0.04%)</title><rect x="59.8238%" y="469" width="0.0383%" height="15" fill="rgb(244,5,17)" fg:x="1562" fg:w="1"/><text x="59.9410%" y="479.50"></text></g><g><title>mas_walk (4 samples, 0.15%)</title><rect x="59.9387%" y="469" width="0.1532%" height="15" fill="rgb(252,159,33)" fg:x="1565" fg:w="4"/><text x="60.0559%" y="479.50"></text></g><g><title>mtree_range_walk (4 samples, 0.15%)</title><rect x="59.9387%" y="453" width="0.1532%" height="15" fill="rgb(206,71,0)" fg:x="1565" fg:w="4"/><text x="60.0559%" y="463.50"></text></g><g><title>lock_vma_under_rcu (7 samples, 0.27%)</title><rect x="59.8621%" y="485" width="0.2681%" height="15" fill="rgb(233,118,54)" fg:x="1563" fg:w="7"/><text x="59.9793%" y="495.50"></text></g><g><title>mtree_range_walk (1 samples, 0.04%)</title><rect x="60.0919%" y="469" width="0.0383%" height="15" fill="rgb(234,83,48)" fg:x="1569" fg:w="1"/><text x="60.2091%" y="479.50"></text></g><g><title>do_user_addr_fault (193 samples, 7.39%)</title><rect x="52.8533%" y="501" width="7.3918%" height="15" fill="rgb(228,3,54)" fg:x="1380" fg:w="193"/><text x="52.9705%" y="511.50">do_user_addr_fault</text></g><g><title>up_read (3 samples, 0.11%)</title><rect x="60.1302%" y="485" width="0.1149%" height="15" fill="rgb(226,155,13)" fg:x="1570" fg:w="3"/><text x="60.2474%" y="495.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="60.2451%" y="501" width="0.0383%" height="15" fill="rgb(241,28,37)" fg:x="1573" fg:w="1"/><text x="60.3623%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.11%)</title><rect x="60.2834%" y="469" width="0.1149%" height="15" fill="rgb(233,93,10)" fg:x="1574" fg:w="3"/><text x="60.4006%" y="479.50"></text></g><g><title>exc_page_fault (203 samples, 7.77%)</title><rect x="52.6618%" y="517" width="7.7748%" height="15" fill="rgb(225,113,19)" fg:x="1375" fg:w="203"/><text x="52.7790%" y="527.50">exc_page_fault</text></g><g><title>irqentry_exit (4 samples, 0.15%)</title><rect x="60.2834%" y="501" width="0.1532%" height="15" fill="rgb(241,2,18)" fg:x="1574" fg:w="4"/><text x="60.4006%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.15%)</title><rect x="60.2834%" y="485" width="0.1532%" height="15" fill="rgb(228,207,21)" fg:x="1574" fg:w="4"/><text x="60.4006%" y="495.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.04%)</title><rect x="60.3983%" y="469" width="0.0383%" height="15" fill="rgb(213,211,35)" fg:x="1577" fg:w="1"/><text x="60.5155%" y="479.50"></text></g><g><title>irqentry_enter (1 samples, 0.04%)</title><rect x="60.4366%" y="517" width="0.0383%" height="15" fill="rgb(209,83,10)" fg:x="1578" fg:w="1"/><text x="60.5538%" y="527.50"></text></g><g><title>asm_exc_page_fault (205 samples, 7.85%)</title><rect x="52.6618%" y="533" width="7.8514%" height="15" fill="rgb(209,164,1)" fg:x="1375" fg:w="205"/><text x="52.7790%" y="543.50">asm_exc_page_fault</text></g><g><title>irqentry_exit (1 samples, 0.04%)</title><rect x="60.4749%" y="517" width="0.0383%" height="15" fill="rgb(213,184,43)" fg:x="1579" fg:w="1"/><text x="60.5921%" y="527.50"></text></g><g><title>checked_request2size (3 samples, 0.11%)</title><rect x="60.5132%" y="533" width="0.1149%" height="15" fill="rgb(231,61,34)" fg:x="1580" fg:w="3"/><text x="60.6304%" y="543.50"></text></g><g><title>error_entry (1 samples, 0.04%)</title><rect x="60.6281%" y="533" width="0.0383%" height="15" fill="rgb(235,75,3)" fg:x="1583" fg:w="1"/><text x="60.7453%" y="543.50"></text></g><g><title>sync_regs (18 samples, 0.69%)</title><rect x="60.6664%" y="533" width="0.6894%" height="15" fill="rgb(220,106,47)" fg:x="1584" fg:w="18"/><text x="60.7836%" y="543.50"></text></g><g><title>__vm_enough_memory (1 samples, 0.04%)</title><rect x="61.3941%" y="357" width="0.0383%" height="15" fill="rgb(210,196,33)" fg:x="1603" fg:w="1"/><text x="61.5113%" y="367.50"></text></g><g><title>mas_store_prealloc (2 samples, 0.08%)</title><rect x="61.4324%" y="357" width="0.0766%" height="15" fill="rgb(229,154,42)" fg:x="1604" fg:w="2"/><text x="61.5496%" y="367.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.04%)</title><rect x="61.4707%" y="341" width="0.0383%" height="15" fill="rgb(228,114,26)" fg:x="1605" fg:w="1"/><text x="61.5879%" y="351.50"></text></g><g><title>mas_wr_walk (1 samples, 0.04%)</title><rect x="61.4707%" y="325" width="0.0383%" height="15" fill="rgb(208,144,1)" fg:x="1605" fg:w="1"/><text x="61.5879%" y="335.50"></text></g><g><title>may_expand_vm (1 samples, 0.04%)</title><rect x="61.5090%" y="357" width="0.0383%" height="15" fill="rgb(239,112,37)" fg:x="1606" fg:w="1"/><text x="61.6262%" y="367.50"></text></g><g><title>do_brk_flags (6 samples, 0.23%)</title><rect x="61.3941%" y="373" width="0.2298%" height="15" fill="rgb(210,96,50)" fg:x="1603" fg:w="6"/><text x="61.5113%" y="383.50"></text></g><g><title>perf_event_mmap (2 samples, 0.08%)</title><rect x="61.5473%" y="357" width="0.0766%" height="15" fill="rgb(222,178,2)" fg:x="1607" fg:w="2"/><text x="61.6645%" y="367.50"></text></g><g><title>perf_event_mmap_event (2 samples, 0.08%)</title><rect x="61.5473%" y="341" width="0.0766%" height="15" fill="rgb(226,74,18)" fg:x="1607" fg:w="2"/><text x="61.6645%" y="351.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.08%)</title><rect x="61.5473%" y="325" width="0.0766%" height="15" fill="rgb(225,67,54)" fg:x="1607" fg:w="2"/><text x="61.6645%" y="335.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.08%)</title><rect x="61.5473%" y="309" width="0.0766%" height="15" fill="rgb(251,92,32)" fg:x="1607" fg:w="2"/><text x="61.6645%" y="319.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.08%)</title><rect x="61.5473%" y="293" width="0.0766%" height="15" fill="rgb(228,149,22)" fg:x="1607" fg:w="2"/><text x="61.6645%" y="303.50"></text></g><g><title>perf_output_copy (1 samples, 0.04%)</title><rect x="61.5856%" y="277" width="0.0383%" height="15" fill="rgb(243,54,13)" fg:x="1608" fg:w="1"/><text x="61.7028%" y="287.50"></text></g><g><title>__output_copy (1 samples, 0.04%)</title><rect x="61.5856%" y="261" width="0.0383%" height="15" fill="rgb(243,180,28)" fg:x="1608" fg:w="1"/><text x="61.7028%" y="271.50"></text></g><g><title>do_syscall_64 (7 samples, 0.27%)</title><rect x="61.3941%" y="437" width="0.2681%" height="15" fill="rgb(208,167,24)" fg:x="1603" fg:w="7"/><text x="61.5113%" y="447.50"></text></g><g><title>x64_sys_call (7 samples, 0.27%)</title><rect x="61.3941%" y="421" width="0.2681%" height="15" fill="rgb(245,73,45)" fg:x="1603" fg:w="7"/><text x="61.5113%" y="431.50"></text></g><g><title>__x64_sys_brk (7 samples, 0.27%)</title><rect x="61.3941%" y="405" width="0.2681%" height="15" fill="rgb(237,203,48)" fg:x="1603" fg:w="7"/><text x="61.5113%" y="415.50"></text></g><g><title>__do_sys_brk (7 samples, 0.27%)</title><rect x="61.3941%" y="389" width="0.2681%" height="15" fill="rgb(211,197,16)" fg:x="1603" fg:w="7"/><text x="61.5113%" y="399.50"></text></g><g><title>mas_find (1 samples, 0.04%)</title><rect x="61.6239%" y="373" width="0.0383%" height="15" fill="rgb(243,99,51)" fg:x="1609" fg:w="1"/><text x="61.7411%" y="383.50"></text></g><g><title>mas_next_slot (1 samples, 0.04%)</title><rect x="61.6239%" y="357" width="0.0383%" height="15" fill="rgb(215,123,29)" fg:x="1609" fg:w="1"/><text x="61.7411%" y="367.50"></text></g><g><title>__glibc_morecore (8 samples, 0.31%)</title><rect x="61.3941%" y="517" width="0.3064%" height="15" fill="rgb(239,186,37)" fg:x="1603" fg:w="8"/><text x="61.5113%" y="527.50"></text></g><g><title>__GI___sbrk (8 samples, 0.31%)</title><rect x="61.3941%" y="501" width="0.3064%" height="15" fill="rgb(252,136,39)" fg:x="1603" fg:w="8"/><text x="61.5113%" y="511.50"></text></g><g><title>__GI___sbrk (8 samples, 0.31%)</title><rect x="61.3941%" y="485" width="0.3064%" height="15" fill="rgb(223,213,32)" fg:x="1603" fg:w="8"/><text x="61.5113%" y="495.50"></text></g><g><title>__brk (8 samples, 0.31%)</title><rect x="61.3941%" y="469" width="0.3064%" height="15" fill="rgb(233,115,5)" fg:x="1603" fg:w="8"/><text x="61.5113%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.31%)</title><rect x="61.3941%" y="453" width="0.3064%" height="15" fill="rgb(207,226,44)" fg:x="1603" fg:w="8"/><text x="61.5113%" y="463.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.04%)</title><rect x="61.6622%" y="437" width="0.0383%" height="15" fill="rgb(208,126,0)" fg:x="1610" fg:w="1"/><text x="61.7794%" y="447.50"></text></g><g><title>down_read_trylock (1 samples, 0.04%)</title><rect x="61.7005%" y="469" width="0.0383%" height="15" fill="rgb(244,66,21)" fg:x="1611" fg:w="1"/><text x="61.8177%" y="479.50"></text></g><g><title>sysmalloc (12 samples, 0.46%)</title><rect x="61.3558%" y="533" width="0.4596%" height="15" fill="rgb(222,97,12)" fg:x="1602" fg:w="12"/><text x="61.4730%" y="543.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.11%)</title><rect x="61.7005%" y="517" width="0.1149%" height="15" fill="rgb(219,213,19)" fg:x="1611" fg:w="3"/><text x="61.8177%" y="527.50"></text></g><g><title>exc_page_fault (3 samples, 0.11%)</title><rect x="61.7005%" y="501" width="0.1149%" height="15" fill="rgb(252,169,30)" fg:x="1611" fg:w="3"/><text x="61.8177%" y="511.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.11%)</title><rect x="61.7005%" y="485" width="0.1149%" height="15" fill="rgb(206,32,51)" fg:x="1611" fg:w="3"/><text x="61.8177%" y="495.50"></text></g><g><title>handle_mm_fault (2 samples, 0.08%)</title><rect x="61.7388%" y="469" width="0.0766%" height="15" fill="rgb(250,172,42)" fg:x="1612" fg:w="2"/><text x="61.8560%" y="479.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.08%)</title><rect x="61.7388%" y="453" width="0.0766%" height="15" fill="rgb(209,34,43)" fg:x="1612" fg:w="2"/><text x="61.8560%" y="463.50"></text></g><g><title>handle_pte_fault (2 samples, 0.08%)</title><rect x="61.7388%" y="437" width="0.0766%" height="15" fill="rgb(223,11,35)" fg:x="1612" fg:w="2"/><text x="61.8560%" y="447.50"></text></g><g><title>do_anonymous_page (2 samples, 0.08%)</title><rect x="61.7388%" y="421" width="0.0766%" height="15" fill="rgb(251,219,26)" fg:x="1612" fg:w="2"/><text x="61.8560%" y="431.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.04%)</title><rect x="61.7771%" y="405" width="0.0383%" height="15" fill="rgb(231,119,3)" fg:x="1613" fg:w="1"/><text x="61.8943%" y="415.50"></text></g><g><title>__folio_alloc (1 samples, 0.04%)</title><rect x="61.7771%" y="389" width="0.0383%" height="15" fill="rgb(216,97,11)" fg:x="1613" fg:w="1"/><text x="61.8943%" y="399.50"></text></g><g><title>__cond_resched (1 samples, 0.04%)</title><rect x="61.7771%" y="373" width="0.0383%" height="15" fill="rgb(223,59,9)" fg:x="1613" fg:w="1"/><text x="61.8943%" y="383.50"></text></g><g><title>_int_malloc (351 samples, 13.44%)</title><rect x="48.4489%" y="549" width="13.4431%" height="15" fill="rgb(233,93,31)" fg:x="1265" fg:w="351"/><text x="48.5661%" y="559.50">_int_malloc</text></g><g><title>unlink_chunk (2 samples, 0.08%)</title><rect x="61.8154%" y="533" width="0.0766%" height="15" fill="rgb(239,81,33)" fg:x="1614" fg:w="2"/><text x="61.9326%" y="543.50"></text></g><g><title>__GI___libc_malloc (362 samples, 13.86%)</title><rect x="48.1042%" y="565" width="13.8644%" height="15" fill="rgb(213,120,34)" fg:x="1256" fg:w="362"/><text x="48.2214%" y="575.50">__GI___libc_malloc</text></g><g><title>checked_request2size (2 samples, 0.08%)</title><rect x="61.8920%" y="549" width="0.0766%" height="15" fill="rgb(243,49,53)" fg:x="1616" fg:w="2"/><text x="62.0092%" y="559.50"></text></g><g><title>__rdl_alloc (4 samples, 0.15%)</title><rect x="61.9686%" y="565" width="0.1532%" height="15" fill="rgb(247,216,33)" fg:x="1618" fg:w="4"/><text x="62.0858%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (437 samples, 16.74%)</title><rect x="45.4232%" y="741" width="16.7369%" height="15" fill="rgb(226,26,14)" fg:x="1186" fg:w="437"/><text x="45.5404%" y="751.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (437 samples, 16.74%)</title><rect x="45.4232%" y="725" width="16.7369%" height="15" fill="rgb(215,49,53)" fg:x="1186" fg:w="437"/><text x="45.5404%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (437 samples, 16.74%)</title><rect x="45.4232%" y="709" width="16.7369%" height="15" fill="rgb(245,162,40)" fg:x="1186" fg:w="437"/><text x="45.5404%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (434 samples, 16.62%)</title><rect x="45.5381%" y="693" width="16.6220%" height="15" fill="rgb(229,68,17)" fg:x="1189" fg:w="434"/><text x="45.6553%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (374 samples, 14.32%)</title><rect x="47.8361%" y="677" width="14.3240%" height="15" fill="rgb(213,182,10)" fg:x="1249" fg:w="374"/><text x="47.9533%" y="687.50">alloc::vec::Vec&lt;T&gt;::with_capacity</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (374 samples, 14.32%)</title><rect x="47.8361%" y="661" width="14.3240%" height="15" fill="rgb(245,125,30)" fg:x="1249" fg:w="374"/><text x="47.9533%" y="671.50">alloc::vec::Vec&lt;T,A&gt;::with_capacity_in</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (371 samples, 14.21%)</title><rect x="47.9510%" y="645" width="14.2091%" height="15" fill="rgb(232,202,2)" fg:x="1252" fg:w="371"/><text x="48.0682%" y="655.50">alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (367 samples, 14.06%)</title><rect x="48.1042%" y="629" width="14.0559%" height="15" fill="rgb(237,140,51)" fg:x="1256" fg:w="367"/><text x="48.2214%" y="639.50">alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (367 samples, 14.06%)</title><rect x="48.1042%" y="613" width="14.0559%" height="15" fill="rgb(236,157,25)" fg:x="1256" fg:w="367"/><text x="48.2214%" y="623.50">&lt;alloc::alloc::Global as core::alloc::Allocator&gt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (367 samples, 14.06%)</title><rect x="48.1042%" y="597" width="14.0559%" height="15" fill="rgb(219,209,0)" fg:x="1256" fg:w="367"/><text x="48.2214%" y="607.50">alloc::alloc::Global::alloc_impl</text></g><g><title>alloc::alloc::alloc (367 samples, 14.06%)</title><rect x="48.1042%" y="581" width="14.0559%" height="15" fill="rgb(240,116,54)" fg:x="1256" fg:w="367"/><text x="48.2214%" y="591.50">alloc::alloc::alloc</text></g><g><title>core::ptr::read_volatile (1 samples, 0.04%)</title><rect x="62.1218%" y="565" width="0.0383%" height="15" fill="rgb(216,10,36)" fg:x="1622" fg:w="1"/><text x="62.2390%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.04%)</title><rect x="62.1601%" y="741" width="0.0383%" height="15" fill="rgb(222,72,44)" fg:x="1623" fg:w="1"/><text x="62.2773%" y="751.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.04%)</title><rect x="62.1601%" y="725" width="0.0383%" height="15" fill="rgb(232,159,9)" fg:x="1623" fg:w="1"/><text x="62.2773%" y="735.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="62.3133%" y="485" width="0.0383%" height="15" fill="rgb(210,39,32)" fg:x="1627" fg:w="1"/><text x="62.4305%" y="495.50"></text></g><g><title>error_entry (1 samples, 0.04%)</title><rect x="62.3516%" y="485" width="0.0383%" height="15" fill="rgb(216,194,45)" fg:x="1628" fg:w="1"/><text x="62.4688%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.11%)</title><rect x="62.3133%" y="661" width="0.1149%" height="15" fill="rgb(218,18,35)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.11%)</title><rect x="62.3133%" y="645" width="0.1149%" height="15" fill="rgb(207,83,51)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.11%)</title><rect x="62.3133%" y="629" width="0.1149%" height="15" fill="rgb(225,63,43)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="62.3133%" y="613" width="0.1149%" height="15" fill="rgb(207,57,36)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.11%)</title><rect x="62.3133%" y="597" width="0.1149%" height="15" fill="rgb(216,99,33)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.11%)</title><rect x="62.3133%" y="581" width="0.1149%" height="15" fill="rgb(225,42,16)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.11%)</title><rect x="62.3133%" y="565" width="0.1149%" height="15" fill="rgb(220,201,45)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.11%)</title><rect x="62.3133%" y="549" width="0.1149%" height="15" fill="rgb(225,33,4)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="559.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.11%)</title><rect x="62.3133%" y="533" width="0.1149%" height="15" fill="rgb(224,33,50)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.11%)</title><rect x="62.3133%" y="517" width="0.1149%" height="15" fill="rgb(246,198,51)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="527.50"></text></g><g><title>_int_malloc (3 samples, 0.11%)</title><rect x="62.3133%" y="501" width="0.1149%" height="15" fill="rgb(205,22,4)" fg:x="1627" fg:w="3"/><text x="62.4305%" y="511.50"></text></g><g><title>sync_regs (1 samples, 0.04%)</title><rect x="62.3899%" y="485" width="0.0383%" height="15" fill="rgb(206,3,8)" fg:x="1629" fg:w="1"/><text x="62.5071%" y="495.50"></text></g><g><title>__GI___libc_free (48 samples, 1.84%)</title><rect x="62.4282%" y="661" width="1.8384%" height="15" fill="rgb(251,23,15)" fg:x="1630" fg:w="48"/><text x="62.5454%" y="671.50">__GI..</text></g><g><title>_int_free (43 samples, 1.65%)</title><rect x="62.6197%" y="645" width="1.6469%" height="15" fill="rgb(252,88,28)" fg:x="1635" fg:w="43"/><text x="62.7369%" y="655.50">_in..</text></g><g><title>free_perturb (2 samples, 0.08%)</title><rect x="64.1900%" y="629" width="0.0766%" height="15" fill="rgb(212,127,14)" fg:x="1676" fg:w="2"/><text x="64.3072%" y="639.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.15%)</title><rect x="64.2666%" y="661" width="0.1532%" height="15" fill="rgb(247,145,37)" fg:x="1678" fg:w="4"/><text x="64.3838%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 2.22%)</title><rect x="62.3133%" y="677" width="2.2214%" height="15" fill="rgb(209,117,53)" fg:x="1627" fg:w="58"/><text x="62.4305%" y="687.50">alloc:..</text></g><g><title>__rust_dealloc (3 samples, 0.11%)</title><rect x="64.4198%" y="661" width="0.1149%" height="15" fill="rgb(212,90,42)" fg:x="1682" fg:w="3"/><text x="64.5370%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61 samples, 2.34%)</title><rect x="62.3133%" y="693" width="2.3363%" height="15" fill="rgb(218,164,37)" fg:x="1627" fg:w="61"/><text x="62.4305%" y="703.50">&lt;alloc..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (3 samples, 0.11%)</title><rect x="64.5347%" y="677" width="0.1149%" height="15" fill="rgb(246,65,34)" fg:x="1685" fg:w="3"/><text x="64.6518%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (65 samples, 2.49%)</title><rect x="62.1984%" y="741" width="2.4895%" height="15" fill="rgb(231,100,33)" fg:x="1624" fg:w="65"/><text x="62.3156%" y="751.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (65 samples, 2.49%)</title><rect x="62.1984%" y="725" width="2.4895%" height="15" fill="rgb(228,126,14)" fg:x="1624" fg:w="65"/><text x="62.3156%" y="735.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 2.49%)</title><rect x="62.1984%" y="709" width="2.4895%" height="15" fill="rgb(215,173,21)" fg:x="1624" fg:w="65"/><text x="62.3156%" y="719.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="64.6496%" y="693" width="0.0383%" height="15" fill="rgb(210,6,40)" fg:x="1688" fg:w="1"/><text x="64.7667%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.04%)</title><rect x="64.6496%" y="677" width="0.0383%" height="15" fill="rgb(212,48,18)" fg:x="1688" fg:w="1"/><text x="64.7667%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (2 samples, 0.08%)</title><rect x="64.6879%" y="741" width="0.0766%" height="15" fill="rgb(230,214,11)" fg:x="1689" fg:w="2"/><text x="64.8050%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (2 samples, 0.08%)</title><rect x="64.6879%" y="725" width="0.0766%" height="15" fill="rgb(254,105,39)" fg:x="1689" fg:w="2"/><text x="64.8050%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.6879%" y="709" width="0.0766%" height="15" fill="rgb(245,158,5)" fg:x="1689" fg:w="2"/><text x="64.8050%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="64.7262%" y="693" width="0.0383%" height="15" fill="rgb(249,208,11)" fg:x="1690" fg:w="1"/><text x="64.8433%" y="703.50"></text></g><g><title>checked_request2size (11 samples, 0.42%)</title><rect x="67.7518%" y="645" width="0.4213%" height="15" fill="rgb(210,39,28)" fg:x="1769" fg:w="11"/><text x="67.8690%" y="655.50"></text></g><g><title>__GI___libc_malloc (49 samples, 1.88%)</title><rect x="66.8326%" y="661" width="1.8767%" height="15" fill="rgb(211,56,53)" fg:x="1745" fg:w="49"/><text x="66.9498%" y="671.50">__GI..</text></g><g><title>tcache_get (14 samples, 0.54%)</title><rect x="68.1731%" y="645" width="0.5362%" height="15" fill="rgb(226,201,30)" fg:x="1780" fg:w="14"/><text x="68.2903%" y="655.50"></text></g><g><title>__rdl_alloc (8 samples, 0.31%)</title><rect x="68.7093%" y="661" width="0.3064%" height="15" fill="rgb(239,101,34)" fg:x="1794" fg:w="8"/><text x="68.8265%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (66 samples, 2.53%)</title><rect x="66.6028%" y="725" width="2.5278%" height="15" fill="rgb(226,209,5)" fg:x="1739" fg:w="66"/><text x="66.7200%" y="735.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 2.53%)</title><rect x="66.6028%" y="709" width="2.5278%" height="15" fill="rgb(250,105,47)" fg:x="1739" fg:w="66"/><text x="66.7200%" y="719.50">&lt;alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 2.53%)</title><rect x="66.6028%" y="693" width="2.5278%" height="15" fill="rgb(230,72,3)" fg:x="1739" fg:w="66"/><text x="66.7200%" y="703.50">alloc::..</text></g><g><title>alloc::alloc::alloc (66 samples, 2.53%)</title><rect x="66.6028%" y="677" width="2.5278%" height="15" fill="rgb(232,218,39)" fg:x="1739" fg:w="66"/><text x="66.7200%" y="687.50">alloc::..</text></g><g><title>__rust_alloc (3 samples, 0.11%)</title><rect x="69.0157%" y="661" width="0.1149%" height="15" fill="rgb(248,166,6)" fg:x="1802" fg:w="3"/><text x="69.1329%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (3 samples, 0.11%)</title><rect x="69.1306%" y="725" width="0.1149%" height="15" fill="rgb(247,89,20)" fg:x="1805" fg:w="3"/><text x="69.2478%" y="735.50"></text></g><g><title>alloc::slice::hack::into_vec (3 samples, 0.11%)</title><rect x="69.1306%" y="709" width="0.1149%" height="15" fill="rgb(248,130,54)" fg:x="1805" fg:w="3"/><text x="69.2478%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (3 samples, 0.11%)</title><rect x="69.1306%" y="693" width="0.1149%" height="15" fill="rgb(234,196,4)" fg:x="1805" fg:w="3"/><text x="69.2478%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (3 samples, 0.11%)</title><rect x="69.2455%" y="725" width="0.1149%" height="15" fill="rgb(250,143,31)" fg:x="1808" fg:w="3"/><text x="69.3627%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.11%)</title><rect x="69.2455%" y="709" width="0.1149%" height="15" fill="rgb(211,110,34)" fg:x="1808" fg:w="3"/><text x="69.3627%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.11%)</title><rect x="69.2455%" y="693" width="0.1149%" height="15" fill="rgb(215,124,48)" fg:x="1808" fg:w="3"/><text x="69.3627%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.11%)</title><rect x="69.2455%" y="677" width="0.1149%" height="15" fill="rgb(216,46,13)" fg:x="1808" fg:w="3"/><text x="69.3627%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (2 samples, 0.08%)</title><rect x="69.3604%" y="725" width="0.0766%" height="15" fill="rgb(205,184,25)" fg:x="1811" fg:w="2"/><text x="69.4776%" y="735.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (2 samples, 0.08%)</title><rect x="69.3604%" y="709" width="0.0766%" height="15" fill="rgb(228,1,10)" fg:x="1811" fg:w="2"/><text x="69.4776%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.11%)</title><rect x="69.4370%" y="677" width="0.1149%" height="15" fill="rgb(213,116,27)" fg:x="1813" fg:w="3"/><text x="69.5542%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.38%)</title><rect x="69.8200%" y="645" width="0.3830%" height="15" fill="rgb(241,95,50)" fg:x="1823" fg:w="10"/><text x="69.9372%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="70.7775%" y="629" width="0.0766%" height="15" fill="rgb(238,48,32)" fg:x="1848" fg:w="2"/><text x="70.8947%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="70.8541%" y="597" width="0.0383%" height="15" fill="rgb(235,113,49)" fg:x="1850" fg:w="1"/><text x="70.9713%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.38%)</title><rect x="70.8924%" y="581" width="0.3830%" height="15" fill="rgb(205,127,43)" fg:x="1851" fg:w="10"/><text x="71.0096%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.23%)</title><rect x="71.2754%" y="421" width="0.2298%" height="15" fill="rgb(250,162,2)" fg:x="1861" fg:w="6"/><text x="71.3926%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.31%)</title><rect x="71.5052%" y="421" width="0.3064%" height="15" fill="rgb(220,13,41)" fg:x="1867" fg:w="8"/><text x="71.6224%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.23%)</title><rect x="71.5818%" y="405" width="0.2298%" height="15" fill="rgb(249,221,25)" fg:x="1869" fg:w="6"/><text x="71.6990%" y="415.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.57%)</title><rect x="71.2754%" y="437" width="0.5745%" height="15" fill="rgb(215,208,19)" fg:x="1861" fg:w="15"/><text x="71.3926%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="71.8116%" y="421" width="0.0383%" height="15" fill="rgb(236,175,2)" fg:x="1875" fg:w="1"/><text x="71.9288%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (22 samples, 0.84%)</title><rect x="71.2754%" y="565" width="0.8426%" height="15" fill="rgb(241,52,2)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="575.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (22 samples, 0.84%)</title><rect x="71.2754%" y="549" width="0.8426%" height="15" fill="rgb(248,140,14)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="559.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.84%)</title><rect x="71.2754%" y="533" width="0.8426%" height="15" fill="rgb(253,22,42)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="543.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.84%)</title><rect x="71.2754%" y="517" width="0.8426%" height="15" fill="rgb(234,61,47)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.84%)</title><rect x="71.2754%" y="501" width="0.8426%" height="15" fill="rgb(208,226,15)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.84%)</title><rect x="71.2754%" y="485" width="0.8426%" height="15" fill="rgb(217,221,4)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (22 samples, 0.84%)</title><rect x="71.2754%" y="469" width="0.8426%" height="15" fill="rgb(212,174,34)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="479.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.84%)</title><rect x="71.2754%" y="453" width="0.8426%" height="15" fill="rgb(253,83,4)" fg:x="1861" fg:w="22"/><text x="71.3926%" y="463.50">c..</text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (7 samples, 0.27%)</title><rect x="71.8499%" y="437" width="0.2681%" height="15" fill="rgb(250,195,49)" fg:x="1876" fg:w="7"/><text x="71.9671%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (7 samples, 0.27%)</title><rect x="71.8499%" y="421" width="0.2681%" height="15" fill="rgb(241,192,25)" fg:x="1876" fg:w="7"/><text x="71.9671%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (7 samples, 0.27%)</title><rect x="71.8499%" y="405" width="0.2681%" height="15" fill="rgb(208,124,10)" fg:x="1876" fg:w="7"/><text x="71.9671%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (15 samples, 0.57%)</title><rect x="72.1180%" y="565" width="0.5745%" height="15" fill="rgb(222,33,0)" fg:x="1883" fg:w="15"/><text x="72.2351%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="72.6925%" y="453" width="0.0766%" height="15" fill="rgb(234,209,28)" fg:x="1898" fg:w="2"/><text x="72.8096%" y="463.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (42 samples, 1.61%)</title><rect x="71.2754%" y="581" width="1.6086%" height="15" fill="rgb(224,11,23)" fg:x="1861" fg:w="42"/><text x="71.3926%" y="591.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="565" width="0.1915%" height="15" fill="rgb(232,99,1)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="549" width="0.1915%" height="15" fill="rgb(237,95,45)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="533" width="0.1915%" height="15" fill="rgb(208,109,11)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="517" width="0.1915%" height="15" fill="rgb(216,190,48)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="501" width="0.1915%" height="15" fill="rgb(251,171,36)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="485" width="0.1915%" height="15" fill="rgb(230,62,22)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (5 samples, 0.19%)</title><rect x="72.6925%" y="469" width="0.1915%" height="15" fill="rgb(225,114,35)" fg:x="1898" fg:w="5"/><text x="72.8096%" y="479.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="72.7691%" y="453" width="0.1149%" height="15" fill="rgb(215,118,42)" fg:x="1900" fg:w="3"/><text x="72.8862%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.11%)</title><rect x="72.7691%" y="437" width="0.1149%" height="15" fill="rgb(243,119,21)" fg:x="1900" fg:w="3"/><text x="72.8862%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.11%)</title><rect x="72.7691%" y="421" width="0.1149%" height="15" fill="rgb(252,177,53)" fg:x="1900" fg:w="3"/><text x="72.8862%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.11%)</title><rect x="72.8840%" y="421" width="0.1149%" height="15" fill="rgb(237,209,29)" fg:x="1903" fg:w="3"/><text x="73.0011%" y="431.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.69%)</title><rect x="72.8840%" y="437" width="0.6894%" height="15" fill="rgb(212,65,23)" fg:x="1903" fg:w="18"/><text x="73.0011%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.57%)</title><rect x="72.9989%" y="421" width="0.5745%" height="15" fill="rgb(230,222,46)" fg:x="1906" fg:w="15"/><text x="73.1160%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.46%)</title><rect x="73.1137%" y="405" width="0.4596%" height="15" fill="rgb(215,135,32)" fg:x="1909" fg:w="12"/><text x="73.2309%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 3.03%)</title><rect x="70.8541%" y="629" width="3.0257%" height="15" fill="rgb(246,101,22)" fg:x="1850" fg:w="79"/><text x="70.9713%" y="639.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 3.03%)</title><rect x="70.8541%" y="613" width="3.0257%" height="15" fill="rgb(206,107,13)" fg:x="1850" fg:w="79"/><text x="70.9713%" y="623.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (78 samples, 2.99%)</title><rect x="70.8924%" y="597" width="2.9874%" height="15" fill="rgb(250,100,44)" fg:x="1851" fg:w="78"/><text x="71.0096%" y="607.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (26 samples, 1.00%)</title><rect x="72.8840%" y="581" width="0.9958%" height="15" fill="rgb(231,147,38)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="591.50">c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (26 samples, 1.00%)</title><rect x="72.8840%" y="565" width="0.9958%" height="15" fill="rgb(229,8,40)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="575.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 1.00%)</title><rect x="72.8840%" y="549" width="0.9958%" height="15" fill="rgb(221,135,30)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="559.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 1.00%)</title><rect x="72.8840%" y="533" width="0.9958%" height="15" fill="rgb(249,193,18)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="543.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 1.00%)</title><rect x="72.8840%" y="517" width="0.9958%" height="15" fill="rgb(209,133,39)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 1.00%)</title><rect x="72.8840%" y="501" width="0.9958%" height="15" fill="rgb(232,100,14)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 1.00%)</title><rect x="72.8840%" y="485" width="0.9958%" height="15" fill="rgb(224,185,1)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (26 samples, 1.00%)</title><rect x="72.8840%" y="469" width="0.9958%" height="15" fill="rgb(223,139,8)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="479.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 1.00%)</title><rect x="72.8840%" y="453" width="0.9958%" height="15" fill="rgb(232,213,38)" fg:x="1903" fg:w="26"/><text x="73.0011%" y="463.50">c..</text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (8 samples, 0.31%)</title><rect x="73.5733%" y="437" width="0.3064%" height="15" fill="rgb(207,94,22)" fg:x="1921" fg:w="8"/><text x="73.6905%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (8 samples, 0.31%)</title><rect x="73.5733%" y="421" width="0.3064%" height="15" fill="rgb(219,183,54)" fg:x="1921" fg:w="8"/><text x="73.6905%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (8 samples, 0.31%)</title><rect x="73.5733%" y="405" width="0.3064%" height="15" fill="rgb(216,185,54)" fg:x="1921" fg:w="8"/><text x="73.6905%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.15%)</title><rect x="73.8797%" y="629" width="0.1532%" height="15" fill="rgb(254,217,39)" fg:x="1929" fg:w="4"/><text x="73.9969%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.15%)</title><rect x="73.8797%" y="613" width="0.1532%" height="15" fill="rgb(240,178,23)" fg:x="1929" fg:w="4"/><text x="73.9969%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.11%)</title><rect x="74.3776%" y="565" width="0.1149%" height="15" fill="rgb(218,11,47)" fg:x="1942" fg:w="3"/><text x="74.4948%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="74.4925%" y="565" width="0.0383%" height="15" fill="rgb(218,51,51)" fg:x="1945" fg:w="1"/><text x="74.6097%" y="575.50"></text></g><g><title>__memcpy_evex_unaligned_erms (16 samples, 0.61%)</title><rect x="76.6756%" y="469" width="0.6128%" height="15" fill="rgb(238,126,27)" fg:x="2002" fg:w="16"/><text x="76.7928%" y="479.50"></text></g><g><title>_int_free (18 samples, 0.69%)</title><rect x="77.2884%" y="469" width="0.6894%" height="15" fill="rgb(249,202,22)" fg:x="2018" fg:w="18"/><text x="77.4056%" y="479.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="77.9395%" y="453" width="0.0383%" height="15" fill="rgb(254,195,49)" fg:x="2035" fg:w="1"/><text x="78.0567%" y="463.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.08%)</title><rect x="79.9311%" y="453" width="0.0766%" height="15" fill="rgb(208,123,14)" fg:x="2087" fg:w="2"/><text x="80.0482%" y="463.50"></text></g><g><title>exc_page_fault (2 samples, 0.08%)</title><rect x="79.9311%" y="437" width="0.0766%" height="15" fill="rgb(224,200,8)" fg:x="2087" fg:w="2"/><text x="80.0482%" y="447.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="79.9694%" y="421" width="0.0383%" height="15" fill="rgb(217,61,36)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="79.9694%" y="405" width="0.0383%" height="15" fill="rgb(206,35,45)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="415.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="79.9694%" y="389" width="0.0383%" height="15" fill="rgb(217,65,33)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="399.50"></text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="79.9694%" y="373" width="0.0383%" height="15" fill="rgb(222,158,48)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="383.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="79.9694%" y="357" width="0.0383%" height="15" fill="rgb(254,2,54)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="367.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.04%)</title><rect x="79.9694%" y="341" width="0.0383%" height="15" fill="rgb(250,143,38)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="351.50"></text></g><g><title>charge_memcg (1 samples, 0.04%)</title><rect x="79.9694%" y="325" width="0.0383%" height="15" fill="rgb(248,25,0)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="335.50"></text></g><g><title>__count_memcg_events (1 samples, 0.04%)</title><rect x="79.9694%" y="309" width="0.0383%" height="15" fill="rgb(206,152,27)" fg:x="2088" fg:w="1"/><text x="80.0865%" y="319.50"></text></g><g><title>checked_request2size (2 samples, 0.08%)</title><rect x="80.0077%" y="453" width="0.0766%" height="15" fill="rgb(240,77,30)" fg:x="2089" fg:w="2"/><text x="80.1248%" y="463.50"></text></g><g><title>_int_malloc (62 samples, 2.37%)</title><rect x="77.9778%" y="469" width="2.3746%" height="15" fill="rgb(231,5,3)" fg:x="2036" fg:w="62"/><text x="78.0950%" y="479.50">_int_m..</text></g><g><title>tcache_put (7 samples, 0.27%)</title><rect x="80.0843%" y="453" width="0.2681%" height="15" fill="rgb(207,226,32)" fg:x="2091" fg:w="7"/><text x="80.2014%" y="463.50"></text></g><g><title>_int_realloc (128 samples, 4.90%)</title><rect x="75.5649%" y="485" width="4.9023%" height="15" fill="rgb(222,207,47)" fg:x="1973" fg:w="128"/><text x="75.6821%" y="495.50">_int_realloc</text></g><g><title>memcpy@@GLIBC_2.14@plt (3 samples, 0.11%)</title><rect x="80.3524%" y="469" width="0.1149%" height="15" fill="rgb(229,115,45)" fg:x="2098" fg:w="3"/><text x="80.4695%" y="479.50"></text></g><g><title>arena_for_chunk (4 samples, 0.15%)</title><rect x="80.4673%" y="485" width="0.1532%" height="15" fill="rgb(224,191,6)" fg:x="2101" fg:w="4"/><text x="80.5844%" y="495.50"></text></g><g><title>__GI___libc_realloc (161 samples, 6.17%)</title><rect x="74.5308%" y="501" width="6.1662%" height="15" fill="rgb(230,227,24)" fg:x="1946" fg:w="161"/><text x="74.6480%" y="511.50">__GI___libc_realloc</text></g><g><title>checked_request2size (2 samples, 0.08%)</title><rect x="80.6205%" y="485" width="0.0766%" height="15" fill="rgb(228,80,19)" fg:x="2105" fg:w="2"/><text x="80.7376%" y="495.50"></text></g><g><title>__rdl_realloc (4 samples, 0.15%)</title><rect x="80.6971%" y="501" width="0.1532%" height="15" fill="rgb(247,229,0)" fg:x="2107" fg:w="4"/><text x="80.8142%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (168 samples, 6.43%)</title><rect x="74.5308%" y="549" width="6.4343%" height="15" fill="rgb(237,194,15)" fg:x="1946" fg:w="168"/><text x="74.6480%" y="559.50">&lt;alloc::alloc::Global..</text></g><g><title>alloc::alloc::Global::grow_impl (168 samples, 6.43%)</title><rect x="74.5308%" y="533" width="6.4343%" height="15" fill="rgb(219,203,20)" fg:x="1946" fg:w="168"/><text x="74.6480%" y="543.50">alloc::alloc::Global:..</text></g><g><title>alloc::alloc::realloc (168 samples, 6.43%)</title><rect x="74.5308%" y="517" width="6.4343%" height="15" fill="rgb(234,128,8)" fg:x="1946" fg:w="168"/><text x="74.6480%" y="527.50">alloc::alloc::realloc</text></g><g><title>__rust_realloc (3 samples, 0.11%)</title><rect x="80.8502%" y="501" width="0.1149%" height="15" fill="rgb(248,202,8)" fg:x="2111" fg:w="3"/><text x="80.9674%" y="511.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.3737517681273224634 (2 samples, 0.08%)</title><rect x="80.9651%" y="549" width="0.0766%" height="15" fill="rgb(206,104,37)" fg:x="2114" fg:w="2"/><text x="81.0823%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 samples, 6.55%)</title><rect x="74.5308%" y="565" width="6.5492%" height="15" fill="rgb(223,8,27)" fg:x="1946" fg:w="171"/><text x="74.6480%" y="575.50">alloc::raw_vec::finis..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="81.0417%" y="549" width="0.0383%" height="15" fill="rgb(216,217,28)" fg:x="2116" fg:w="1"/><text x="81.1589%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.11%)</title><rect x="81.0800%" y="565" width="0.1149%" height="15" fill="rgb(249,199,1)" fg:x="2117" fg:w="3"/><text x="81.1972%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.11%)</title><rect x="81.0800%" y="549" width="0.1149%" height="15" fill="rgb(240,85,17)" fg:x="2117" fg:w="3"/><text x="81.1972%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.11%)</title><rect x="81.1949%" y="533" width="0.1149%" height="15" fill="rgb(206,108,45)" fg:x="2120" fg:w="3"/><text x="81.3121%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (191 samples, 7.32%)</title><rect x="74.0329%" y="629" width="7.3152%" height="15" fill="rgb(245,210,41)" fg:x="1933" fg:w="191"/><text x="74.1501%" y="639.50">alloc::vec::Vec&lt;T,A&gt;::re..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (191 samples, 7.32%)</title><rect x="74.0329%" y="613" width="7.3152%" height="15" fill="rgb(206,13,37)" fg:x="1933" fg:w="191"/><text x="74.1501%" y="623.50">alloc::raw_vec::RawVec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 samples, 7.16%)</title><rect x="74.1861%" y="597" width="7.1620%" height="15" fill="rgb(250,61,18)" fg:x="1937" fg:w="187"/><text x="74.3033%" y="607.50">alloc::raw_vec::RawVec&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (187 samples, 7.16%)</title><rect x="74.1861%" y="581" width="7.1620%" height="15" fill="rgb(235,172,48)" fg:x="1937" fg:w="187"/><text x="74.3033%" y="591.50">alloc::raw_vec::RawVec&lt;..</text></g><g><title>core::cmp::max (4 samples, 0.15%)</title><rect x="81.1949%" y="565" width="0.1532%" height="15" fill="rgb(249,201,17)" fg:x="2120" fg:w="4"/><text x="81.3121%" y="575.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.15%)</title><rect x="81.1949%" y="549" width="0.1532%" height="15" fill="rgb(219,208,6)" fg:x="2120" fg:w="4"/><text x="81.3121%" y="559.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="81.3098%" y="533" width="0.0383%" height="15" fill="rgb(248,31,23)" fg:x="2123" fg:w="1"/><text x="81.4270%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (13 samples, 0.50%)</title><rect x="81.3481%" y="629" width="0.4979%" height="15" fill="rgb(245,15,42)" fg:x="2124" fg:w="13"/><text x="81.4653%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="81.8460%" y="581" width="0.0766%" height="15" fill="rgb(222,217,39)" fg:x="2137" fg:w="2"/><text x="81.9632%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.15%)</title><rect x="81.8460%" y="629" width="0.1532%" height="15" fill="rgb(210,219,27)" fg:x="2137" fg:w="4"/><text x="81.9632%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.15%)</title><rect x="81.8460%" y="613" width="0.1532%" height="15" fill="rgb(252,166,36)" fg:x="2137" fg:w="4"/><text x="81.9632%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.15%)</title><rect x="81.8460%" y="597" width="0.1532%" height="15" fill="rgb(245,132,34)" fg:x="2137" fg:w="4"/><text x="81.9632%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="581" width="0.0766%" height="15" fill="rgb(236,54,3)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="565" width="0.0766%" height="15" fill="rgb(241,173,43)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="549" width="0.0766%" height="15" fill="rgb(215,190,9)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="533" width="0.0766%" height="15" fill="rgb(242,101,16)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="517" width="0.0766%" height="15" fill="rgb(223,190,21)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="501" width="0.0766%" height="15" fill="rgb(215,228,25)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="485" width="0.0766%" height="15" fill="rgb(225,36,22)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="495.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="81.9226%" y="469" width="0.0766%" height="15" fill="rgb(251,106,46)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.08%)</title><rect x="81.9226%" y="453" width="0.0766%" height="15" fill="rgb(208,90,1)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="81.9226%" y="437" width="0.0766%" height="15" fill="rgb(243,10,4)" fg:x="2139" fg:w="2"/><text x="82.0398%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (333 samples, 12.75%)</title><rect x="69.8200%" y="661" width="12.7537%" height="15" fill="rgb(212,137,27)" fg:x="1823" fg:w="333"/><text x="69.9372%" y="671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_ex..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (323 samples, 12.37%)</title><rect x="70.2030%" y="645" width="12.3707%" height="15" fill="rgb(231,220,49)" fg:x="1833" fg:w="323"/><text x="70.3202%" y="655.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (15 samples, 0.57%)</title><rect x="81.9992%" y="629" width="0.5745%" height="15" fill="rgb(237,96,20)" fg:x="2141" fg:w="15"/><text x="82.1164%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="82.6120%" y="485" width="0.0383%" height="15" fill="rgb(239,229,30)" fg:x="2157" fg:w="1"/><text x="82.7292%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.11%)</title><rect x="82.7269%" y="437" width="0.1149%" height="15" fill="rgb(219,65,33)" fg:x="2160" fg:w="3"/><text x="82.8441%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.31%)</title><rect x="82.5737%" y="645" width="0.3064%" height="15" fill="rgb(243,134,7)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (8 samples, 0.31%)</title><rect x="82.5737%" y="629" width="0.3064%" height="15" fill="rgb(216,177,54)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="639.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (8 samples, 0.31%)</title><rect x="82.5737%" y="613" width="0.3064%" height="15" fill="rgb(211,160,20)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (8 samples, 0.31%)</title><rect x="82.5737%" y="597" width="0.3064%" height="15" fill="rgb(239,85,39)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.31%)</title><rect x="82.5737%" y="581" width="0.3064%" height="15" fill="rgb(232,125,22)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.31%)</title><rect x="82.5737%" y="565" width="0.3064%" height="15" fill="rgb(244,57,34)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.31%)</title><rect x="82.5737%" y="549" width="0.3064%" height="15" fill="rgb(214,203,32)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.31%)</title><rect x="82.5737%" y="533" width="0.3064%" height="15" fill="rgb(207,58,43)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.31%)</title><rect x="82.5737%" y="517" width="0.3064%" height="15" fill="rgb(215,193,15)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (8 samples, 0.31%)</title><rect x="82.5737%" y="501" width="0.3064%" height="15" fill="rgb(232,15,44)" fg:x="2156" fg:w="8"/><text x="82.6909%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.23%)</title><rect x="82.6503%" y="485" width="0.2298%" height="15" fill="rgb(212,3,48)" fg:x="2158" fg:w="6"/><text x="82.7675%" y="495.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.23%)</title><rect x="82.6503%" y="469" width="0.2298%" height="15" fill="rgb(218,128,7)" fg:x="2158" fg:w="6"/><text x="82.7675%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.23%)</title><rect x="82.6503%" y="453" width="0.2298%" height="15" fill="rgb(226,216,39)" fg:x="2158" fg:w="6"/><text x="82.7675%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="82.8418%" y="437" width="0.0383%" height="15" fill="rgb(243,47,51)" fg:x="2163" fg:w="1"/><text x="82.9590%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.34%)</title><rect x="82.5737%" y="661" width="0.3447%" height="15" fill="rgb(241,183,40)" fg:x="2156" fg:w="9"/><text x="82.6909%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="82.8801%" y="645" width="0.0383%" height="15" fill="rgb(231,217,32)" fg:x="2164" fg:w="1"/><text x="82.9973%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.34%)</title><rect x="82.9184%" y="661" width="0.3447%" height="15" fill="rgb(229,61,38)" fg:x="2165" fg:w="9"/><text x="83.0356%" y="671.50"></text></g><g><title>checked_request2size (5 samples, 0.19%)</title><rect x="83.6461%" y="533" width="0.1915%" height="15" fill="rgb(225,210,5)" fg:x="2184" fg:w="5"/><text x="83.7633%" y="543.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.84%)</title><rect x="83.2631%" y="549" width="0.8426%" height="15" fill="rgb(231,79,45)" fg:x="2174" fg:w="22"/><text x="83.3803%" y="559.50">_..</text></g><g><title>tcache_get (7 samples, 0.27%)</title><rect x="83.8376%" y="533" width="0.2681%" height="15" fill="rgb(224,100,7)" fg:x="2189" fg:w="7"/><text x="83.9548%" y="543.50"></text></g><g><title>__rdl_alloc (3 samples, 0.11%)</title><rect x="84.1057%" y="549" width="0.1149%" height="15" fill="rgb(241,198,18)" fg:x="2196" fg:w="3"/><text x="84.2229%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 1.00%)</title><rect x="83.2631%" y="661" width="0.9958%" height="15" fill="rgb(252,97,53)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="671.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 1.00%)</title><rect x="83.2631%" y="645" width="0.9958%" height="15" fill="rgb(220,88,7)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="655.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 1.00%)</title><rect x="83.2631%" y="629" width="0.9958%" height="15" fill="rgb(213,176,14)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="639.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (26 samples, 1.00%)</title><rect x="83.2631%" y="613" width="0.9958%" height="15" fill="rgb(246,73,7)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="623.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 1.00%)</title><rect x="83.2631%" y="597" width="0.9958%" height="15" fill="rgb(245,64,36)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="607.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 1.00%)</title><rect x="83.2631%" y="581" width="0.9958%" height="15" fill="rgb(245,80,10)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="591.50">a..</text></g><g><title>alloc::alloc::alloc (26 samples, 1.00%)</title><rect x="83.2631%" y="565" width="0.9958%" height="15" fill="rgb(232,107,50)" fg:x="2174" fg:w="26"/><text x="83.3803%" y="575.50">a..</text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="84.2206%" y="549" width="0.0383%" height="15" fill="rgb(253,3,0)" fg:x="2199" fg:w="1"/><text x="84.3378%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (388 samples, 14.86%)</title><rect x="69.4370%" y="725" width="14.8602%" height="15" fill="rgb(212,99,53)" fg:x="1813" fg:w="388"/><text x="69.5542%" y="735.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (388 samples, 14.86%)</title><rect x="69.4370%" y="709" width="14.8602%" height="15" fill="rgb(249,111,54)" fg:x="1813" fg:w="388"/><text x="69.5542%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (388 samples, 14.86%)</title><rect x="69.4370%" y="693" width="14.8602%" height="15" fill="rgb(249,55,30)" fg:x="1813" fg:w="388"/><text x="69.5542%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (385 samples, 14.75%)</title><rect x="69.5519%" y="677" width="14.7453%" height="15" fill="rgb(237,47,42)" fg:x="1816" fg:w="385"/><text x="69.6691%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_n..</text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="84.2589%" y="661" width="0.0383%" height="15" fill="rgb(211,20,18)" fg:x="2200" fg:w="1"/><text x="84.3761%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (5 samples, 0.19%)</title><rect x="84.2972%" y="725" width="0.1915%" height="15" fill="rgb(231,203,46)" fg:x="2201" fg:w="5"/><text x="84.4144%" y="735.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (5 samples, 0.19%)</title><rect x="84.2972%" y="709" width="0.1915%" height="15" fill="rgb(237,142,3)" fg:x="2201" fg:w="5"/><text x="84.4144%" y="719.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (5 samples, 0.19%)</title><rect x="84.2972%" y="693" width="0.1915%" height="15" fill="rgb(241,107,1)" fg:x="2201" fg:w="5"/><text x="84.4144%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (5 samples, 0.19%)</title><rect x="84.2972%" y="677" width="0.1915%" height="15" fill="rgb(229,83,13)" fg:x="2201" fg:w="5"/><text x="84.4144%" y="687.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (5 samples, 0.19%)</title><rect x="84.2972%" y="661" width="0.1915%" height="15" fill="rgb(241,91,40)" fg:x="2201" fg:w="5"/><text x="84.4144%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (8 samples, 0.31%)</title><rect x="84.4887%" y="725" width="0.3064%" height="15" fill="rgb(225,3,45)" fg:x="2206" fg:w="8"/><text x="84.6059%" y="735.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (8 samples, 0.31%)</title><rect x="84.4887%" y="709" width="0.3064%" height="15" fill="rgb(244,223,14)" fg:x="2206" fg:w="8"/><text x="84.6059%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (3 samples, 0.11%)</title><rect x="84.7951%" y="725" width="0.1149%" height="15" fill="rgb(224,124,37)" fg:x="2214" fg:w="3"/><text x="84.9123%" y="735.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (3 samples, 0.11%)</title><rect x="84.7951%" y="709" width="0.1149%" height="15" fill="rgb(251,171,30)" fg:x="2214" fg:w="3"/><text x="84.9123%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.38%)</title><rect x="84.9100%" y="725" width="0.3830%" height="15" fill="rgb(236,46,54)" fg:x="2217" fg:w="10"/><text x="85.0272%" y="735.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (10 samples, 0.38%)</title><rect x="84.9100%" y="709" width="0.3830%" height="15" fill="rgb(245,213,5)" fg:x="2217" fg:w="10"/><text x="85.0272%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.38%)</title><rect x="84.9100%" y="693" width="0.3830%" height="15" fill="rgb(230,144,27)" fg:x="2217" fg:w="10"/><text x="85.0272%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (10 samples, 0.38%)</title><rect x="84.9100%" y="677" width="0.3830%" height="15" fill="rgb(220,86,6)" fg:x="2217" fg:w="10"/><text x="85.0272%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (10 samples, 0.38%)</title><rect x="84.9100%" y="661" width="0.3830%" height="15" fill="rgb(240,20,13)" fg:x="2217" fg:w="10"/><text x="85.0272%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.11%)</title><rect x="85.1781%" y="645" width="0.1149%" height="15" fill="rgb(217,89,34)" fg:x="2224" fg:w="3"/><text x="85.2953%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.11%)</title><rect x="85.1781%" y="629" width="0.1149%" height="15" fill="rgb(229,13,5)" fg:x="2224" fg:w="3"/><text x="85.2953%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.11%)</title><rect x="85.1781%" y="613" width="0.1149%" height="15" fill="rgb(244,67,35)" fg:x="2224" fg:w="3"/><text x="85.2953%" y="623.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (4 samples, 0.15%)</title><rect x="85.2930%" y="693" width="0.1532%" height="15" fill="rgb(221,40,2)" fg:x="2227" fg:w="4"/><text x="85.4102%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.38%)</title><rect x="85.2930%" y="725" width="0.3830%" height="15" fill="rgb(237,157,21)" fg:x="2227" fg:w="10"/><text x="85.4102%" y="735.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (10 samples, 0.38%)</title><rect x="85.2930%" y="709" width="0.3830%" height="15" fill="rgb(222,94,11)" fg:x="2227" fg:w="10"/><text x="85.4102%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (6 samples, 0.23%)</title><rect x="85.4462%" y="693" width="0.2298%" height="15" fill="rgb(249,113,6)" fg:x="2231" fg:w="6"/><text x="85.5634%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.15%)</title><rect x="85.5228%" y="677" width="0.1532%" height="15" fill="rgb(238,137,36)" fg:x="2233" fg:w="4"/><text x="85.6400%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.15%)</title><rect x="85.5228%" y="661" width="0.1532%" height="15" fill="rgb(210,102,26)" fg:x="2233" fg:w="4"/><text x="85.6400%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.15%)</title><rect x="85.5228%" y="645" width="0.1532%" height="15" fill="rgb(218,30,30)" fg:x="2233" fg:w="4"/><text x="85.6400%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.19%)</title><rect x="88.3570%" y="613" width="0.1915%" height="15" fill="rgb(214,67,26)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.19%)</title><rect x="88.3570%" y="597" width="0.1915%" height="15" fill="rgb(251,9,53)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="607.50"></text></g><g><title>irqentry_exit (5 samples, 0.19%)</title><rect x="88.3570%" y="581" width="0.1915%" height="15" fill="rgb(228,204,25)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="591.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.19%)</title><rect x="88.3570%" y="565" width="0.1915%" height="15" fill="rgb(207,153,8)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.19%)</title><rect x="88.3570%" y="549" width="0.1915%" height="15" fill="rgb(242,9,16)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="559.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.19%)</title><rect x="88.3570%" y="533" width="0.1915%" height="15" fill="rgb(217,211,10)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="543.50"></text></g><g><title>schedule (5 samples, 0.19%)</title><rect x="88.3570%" y="517" width="0.1915%" height="15" fill="rgb(219,228,52)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="527.50"></text></g><g><title>__schedule (5 samples, 0.19%)</title><rect x="88.3570%" y="501" width="0.1915%" height="15" fill="rgb(231,92,29)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.19%)</title><rect x="88.3570%" y="485" width="0.1915%" height="15" fill="rgb(232,8,23)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.19%)</title><rect x="88.3570%" y="469" width="0.1915%" height="15" fill="rgb(216,211,34)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="479.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.19%)</title><rect x="88.3570%" y="453" width="0.1915%" height="15" fill="rgb(236,151,0)" fg:x="2307" fg:w="5"/><text x="88.4741%" y="463.50"></text></g><g><title>x86_pmu_enable (4 samples, 0.15%)</title><rect x="88.3953%" y="437" width="0.1532%" height="15" fill="rgb(209,168,3)" fg:x="2308" fg:w="4"/><text x="88.5124%" y="447.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 0.15%)</title><rect x="88.3953%" y="421" width="0.1532%" height="15" fill="rgb(208,129,28)" fg:x="2308" fg:w="4"/><text x="88.5124%" y="431.50"></text></g><g><title>native_write_msr (4 samples, 0.15%)</title><rect x="88.3953%" y="405" width="0.1532%" height="15" fill="rgb(229,78,22)" fg:x="2308" fg:w="4"/><text x="88.5124%" y="415.50"></text></g><g><title>_int_free (65 samples, 2.49%)</title><rect x="86.3654%" y="629" width="2.4895%" height="15" fill="rgb(228,187,13)" fg:x="2255" fg:w="65"/><text x="86.4826%" y="639.50">_int_fr..</text></g><g><title>tcache_put (8 samples, 0.31%)</title><rect x="88.5484%" y="613" width="0.3064%" height="15" fill="rgb(240,119,24)" fg:x="2312" fg:w="8"/><text x="88.6656%" y="623.50"></text></g><g><title>__GI___libc_free (81 samples, 3.10%)</title><rect x="85.9058%" y="645" width="3.1023%" height="15" fill="rgb(209,194,42)" fg:x="2243" fg:w="81"/><text x="86.0230%" y="655.50">__GI___li..</text></g><g><title>arena_for_chunk (4 samples, 0.15%)</title><rect x="88.8548%" y="629" width="0.1532%" height="15" fill="rgb(247,200,46)" fg:x="2320" fg:w="4"/><text x="88.9720%" y="639.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.15%)</title><rect x="89.0080%" y="645" width="0.1532%" height="15" fill="rgb(218,76,16)" fg:x="2324" fg:w="4"/><text x="89.1252%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (90 samples, 3.45%)</title><rect x="85.9058%" y="677" width="3.4470%" height="15" fill="rgb(225,21,48)" fg:x="2243" fg:w="90"/><text x="86.0230%" y="687.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::dealloc (90 samples, 3.45%)</title><rect x="85.9058%" y="661" width="3.4470%" height="15" fill="rgb(239,223,50)" fg:x="2243" fg:w="90"/><text x="86.0230%" y="671.50">alloc::all..</text></g><g><title>__rust_dealloc (5 samples, 0.19%)</title><rect x="89.1612%" y="645" width="0.1915%" height="15" fill="rgb(244,45,21)" fg:x="2328" fg:w="5"/><text x="89.2784%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (100 samples, 3.83%)</title><rect x="85.6760%" y="725" width="3.8300%" height="15" fill="rgb(232,33,43)" fg:x="2237" fg:w="100"/><text x="85.7932%" y="735.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (100 samples, 3.83%)</title><rect x="85.6760%" y="709" width="3.8300%" height="15" fill="rgb(209,8,3)" fg:x="2237" fg:w="100"/><text x="85.7932%" y="719.50">core::ptr::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 3.83%)</title><rect x="85.6760%" y="693" width="3.8300%" height="15" fill="rgb(214,25,53)" fg:x="2237" fg:w="100"/><text x="85.7932%" y="703.50">&lt;alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.15%)</title><rect x="89.3527%" y="677" width="0.1532%" height="15" fill="rgb(254,186,54)" fg:x="2333" fg:w="4"/><text x="89.4699%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.04%)</title><rect x="89.5059%" y="725" width="0.0383%" height="15" fill="rgb(208,174,49)" fg:x="2337" fg:w="1"/><text x="89.6231%" y="735.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (663 samples, 25.39%)</title><rect x="64.7645%" y="741" width="25.3926%" height="15" fill="rgb(233,191,51)" fg:x="1691" fg:w="663"/><text x="64.8816%" y="751.50">fringe_vs_astar::structures::graph::generate_neighbors</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (16 samples, 0.61%)</title><rect x="89.5442%" y="725" width="0.6128%" height="15" fill="rgb(222,134,10)" fg:x="2338" fg:w="16"/><text x="89.6614%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.11%)</title><rect x="90.0421%" y="709" width="0.1149%" height="15" fill="rgb(230,226,20)" fg:x="2351" fg:w="3"/><text x="90.1593%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.11%)</title><rect x="90.0421%" y="693" width="0.1149%" height="15" fill="rgb(251,111,25)" fg:x="2351" fg:w="3"/><text x="90.1593%" y="703.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.11%)</title><rect x="90.0421%" y="677" width="0.1149%" height="15" fill="rgb(224,40,46)" fg:x="2351" fg:w="3"/><text x="90.1593%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (17 samples, 0.65%)</title><rect x="90.1570%" y="741" width="0.6511%" height="15" fill="rgb(236,108,47)" fg:x="2354" fg:w="17"/><text x="90.2742%" y="751.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,399 samples, 53.58%)</title><rect x="37.3803%" y="757" width="53.5810%" height="15" fill="rgb(234,93,0)" fg:x="976" fg:w="1399"/><text x="37.4975%" y="767.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (4 samples, 0.15%)</title><rect x="90.8081%" y="741" width="0.1532%" height="15" fill="rgb(224,213,32)" fg:x="2371" fg:w="4"/><text x="90.9253%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.15%)</title><rect x="90.8081%" y="725" width="0.1532%" height="15" fill="rgb(251,11,48)" fg:x="2371" fg:w="4"/><text x="90.9253%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.15%)</title><rect x="90.8081%" y="709" width="0.1532%" height="15" fill="rgb(236,173,5)" fg:x="2371" fg:w="4"/><text x="90.9253%" y="719.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.15%)</title><rect x="90.8081%" y="693" width="0.1532%" height="15" fill="rgb(230,95,12)" fg:x="2371" fg:w="4"/><text x="90.9253%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,400 samples, 53.62%)</title><rect x="37.3803%" y="773" width="53.6193%" height="15" fill="rgb(232,209,1)" fg:x="976" fg:w="1400"/><text x="37.4975%" y="783.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.04%)</title><rect x="90.9613%" y="757" width="0.0383%" height="15" fill="rgb(232,6,1)" fg:x="2375" fg:w="1"/><text x="91.0785%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.50%)</title><rect x="91.1911%" y="629" width="0.4979%" height="15" fill="rgb(210,224,50)" fg:x="2381" fg:w="13"/><text x="91.3083%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.08%)</title><rect x="91.6890%" y="597" width="0.0766%" height="15" fill="rgb(228,127,35)" fg:x="2394" fg:w="2"/><text x="91.8062%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="91.6890%" y="581" width="0.0766%" height="15" fill="rgb(245,102,45)" fg:x="2394" fg:w="2"/><text x="91.8062%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.08%)</title><rect x="91.6890%" y="565" width="0.0766%" height="15" fill="rgb(214,1,49)" fg:x="2394" fg:w="2"/><text x="91.8062%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (6 samples, 0.23%)</title><rect x="91.7656%" y="597" width="0.2298%" height="15" fill="rgb(226,163,40)" fg:x="2396" fg:w="6"/><text x="91.8828%" y="607.50"></text></g><g><title>page_remove_rmap (1 samples, 0.04%)</title><rect x="91.9954%" y="149" width="0.0383%" height="15" fill="rgb(239,212,28)" fg:x="2402" fg:w="1"/><text x="92.1126%" y="159.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.04%)</title><rect x="91.9954%" y="133" width="0.0383%" height="15" fill="rgb(220,20,13)" fg:x="2402" fg:w="1"/><text x="92.1126%" y="143.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="91.9954%" y="117" width="0.0383%" height="15" fill="rgb(210,164,35)" fg:x="2402" fg:w="1"/><text x="92.1126%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.88%)</title><rect x="91.1911%" y="645" width="0.8809%" height="15" fill="rgb(248,109,41)" fg:x="2381" fg:w="23"/><text x="91.3083%" y="655.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.38%)</title><rect x="91.6890%" y="629" width="0.3830%" height="15" fill="rgb(238,23,50)" fg:x="2394" fg:w="10"/><text x="91.8062%" y="639.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (10 samples, 0.38%)</title><rect x="91.6890%" y="613" width="0.3830%" height="15" fill="rgb(211,48,49)" fg:x="2394" fg:w="10"/><text x="91.8062%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9954%" y="597" width="0.0766%" height="15" fill="rgb(223,36,21)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9954%" y="581" width="0.0766%" height="15" fill="rgb(207,123,46)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="91.9954%" y="565" width="0.0766%" height="15" fill="rgb(240,218,32)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9954%" y="549" width="0.0766%" height="15" fill="rgb(252,5,43)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="559.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="91.9954%" y="533" width="0.0766%" height="15" fill="rgb(252,84,19)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.08%)</title><rect x="91.9954%" y="517" width="0.0766%" height="15" fill="rgb(243,152,39)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="91.9954%" y="501" width="0.0766%" height="15" fill="rgb(234,160,15)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="91.9954%" y="485" width="0.0766%" height="15" fill="rgb(237,34,20)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="91.9954%" y="469" width="0.0766%" height="15" fill="rgb(229,97,13)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="479.50"></text></g><g><title>__GI___libc_free (2 samples, 0.08%)</title><rect x="91.9954%" y="453" width="0.0766%" height="15" fill="rgb(234,71,50)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="463.50"></text></g><g><title>_int_free (2 samples, 0.08%)</title><rect x="91.9954%" y="437" width="0.0766%" height="15" fill="rgb(253,155,4)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="447.50"></text></g><g><title>systrim (2 samples, 0.08%)</title><rect x="91.9954%" y="421" width="0.0766%" height="15" fill="rgb(222,185,37)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="431.50"></text></g><g><title>__glibc_morecore (2 samples, 0.08%)</title><rect x="91.9954%" y="405" width="0.0766%" height="15" fill="rgb(251,177,13)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="415.50"></text></g><g><title>__GI___sbrk (2 samples, 0.08%)</title><rect x="91.9954%" y="389" width="0.0766%" height="15" fill="rgb(250,179,40)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="399.50"></text></g><g><title>__GI___sbrk (2 samples, 0.08%)</title><rect x="91.9954%" y="373" width="0.0766%" height="15" fill="rgb(242,44,2)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="383.50"></text></g><g><title>__brk (2 samples, 0.08%)</title><rect x="91.9954%" y="357" width="0.0766%" height="15" fill="rgb(216,177,13)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="91.9954%" y="341" width="0.0766%" height="15" fill="rgb(216,106,43)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="351.50"></text></g><g><title>do_syscall_64 (2 samples, 0.08%)</title><rect x="91.9954%" y="325" width="0.0766%" height="15" fill="rgb(216,183,2)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="335.50"></text></g><g><title>x64_sys_call (2 samples, 0.08%)</title><rect x="91.9954%" y="309" width="0.0766%" height="15" fill="rgb(249,75,3)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="319.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.08%)</title><rect x="91.9954%" y="293" width="0.0766%" height="15" fill="rgb(219,67,39)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="303.50"></text></g><g><title>__do_sys_brk (2 samples, 0.08%)</title><rect x="91.9954%" y="277" width="0.0766%" height="15" fill="rgb(253,228,2)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="287.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.08%)</title><rect x="91.9954%" y="261" width="0.0766%" height="15" fill="rgb(235,138,27)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="271.50"></text></g><g><title>unmap_region (2 samples, 0.08%)</title><rect x="91.9954%" y="245" width="0.0766%" height="15" fill="rgb(236,97,51)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="255.50"></text></g><g><title>unmap_vmas (2 samples, 0.08%)</title><rect x="91.9954%" y="229" width="0.0766%" height="15" fill="rgb(240,80,30)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="239.50"></text></g><g><title>unmap_single_vma (2 samples, 0.08%)</title><rect x="91.9954%" y="213" width="0.0766%" height="15" fill="rgb(230,178,19)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="223.50"></text></g><g><title>unmap_page_range (2 samples, 0.08%)</title><rect x="91.9954%" y="197" width="0.0766%" height="15" fill="rgb(210,190,27)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="207.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.08%)</title><rect x="91.9954%" y="181" width="0.0766%" height="15" fill="rgb(222,107,31)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="191.50"></text></g><g><title>zap_pte_range (2 samples, 0.08%)</title><rect x="91.9954%" y="165" width="0.0766%" height="15" fill="rgb(216,127,34)" fg:x="2402" fg:w="2"/><text x="92.1126%" y="175.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="92.0337%" y="149" width="0.0383%" height="15" fill="rgb(234,116,52)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="159.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.04%)</title><rect x="92.0337%" y="133" width="0.0383%" height="15" fill="rgb(222,124,15)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="143.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="92.0337%" y="117" width="0.0383%" height="15" fill="rgb(231,179,28)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="127.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="92.0337%" y="101" width="0.0383%" height="15" fill="rgb(226,93,45)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="111.50"></text></g><g><title>free_unref_page_list (1 samples, 0.04%)</title><rect x="92.0337%" y="85" width="0.0383%" height="15" fill="rgb(215,8,51)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="95.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="92.0337%" y="69" width="0.0383%" height="15" fill="rgb(223,106,5)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="79.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.04%)</title><rect x="92.0337%" y="53" width="0.0383%" height="15" fill="rgb(250,191,5)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="63.50"></text></g><g><title>__free_one_page (1 samples, 0.04%)</title><rect x="92.0337%" y="37" width="0.0383%" height="15" fill="rgb(242,132,44)" fg:x="2403" fg:w="1"/><text x="92.1509%" y="47.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.04%)</title><rect x="92.2252%" y="357" width="0.0383%" height="15" fill="rgb(251,152,29)" fg:x="2408" fg:w="1"/><text x="92.3424%" y="367.50"></text></g><g><title>charge_memcg (1 samples, 0.04%)</title><rect x="92.2252%" y="341" width="0.0383%" height="15" fill="rgb(218,179,5)" fg:x="2408" fg:w="1"/><text x="92.3424%" y="351.50"></text></g><g><title>try_charge_memcg (1 samples, 0.04%)</title><rect x="92.2252%" y="325" width="0.0383%" height="15" fill="rgb(227,67,19)" fg:x="2408" fg:w="1"/><text x="92.3424%" y="335.50"></text></g><g><title>consume_stock (1 samples, 0.04%)</title><rect x="92.2252%" y="309" width="0.0383%" height="15" fill="rgb(233,119,31)" fg:x="2408" fg:w="1"/><text x="92.3424%" y="319.50"></text></g><g><title>folio_add_lru_vma (2 samples, 0.08%)</title><rect x="92.2635%" y="357" width="0.0766%" height="15" fill="rgb(241,120,22)" fg:x="2409" fg:w="2"/><text x="92.3807%" y="367.50"></text></g><g><title>folio_add_lru (2 samples, 0.08%)</title><rect x="92.2635%" y="341" width="0.0766%" height="15" fill="rgb(224,102,30)" fg:x="2409" fg:w="2"/><text x="92.3807%" y="351.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.04%)</title><rect x="92.3018%" y="325" width="0.0383%" height="15" fill="rgb(210,164,37)" fg:x="2410" fg:w="1"/><text x="92.4190%" y="335.50"></text></g><g><title>lru_add_fn (1 samples, 0.04%)</title><rect x="92.3018%" y="309" width="0.0383%" height="15" fill="rgb(226,191,16)" fg:x="2410" fg:w="1"/><text x="92.4190%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.31%)</title><rect x="92.0720%" y="645" width="0.3064%" height="15" fill="rgb(214,40,45)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.31%)</title><rect x="92.0720%" y="629" width="0.3064%" height="15" fill="rgb(244,29,26)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.31%)</title><rect x="92.0720%" y="613" width="0.3064%" height="15" fill="rgb(216,16,5)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.31%)</title><rect x="92.0720%" y="597" width="0.3064%" height="15" fill="rgb(249,76,35)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.31%)</title><rect x="92.0720%" y="581" width="0.3064%" height="15" fill="rgb(207,11,44)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.31%)</title><rect x="92.0720%" y="565" width="0.3064%" height="15" fill="rgb(228,190,49)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.31%)</title><rect x="92.0720%" y="549" width="0.3064%" height="15" fill="rgb(214,173,12)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="559.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.31%)</title><rect x="92.0720%" y="533" width="0.3064%" height="15" fill="rgb(218,26,35)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="543.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.31%)</title><rect x="92.0720%" y="517" width="0.3064%" height="15" fill="rgb(220,200,19)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="527.50"></text></g><g><title>_int_realloc (8 samples, 0.31%)</title><rect x="92.0720%" y="501" width="0.3064%" height="15" fill="rgb(239,95,49)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="511.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.31%)</title><rect x="92.0720%" y="485" width="0.3064%" height="15" fill="rgb(235,85,53)" fg:x="2404" fg:w="8"/><text x="92.1892%" y="495.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.15%)</title><rect x="92.2252%" y="469" width="0.1532%" height="15" fill="rgb(233,133,31)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="479.50"></text></g><g><title>exc_page_fault (4 samples, 0.15%)</title><rect x="92.2252%" y="453" width="0.1532%" height="15" fill="rgb(218,25,20)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="463.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.15%)</title><rect x="92.2252%" y="437" width="0.1532%" height="15" fill="rgb(252,210,38)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="447.50"></text></g><g><title>handle_mm_fault (4 samples, 0.15%)</title><rect x="92.2252%" y="421" width="0.1532%" height="15" fill="rgb(242,134,21)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="431.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.15%)</title><rect x="92.2252%" y="405" width="0.1532%" height="15" fill="rgb(213,28,48)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="415.50"></text></g><g><title>handle_pte_fault (4 samples, 0.15%)</title><rect x="92.2252%" y="389" width="0.1532%" height="15" fill="rgb(250,196,2)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="399.50"></text></g><g><title>do_anonymous_page (4 samples, 0.15%)</title><rect x="92.2252%" y="373" width="0.1532%" height="15" fill="rgb(227,5,17)" fg:x="2408" fg:w="4"/><text x="92.3424%" y="383.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.04%)</title><rect x="92.3401%" y="357" width="0.0383%" height="15" fill="rgb(221,226,24)" fg:x="2411" fg:w="1"/><text x="92.4573%" y="367.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (39 samples, 1.49%)</title><rect x="90.9996%" y="757" width="1.4937%" height="15" fill="rgb(211,5,48)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="767.50">fri..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 1.49%)</title><rect x="90.9996%" y="741" width="1.4937%" height="15" fill="rgb(219,150,6)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="751.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (39 samples, 1.49%)</title><rect x="90.9996%" y="725" width="1.4937%" height="15" fill="rgb(251,46,16)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="735.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 1.49%)</title><rect x="90.9996%" y="709" width="1.4937%" height="15" fill="rgb(220,204,40)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="719.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (39 samples, 1.49%)</title><rect x="90.9996%" y="693" width="1.4937%" height="15" fill="rgb(211,85,2)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="703.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (39 samples, 1.49%)</title><rect x="90.9996%" y="677" width="1.4937%" height="15" fill="rgb(229,17,7)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="687.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (39 samples, 1.49%)</title><rect x="90.9996%" y="661" width="1.4937%" height="15" fill="rgb(239,72,28)" fg:x="2376" fg:w="39"/><text x="91.1168%" y="671.50">all..</text></g><g><title>core::ptr::write (3 samples, 0.11%)</title><rect x="92.3784%" y="645" width="0.1149%" height="15" fill="rgb(230,47,54)" fg:x="2412" fg:w="3"/><text x="92.4956%" y="655.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="92.4550%" y="629" width="0.0383%" height="15" fill="rgb(214,50,8)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="639.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="92.4550%" y="613" width="0.0383%" height="15" fill="rgb(216,198,43)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="92.4550%" y="597" width="0.0383%" height="15" fill="rgb(234,20,35)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="607.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="92.4550%" y="581" width="0.0383%" height="15" fill="rgb(254,45,19)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="92.4550%" y="565" width="0.0383%" height="15" fill="rgb(219,14,44)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="575.50"></text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="92.4550%" y="549" width="0.0383%" height="15" fill="rgb(217,220,26)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="559.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="92.4550%" y="533" width="0.0383%" height="15" fill="rgb(213,158,28)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="543.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.04%)</title><rect x="92.4550%" y="517" width="0.0383%" height="15" fill="rgb(252,51,52)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="527.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.04%)</title><rect x="92.4550%" y="501" width="0.0383%" height="15" fill="rgb(246,89,16)" fg:x="2414" fg:w="1"/><text x="92.5722%" y="511.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.04%)</title><rect x="92.4933%" y="549" width="0.0383%" height="15" fill="rgb(216,158,49)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="559.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.04%)</title><rect x="92.4933%" y="533" width="0.0383%" height="15" fill="rgb(236,107,19)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.04%)</title><rect x="92.4933%" y="517" width="0.0383%" height="15" fill="rgb(228,185,30)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.04%)</title><rect x="92.4933%" y="501" width="0.0383%" height="15" fill="rgb(246,134,8)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="511.50"></text></g><g><title>__GI___libc_read (1 samples, 0.04%)</title><rect x="92.4933%" y="485" width="0.0383%" height="15" fill="rgb(214,143,50)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="92.4933%" y="469" width="0.0383%" height="15" fill="rgb(228,75,8)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="92.4933%" y="453" width="0.0383%" height="15" fill="rgb(207,175,4)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="463.50"></text></g><g><title>x64_sys_call (1 samples, 0.04%)</title><rect x="92.4933%" y="437" width="0.0383%" height="15" fill="rgb(205,108,24)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="447.50"></text></g><g><title>__x64_sys_read (1 samples, 0.04%)</title><rect x="92.4933%" y="421" width="0.0383%" height="15" fill="rgb(244,120,49)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="431.50"></text></g><g><title>ksys_read (1 samples, 0.04%)</title><rect x="92.4933%" y="405" width="0.0383%" height="15" fill="rgb(223,47,38)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="415.50"></text></g><g><title>vfs_read (1 samples, 0.04%)</title><rect x="92.4933%" y="389" width="0.0383%" height="15" fill="rgb(229,179,11)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="399.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.04%)</title><rect x="92.4933%" y="373" width="0.0383%" height="15" fill="rgb(231,122,1)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="383.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.04%)</title><rect x="92.4933%" y="357" width="0.0383%" height="15" fill="rgb(245,119,9)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="367.50"></text></g><g><title>filemap_read (1 samples, 0.04%)</title><rect x="92.4933%" y="341" width="0.0383%" height="15" fill="rgb(241,163,25)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="351.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="92.4933%" y="325" width="0.0383%" height="15" fill="rgb(217,214,3)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="335.50"></text></g><g><title>_copy_to_iter (1 samples, 0.04%)</title><rect x="92.4933%" y="309" width="0.0383%" height="15" fill="rgb(240,86,28)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="319.50"></text></g><g><title>copyout (1 samples, 0.04%)</title><rect x="92.4933%" y="293" width="0.0383%" height="15" fill="rgb(215,47,9)" fg:x="2415" fg:w="1"/><text x="92.6105%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="92.5316%" y="421" width="0.0383%" height="15" fill="rgb(252,25,45)" fg:x="2416" fg:w="1"/><text x="92.6488%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="92.5316%" y="405" width="0.0383%" height="15" fill="rgb(251,164,9)" fg:x="2416" fg:w="1"/><text x="92.6488%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="92.5316%" y="389" width="0.0383%" height="15" fill="rgb(233,194,0)" fg:x="2416" fg:w="1"/><text x="92.6488%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="92.5316%" y="373" width="0.0383%" height="15" fill="rgb(249,111,24)" fg:x="2416" fg:w="1"/><text x="92.6488%" y="383.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="92.5316%" y="357" width="0.0383%" height="15" fill="rgb(250,223,3)" fg:x="2416" fg:w="1"/><text x="92.6488%" y="367.50"></text></g><g><title>sync_regs (1 samples, 0.04%)</title><rect x="92.5316%" y="341" width="0.0383%" height="15" fill="rgb(236,178,37)" fg:x="2416" fg:w="1"/><text x="92.6488%" y="351.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (4 samples, 0.15%)</title><rect x="92.4933%" y="757" width="0.1532%" height="15" fill="rgb(241,158,50)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.15%)</title><rect x="92.4933%" y="741" width="0.1532%" height="15" fill="rgb(213,121,41)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.15%)</title><rect x="92.4933%" y="725" width="0.1532%" height="15" fill="rgb(240,92,3)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.15%)</title><rect x="92.4933%" y="709" width="0.1532%" height="15" fill="rgb(205,123,3)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.15%)</title><rect x="92.4933%" y="693" width="0.1532%" height="15" fill="rgb(205,97,47)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.15%)</title><rect x="92.4933%" y="677" width="0.1532%" height="15" fill="rgb(247,152,14)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.15%)</title><rect x="92.4933%" y="661" width="0.1532%" height="15" fill="rgb(248,195,53)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.15%)</title><rect x="92.4933%" y="645" width="0.1532%" height="15" fill="rgb(226,201,16)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="655.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.15%)</title><rect x="92.4933%" y="629" width="0.1532%" height="15" fill="rgb(205,98,0)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="639.50"></text></g><g><title>std::io::BufRead::read_line (4 samples, 0.15%)</title><rect x="92.4933%" y="613" width="0.1532%" height="15" fill="rgb(214,191,48)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="623.50"></text></g><g><title>std::io::append_to_string (4 samples, 0.15%)</title><rect x="92.4933%" y="597" width="0.1532%" height="15" fill="rgb(237,112,39)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="607.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (4 samples, 0.15%)</title><rect x="92.4933%" y="581" width="0.1532%" height="15" fill="rgb(247,203,27)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="591.50"></text></g><g><title>std::io::read_until (4 samples, 0.15%)</title><rect x="92.4933%" y="565" width="0.1532%" height="15" fill="rgb(235,124,28)" fg:x="2415" fg:w="4"/><text x="92.6105%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.11%)</title><rect x="92.5316%" y="549" width="0.1149%" height="15" fill="rgb(208,207,46)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.11%)</title><rect x="92.5316%" y="533" width="0.1149%" height="15" fill="rgb(234,176,4)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.11%)</title><rect x="92.5316%" y="517" width="0.1149%" height="15" fill="rgb(230,133,28)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="92.5316%" y="501" width="0.1149%" height="15" fill="rgb(211,137,40)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.11%)</title><rect x="92.5316%" y="485" width="0.1149%" height="15" fill="rgb(254,35,13)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.11%)</title><rect x="92.5316%" y="469" width="0.1149%" height="15" fill="rgb(225,49,51)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.11%)</title><rect x="92.5316%" y="453" width="0.1149%" height="15" fill="rgb(251,10,15)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.11%)</title><rect x="92.5316%" y="437" width="0.1149%" height="15" fill="rgb(228,207,15)" fg:x="2416" fg:w="3"/><text x="92.6488%" y="447.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.08%)</title><rect x="92.5699%" y="421" width="0.0766%" height="15" fill="rgb(241,99,19)" fg:x="2417" fg:w="2"/><text x="92.6871%" y="431.50"></text></g><g><title>_int_malloc (2 samples, 0.08%)</title><rect x="92.5699%" y="405" width="0.0766%" height="15" fill="rgb(207,104,49)" fg:x="2417" fg:w="2"/><text x="92.6871%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="92.6082%" y="389" width="0.0383%" height="15" fill="rgb(234,99,18)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="399.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="92.6082%" y="373" width="0.0383%" height="15" fill="rgb(213,191,49)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="92.6082%" y="357" width="0.0383%" height="15" fill="rgb(210,226,19)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="92.6082%" y="341" width="0.0383%" height="15" fill="rgb(229,97,18)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="92.6082%" y="325" width="0.0383%" height="15" fill="rgb(211,167,15)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="335.50"></text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="92.6082%" y="309" width="0.0383%" height="15" fill="rgb(210,169,34)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="319.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="92.6082%" y="293" width="0.0383%" height="15" fill="rgb(241,121,31)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="303.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.04%)</title><rect x="92.6082%" y="277" width="0.0383%" height="15" fill="rgb(232,40,11)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="287.50"></text></g><g><title>folio_add_lru (1 samples, 0.04%)</title><rect x="92.6082%" y="261" width="0.0383%" height="15" fill="rgb(205,86,26)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="271.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.04%)</title><rect x="92.6082%" y="245" width="0.0383%" height="15" fill="rgb(231,126,28)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="255.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="92.6082%" y="229" width="0.0383%" height="15" fill="rgb(219,221,18)" fg:x="2418" fg:w="1"/><text x="92.7254%" y="239.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.46%)</title><rect x="92.7231%" y="453" width="0.4596%" height="15" fill="rgb(211,40,0)" fg:x="2421" fg:w="12"/><text x="92.8403%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.46%)</title><rect x="92.7231%" y="437" width="0.4596%" height="15" fill="rgb(239,85,43)" fg:x="2421" fg:w="12"/><text x="92.8403%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.57%)</title><rect x="92.7231%" y="469" width="0.5745%" height="15" fill="rgb(231,55,21)" fg:x="2421" fg:w="15"/><text x="92.8403%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.11%)</title><rect x="93.1827%" y="453" width="0.1149%" height="15" fill="rgb(225,184,43)" fg:x="2433" fg:w="3"/><text x="93.2999%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.11%)</title><rect x="93.1827%" y="437" width="0.1149%" height="15" fill="rgb(251,158,41)" fg:x="2433" fg:w="3"/><text x="93.2999%" y="447.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (3 samples, 0.11%)</title><rect x="93.1827%" y="421" width="0.1149%" height="15" fill="rgb(234,159,37)" fg:x="2433" fg:w="3"/><text x="93.2999%" y="431.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="93.2976%" y="229" width="0.0383%" height="15" fill="rgb(216,204,22)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="239.50"></text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="93.2976%" y="213" width="0.0383%" height="15" fill="rgb(214,17,3)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="223.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="93.2976%" y="197" width="0.0383%" height="15" fill="rgb(212,111,17)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="207.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.04%)</title><rect x="93.2976%" y="181" width="0.0383%" height="15" fill="rgb(221,157,24)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="191.50"></text></g><g><title>__folio_alloc (1 samples, 0.04%)</title><rect x="93.2976%" y="165" width="0.0383%" height="15" fill="rgb(252,16,13)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="175.50"></text></g><g><title>__alloc_pages (1 samples, 0.04%)</title><rect x="93.2976%" y="149" width="0.0383%" height="15" fill="rgb(221,62,2)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="159.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="93.2976%" y="133" width="0.0383%" height="15" fill="rgb(247,87,22)" fg:x="2436" fg:w="1"/><text x="93.4148%" y="143.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.08%)</title><rect x="93.2976%" y="293" width="0.0766%" height="15" fill="rgb(215,73,9)" fg:x="2436" fg:w="2"/><text x="93.4148%" y="303.50"></text></g><g><title>exc_page_fault (2 samples, 0.08%)</title><rect x="93.2976%" y="277" width="0.0766%" height="15" fill="rgb(207,175,33)" fg:x="2436" fg:w="2"/><text x="93.4148%" y="287.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.08%)</title><rect x="93.2976%" y="261" width="0.0766%" height="15" fill="rgb(243,129,54)" fg:x="2436" fg:w="2"/><text x="93.4148%" y="271.50"></text></g><g><title>handle_mm_fault (2 samples, 0.08%)</title><rect x="93.2976%" y="245" width="0.0766%" height="15" fill="rgb(227,119,45)" fg:x="2436" fg:w="2"/><text x="93.4148%" y="255.50"></text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="93.3359%" y="229" width="0.0383%" height="15" fill="rgb(205,109,36)" fg:x="2437" fg:w="1"/><text x="93.4531%" y="239.50"></text></g><g><title>_int_malloc (3 samples, 0.11%)</title><rect x="93.2976%" y="309" width="0.1149%" height="15" fill="rgb(205,6,39)" fg:x="2436" fg:w="3"/><text x="93.4148%" y="319.50"></text></g><g><title>sync_regs (1 samples, 0.04%)</title><rect x="93.3742%" y="293" width="0.0383%" height="15" fill="rgb(221,32,16)" fg:x="2438" fg:w="1"/><text x="93.4914%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="93.4125%" y="277" width="0.0383%" height="15" fill="rgb(228,144,50)" fg:x="2439" fg:w="1"/><text x="93.5297%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="93.4125%" y="261" width="0.0383%" height="15" fill="rgb(229,201,53)" fg:x="2439" fg:w="1"/><text x="93.5297%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="93.4125%" y="245" width="0.0383%" height="15" fill="rgb(249,153,27)" fg:x="2439" fg:w="1"/><text x="93.5297%" y="255.50"></text></g><g><title>handle_pte_fault (1 samples, 0.04%)</title><rect x="93.4125%" y="229" width="0.0383%" height="15" fill="rgb(227,106,25)" fg:x="2439" fg:w="1"/><text x="93.5297%" y="239.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="93.4125%" y="213" width="0.0383%" height="15" fill="rgb(230,65,29)" fg:x="2439" fg:w="1"/><text x="93.5297%" y="223.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.04%)</title><rect x="93.4125%" y="197" width="0.0383%" height="15" fill="rgb(221,57,46)" fg:x="2439" fg:w="1"/><text x="93.5297%" y="207.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.08%)</title><rect x="93.4125%" y="309" width="0.0766%" height="15" fill="rgb(229,161,17)" fg:x="2439" fg:w="2"/><text x="93.5297%" y="319.50"></text></g><g><title>exc_page_fault (2 samples, 0.08%)</title><rect x="93.4125%" y="293" width="0.0766%" height="15" fill="rgb(222,213,11)" fg:x="2439" fg:w="2"/><text x="93.5297%" y="303.50"></text></g><g><title>irqentry_exit (1 samples, 0.04%)</title><rect x="93.4508%" y="277" width="0.0383%" height="15" fill="rgb(235,35,13)" fg:x="2440" fg:w="1"/><text x="93.5680%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.04%)</title><rect x="93.4508%" y="261" width="0.0383%" height="15" fill="rgb(233,158,34)" fg:x="2440" fg:w="1"/><text x="93.5680%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.04%)</title><rect x="93.4508%" y="245" width="0.0383%" height="15" fill="rgb(215,151,48)" fg:x="2440" fg:w="1"/><text x="93.5680%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.23%)</title><rect x="93.2976%" y="469" width="0.2298%" height="15" fill="rgb(229,84,14)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.23%)</title><rect x="93.2976%" y="453" width="0.2298%" height="15" fill="rgb(229,68,14)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.23%)</title><rect x="93.2976%" y="437" width="0.2298%" height="15" fill="rgb(243,106,26)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.23%)</title><rect x="93.2976%" y="421" width="0.2298%" height="15" fill="rgb(206,45,38)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.23%)</title><rect x="93.2976%" y="405" width="0.2298%" height="15" fill="rgb(226,6,15)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.23%)</title><rect x="93.2976%" y="389" width="0.2298%" height="15" fill="rgb(232,22,54)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.23%)</title><rect x="93.2976%" y="373" width="0.2298%" height="15" fill="rgb(229,222,32)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="383.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.23%)</title><rect x="93.2976%" y="357" width="0.2298%" height="15" fill="rgb(228,62,29)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="367.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.23%)</title><rect x="93.2976%" y="341" width="0.2298%" height="15" fill="rgb(251,103,34)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="351.50"></text></g><g><title>_int_realloc (6 samples, 0.23%)</title><rect x="93.2976%" y="325" width="0.2298%" height="15" fill="rgb(233,12,30)" fg:x="2436" fg:w="6"/><text x="93.4148%" y="335.50"></text></g><g><title>sync_regs (1 samples, 0.04%)</title><rect x="93.4891%" y="309" width="0.0383%" height="15" fill="rgb(238,52,0)" fg:x="2441" fg:w="1"/><text x="93.6063%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 1.07%)</title><rect x="92.6465%" y="741" width="1.0724%" height="15" fill="rgb(223,98,5)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 1.07%)</title><rect x="92.6465%" y="725" width="1.0724%" height="15" fill="rgb(228,75,37)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 1.07%)</title><rect x="92.6465%" y="709" width="1.0724%" height="15" fill="rgb(205,115,49)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="719.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 1.07%)</title><rect x="92.6465%" y="693" width="1.0724%" height="15" fill="rgb(250,154,43)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 1.07%)</title><rect x="92.6465%" y="677" width="1.0724%" height="15" fill="rgb(226,43,29)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="687.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (28 samples, 1.07%)</title><rect x="92.6465%" y="661" width="1.0724%" height="15" fill="rgb(249,228,39)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="671.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (28 samples, 1.07%)</title><rect x="92.6465%" y="645" width="1.0724%" height="15" fill="rgb(216,79,43)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="655.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 1.07%)</title><rect x="92.6465%" y="629" width="1.0724%" height="15" fill="rgb(228,95,12)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="639.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 1.07%)</title><rect x="92.6465%" y="613" width="1.0724%" height="15" fill="rgb(249,221,15)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="623.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (28 samples, 1.07%)</title><rect x="92.6465%" y="597" width="1.0724%" height="15" fill="rgb(233,34,13)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="607.50">c..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (28 samples, 1.07%)</title><rect x="92.6465%" y="581" width="1.0724%" height="15" fill="rgb(214,103,39)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="591.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 1.07%)</title><rect x="92.6465%" y="565" width="1.0724%" height="15" fill="rgb(251,126,39)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="575.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 1.07%)</title><rect x="92.6465%" y="549" width="1.0724%" height="15" fill="rgb(214,216,36)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="559.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 1.07%)</title><rect x="92.6465%" y="533" width="1.0724%" height="15" fill="rgb(220,221,8)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 1.07%)</title><rect x="92.6465%" y="517" width="1.0724%" height="15" fill="rgb(240,216,3)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="527.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 1.07%)</title><rect x="92.6465%" y="501" width="1.0724%" height="15" fill="rgb(232,218,17)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="511.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (28 samples, 1.07%)</title><rect x="92.6465%" y="485" width="1.0724%" height="15" fill="rgb(229,163,45)" fg:x="2419" fg:w="28"/><text x="92.7637%" y="495.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (5 samples, 0.19%)</title><rect x="93.5274%" y="469" width="0.1915%" height="15" fill="rgb(231,110,42)" fg:x="2442" fg:w="5"/><text x="93.6446%" y="479.50"></text></g><g><title>_start (2,195 samples, 84.07%)</title><rect x="9.6898%" y="933" width="84.0674%" height="15" fill="rgb(208,170,48)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="943.50">_start</text></g><g><title>__libc_start_main_impl (2,195 samples, 84.07%)</title><rect x="9.6898%" y="917" width="84.0674%" height="15" fill="rgb(239,116,25)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="927.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (2,195 samples, 84.07%)</title><rect x="9.6898%" y="901" width="84.0674%" height="15" fill="rgb(219,200,50)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="911.50">__libc_start_call_main</text></g><g><title>main (2,195 samples, 84.07%)</title><rect x="9.6898%" y="885" width="84.0674%" height="15" fill="rgb(245,200,0)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (2,195 samples, 84.07%)</title><rect x="9.6898%" y="869" width="84.0674%" height="15" fill="rgb(245,119,33)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (2,195 samples, 84.07%)</title><rect x="9.6898%" y="853" width="84.0674%" height="15" fill="rgb(231,125,12)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="863.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,195 samples, 84.07%)</title><rect x="9.6898%" y="837" width="84.0674%" height="15" fill="rgb(216,96,41)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,195 samples, 84.07%)</title><rect x="9.6898%" y="821" width="84.0674%" height="15" fill="rgb(248,43,45)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="831.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (2,195 samples, 84.07%)</title><rect x="9.6898%" y="805" width="84.0674%" height="15" fill="rgb(217,222,7)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="815.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (2,195 samples, 84.07%)</title><rect x="9.6898%" y="789" width="84.0674%" height="15" fill="rgb(233,28,6)" fg:x="253" fg:w="2195"/><text x="9.8070%" y="799.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (72 samples, 2.76%)</title><rect x="90.9996%" y="773" width="2.7576%" height="15" fill="rgb(231,218,15)" fg:x="2376" fg:w="72"/><text x="91.1168%" y="783.50">fringe_..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map (29 samples, 1.11%)</title><rect x="92.6465%" y="757" width="1.1107%" height="15" fill="rgb(226,171,48)" fg:x="2419" fg:w="29"/><text x="92.7637%" y="767.50">fr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7189%" y="741" width="0.0383%" height="15" fill="rgb(235,201,9)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.7189%" y="725" width="0.0383%" height="15" fill="rgb(217,80,15)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.04%)</title><rect x="93.7189%" y="709" width="0.0383%" height="15" fill="rgb(219,152,8)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="93.7189%" y="693" width="0.0383%" height="15" fill="rgb(243,107,38)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7189%" y="677" width="0.0383%" height="15" fill="rgb(231,17,5)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7189%" y="661" width="0.0383%" height="15" fill="rgb(209,25,54)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.7189%" y="645" width="0.0383%" height="15" fill="rgb(219,0,2)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.7189%" y="629" width="0.0383%" height="15" fill="rgb(246,9,5)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="93.7189%" y="613" width="0.0383%" height="15" fill="rgb(226,159,4)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="93.7189%" y="597" width="0.0383%" height="15" fill="rgb(219,175,34)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="93.7189%" y="581" width="0.0383%" height="15" fill="rgb(236,10,46)" fg:x="2447" fg:w="1"/><text x="93.8361%" y="591.50"></text></g><g><title>asm_exc_page_fault (120 samples, 4.60%)</title><rect x="93.7572%" y="933" width="4.5959%" height="15" fill="rgb(240,211,16)" fg:x="2448" fg:w="120"/><text x="93.8744%" y="943.50">asm_exc_page_f..</text></g><g><title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="98.3531%" y="885" width="0.0383%" height="15" fill="rgb(205,3,43)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="895.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.04%)</title><rect x="98.3531%" y="869" width="0.0383%" height="15" fill="rgb(245,7,22)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="879.50"></text></g><g><title>bprm_execve (1 samples, 0.04%)</title><rect x="98.3531%" y="853" width="0.0383%" height="15" fill="rgb(239,132,32)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="863.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.04%)</title><rect x="98.3531%" y="837" width="0.0383%" height="15" fill="rgb(228,202,34)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="847.50"></text></g><g><title>exec_binprm (1 samples, 0.04%)</title><rect x="98.3531%" y="821" width="0.0383%" height="15" fill="rgb(254,200,22)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="831.50"></text></g><g><title>search_binary_handler (1 samples, 0.04%)</title><rect x="98.3531%" y="805" width="0.0383%" height="15" fill="rgb(219,10,39)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="815.50"></text></g><g><title>load_elf_binary (1 samples, 0.04%)</title><rect x="98.3531%" y="789" width="0.0383%" height="15" fill="rgb(226,210,39)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="799.50"></text></g><g><title>setup_arg_pages (1 samples, 0.04%)</title><rect x="98.3531%" y="773" width="0.0383%" height="15" fill="rgb(208,219,16)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="783.50"></text></g><g><title>shift_arg_pages (1 samples, 0.04%)</title><rect x="98.3531%" y="757" width="0.0383%" height="15" fill="rgb(216,158,51)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="767.50"></text></g><g><title>move_page_tables (1 samples, 0.04%)</title><rect x="98.3531%" y="741" width="0.0383%" height="15" fill="rgb(233,14,44)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="751.50"></text></g><g><title>__pmd_alloc (1 samples, 0.04%)</title><rect x="98.3531%" y="725" width="0.0383%" height="15" fill="rgb(237,97,39)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="735.50"></text></g><g><title>alloc_pages (1 samples, 0.04%)</title><rect x="98.3531%" y="709" width="0.0383%" height="15" fill="rgb(218,198,43)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="719.50"></text></g><g><title>__alloc_pages (1 samples, 0.04%)</title><rect x="98.3531%" y="693" width="0.0383%" height="15" fill="rgb(231,104,20)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="703.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="98.3531%" y="677" width="0.0383%" height="15" fill="rgb(254,36,13)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="687.50"></text></g><g><title>rmqueue (1 samples, 0.04%)</title><rect x="98.3531%" y="661" width="0.0383%" height="15" fill="rgb(248,14,50)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="671.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.04%)</title><rect x="98.3531%" y="645" width="0.0383%" height="15" fill="rgb(217,107,29)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="655.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.04%)</title><rect x="98.3531%" y="629" width="0.0383%" height="15" fill="rgb(251,169,33)" fg:x="2568" fg:w="1"/><text x="98.4703%" y="639.50"></text></g><g><title>_compound_head (4 samples, 0.15%)</title><rect x="98.3914%" y="709" width="0.1532%" height="15" fill="rgb(217,108,32)" fg:x="2569" fg:w="4"/><text x="98.5086%" y="719.50"></text></g><g><title>vm_normal_page (1 samples, 0.04%)</title><rect x="98.5446%" y="709" width="0.0383%" height="15" fill="rgb(219,66,42)" fg:x="2573" fg:w="1"/><text x="98.6618%" y="719.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.08%)</title><rect x="98.7744%" y="693" width="0.0766%" height="15" fill="rgb(206,180,7)" fg:x="2579" fg:w="2"/><text x="98.8916%" y="703.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.08%)</title><rect x="99.1957%" y="645" width="0.0766%" height="15" fill="rgb(208,226,31)" fg:x="2590" fg:w="2"/><text x="99.3129%" y="655.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.04%)</title><rect x="99.2340%" y="629" width="0.0383%" height="15" fill="rgb(218,26,49)" fg:x="2591" fg:w="1"/><text x="99.3512%" y="639.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.11%)</title><rect x="99.1957%" y="661" width="0.1149%" height="15" fill="rgb(233,197,48)" fg:x="2590" fg:w="3"/><text x="99.3129%" y="671.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="99.2723%" y="645" width="0.0383%" height="15" fill="rgb(252,181,51)" fg:x="2592" fg:w="1"/><text x="99.3895%" y="655.50"></text></g><g><title>__mod_lruvec_page_state (8 samples, 0.31%)</title><rect x="99.0808%" y="677" width="0.3064%" height="15" fill="rgb(253,90,19)" fg:x="2587" fg:w="8"/><text x="99.1980%" y="687.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.08%)</title><rect x="99.3106%" y="661" width="0.0766%" height="15" fill="rgb(215,171,30)" fg:x="2593" fg:w="2"/><text x="99.4278%" y="671.50"></text></g><g><title>page_remove_rmap (15 samples, 0.57%)</title><rect x="98.8510%" y="693" width="0.5745%" height="15" fill="rgb(214,222,9)" fg:x="2581" fg:w="15"/><text x="98.9682%" y="703.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.04%)</title><rect x="99.3872%" y="677" width="0.0383%" height="15" fill="rgb(223,3,22)" fg:x="2595" fg:w="1"/><text x="99.5044%" y="687.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.08%)</title><rect x="99.4638%" y="629" width="0.0766%" height="15" fill="rgb(225,196,46)" fg:x="2597" fg:w="2"/><text x="99.5810%" y="639.50"></text></g><g><title>uncharge_folio (2 samples, 0.08%)</title><rect x="99.4638%" y="613" width="0.0766%" height="15" fill="rgb(209,110,37)" fg:x="2597" fg:w="2"/><text x="99.5810%" y="623.50"></text></g><g><title>free_unref_page_list (2 samples, 0.08%)</title><rect x="99.5404%" y="629" width="0.0766%" height="15" fill="rgb(249,89,12)" fg:x="2599" fg:w="2"/><text x="99.6576%" y="639.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.08%)</title><rect x="99.5404%" y="613" width="0.0766%" height="15" fill="rgb(226,27,33)" fg:x="2599" fg:w="2"/><text x="99.6576%" y="623.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.08%)</title><rect x="99.5404%" y="597" width="0.0766%" height="15" fill="rgb(213,82,22)" fg:x="2599" fg:w="2"/><text x="99.6576%" y="607.50"></text></g><g><title>__free_one_page (2 samples, 0.08%)</title><rect x="99.5404%" y="581" width="0.0766%" height="15" fill="rgb(248,140,0)" fg:x="2599" fg:w="2"/><text x="99.6576%" y="591.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.04%)</title><rect x="99.5787%" y="565" width="0.0383%" height="15" fill="rgb(228,106,3)" fg:x="2600" fg:w="1"/><text x="99.6959%" y="575.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.08%)</title><rect x="99.6553%" y="613" width="0.0766%" height="15" fill="rgb(209,23,37)" fg:x="2602" fg:w="2"/><text x="99.7725%" y="623.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.08%)</title><rect x="99.6553%" y="597" width="0.0766%" height="15" fill="rgb(241,93,50)" fg:x="2602" fg:w="2"/><text x="99.7725%" y="607.50"></text></g><g><title>tlb_flush_mmu (9 samples, 0.34%)</title><rect x="99.4255%" y="693" width="0.3447%" height="15" fill="rgb(253,46,43)" fg:x="2596" fg:w="9"/><text x="99.5427%" y="703.50"></text></g><g><title>tlb_batch_pages_flush (9 samples, 0.34%)</title><rect x="99.4255%" y="677" width="0.3447%" height="15" fill="rgb(226,206,43)" fg:x="2596" fg:w="9"/><text x="99.5427%" y="687.50"></text></g><g><title>free_pages_and_swap_cache (9 samples, 0.34%)</title><rect x="99.4255%" y="661" width="0.3447%" height="15" fill="rgb(217,54,7)" fg:x="2596" fg:w="9"/><text x="99.5427%" y="671.50"></text></g><g><title>release_pages (9 samples, 0.34%)</title><rect x="99.4255%" y="645" width="0.3447%" height="15" fill="rgb(223,5,52)" fg:x="2596" fg:w="9"/><text x="99.5427%" y="655.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (4 samples, 0.15%)</title><rect x="99.6170%" y="629" width="0.1532%" height="15" fill="rgb(206,52,46)" fg:x="2601" fg:w="4"/><text x="99.7342%" y="639.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="99.7319%" y="613" width="0.0383%" height="15" fill="rgb(253,136,11)" fg:x="2604" fg:w="1"/><text x="99.8491%" y="623.50"></text></g><g><title>fringe-vs-astar (2,606 samples, 99.81%)</title><rect x="0.0000%" y="949" width="99.8085%" height="15" fill="rgb(208,106,33)" fg:x="0" fg:w="2606"/><text x="0.1172%" y="959.50">fringe-vs-astar</text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 1.46%)</title><rect x="98.3531%" y="933" width="1.4554%" height="15" fill="rgb(206,54,4)" fg:x="2568" fg:w="38"/><text x="98.4703%" y="943.50">ent..</text></g><g><title>do_syscall_64 (38 samples, 1.46%)</title><rect x="98.3531%" y="917" width="1.4554%" height="15" fill="rgb(213,3,15)" fg:x="2568" fg:w="38"/><text x="98.4703%" y="927.50">do_..</text></g><g><title>x64_sys_call (38 samples, 1.46%)</title><rect x="98.3531%" y="901" width="1.4554%" height="15" fill="rgb(252,211,39)" fg:x="2568" fg:w="38"/><text x="98.4703%" y="911.50">x64..</text></g><g><title>__x64_sys_exit_group (37 samples, 1.42%)</title><rect x="98.3914%" y="885" width="1.4171%" height="15" fill="rgb(223,6,36)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="895.50">__x..</text></g><g><title>do_group_exit (37 samples, 1.42%)</title><rect x="98.3914%" y="869" width="1.4171%" height="15" fill="rgb(252,169,45)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="879.50">do_..</text></g><g><title>do_exit (37 samples, 1.42%)</title><rect x="98.3914%" y="853" width="1.4171%" height="15" fill="rgb(212,48,26)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="863.50">do_..</text></g><g><title>exit_mm (37 samples, 1.42%)</title><rect x="98.3914%" y="837" width="1.4171%" height="15" fill="rgb(251,102,48)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="847.50">exi..</text></g><g><title>mmput (37 samples, 1.42%)</title><rect x="98.3914%" y="821" width="1.4171%" height="15" fill="rgb(243,208,16)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="831.50">mmp..</text></g><g><title>__mmput (37 samples, 1.42%)</title><rect x="98.3914%" y="805" width="1.4171%" height="15" fill="rgb(219,96,24)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="815.50">__m..</text></g><g><title>exit_mmap (37 samples, 1.42%)</title><rect x="98.3914%" y="789" width="1.4171%" height="15" fill="rgb(219,33,29)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="799.50">exi..</text></g><g><title>unmap_vmas (37 samples, 1.42%)</title><rect x="98.3914%" y="773" width="1.4171%" height="15" fill="rgb(223,176,5)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="783.50">unm..</text></g><g><title>unmap_single_vma (37 samples, 1.42%)</title><rect x="98.3914%" y="757" width="1.4171%" height="15" fill="rgb(228,140,14)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="767.50">unm..</text></g><g><title>unmap_page_range (37 samples, 1.42%)</title><rect x="98.3914%" y="741" width="1.4171%" height="15" fill="rgb(217,179,31)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="751.50">unm..</text></g><g><title>zap_pmd_range.isra.0 (37 samples, 1.42%)</title><rect x="98.3914%" y="725" width="1.4171%" height="15" fill="rgb(230,9,30)" fg:x="2569" fg:w="37"/><text x="98.5086%" y="735.50">zap..</text></g><g><title>zap_pte_range (32 samples, 1.23%)</title><rect x="98.5829%" y="709" width="1.2256%" height="15" fill="rgb(230,136,20)" fg:x="2574" fg:w="32"/><text x="98.7001%" y="719.50">za..</text></g><g><title>vm_normal_page (1 samples, 0.04%)</title><rect x="99.7702%" y="693" width="0.0383%" height="15" fill="rgb(215,210,22)" fg:x="2605" fg:w="1"/><text x="99.8874%" y="703.50"></text></g><g><title>all (2,611 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(218,43,5)" fg:x="0" fg:w="2611"/><text x="0.1172%" y="975.50"></text></g><g><title>perf-exec (5 samples, 0.19%)</title><rect x="99.8085%" y="949" width="0.1915%" height="15" fill="rgb(216,11,5)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.19%)</title><rect x="99.8085%" y="933" width="0.1915%" height="15" fill="rgb(209,82,29)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="943.50"></text></g><g><title>do_syscall_64 (5 samples, 0.19%)</title><rect x="99.8085%" y="917" width="0.1915%" height="15" fill="rgb(244,115,12)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="927.50"></text></g><g><title>x64_sys_call (5 samples, 0.19%)</title><rect x="99.8085%" y="901" width="0.1915%" height="15" fill="rgb(222,82,18)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="911.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.19%)</title><rect x="99.8085%" y="885" width="0.1915%" height="15" fill="rgb(249,227,8)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="895.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.19%)</title><rect x="99.8085%" y="869" width="0.1915%" height="15" fill="rgb(253,141,45)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="879.50"></text></g><g><title>bprm_execve (5 samples, 0.19%)</title><rect x="99.8085%" y="853" width="0.1915%" height="15" fill="rgb(234,184,4)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="863.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.19%)</title><rect x="99.8085%" y="837" width="0.1915%" height="15" fill="rgb(218,194,23)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="847.50"></text></g><g><title>exec_binprm (5 samples, 0.19%)</title><rect x="99.8085%" y="821" width="0.1915%" height="15" fill="rgb(235,66,41)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="831.50"></text></g><g><title>search_binary_handler (5 samples, 0.19%)</title><rect x="99.8085%" y="805" width="0.1915%" height="15" fill="rgb(245,217,1)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="815.50"></text></g><g><title>load_elf_binary (5 samples, 0.19%)</title><rect x="99.8085%" y="789" width="0.1915%" height="15" fill="rgb(229,91,1)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="799.50"></text></g><g><title>begin_new_exec (5 samples, 0.19%)</title><rect x="99.8085%" y="773" width="0.1915%" height="15" fill="rgb(207,101,30)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="783.50"></text></g><g><title>perf_event_exec (5 samples, 0.19%)</title><rect x="99.8085%" y="757" width="0.1915%" height="15" fill="rgb(223,82,49)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="767.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.19%)</title><rect x="99.8085%" y="741" width="0.1915%" height="15" fill="rgb(218,167,17)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="751.50"></text></g><g><title>ctx_resched (5 samples, 0.19%)</title><rect x="99.8085%" y="725" width="0.1915%" height="15" fill="rgb(208,103,14)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="735.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.19%)</title><rect x="99.8085%" y="709" width="0.1915%" height="15" fill="rgb(238,20,8)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="719.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.19%)</title><rect x="99.8085%" y="693" width="0.1915%" height="15" fill="rgb(218,80,54)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="703.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.19%)</title><rect x="99.8085%" y="677" width="0.1915%" height="15" fill="rgb(240,144,17)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="687.50"></text></g><g><title>native_write_msr (5 samples, 0.19%)</title><rect x="99.8085%" y="661" width="0.1915%" height="15" fill="rgb(245,27,50)" fg:x="2606" fg:w="5"/><text x="99.9257%" y="671.50"></text></g></svg></svg>