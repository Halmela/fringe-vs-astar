<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="982" onload="init(evt)" viewBox="0 0 2560 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="965.00"> </text><svg id="frames" x="10" width="2540" total_samples="3918"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.18%)</title><rect x="0.0000%" y="901" width="0.1787%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.1172%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.18%)</title><rect x="0.0000%" y="885" width="0.1787%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.1172%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.05%)</title><rect x="0.1276%" y="869" width="0.0510%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="2"/><text x="0.2448%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.05%)</title><rect x="0.1276%" y="853" width="0.0510%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="2"/><text x="0.2448%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.05%)</title><rect x="0.1276%" y="837" width="0.0510%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.2448%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (2 samples, 0.05%)</title><rect x="0.1276%" y="821" width="0.0510%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="0.2448%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="0.1276%" y="805" width="0.0510%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="2"/><text x="0.2448%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.05%)</title><rect x="0.1276%" y="789" width="0.0510%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="0.2448%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="0.1276%" y="773" width="0.0510%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="2"/><text x="0.2448%" y="783.50"></text></g><g><title>[fringe-vs-astar] (3 samples, 0.08%)</title><rect x="0.1787%" y="885" width="0.0766%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="3"/><text x="0.2959%" y="895.50"></text></g><g><title>_int_free (3 samples, 0.08%)</title><rect x="0.1787%" y="869" width="0.0766%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="3"/><text x="0.2959%" y="879.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.03%)</title><rect x="0.2552%" y="885" width="0.0255%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="1"/><text x="0.3724%" y="895.50"></text></g><g><title>_int_free (20 samples, 0.51%)</title><rect x="0.2808%" y="885" width="0.5105%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="20"/><text x="0.3979%" y="895.50"></text></g><g><title>_int_malloc (3 samples, 0.08%)</title><rect x="0.7912%" y="885" width="0.0766%" height="15" fill="rgb(206,188,39)" fg:x="31" fg:w="3"/><text x="0.9084%" y="895.50"></text></g><g><title>[[heap]] (32 samples, 0.82%)</title><rect x="0.1787%" y="901" width="0.8167%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="32"/><text x="0.2959%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.13%)</title><rect x="0.8678%" y="885" width="0.1276%" height="15" fill="rgb(231,73,38)" fg:x="34" fg:w="5"/><text x="0.9850%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.08%)</title><rect x="0.9188%" y="869" width="0.0766%" height="15" fill="rgb(225,20,46)" fg:x="36" fg:w="3"/><text x="1.0360%" y="879.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="0.9954%" y="885" width="0.0255%" height="15" fill="rgb(210,31,41)" fg:x="39" fg:w="1"/><text x="1.1126%" y="895.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.08%)</title><rect x="1.0209%" y="885" width="0.0766%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="3"/><text x="1.1381%" y="895.50"></text></g><g><title>__rdl_realloc (5 samples, 0.13%)</title><rect x="1.0975%" y="885" width="0.1276%" height="15" fill="rgb(226,26,5)" fg:x="43" fg:w="5"/><text x="1.2147%" y="895.50"></text></g><g><title>[[stack]] (21 samples, 0.54%)</title><rect x="0.9954%" y="901" width="0.5360%" height="15" fill="rgb(249,33,26)" fg:x="39" fg:w="21"/><text x="1.1126%" y="911.50"></text></g><g><title>_int_free (12 samples, 0.31%)</title><rect x="1.2251%" y="885" width="0.3063%" height="15" fill="rgb(235,183,28)" fg:x="48" fg:w="12"/><text x="1.3423%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.33%)</title><rect x="1.5314%" y="885" width="0.3318%" height="15" fill="rgb(221,5,38)" fg:x="60" fg:w="13"/><text x="1.6486%" y="895.50"></text></g><g><title>__GI___libc_free (7 samples, 0.18%)</title><rect x="1.8632%" y="885" width="0.1787%" height="15" fill="rgb(247,18,42)" fg:x="73" fg:w="7"/><text x="1.9804%" y="895.50"></text></g><g><title>[anon] (26 samples, 0.66%)</title><rect x="1.5314%" y="901" width="0.6636%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="26"/><text x="1.6486%" y="911.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.15%)</title><rect x="2.0419%" y="885" width="0.1531%" height="15" fill="rgb(249,31,29)" fg:x="80" fg:w="6"/><text x="2.1590%" y="895.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.08%)</title><rect x="2.1950%" y="885" width="0.0766%" height="15" fill="rgb(225,111,53)" fg:x="86" fg:w="3"/><text x="2.3122%" y="895.50"></text></g><g><title>[fringe-vs-astar] (10 samples, 0.26%)</title><rect x="2.1950%" y="901" width="0.2552%" height="15" fill="rgb(238,160,17)" fg:x="86" fg:w="10"/><text x="2.3122%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.18%)</title><rect x="2.2716%" y="885" width="0.1787%" height="15" fill="rgb(214,148,48)" fg:x="89" fg:w="7"/><text x="2.3888%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.18%)</title><rect x="2.2716%" y="869" width="0.1787%" height="15" fill="rgb(232,36,49)" fg:x="89" fg:w="7"/><text x="2.3888%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.18%)</title><rect x="2.2716%" y="853" width="0.1787%" height="15" fill="rgb(209,103,24)" fg:x="89" fg:w="7"/><text x="2.3888%" y="863.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.18%)</title><rect x="2.2716%" y="837" width="0.1787%" height="15" fill="rgb(229,88,8)" fg:x="89" fg:w="7"/><text x="2.3888%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.33%)</title><rect x="2.4502%" y="885" width="0.3318%" height="15" fill="rgb(213,181,19)" fg:x="96" fg:w="13"/><text x="2.5674%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.23%)</title><rect x="2.5523%" y="869" width="0.2297%" height="15" fill="rgb(254,191,54)" fg:x="100" fg:w="9"/><text x="2.6695%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.23%)</title><rect x="2.5523%" y="853" width="0.2297%" height="15" fill="rgb(241,83,37)" fg:x="100" fg:w="9"/><text x="2.6695%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.23%)</title><rect x="2.5523%" y="837" width="0.2297%" height="15" fill="rgb(233,36,39)" fg:x="100" fg:w="9"/><text x="2.6695%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.23%)</title><rect x="2.5523%" y="821" width="0.2297%" height="15" fill="rgb(226,3,54)" fg:x="100" fg:w="9"/><text x="2.6695%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9 samples, 0.23%)</title><rect x="2.5523%" y="805" width="0.2297%" height="15" fill="rgb(245,192,40)" fg:x="100" fg:w="9"/><text x="2.6695%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.23%)</title><rect x="2.5523%" y="789" width="0.2297%" height="15" fill="rgb(238,167,29)" fg:x="100" fg:w="9"/><text x="2.6695%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.23%)</title><rect x="2.5523%" y="773" width="0.2297%" height="15" fill="rgb(232,182,51)" fg:x="100" fg:w="9"/><text x="2.6695%" y="783.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.23%)</title><rect x="2.5523%" y="757" width="0.2297%" height="15" fill="rgb(231,60,39)" fg:x="100" fg:w="9"/><text x="2.6695%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="2.7820%" y="885" width="0.0766%" height="15" fill="rgb(208,69,12)" fg:x="109" fg:w="3"/><text x="2.8992%" y="895.50"></text></g><g><title>__GI___libc_free (12 samples, 0.31%)</title><rect x="2.8586%" y="885" width="0.3063%" height="15" fill="rgb(235,93,37)" fg:x="112" fg:w="12"/><text x="2.9758%" y="895.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.28%)</title><rect x="3.1649%" y="885" width="0.2808%" height="15" fill="rgb(213,116,39)" fg:x="124" fg:w="11"/><text x="3.2821%" y="895.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.10%)</title><rect x="3.4456%" y="885" width="0.1021%" height="15" fill="rgb(222,207,29)" fg:x="135" fg:w="4"/><text x="3.5628%" y="895.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.05%)</title><rect x="3.5477%" y="885" width="0.0510%" height="15" fill="rgb(206,96,30)" fg:x="139" fg:w="2"/><text x="3.6649%" y="895.50"></text></g><g><title>__rdl_realloc (7 samples, 0.18%)</title><rect x="3.5988%" y="885" width="0.1787%" height="15" fill="rgb(218,138,4)" fg:x="141" fg:w="7"/><text x="3.7160%" y="895.50"></text></g><g><title>_int_malloc (11 samples, 0.28%)</title><rect x="3.7774%" y="885" width="0.2808%" height="15" fill="rgb(250,191,14)" fg:x="148" fg:w="11"/><text x="3.8946%" y="895.50"></text></g><g><title>_int_realloc (13 samples, 0.33%)</title><rect x="4.0582%" y="885" width="0.3318%" height="15" fill="rgb(239,60,40)" fg:x="159" fg:w="13"/><text x="4.1754%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.08%)</title><rect x="4.3900%" y="885" width="0.0766%" height="15" fill="rgb(206,27,48)" fg:x="172" fg:w="3"/><text x="4.5072%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.08%)</title><rect x="4.4666%" y="885" width="0.0766%" height="15" fill="rgb(225,35,8)" fg:x="175" fg:w="3"/><text x="4.5838%" y="895.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.03%)</title><rect x="4.5431%" y="885" width="0.0255%" height="15" fill="rgb(250,213,24)" fg:x="178" fg:w="1"/><text x="4.6603%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="4.5431%" y="869" width="0.0255%" height="15" fill="rgb(247,123,22)" fg:x="178" fg:w="1"/><text x="4.6603%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="4.5431%" y="853" width="0.0255%" height="15" fill="rgb(231,138,38)" fg:x="178" fg:w="1"/><text x="4.6603%" y="863.50"></text></g><g><title>fringe_vs_astar::context::Context::run (3 samples, 0.08%)</title><rect x="4.5687%" y="885" width="0.0766%" height="15" fill="rgb(231,145,46)" fg:x="179" fg:w="3"/><text x="4.6858%" y="895.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (3 samples, 0.08%)</title><rect x="4.5687%" y="869" width="0.0766%" height="15" fill="rgb(251,118,11)" fg:x="179" fg:w="3"/><text x="4.6858%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (3 samples, 0.08%)</title><rect x="4.5687%" y="853" width="0.0766%" height="15" fill="rgb(217,147,25)" fg:x="179" fg:w="3"/><text x="4.6858%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (3 samples, 0.08%)</title><rect x="4.5687%" y="837" width="0.0766%" height="15" fill="rgb(247,81,37)" fg:x="179" fg:w="3"/><text x="4.6858%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="4.5687%" y="821" width="0.0766%" height="15" fill="rgb(209,12,38)" fg:x="179" fg:w="3"/><text x="4.6858%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="4.5687%" y="805" width="0.0766%" height="15" fill="rgb(227,1,9)" fg:x="179" fg:w="3"/><text x="4.6858%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (3 samples, 0.08%)</title><rect x="4.5687%" y="789" width="0.0766%" height="15" fill="rgb(248,47,43)" fg:x="179" fg:w="3"/><text x="4.6858%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (3 samples, 0.08%)</title><rect x="4.5687%" y="773" width="0.0766%" height="15" fill="rgb(221,10,30)" fg:x="179" fg:w="3"/><text x="4.6858%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (3 samples, 0.08%)</title><rect x="4.5687%" y="757" width="0.0766%" height="15" fill="rgb(210,229,1)" fg:x="179" fg:w="3"/><text x="4.6858%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="4.5687%" y="741" width="0.0766%" height="15" fill="rgb(222,148,37)" fg:x="179" fg:w="3"/><text x="4.6858%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="4.5687%" y="725" width="0.0766%" height="15" fill="rgb(234,67,33)" fg:x="179" fg:w="3"/><text x="4.6858%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="4.5687%" y="709" width="0.0766%" height="15" fill="rgb(247,98,35)" fg:x="179" fg:w="3"/><text x="4.6858%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.13%)</title><rect x="4.6452%" y="853" width="0.1276%" height="15" fill="rgb(247,138,52)" fg:x="182" fg:w="5"/><text x="4.7624%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.13%)</title><rect x="4.6452%" y="837" width="0.1276%" height="15" fill="rgb(213,79,30)" fg:x="182" fg:w="5"/><text x="4.7624%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.05%)</title><rect x="4.7728%" y="853" width="0.0510%" height="15" fill="rgb(246,177,23)" fg:x="187" fg:w="2"/><text x="4.8900%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.05%)</title><rect x="4.7728%" y="837" width="0.0510%" height="15" fill="rgb(230,62,27)" fg:x="187" fg:w="2"/><text x="4.8900%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="4.7728%" y="821" width="0.0510%" height="15" fill="rgb(216,154,8)" fg:x="187" fg:w="2"/><text x="4.8900%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="4.7728%" y="805" width="0.0510%" height="15" fill="rgb(244,35,45)" fg:x="187" fg:w="2"/><text x="4.8900%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="4.7728%" y="789" width="0.0510%" height="15" fill="rgb(251,115,12)" fg:x="187" fg:w="2"/><text x="4.8900%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.20%)</title><rect x="4.8239%" y="837" width="0.2042%" height="15" fill="rgb(240,54,50)" fg:x="189" fg:w="8"/><text x="4.9411%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.20%)</title><rect x="4.8239%" y="821" width="0.2042%" height="15" fill="rgb(233,84,52)" fg:x="189" fg:w="8"/><text x="4.9411%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.20%)</title><rect x="4.8239%" y="805" width="0.2042%" height="15" fill="rgb(207,117,47)" fg:x="189" fg:w="8"/><text x="4.9411%" y="815.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.20%)</title><rect x="4.8239%" y="789" width="0.2042%" height="15" fill="rgb(249,43,39)" fg:x="189" fg:w="8"/><text x="4.9411%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="5.0281%" y="837" width="0.0255%" height="15" fill="rgb(209,38,44)" fg:x="197" fg:w="1"/><text x="5.1453%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="5.0281%" y="821" width="0.0255%" height="15" fill="rgb(236,212,23)" fg:x="197" fg:w="1"/><text x="5.1453%" y="831.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (26 samples, 0.66%)</title><rect x="4.6452%" y="885" width="0.6636%" height="15" fill="rgb(242,79,21)" fg:x="182" fg:w="26"/><text x="4.7624%" y="895.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (26 samples, 0.66%)</title><rect x="4.6452%" y="869" width="0.6636%" height="15" fill="rgb(211,96,35)" fg:x="182" fg:w="26"/><text x="4.7624%" y="879.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (19 samples, 0.48%)</title><rect x="4.8239%" y="853" width="0.4849%" height="15" fill="rgb(253,215,40)" fg:x="189" fg:w="19"/><text x="4.9411%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.26%)</title><rect x="5.0536%" y="837" width="0.2552%" height="15" fill="rgb(211,81,21)" fg:x="198" fg:w="10"/><text x="5.1708%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.26%)</title><rect x="5.0536%" y="821" width="0.2552%" height="15" fill="rgb(208,190,38)" fg:x="198" fg:w="10"/><text x="5.1708%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.26%)</title><rect x="5.0536%" y="805" width="0.2552%" height="15" fill="rgb(235,213,38)" fg:x="198" fg:w="10"/><text x="5.1708%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.26%)</title><rect x="5.0536%" y="789" width="0.2552%" height="15" fill="rgb(237,122,38)" fg:x="198" fg:w="10"/><text x="5.1708%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.26%)</title><rect x="5.0536%" y="773" width="0.2552%" height="15" fill="rgb(244,218,35)" fg:x="198" fg:w="10"/><text x="5.1708%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.03%)</title><rect x="5.3088%" y="885" width="0.0255%" height="15" fill="rgb(240,68,47)" fg:x="208" fg:w="1"/><text x="5.4260%" y="895.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="5.3088%" y="869" width="0.0255%" height="15" fill="rgb(210,16,53)" fg:x="208" fg:w="1"/><text x="5.4260%" y="879.50"></text></g><g><title>[unknown] (117 samples, 2.99%)</title><rect x="2.4502%" y="901" width="2.9862%" height="15" fill="rgb(235,124,12)" fg:x="96" fg:w="117"/><text x="2.5674%" y="911.50">[unknown]</text></g><g><title>unlink_chunk (4 samples, 0.10%)</title><rect x="5.3344%" y="885" width="0.1021%" height="15" fill="rgb(224,169,11)" fg:x="209" fg:w="4"/><text x="5.4515%" y="895.50"></text></g><g><title>_IO_wide_data_0 (2 samples, 0.05%)</title><rect x="5.4364%" y="901" width="0.0510%" height="15" fill="rgb(250,166,2)" fg:x="213" fg:w="2"/><text x="5.5536%" y="911.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="5.4364%" y="885" width="0.0510%" height="15" fill="rgb(242,216,29)" fg:x="213" fg:w="2"/><text x="5.5536%" y="895.50"></text></g><g><title>_int_free (17 samples, 0.43%)</title><rect x="5.4875%" y="901" width="0.4339%" height="15" fill="rgb(230,116,27)" fg:x="215" fg:w="17"/><text x="5.6047%" y="911.50"></text></g><g><title>free_perturb (1 samples, 0.03%)</title><rect x="9.4181%" y="533" width="0.0255%" height="15" fill="rgb(228,99,48)" fg:x="369" fg:w="1"/><text x="9.5353%" y="543.50"></text></g><g><title>malloc_consolidate (14 samples, 0.36%)</title><rect x="9.4436%" y="533" width="0.3573%" height="15" fill="rgb(253,11,6)" fg:x="370" fg:w="14"/><text x="9.5608%" y="543.50"></text></g><g><title>unlink_chunk (4 samples, 0.10%)</title><rect x="9.6988%" y="517" width="0.1021%" height="15" fill="rgb(247,143,39)" fg:x="380" fg:w="4"/><text x="9.8160%" y="527.50"></text></g><g><title>_int_free (126 samples, 3.22%)</title><rect x="6.8147%" y="549" width="3.2159%" height="15" fill="rgb(236,97,10)" fg:x="267" fg:w="126"/><text x="6.9319%" y="559.50">_int_free</text></g><g><title>unlink_chunk (9 samples, 0.23%)</title><rect x="9.8009%" y="533" width="0.2297%" height="15" fill="rgb(233,208,19)" fg:x="384" fg:w="9"/><text x="9.9181%" y="543.50"></text></g><g><title>__GI___libc_free (132 samples, 3.37%)</title><rect x="6.6871%" y="565" width="3.3691%" height="15" fill="rgb(216,164,2)" fg:x="262" fg:w="132"/><text x="6.8043%" y="575.50">__GI___lib..</text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="10.0306%" y="549" width="0.0255%" height="15" fill="rgb(220,129,5)" fg:x="393" fg:w="1"/><text x="10.1478%" y="559.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.05%)</title><rect x="10.0562%" y="565" width="0.0510%" height="15" fill="rgb(242,17,10)" fg:x="394" fg:w="2"/><text x="10.1733%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (140 samples, 3.57%)</title><rect x="6.5595%" y="581" width="3.5733%" height="15" fill="rgb(242,107,0)" fg:x="257" fg:w="140"/><text x="6.6767%" y="591.50">alloc::all..</text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="10.1072%" y="565" width="0.0255%" height="15" fill="rgb(251,28,31)" fg:x="396" fg:w="1"/><text x="10.2244%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (143 samples, 3.65%)</title><rect x="6.5595%" y="597" width="3.6498%" height="15" fill="rgb(233,223,10)" fg:x="257" fg:w="143"/><text x="6.6767%" y="607.50">&lt;alloc::all..</text></g><g><title>fringe_vs_astar::context::Context::run (3 samples, 0.08%)</title><rect x="10.1327%" y="581" width="0.0766%" height="15" fill="rgb(215,21,27)" fg:x="397" fg:w="3"/><text x="10.2499%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 4.75%)</title><rect x="5.9214%" y="677" width="4.7473%" height="15" fill="rgb(232,23,21)" fg:x="232" fg:w="186"/><text x="6.0386%" y="687.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (186 samples, 4.75%)</title><rect x="5.9214%" y="661" width="4.7473%" height="15" fill="rgb(244,5,23)" fg:x="232" fg:w="186"/><text x="6.0386%" y="671.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (186 samples, 4.75%)</title><rect x="5.9214%" y="645" width="4.7473%" height="15" fill="rgb(226,81,46)" fg:x="232" fg:w="186"/><text x="6.0386%" y="655.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (186 samples, 4.75%)</title><rect x="5.9214%" y="629" width="4.7473%" height="15" fill="rgb(247,70,30)" fg:x="232" fg:w="186"/><text x="6.0386%" y="639.50">core::ptr::drop..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 4.75%)</title><rect x="5.9214%" y="613" width="4.7473%" height="15" fill="rgb(212,68,19)" fg:x="232" fg:w="186"/><text x="6.0386%" y="623.50">&lt;alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.46%)</title><rect x="10.2093%" y="597" width="0.4594%" height="15" fill="rgb(240,187,13)" fg:x="400" fg:w="18"/><text x="10.3265%" y="607.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="10.6687%" y="453" width="0.0255%" height="15" fill="rgb(223,113,26)" fg:x="418" fg:w="1"/><text x="10.7859%" y="463.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="10.6687%" y="437" width="0.0255%" height="15" fill="rgb(206,192,2)" fg:x="418" fg:w="1"/><text x="10.7859%" y="447.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="10.6687%" y="421" width="0.0255%" height="15" fill="rgb(241,108,4)" fg:x="418" fg:w="1"/><text x="10.7859%" y="431.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="10.6687%" y="405" width="0.0255%" height="15" fill="rgb(247,173,49)" fg:x="418" fg:w="1"/><text x="10.7859%" y="415.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="10.6687%" y="389" width="0.0255%" height="15" fill="rgb(224,114,35)" fg:x="418" fg:w="1"/><text x="10.7859%" y="399.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="10.6687%" y="373" width="0.0255%" height="15" fill="rgb(245,159,27)" fg:x="418" fg:w="1"/><text x="10.7859%" y="383.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="10.6687%" y="357" width="0.0255%" height="15" fill="rgb(245,172,44)" fg:x="418" fg:w="1"/><text x="10.7859%" y="367.50"></text></g><g><title>__free_one_page (1 samples, 0.03%)</title><rect x="10.6687%" y="341" width="0.0255%" height="15" fill="rgb(236,23,11)" fg:x="418" fg:w="1"/><text x="10.7859%" y="351.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.03%)</title><rect x="10.6942%" y="389" width="0.0255%" height="15" fill="rgb(205,117,38)" fg:x="419" fg:w="1"/><text x="10.8114%" y="399.50"></text></g><g><title>_compound_head (7 samples, 0.18%)</title><rect x="10.7198%" y="389" width="0.1787%" height="15" fill="rgb(237,72,25)" fg:x="420" fg:w="7"/><text x="10.8369%" y="399.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="10.9750%" y="309" width="0.0255%" height="15" fill="rgb(244,70,9)" fg:x="430" fg:w="1"/><text x="11.0922%" y="319.50"></text></g><g><title>free_unref_page_commit (5 samples, 0.13%)</title><rect x="11.0771%" y="293" width="0.1276%" height="15" fill="rgb(217,125,39)" fg:x="434" fg:w="5"/><text x="11.1943%" y="303.50"></text></g><g><title>free_pcppages_bulk (4 samples, 0.10%)</title><rect x="11.1026%" y="277" width="0.1021%" height="15" fill="rgb(235,36,10)" fg:x="435" fg:w="4"/><text x="11.2198%" y="287.50"></text></g><g><title>__free_one_page (4 samples, 0.10%)</title><rect x="11.1026%" y="261" width="0.1021%" height="15" fill="rgb(251,123,47)" fg:x="435" fg:w="4"/><text x="11.2198%" y="271.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="11.1792%" y="245" width="0.0255%" height="15" fill="rgb(221,13,13)" fg:x="438" fg:w="1"/><text x="11.2964%" y="255.50"></text></g><g><title>free_unref_page_list (9 samples, 0.23%)</title><rect x="11.0005%" y="309" width="0.2297%" height="15" fill="rgb(238,131,9)" fg:x="431" fg:w="9"/><text x="11.1177%" y="319.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="11.2047%" y="293" width="0.0255%" height="15" fill="rgb(211,50,8)" fg:x="439" fg:w="1"/><text x="11.3219%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (18 samples, 0.46%)</title><rect x="10.9239%" y="341" width="0.4594%" height="15" fill="rgb(245,182,24)" fg:x="428" fg:w="18"/><text x="11.0411%" y="351.50"></text></g><g><title>release_pages (18 samples, 0.46%)</title><rect x="10.9239%" y="325" width="0.4594%" height="15" fill="rgb(242,14,37)" fg:x="428" fg:w="18"/><text x="11.0411%" y="335.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.15%)</title><rect x="11.2302%" y="309" width="0.1531%" height="15" fill="rgb(246,228,12)" fg:x="440" fg:w="6"/><text x="11.3474%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="11.3578%" y="293" width="0.0255%" height="15" fill="rgb(213,55,15)" fg:x="445" fg:w="1"/><text x="11.4750%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="11.3578%" y="277" width="0.0255%" height="15" fill="rgb(209,9,3)" fg:x="445" fg:w="1"/><text x="11.4750%" y="287.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="11.3578%" y="261" width="0.0255%" height="15" fill="rgb(230,59,30)" fg:x="445" fg:w="1"/><text x="11.4750%" y="271.50"></text></g><g><title>tlb_flush_mmu (19 samples, 0.48%)</title><rect x="10.9239%" y="373" width="0.4849%" height="15" fill="rgb(209,121,21)" fg:x="428" fg:w="19"/><text x="11.0411%" y="383.50"></text></g><g><title>tlb_batch_pages_flush (19 samples, 0.48%)</title><rect x="10.9239%" y="357" width="0.4849%" height="15" fill="rgb(220,109,13)" fg:x="428" fg:w="19"/><text x="11.0411%" y="367.50"></text></g><g><title>free_swap_cache (1 samples, 0.03%)</title><rect x="11.3834%" y="341" width="0.0255%" height="15" fill="rgb(232,18,1)" fg:x="446" fg:w="1"/><text x="11.5005%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (216 samples, 5.51%)</title><rect x="5.9214%" y="709" width="5.5130%" height="15" fill="rgb(215,41,42)" fg:x="232" fg:w="216"/><text x="6.0386%" y="719.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (216 samples, 5.51%)</title><rect x="5.9214%" y="693" width="5.5130%" height="15" fill="rgb(224,123,36)" fg:x="232" fg:w="216"/><text x="6.0386%" y="703.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (30 samples, 0.77%)</title><rect x="10.6687%" y="677" width="0.7657%" height="15" fill="rgb(240,125,3)" fg:x="418" fg:w="30"/><text x="10.7859%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.77%)</title><rect x="10.6687%" y="661" width="0.7657%" height="15" fill="rgb(205,98,50)" fg:x="418" fg:w="30"/><text x="10.7859%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.77%)</title><rect x="10.6687%" y="645" width="0.7657%" height="15" fill="rgb(205,185,37)" fg:x="418" fg:w="30"/><text x="10.7859%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.77%)</title><rect x="10.6687%" y="629" width="0.7657%" height="15" fill="rgb(238,207,15)" fg:x="418" fg:w="30"/><text x="10.7859%" y="639.50"></text></g><g><title>__GI___libc_free (30 samples, 0.77%)</title><rect x="10.6687%" y="613" width="0.7657%" height="15" fill="rgb(213,199,42)" fg:x="418" fg:w="30"/><text x="10.7859%" y="623.50"></text></g><g><title>__GI___munmap (30 samples, 0.77%)</title><rect x="10.6687%" y="597" width="0.7657%" height="15" fill="rgb(235,201,11)" fg:x="418" fg:w="30"/><text x="10.7859%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.77%)</title><rect x="10.6687%" y="581" width="0.7657%" height="15" fill="rgb(207,46,11)" fg:x="418" fg:w="30"/><text x="10.7859%" y="591.50"></text></g><g><title>do_syscall_64 (30 samples, 0.77%)</title><rect x="10.6687%" y="565" width="0.7657%" height="15" fill="rgb(241,35,35)" fg:x="418" fg:w="30"/><text x="10.7859%" y="575.50"></text></g><g><title>x64_sys_call (30 samples, 0.77%)</title><rect x="10.6687%" y="549" width="0.7657%" height="15" fill="rgb(243,32,47)" fg:x="418" fg:w="30"/><text x="10.7859%" y="559.50"></text></g><g><title>__x64_sys_munmap (30 samples, 0.77%)</title><rect x="10.6687%" y="533" width="0.7657%" height="15" fill="rgb(247,202,23)" fg:x="418" fg:w="30"/><text x="10.7859%" y="543.50"></text></g><g><title>__vm_munmap (30 samples, 0.77%)</title><rect x="10.6687%" y="517" width="0.7657%" height="15" fill="rgb(219,102,11)" fg:x="418" fg:w="30"/><text x="10.7859%" y="527.50"></text></g><g><title>do_vmi_munmap (30 samples, 0.77%)</title><rect x="10.6687%" y="501" width="0.7657%" height="15" fill="rgb(243,110,44)" fg:x="418" fg:w="30"/><text x="10.7859%" y="511.50"></text></g><g><title>do_vmi_align_munmap (30 samples, 0.77%)</title><rect x="10.6687%" y="485" width="0.7657%" height="15" fill="rgb(222,74,54)" fg:x="418" fg:w="30"/><text x="10.7859%" y="495.50"></text></g><g><title>unmap_region (30 samples, 0.77%)</title><rect x="10.6687%" y="469" width="0.7657%" height="15" fill="rgb(216,99,12)" fg:x="418" fg:w="30"/><text x="10.7859%" y="479.50"></text></g><g><title>unmap_vmas (29 samples, 0.74%)</title><rect x="10.6942%" y="453" width="0.7402%" height="15" fill="rgb(226,22,26)" fg:x="419" fg:w="29"/><text x="10.8114%" y="463.50"></text></g><g><title>unmap_single_vma (29 samples, 0.74%)</title><rect x="10.6942%" y="437" width="0.7402%" height="15" fill="rgb(217,163,10)" fg:x="419" fg:w="29"/><text x="10.8114%" y="447.50"></text></g><g><title>unmap_page_range (29 samples, 0.74%)</title><rect x="10.6942%" y="421" width="0.7402%" height="15" fill="rgb(213,25,53)" fg:x="419" fg:w="29"/><text x="10.8114%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (29 samples, 0.74%)</title><rect x="10.6942%" y="405" width="0.7402%" height="15" fill="rgb(252,105,26)" fg:x="419" fg:w="29"/><text x="10.8114%" y="415.50"></text></g><g><title>zap_pte_range (21 samples, 0.54%)</title><rect x="10.8984%" y="389" width="0.5360%" height="15" fill="rgb(220,39,43)" fg:x="427" fg:w="21"/><text x="11.0156%" y="399.50"></text></g><g><title>vm_normal_page (1 samples, 0.03%)</title><rect x="11.4089%" y="373" width="0.0255%" height="15" fill="rgb(229,68,48)" fg:x="447" fg:w="1"/><text x="11.5261%" y="383.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="11.4344%" y="453" width="0.0255%" height="15" fill="rgb(252,8,32)" fg:x="448" fg:w="1"/><text x="11.5516%" y="463.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="11.4344%" y="437" width="0.0255%" height="15" fill="rgb(223,20,43)" fg:x="448" fg:w="1"/><text x="11.5516%" y="447.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="11.4344%" y="421" width="0.0255%" height="15" fill="rgb(229,81,49)" fg:x="448" fg:w="1"/><text x="11.5516%" y="431.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="11.4344%" y="405" width="0.0255%" height="15" fill="rgb(236,28,36)" fg:x="448" fg:w="1"/><text x="11.5516%" y="415.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.03%)</title><rect x="11.4344%" y="389" width="0.0255%" height="15" fill="rgb(249,185,26)" fg:x="448" fg:w="1"/><text x="11.5516%" y="399.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="11.4344%" y="373" width="0.0255%" height="15" fill="rgb(249,174,33)" fg:x="448" fg:w="1"/><text x="11.5516%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (218 samples, 5.56%)</title><rect x="5.9214%" y="725" width="5.5641%" height="15" fill="rgb(233,201,37)" fg:x="232" fg:w="218"/><text x="6.0386%" y="735.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::ArrayMap&gt; (2 samples, 0.05%)</title><rect x="11.4344%" y="709" width="0.0510%" height="15" fill="rgb(221,78,26)" fg:x="448" fg:w="2"/><text x="11.5516%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.05%)</title><rect x="11.4344%" y="693" width="0.0510%" height="15" fill="rgb(250,127,30)" fg:x="448" fg:w="2"/><text x="11.5516%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.05%)</title><rect x="11.4344%" y="677" width="0.0510%" height="15" fill="rgb(230,49,44)" fg:x="448" fg:w="2"/><text x="11.5516%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="11.4344%" y="661" width="0.0510%" height="15" fill="rgb(229,67,23)" fg:x="448" fg:w="2"/><text x="11.5516%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="11.4344%" y="645" width="0.0510%" height="15" fill="rgb(249,83,47)" fg:x="448" fg:w="2"/><text x="11.5516%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="11.4344%" y="629" width="0.0510%" height="15" fill="rgb(215,43,3)" fg:x="448" fg:w="2"/><text x="11.5516%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="11.4344%" y="613" width="0.0510%" height="15" fill="rgb(238,154,13)" fg:x="448" fg:w="2"/><text x="11.5516%" y="623.50"></text></g><g><title>__GI___munmap (2 samples, 0.05%)</title><rect x="11.4344%" y="597" width="0.0510%" height="15" fill="rgb(219,56,2)" fg:x="448" fg:w="2"/><text x="11.5516%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="11.4344%" y="581" width="0.0510%" height="15" fill="rgb(233,0,4)" fg:x="448" fg:w="2"/><text x="11.5516%" y="591.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="11.4344%" y="565" width="0.0510%" height="15" fill="rgb(235,30,7)" fg:x="448" fg:w="2"/><text x="11.5516%" y="575.50"></text></g><g><title>x64_sys_call (2 samples, 0.05%)</title><rect x="11.4344%" y="549" width="0.0510%" height="15" fill="rgb(250,79,13)" fg:x="448" fg:w="2"/><text x="11.5516%" y="559.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.05%)</title><rect x="11.4344%" y="533" width="0.0510%" height="15" fill="rgb(211,146,34)" fg:x="448" fg:w="2"/><text x="11.5516%" y="543.50"></text></g><g><title>__vm_munmap (2 samples, 0.05%)</title><rect x="11.4344%" y="517" width="0.0510%" height="15" fill="rgb(228,22,38)" fg:x="448" fg:w="2"/><text x="11.5516%" y="527.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.05%)</title><rect x="11.4344%" y="501" width="0.0510%" height="15" fill="rgb(235,168,5)" fg:x="448" fg:w="2"/><text x="11.5516%" y="511.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.05%)</title><rect x="11.4344%" y="485" width="0.0510%" height="15" fill="rgb(221,155,16)" fg:x="448" fg:w="2"/><text x="11.5516%" y="495.50"></text></g><g><title>unmap_region (2 samples, 0.05%)</title><rect x="11.4344%" y="469" width="0.0510%" height="15" fill="rgb(215,215,53)" fg:x="448" fg:w="2"/><text x="11.5516%" y="479.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="11.4599%" y="453" width="0.0255%" height="15" fill="rgb(223,4,10)" fg:x="449" fg:w="1"/><text x="11.5771%" y="463.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="11.4599%" y="437" width="0.0255%" height="15" fill="rgb(234,103,6)" fg:x="449" fg:w="1"/><text x="11.5771%" y="447.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="11.4599%" y="421" width="0.0255%" height="15" fill="rgb(227,97,0)" fg:x="449" fg:w="1"/><text x="11.5771%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.03%)</title><rect x="11.4599%" y="405" width="0.0255%" height="15" fill="rgb(234,150,53)" fg:x="449" fg:w="1"/><text x="11.5771%" y="415.50"></text></g><g><title>zap_pte_range (1 samples, 0.03%)</title><rect x="11.4599%" y="389" width="0.0255%" height="15" fill="rgb(228,201,54)" fg:x="449" fg:w="1"/><text x="11.5771%" y="399.50"></text></g><g><title>page_remove_rmap (1 samples, 0.03%)</title><rect x="11.4599%" y="373" width="0.0255%" height="15" fill="rgb(222,22,37)" fg:x="449" fg:w="1"/><text x="11.5771%" y="383.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.03%)</title><rect x="11.4855%" y="517" width="0.0255%" height="15" fill="rgb(237,53,32)" fg:x="450" fg:w="1"/><text x="11.6026%" y="527.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="12.7106%" y="501" width="0.0255%" height="15" fill="rgb(233,25,53)" fg:x="498" fg:w="1"/><text x="12.8278%" y="511.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="12.7361%" y="501" width="0.0255%" height="15" fill="rgb(210,40,34)" fg:x="499" fg:w="1"/><text x="12.8533%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="12.7361%" y="485" width="0.0255%" height="15" fill="rgb(241,220,44)" fg:x="499" fg:w="1"/><text x="12.8533%" y="495.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="12.7361%" y="469" width="0.0255%" height="15" fill="rgb(235,28,35)" fg:x="499" fg:w="1"/><text x="12.8533%" y="479.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="12.7361%" y="453" width="0.0255%" height="15" fill="rgb(210,56,17)" fg:x="499" fg:w="1"/><text x="12.8533%" y="463.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="12.7361%" y="437" width="0.0255%" height="15" fill="rgb(224,130,29)" fg:x="499" fg:w="1"/><text x="12.8533%" y="447.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="12.7361%" y="421" width="0.0255%" height="15" fill="rgb(235,212,8)" fg:x="499" fg:w="1"/><text x="12.8533%" y="431.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="12.7361%" y="405" width="0.0255%" height="15" fill="rgb(223,33,50)" fg:x="499" fg:w="1"/><text x="12.8533%" y="415.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="12.7361%" y="389" width="0.0255%" height="15" fill="rgb(219,149,13)" fg:x="499" fg:w="1"/><text x="12.8533%" y="399.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="12.7361%" y="373" width="0.0255%" height="15" fill="rgb(250,156,29)" fg:x="499" fg:w="1"/><text x="12.8533%" y="383.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="12.7361%" y="357" width="0.0255%" height="15" fill="rgb(216,193,19)" fg:x="499" fg:w="1"/><text x="12.8533%" y="367.50"></text></g><g><title>acpi_ec_gpe_handler (1 samples, 0.03%)</title><rect x="12.7361%" y="341" width="0.0255%" height="15" fill="rgb(216,135,14)" fg:x="499" fg:w="1"/><text x="12.8533%" y="351.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (1 samples, 0.03%)</title><rect x="12.7361%" y="325" width="0.0255%" height="15" fill="rgb(241,47,5)" fg:x="499" fg:w="1"/><text x="12.8533%" y="335.50"></text></g><g><title>advance_transaction (1 samples, 0.03%)</title><rect x="12.7361%" y="309" width="0.0255%" height="15" fill="rgb(233,42,35)" fg:x="499" fg:w="1"/><text x="12.8533%" y="319.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="12.8127%" y="453" width="0.0255%" height="15" fill="rgb(231,13,6)" fg:x="502" fg:w="1"/><text x="12.9298%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="12.8382%" y="453" width="0.0255%" height="15" fill="rgb(207,181,40)" fg:x="503" fg:w="1"/><text x="12.9554%" y="463.50"></text></g><g><title>acpi_ec_gpe_handler (2 samples, 0.05%)</title><rect x="12.8637%" y="293" width="0.0510%" height="15" fill="rgb(254,173,49)" fg:x="504" fg:w="2"/><text x="12.9809%" y="303.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (2 samples, 0.05%)</title><rect x="12.8637%" y="277" width="0.0510%" height="15" fill="rgb(221,1,38)" fg:x="504" fg:w="2"/><text x="12.9809%" y="287.50"></text></g><g><title>advance_transaction (2 samples, 0.05%)</title><rect x="12.8637%" y="261" width="0.0510%" height="15" fill="rgb(206,124,46)" fg:x="504" fg:w="2"/><text x="12.9809%" y="271.50"></text></g><g><title>asm_common_interrupt (4 samples, 0.10%)</title><rect x="12.8637%" y="453" width="0.1021%" height="15" fill="rgb(249,21,11)" fg:x="504" fg:w="4"/><text x="12.9809%" y="463.50"></text></g><g><title>common_interrupt (4 samples, 0.10%)</title><rect x="12.8637%" y="437" width="0.1021%" height="15" fill="rgb(222,201,40)" fg:x="504" fg:w="4"/><text x="12.9809%" y="447.50"></text></g><g><title>__common_interrupt (4 samples, 0.10%)</title><rect x="12.8637%" y="421" width="0.1021%" height="15" fill="rgb(235,61,29)" fg:x="504" fg:w="4"/><text x="12.9809%" y="431.50"></text></g><g><title>handle_fasteoi_irq (4 samples, 0.10%)</title><rect x="12.8637%" y="405" width="0.1021%" height="15" fill="rgb(219,207,3)" fg:x="504" fg:w="4"/><text x="12.9809%" y="415.50"></text></g><g><title>handle_irq_event (4 samples, 0.10%)</title><rect x="12.8637%" y="389" width="0.1021%" height="15" fill="rgb(222,56,46)" fg:x="504" fg:w="4"/><text x="12.9809%" y="399.50"></text></g><g><title>__handle_irq_event_percpu (4 samples, 0.10%)</title><rect x="12.8637%" y="373" width="0.1021%" height="15" fill="rgb(239,76,54)" fg:x="504" fg:w="4"/><text x="12.9809%" y="383.50"></text></g><g><title>acpi_irq (4 samples, 0.10%)</title><rect x="12.8637%" y="357" width="0.1021%" height="15" fill="rgb(231,124,27)" fg:x="504" fg:w="4"/><text x="12.9809%" y="367.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (4 samples, 0.10%)</title><rect x="12.8637%" y="341" width="0.1021%" height="15" fill="rgb(249,195,6)" fg:x="504" fg:w="4"/><text x="12.9809%" y="351.50"></text></g><g><title>acpi_ev_gpe_detect (4 samples, 0.10%)</title><rect x="12.8637%" y="325" width="0.1021%" height="15" fill="rgb(237,174,47)" fg:x="504" fg:w="4"/><text x="12.9809%" y="335.50"></text></g><g><title>acpi_ev_detect_gpe (4 samples, 0.10%)</title><rect x="12.8637%" y="309" width="0.1021%" height="15" fill="rgb(206,201,31)" fg:x="504" fg:w="4"/><text x="12.9809%" y="319.50"></text></g><g><title>acpi_hw_gpe_read (2 samples, 0.05%)</title><rect x="12.9148%" y="293" width="0.0510%" height="15" fill="rgb(231,57,52)" fg:x="506" fg:w="2"/><text x="13.0319%" y="303.50"></text></g><g><title>acpi_os_read_port (2 samples, 0.05%)</title><rect x="12.9148%" y="277" width="0.0510%" height="15" fill="rgb(248,177,22)" fg:x="506" fg:w="2"/><text x="13.0319%" y="287.50"></text></g><g><title>down_read_trylock (2 samples, 0.05%)</title><rect x="12.9658%" y="453" width="0.0510%" height="15" fill="rgb(215,211,37)" fg:x="508" fg:w="2"/><text x="13.0830%" y="463.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.08%)</title><rect x="13.2210%" y="421" width="0.0766%" height="15" fill="rgb(241,128,51)" fg:x="518" fg:w="3"/><text x="13.3382%" y="431.50"></text></g><g><title>common_interrupt (3 samples, 0.08%)</title><rect x="13.2210%" y="405" width="0.0766%" height="15" fill="rgb(227,165,31)" fg:x="518" fg:w="3"/><text x="13.3382%" y="415.50"></text></g><g><title>__common_interrupt (3 samples, 0.08%)</title><rect x="13.2210%" y="389" width="0.0766%" height="15" fill="rgb(228,167,24)" fg:x="518" fg:w="3"/><text x="13.3382%" y="399.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.08%)</title><rect x="13.2210%" y="373" width="0.0766%" height="15" fill="rgb(228,143,12)" fg:x="518" fg:w="3"/><text x="13.3382%" y="383.50"></text></g><g><title>handle_irq_event (3 samples, 0.08%)</title><rect x="13.2210%" y="357" width="0.0766%" height="15" fill="rgb(249,149,8)" fg:x="518" fg:w="3"/><text x="13.3382%" y="367.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.08%)</title><rect x="13.2210%" y="341" width="0.0766%" height="15" fill="rgb(243,35,44)" fg:x="518" fg:w="3"/><text x="13.3382%" y="351.50"></text></g><g><title>acpi_irq (3 samples, 0.08%)</title><rect x="13.2210%" y="325" width="0.0766%" height="15" fill="rgb(246,89,9)" fg:x="518" fg:w="3"/><text x="13.3382%" y="335.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (3 samples, 0.08%)</title><rect x="13.2210%" y="309" width="0.0766%" height="15" fill="rgb(233,213,13)" fg:x="518" fg:w="3"/><text x="13.3382%" y="319.50"></text></g><g><title>acpi_ev_gpe_detect (3 samples, 0.08%)</title><rect x="13.2210%" y="293" width="0.0766%" height="15" fill="rgb(233,141,41)" fg:x="518" fg:w="3"/><text x="13.3382%" y="303.50"></text></g><g><title>acpi_ev_detect_gpe (3 samples, 0.08%)</title><rect x="13.2210%" y="277" width="0.0766%" height="15" fill="rgb(239,167,4)" fg:x="518" fg:w="3"/><text x="13.3382%" y="287.50"></text></g><g><title>acpi_hw_gpe_read (3 samples, 0.08%)</title><rect x="13.2210%" y="261" width="0.0766%" height="15" fill="rgb(209,217,16)" fg:x="518" fg:w="3"/><text x="13.3382%" y="271.50"></text></g><g><title>acpi_os_read_port (3 samples, 0.08%)</title><rect x="13.2210%" y="245" width="0.0766%" height="15" fill="rgb(219,88,35)" fg:x="518" fg:w="3"/><text x="13.3382%" y="255.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="13.2976%" y="421" width="0.0255%" height="15" fill="rgb(220,193,23)" fg:x="521" fg:w="1"/><text x="13.4148%" y="431.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="13.3231%" y="405" width="0.0255%" height="15" fill="rgb(230,90,52)" fg:x="522" fg:w="1"/><text x="13.4403%" y="415.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="13.3486%" y="405" width="0.0255%" height="15" fill="rgb(252,106,19)" fg:x="523" fg:w="1"/><text x="13.4658%" y="415.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="13.4252%" y="389" width="0.0255%" height="15" fill="rgb(206,74,20)" fg:x="526" fg:w="1"/><text x="13.5424%" y="399.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="13.4252%" y="373" width="0.0255%" height="15" fill="rgb(230,138,44)" fg:x="526" fg:w="1"/><text x="13.5424%" y="383.50"></text></g><g><title>__rcu_read_unlock (31 samples, 0.79%)</title><rect x="13.6549%" y="373" width="0.7912%" height="15" fill="rgb(235,182,43)" fg:x="535" fg:w="31"/><text x="13.7721%" y="383.50"></text></g><g><title>__count_memcg_events (8 samples, 0.20%)</title><rect x="14.6759%" y="357" width="0.2042%" height="15" fill="rgb(242,16,51)" fg:x="575" fg:w="8"/><text x="14.7930%" y="367.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.05%)</title><rect x="14.8290%" y="341" width="0.0510%" height="15" fill="rgb(248,9,4)" fg:x="581" fg:w="2"/><text x="14.9462%" y="351.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="14.8800%" y="357" width="0.0255%" height="15" fill="rgb(210,31,22)" fg:x="583" fg:w="1"/><text x="14.9972%" y="367.50"></text></g><g><title>charge_memcg (29 samples, 0.74%)</title><rect x="14.4461%" y="373" width="0.7402%" height="15" fill="rgb(239,54,39)" fg:x="566" fg:w="29"/><text x="14.5633%" y="383.50"></text></g><g><title>try_charge_memcg (11 samples, 0.28%)</title><rect x="14.9056%" y="357" width="0.2808%" height="15" fill="rgb(230,99,41)" fg:x="584" fg:w="11"/><text x="15.0228%" y="367.50"></text></g><g><title>refill_stock (1 samples, 0.03%)</title><rect x="15.1608%" y="341" width="0.0255%" height="15" fill="rgb(253,106,12)" fg:x="594" fg:w="1"/><text x="15.2780%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.10%)</title><rect x="15.1863%" y="373" width="0.1021%" height="15" fill="rgb(213,46,41)" fg:x="595" fg:w="4"/><text x="15.3035%" y="383.50"></text></g><g><title>memcg_check_events (1 samples, 0.03%)</title><rect x="15.2884%" y="373" width="0.0255%" height="15" fill="rgb(215,133,35)" fg:x="599" fg:w="1"/><text x="15.4056%" y="383.50"></text></g><g><title>__mem_cgroup_charge (74 samples, 1.89%)</title><rect x="13.4507%" y="389" width="1.8887%" height="15" fill="rgb(213,28,5)" fg:x="527" fg:w="74"/><text x="13.5679%" y="399.50">__me..</text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="15.3139%" y="373" width="0.0255%" height="15" fill="rgb(215,77,49)" fg:x="600" fg:w="1"/><text x="15.4311%" y="383.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.03%)</title><rect x="15.3395%" y="389" width="0.0255%" height="15" fill="rgb(248,100,22)" fg:x="601" fg:w="1"/><text x="15.4566%" y="399.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="15.3395%" y="373" width="0.0255%" height="15" fill="rgb(208,67,9)" fg:x="601" fg:w="1"/><text x="15.4566%" y="383.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.08%)</title><rect x="15.3650%" y="389" width="0.0766%" height="15" fill="rgb(219,133,21)" fg:x="602" fg:w="3"/><text x="15.4822%" y="399.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.08%)</title><rect x="15.4416%" y="389" width="0.0766%" height="15" fill="rgb(246,46,29)" fg:x="605" fg:w="3"/><text x="15.5587%" y="399.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="15.5181%" y="389" width="0.0255%" height="15" fill="rgb(246,185,52)" fg:x="608" fg:w="1"/><text x="15.6353%" y="399.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="15.5436%" y="389" width="0.0255%" height="15" fill="rgb(252,136,11)" fg:x="609" fg:w="1"/><text x="15.6608%" y="399.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="15.5436%" y="373" width="0.0255%" height="15" fill="rgb(219,138,53)" fg:x="609" fg:w="1"/><text x="15.6608%" y="383.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="15.5436%" y="357" width="0.0255%" height="15" fill="rgb(211,51,23)" fg:x="609" fg:w="1"/><text x="15.6608%" y="367.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="15.5436%" y="341" width="0.0255%" height="15" fill="rgb(247,221,28)" fg:x="609" fg:w="1"/><text x="15.6608%" y="351.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="15.5436%" y="325" width="0.0255%" height="15" fill="rgb(251,222,45)" fg:x="609" fg:w="1"/><text x="15.6608%" y="335.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="15.5436%" y="309" width="0.0255%" height="15" fill="rgb(217,162,53)" fg:x="609" fg:w="1"/><text x="15.6608%" y="319.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="15.5436%" y="293" width="0.0255%" height="15" fill="rgb(229,93,14)" fg:x="609" fg:w="1"/><text x="15.6608%" y="303.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="15.5436%" y="277" width="0.0255%" height="15" fill="rgb(209,67,49)" fg:x="609" fg:w="1"/><text x="15.6608%" y="287.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="15.5436%" y="261" width="0.0255%" height="15" fill="rgb(213,87,29)" fg:x="609" fg:w="1"/><text x="15.6608%" y="271.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="15.5436%" y="245" width="0.0255%" height="15" fill="rgb(205,151,52)" fg:x="609" fg:w="1"/><text x="15.6608%" y="255.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="15.5436%" y="229" width="0.0255%" height="15" fill="rgb(253,215,39)" fg:x="609" fg:w="1"/><text x="15.6608%" y="239.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="15.5436%" y="213" width="0.0255%" height="15" fill="rgb(221,220,41)" fg:x="609" fg:w="1"/><text x="15.6608%" y="223.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="15.5692%" y="389" width="0.0255%" height="15" fill="rgb(218,133,21)" fg:x="610" fg:w="1"/><text x="15.6864%" y="399.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="15.5947%" y="389" width="0.0255%" height="15" fill="rgb(221,193,43)" fg:x="611" fg:w="1"/><text x="15.7119%" y="399.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="15.6457%" y="357" width="0.0255%" height="15" fill="rgb(240,128,52)" fg:x="613" fg:w="1"/><text x="15.7629%" y="367.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="15.6457%" y="341" width="0.0255%" height="15" fill="rgb(253,114,12)" fg:x="613" fg:w="1"/><text x="15.7629%" y="351.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="15.6457%" y="325" width="0.0255%" height="15" fill="rgb(215,223,47)" fg:x="613" fg:w="1"/><text x="15.7629%" y="335.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="15.6457%" y="309" width="0.0255%" height="15" fill="rgb(248,225,23)" fg:x="613" fg:w="1"/><text x="15.7629%" y="319.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="15.6457%" y="293" width="0.0255%" height="15" fill="rgb(250,108,0)" fg:x="613" fg:w="1"/><text x="15.7629%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="15.6457%" y="277" width="0.0255%" height="15" fill="rgb(228,208,7)" fg:x="613" fg:w="1"/><text x="15.7629%" y="287.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="15.6457%" y="261" width="0.0255%" height="15" fill="rgb(244,45,10)" fg:x="613" fg:w="1"/><text x="15.7629%" y="271.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="15.6457%" y="245" width="0.0255%" height="15" fill="rgb(207,125,25)" fg:x="613" fg:w="1"/><text x="15.7629%" y="255.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="15.6457%" y="229" width="0.0255%" height="15" fill="rgb(210,195,18)" fg:x="613" fg:w="1"/><text x="15.7629%" y="239.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="15.6457%" y="213" width="0.0255%" height="15" fill="rgb(249,80,12)" fg:x="613" fg:w="1"/><text x="15.7629%" y="223.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="15.6457%" y="197" width="0.0255%" height="15" fill="rgb(221,65,9)" fg:x="613" fg:w="1"/><text x="15.7629%" y="207.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="15.6457%" y="181" width="0.0255%" height="15" fill="rgb(235,49,36)" fg:x="613" fg:w="1"/><text x="15.7629%" y="191.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="15.7223%" y="341" width="0.0255%" height="15" fill="rgb(225,32,20)" fg:x="616" fg:w="1"/><text x="15.8395%" y="351.50"></text></g><g><title>folio_mapping (1 samples, 0.03%)</title><rect x="15.7478%" y="341" width="0.0255%" height="15" fill="rgb(215,141,46)" fg:x="617" fg:w="1"/><text x="15.8650%" y="351.50"></text></g><g><title>folio_mapping (1 samples, 0.03%)</title><rect x="15.7989%" y="325" width="0.0255%" height="15" fill="rgb(250,160,47)" fg:x="619" fg:w="1"/><text x="15.9161%" y="335.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="15.9775%" y="309" width="0.0510%" height="15" fill="rgb(216,222,40)" fg:x="626" fg:w="2"/><text x="16.0947%" y="319.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.05%)</title><rect x="15.9775%" y="293" width="0.0510%" height="15" fill="rgb(234,217,39)" fg:x="626" fg:w="2"/><text x="16.0947%" y="303.50"></text></g><g><title>folio_add_lru_vma (17 samples, 0.43%)</title><rect x="15.6202%" y="389" width="0.4339%" height="15" fill="rgb(207,178,40)" fg:x="612" fg:w="17"/><text x="15.7374%" y="399.50"></text></g><g><title>folio_add_lru (17 samples, 0.43%)</title><rect x="15.6202%" y="373" width="0.4339%" height="15" fill="rgb(221,136,13)" fg:x="612" fg:w="17"/><text x="15.7374%" y="383.50"></text></g><g><title>folio_batch_move_lru (15 samples, 0.38%)</title><rect x="15.6713%" y="357" width="0.3828%" height="15" fill="rgb(249,199,10)" fg:x="614" fg:w="15"/><text x="15.7884%" y="367.50"></text></g><g><title>lru_add_fn (11 samples, 0.28%)</title><rect x="15.7734%" y="341" width="0.2808%" height="15" fill="rgb(249,222,13)" fg:x="618" fg:w="11"/><text x="15.8905%" y="351.50"></text></g><g><title>lru_gen_add_folio (9 samples, 0.23%)</title><rect x="15.8244%" y="325" width="0.2297%" height="15" fill="rgb(244,185,38)" fg:x="620" fg:w="9"/><text x="15.9416%" y="335.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="16.0286%" y="309" width="0.0255%" height="15" fill="rgb(236,202,9)" fg:x="628" fg:w="1"/><text x="16.1458%" y="319.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.08%)</title><rect x="16.0796%" y="357" width="0.0766%" height="15" fill="rgb(250,229,37)" fg:x="630" fg:w="3"/><text x="16.1968%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="16.1052%" y="341" width="0.0510%" height="15" fill="rgb(206,174,23)" fg:x="631" fg:w="2"/><text x="16.2223%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="16.1307%" y="325" width="0.0255%" height="15" fill="rgb(211,33,43)" fg:x="632" fg:w="1"/><text x="16.2479%" y="335.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="16.1562%" y="357" width="0.0255%" height="15" fill="rgb(245,58,50)" fg:x="633" fg:w="1"/><text x="16.2734%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (6 samples, 0.15%)</title><rect x="16.0541%" y="389" width="0.1531%" height="15" fill="rgb(244,68,36)" fg:x="629" fg:w="6"/><text x="16.1713%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (5 samples, 0.13%)</title><rect x="16.0796%" y="373" width="0.1276%" height="15" fill="rgb(232,229,15)" fg:x="630" fg:w="5"/><text x="16.1968%" y="383.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="16.1817%" y="357" width="0.0255%" height="15" fill="rgb(254,30,23)" fg:x="634" fg:w="1"/><text x="16.2989%" y="367.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="16.1817%" y="341" width="0.0255%" height="15" fill="rgb(235,160,14)" fg:x="634" fg:w="1"/><text x="16.2989%" y="351.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="16.1817%" y="325" width="0.0255%" height="15" fill="rgb(212,155,44)" fg:x="634" fg:w="1"/><text x="16.2989%" y="335.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="16.1817%" y="309" width="0.0255%" height="15" fill="rgb(226,2,50)" fg:x="634" fg:w="1"/><text x="16.2989%" y="319.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="16.1817%" y="293" width="0.0255%" height="15" fill="rgb(234,177,6)" fg:x="634" fg:w="1"/><text x="16.2989%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="16.1817%" y="277" width="0.0255%" height="15" fill="rgb(217,24,9)" fg:x="634" fg:w="1"/><text x="16.2989%" y="287.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="16.1817%" y="261" width="0.0255%" height="15" fill="rgb(220,13,46)" fg:x="634" fg:w="1"/><text x="16.2989%" y="271.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="16.1817%" y="245" width="0.0255%" height="15" fill="rgb(239,221,27)" fg:x="634" fg:w="1"/><text x="16.2989%" y="255.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="16.1817%" y="229" width="0.0255%" height="15" fill="rgb(222,198,25)" fg:x="634" fg:w="1"/><text x="16.2989%" y="239.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="16.1817%" y="213" width="0.0255%" height="15" fill="rgb(211,99,13)" fg:x="634" fg:w="1"/><text x="16.2989%" y="223.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="16.1817%" y="197" width="0.0255%" height="15" fill="rgb(232,111,31)" fg:x="634" fg:w="1"/><text x="16.2989%" y="207.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="16.1817%" y="181" width="0.0255%" height="15" fill="rgb(245,82,37)" fg:x="634" fg:w="1"/><text x="16.2989%" y="191.50"></text></g><g><title>inc_mm_counter (1 samples, 0.03%)</title><rect x="16.2072%" y="389" width="0.0255%" height="15" fill="rgb(227,149,46)" fg:x="635" fg:w="1"/><text x="16.3244%" y="399.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="16.2072%" y="373" width="0.0255%" height="15" fill="rgb(218,36,50)" fg:x="635" fg:w="1"/><text x="16.3244%" y="383.50"></text></g><g><title>native_set_pte (1 samples, 0.03%)</title><rect x="16.2328%" y="389" width="0.0255%" height="15" fill="rgb(226,80,48)" fg:x="636" fg:w="1"/><text x="16.3500%" y="399.50"></text></g><g><title>pfn_pte (1 samples, 0.03%)</title><rect x="16.2583%" y="389" width="0.0255%" height="15" fill="rgb(238,224,15)" fg:x="637" fg:w="1"/><text x="16.3755%" y="399.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.05%)</title><rect x="16.4880%" y="341" width="0.0510%" height="15" fill="rgb(241,136,10)" fg:x="646" fg:w="2"/><text x="16.6052%" y="351.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="16.5391%" y="341" width="0.0255%" height="15" fill="rgb(208,32,45)" fg:x="648" fg:w="1"/><text x="16.6562%" y="351.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="16.5391%" y="325" width="0.0255%" height="15" fill="rgb(207,135,9)" fg:x="648" fg:w="1"/><text x="16.6562%" y="335.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="16.5391%" y="309" width="0.0255%" height="15" fill="rgb(206,86,44)" fg:x="648" fg:w="1"/><text x="16.6562%" y="319.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="16.5391%" y="293" width="0.0255%" height="15" fill="rgb(245,177,15)" fg:x="648" fg:w="1"/><text x="16.6562%" y="303.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="16.5391%" y="277" width="0.0255%" height="15" fill="rgb(206,64,50)" fg:x="648" fg:w="1"/><text x="16.6562%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="16.5391%" y="261" width="0.0255%" height="15" fill="rgb(234,36,40)" fg:x="648" fg:w="1"/><text x="16.6562%" y="271.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="16.5391%" y="245" width="0.0255%" height="15" fill="rgb(213,64,8)" fg:x="648" fg:w="1"/><text x="16.6562%" y="255.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="16.5391%" y="229" width="0.0255%" height="15" fill="rgb(210,75,36)" fg:x="648" fg:w="1"/><text x="16.6562%" y="239.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="16.5391%" y="213" width="0.0255%" height="15" fill="rgb(229,88,21)" fg:x="648" fg:w="1"/><text x="16.6562%" y="223.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="16.5391%" y="197" width="0.0255%" height="15" fill="rgb(252,204,47)" fg:x="648" fg:w="1"/><text x="16.6562%" y="207.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="16.5391%" y="181" width="0.0255%" height="15" fill="rgb(208,77,27)" fg:x="648" fg:w="1"/><text x="16.6562%" y="191.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="16.5391%" y="165" width="0.0255%" height="15" fill="rgb(221,76,26)" fg:x="648" fg:w="1"/><text x="16.6562%" y="175.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="16.6156%" y="325" width="0.0255%" height="15" fill="rgb(225,139,18)" fg:x="651" fg:w="1"/><text x="16.7328%" y="335.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.03%)</title><rect x="16.6411%" y="325" width="0.0255%" height="15" fill="rgb(230,137,11)" fg:x="652" fg:w="1"/><text x="16.7583%" y="335.50"></text></g><g><title>clear_page_erms (9 samples, 0.23%)</title><rect x="16.6667%" y="325" width="0.2297%" height="15" fill="rgb(212,28,1)" fg:x="653" fg:w="9"/><text x="16.7839%" y="335.50"></text></g><g><title>__folio_alloc (30 samples, 0.77%)</title><rect x="16.3859%" y="373" width="0.7657%" height="15" fill="rgb(248,164,17)" fg:x="642" fg:w="30"/><text x="16.5031%" y="383.50"></text></g><g><title>__alloc_pages (30 samples, 0.77%)</title><rect x="16.3859%" y="357" width="0.7657%" height="15" fill="rgb(222,171,42)" fg:x="642" fg:w="30"/><text x="16.5031%" y="367.50"></text></g><g><title>get_page_from_freelist (23 samples, 0.59%)</title><rect x="16.5646%" y="341" width="0.5870%" height="15" fill="rgb(243,84,45)" fg:x="649" fg:w="23"/><text x="16.6818%" y="351.50"></text></g><g><title>rmqueue (10 samples, 0.26%)</title><rect x="16.8964%" y="325" width="0.2552%" height="15" fill="rgb(252,49,23)" fg:x="662" fg:w="10"/><text x="17.0136%" y="335.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.23%)</title><rect x="16.9219%" y="309" width="0.2297%" height="15" fill="rgb(215,19,7)" fg:x="663" fg:w="9"/><text x="17.0391%" y="319.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.20%)</title><rect x="16.9474%" y="293" width="0.2042%" height="15" fill="rgb(238,81,41)" fg:x="664" fg:w="8"/><text x="17.0646%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="17.1261%" y="277" width="0.0255%" height="15" fill="rgb(210,199,37)" fg:x="671" fg:w="1"/><text x="17.2433%" y="287.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="17.1261%" y="261" width="0.0255%" height="15" fill="rgb(244,192,49)" fg:x="671" fg:w="1"/><text x="17.2433%" y="271.50"></text></g><g><title>do_anonymous_page (149 samples, 3.80%)</title><rect x="13.3742%" y="405" width="3.8030%" height="15" fill="rgb(226,211,11)" fg:x="524" fg:w="149"/><text x="13.4914%" y="415.50">do_anonymou..</text></g><g><title>vma_alloc_folio (35 samples, 0.89%)</title><rect x="16.2838%" y="389" width="0.8933%" height="15" fill="rgb(236,162,54)" fg:x="638" fg:w="35"/><text x="16.4010%" y="399.50">v..</text></g><g><title>_find_first_bit (1 samples, 0.03%)</title><rect x="17.1516%" y="373" width="0.0255%" height="15" fill="rgb(220,229,9)" fg:x="672" fg:w="1"/><text x="17.2688%" y="383.50"></text></g><g><title>pfn_pte (1 samples, 0.03%)</title><rect x="17.1771%" y="405" width="0.0255%" height="15" fill="rgb(250,87,22)" fg:x="673" fg:w="1"/><text x="17.2943%" y="415.50"></text></g><g><title>pte_offset_map_nolock (3 samples, 0.08%)</title><rect x="17.2027%" y="405" width="0.0766%" height="15" fill="rgb(239,43,17)" fg:x="674" fg:w="3"/><text x="17.3198%" y="415.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="17.2537%" y="389" width="0.0255%" height="15" fill="rgb(231,177,25)" fg:x="676" fg:w="1"/><text x="17.3709%" y="399.50"></text></g><g><title>__handle_mm_fault (165 samples, 4.21%)</title><rect x="13.0934%" y="437" width="4.2113%" height="15" fill="rgb(219,179,1)" fg:x="513" fg:w="165"/><text x="13.2106%" y="447.50">__handle_mm_f..</text></g><g><title>handle_pte_fault (156 samples, 3.98%)</title><rect x="13.3231%" y="421" width="3.9816%" height="15" fill="rgb(238,219,53)" fg:x="522" fg:w="156"/><text x="13.4403%" y="431.50">handle_pte_f..</text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="17.2792%" y="405" width="0.0255%" height="15" fill="rgb(232,167,36)" fg:x="677" fg:w="1"/><text x="17.3964%" y="415.50"></text></g><g><title>count_memcg_events.constprop.0 (3 samples, 0.08%)</title><rect x="17.3047%" y="437" width="0.0766%" height="15" fill="rgb(244,19,51)" fg:x="678" fg:w="3"/><text x="17.4219%" y="447.50"></text></g><g><title>__count_memcg_events (2 samples, 0.05%)</title><rect x="17.3303%" y="421" width="0.0510%" height="15" fill="rgb(224,6,22)" fg:x="679" fg:w="2"/><text x="17.4475%" y="431.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.05%)</title><rect x="17.3303%" y="405" width="0.0510%" height="15" fill="rgb(224,145,5)" fg:x="679" fg:w="2"/><text x="17.4475%" y="415.50"></text></g><g><title>p4d_offset (1 samples, 0.03%)</title><rect x="17.3813%" y="437" width="0.0255%" height="15" fill="rgb(234,130,49)" fg:x="681" fg:w="1"/><text x="17.4985%" y="447.50"></text></g><g><title>pgd_none (2 samples, 0.05%)</title><rect x="17.4068%" y="437" width="0.0510%" height="15" fill="rgb(254,6,2)" fg:x="682" fg:w="2"/><text x="17.5240%" y="447.50"></text></g><g><title>handle_mm_fault (176 samples, 4.49%)</title><rect x="13.0168%" y="453" width="4.4921%" height="15" fill="rgb(208,96,46)" fg:x="510" fg:w="176"/><text x="13.1340%" y="463.50">handle_mm_fault</text></g><g><title>pmd_val (2 samples, 0.05%)</title><rect x="17.4579%" y="437" width="0.0510%" height="15" fill="rgb(239,3,39)" fg:x="684" fg:w="2"/><text x="17.5751%" y="447.50"></text></g><g><title>lock_vma_under_rcu (2 samples, 0.05%)</title><rect x="17.5089%" y="453" width="0.0510%" height="15" fill="rgb(233,210,1)" fg:x="686" fg:w="2"/><text x="17.6261%" y="463.50"></text></g><g><title>mas_walk (1 samples, 0.03%)</title><rect x="17.5345%" y="437" width="0.0255%" height="15" fill="rgb(244,137,37)" fg:x="687" fg:w="1"/><text x="17.6516%" y="447.50"></text></g><g><title>mtree_range_walk (1 samples, 0.03%)</title><rect x="17.5345%" y="421" width="0.0255%" height="15" fill="rgb(240,136,2)" fg:x="687" fg:w="1"/><text x="17.6516%" y="431.50"></text></g><g><title>do_user_addr_fault (187 samples, 4.77%)</title><rect x="12.8127%" y="469" width="4.7728%" height="15" fill="rgb(239,18,37)" fg:x="502" fg:w="187"/><text x="12.9298%" y="479.50">do_user_addr_fa..</text></g><g><title>up_read (1 samples, 0.03%)</title><rect x="17.5600%" y="453" width="0.0255%" height="15" fill="rgb(218,185,22)" fg:x="688" fg:w="1"/><text x="17.6772%" y="463.50"></text></g><g><title>asm_exc_page_fault (191 samples, 4.87%)</title><rect x="12.7616%" y="501" width="4.8749%" height="15" fill="rgb(225,218,4)" fg:x="500" fg:w="191"/><text x="12.8788%" y="511.50">asm_exc_page_fa..</text></g><g><title>exc_page_fault (191 samples, 4.87%)</title><rect x="12.7616%" y="485" width="4.8749%" height="15" fill="rgb(230,182,32)" fg:x="500" fg:w="191"/><text x="12.8788%" y="495.50">exc_page_fault</text></g><g><title>irqentry_exit (2 samples, 0.05%)</title><rect x="17.5855%" y="469" width="0.0510%" height="15" fill="rgb(242,56,43)" fg:x="689" fg:w="2"/><text x="17.7027%" y="479.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.05%)</title><rect x="17.5855%" y="453" width="0.0510%" height="15" fill="rgb(233,99,24)" fg:x="689" fg:w="2"/><text x="17.7027%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.05%)</title><rect x="17.5855%" y="437" width="0.0510%" height="15" fill="rgb(234,209,42)" fg:x="689" fg:w="2"/><text x="17.7027%" y="447.50"></text></g><g><title>error_entry (2 samples, 0.05%)</title><rect x="17.6365%" y="501" width="0.0510%" height="15" fill="rgb(227,7,12)" fg:x="691" fg:w="2"/><text x="17.7537%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (268 samples, 6.84%)</title><rect x="11.4855%" y="709" width="6.8402%" height="15" fill="rgb(245,203,43)" fg:x="450" fg:w="268"/><text x="11.6026%" y="719.50">fringe_vs_astar::algor..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (268 samples, 6.84%)</title><rect x="11.4855%" y="693" width="6.8402%" height="15" fill="rgb(238,205,33)" fg:x="450" fg:w="268"/><text x="11.6026%" y="703.50">core::iter::traits::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (268 samples, 6.84%)</title><rect x="11.4855%" y="677" width="6.8402%" height="15" fill="rgb(231,56,7)" fg:x="450" fg:w="268"/><text x="11.6026%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (268 samples, 6.84%)</title><rect x="11.4855%" y="661" width="6.8402%" height="15" fill="rgb(244,186,29)" fg:x="450" fg:w="268"/><text x="11.6026%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (268 samples, 6.84%)</title><rect x="11.4855%" y="645" width="6.8402%" height="15" fill="rgb(234,111,31)" fg:x="450" fg:w="268"/><text x="11.6026%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (268 samples, 6.84%)</title><rect x="11.4855%" y="629" width="6.8402%" height="15" fill="rgb(241,149,10)" fg:x="450" fg:w="268"/><text x="11.6026%" y="639.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (268 samples, 6.84%)</title><rect x="11.4855%" y="613" width="6.8402%" height="15" fill="rgb(249,206,44)" fg:x="450" fg:w="268"/><text x="11.6026%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (268 samples, 6.84%)</title><rect x="11.4855%" y="597" width="6.8402%" height="15" fill="rgb(251,153,30)" fg:x="450" fg:w="268"/><text x="11.6026%" y="607.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (268 samples, 6.84%)</title><rect x="11.4855%" y="581" width="6.8402%" height="15" fill="rgb(239,152,38)" fg:x="450" fg:w="268"/><text x="11.6026%" y="591.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (268 samples, 6.84%)</title><rect x="11.4855%" y="565" width="6.8402%" height="15" fill="rgb(249,139,47)" fg:x="450" fg:w="268"/><text x="11.6026%" y="575.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (268 samples, 6.84%)</title><rect x="11.4855%" y="549" width="6.8402%" height="15" fill="rgb(244,64,35)" fg:x="450" fg:w="268"/><text x="11.6026%" y="559.50">&lt;core::iter::adapters:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (268 samples, 6.84%)</title><rect x="11.4855%" y="533" width="6.8402%" height="15" fill="rgb(216,46,15)" fg:x="450" fg:w="268"/><text x="11.6026%" y="543.50">alloc::vec::Vec&lt;T,A&gt;::..</text></g><g><title>core::ptr::write (267 samples, 6.81%)</title><rect x="11.5110%" y="517" width="6.8147%" height="15" fill="rgb(250,74,19)" fg:x="451" fg:w="267"/><text x="11.6282%" y="527.50">core::ptr::write</text></g><g><title>sync_regs (25 samples, 0.64%)</title><rect x="17.6876%" y="501" width="0.6381%" height="15" fill="rgb(249,42,33)" fg:x="693" fg:w="25"/><text x="17.8048%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (101 samples, 2.58%)</title><rect x="37.6468%" y="693" width="2.5778%" height="15" fill="rgb(242,149,17)" fg:x="1475" fg:w="101"/><text x="37.7639%" y="703.50">&lt;alloc:..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (101 samples, 2.58%)</title><rect x="37.6468%" y="677" width="2.5778%" height="15" fill="rgb(244,29,21)" fg:x="1475" fg:w="101"/><text x="37.7639%" y="687.50">core::s..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (101 samples, 2.58%)</title><rect x="37.6468%" y="661" width="2.5778%" height="15" fill="rgb(220,130,37)" fg:x="1475" fg:w="101"/><text x="37.7639%" y="671.50">&lt;usize ..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="40.2246%" y="693" width="0.0255%" height="15" fill="rgb(211,67,2)" fg:x="1576" fg:w="1"/><text x="40.3418%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="40.2501%" y="693" width="0.0255%" height="15" fill="rgb(235,68,52)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="703.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="40.2501%" y="677" width="0.0255%" height="15" fill="rgb(246,142,3)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="687.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="40.2501%" y="661" width="0.0255%" height="15" fill="rgb(241,25,7)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="671.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="40.2501%" y="645" width="0.0255%" height="15" fill="rgb(242,119,39)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="655.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="40.2501%" y="629" width="0.0255%" height="15" fill="rgb(241,98,45)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="639.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="40.2501%" y="613" width="0.0255%" height="15" fill="rgb(254,28,30)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="623.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="40.2501%" y="597" width="0.0255%" height="15" fill="rgb(241,142,54)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="607.50"></text></g><g><title>tick_do_update_jiffies64 (1 samples, 0.03%)</title><rect x="40.2501%" y="581" width="0.0255%" height="15" fill="rgb(222,85,15)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="591.50"></text></g><g><title>update_wall_time (1 samples, 0.03%)</title><rect x="40.2501%" y="565" width="0.0255%" height="15" fill="rgb(210,85,47)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="575.50"></text></g><g><title>timekeeping_advance (1 samples, 0.03%)</title><rect x="40.2501%" y="549" width="0.0255%" height="15" fill="rgb(224,206,25)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="559.50"></text></g><g><title>timekeeping_update (1 samples, 0.03%)</title><rect x="40.2501%" y="533" width="0.0255%" height="15" fill="rgb(243,201,19)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="543.50"></text></g><g><title>update_vsyscall (1 samples, 0.03%)</title><rect x="40.2501%" y="517" width="0.0255%" height="15" fill="rgb(236,59,4)" fg:x="1577" fg:w="1"/><text x="40.3673%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="40.4288%" y="533" width="0.0255%" height="15" fill="rgb(254,179,45)" fg:x="1584" fg:w="1"/><text x="40.5460%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.61%)</title><rect x="40.3012%" y="597" width="0.6126%" height="15" fill="rgb(226,14,10)" fg:x="1579" fg:w="24"/><text x="40.4184%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.61%)</title><rect x="40.3012%" y="581" width="0.6126%" height="15" fill="rgb(244,27,41)" fg:x="1579" fg:w="24"/><text x="40.4184%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.61%)</title><rect x="40.3012%" y="565" width="0.6126%" height="15" fill="rgb(235,35,32)" fg:x="1579" fg:w="24"/><text x="40.4184%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.61%)</title><rect x="40.3012%" y="549" width="0.6126%" height="15" fill="rgb(218,68,31)" fg:x="1579" fg:w="24"/><text x="40.4184%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (18 samples, 0.46%)</title><rect x="40.4543%" y="533" width="0.4594%" height="15" fill="rgb(207,120,37)" fg:x="1585" fg:w="18"/><text x="40.5715%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (18 samples, 0.46%)</title><rect x="40.4543%" y="517" width="0.4594%" height="15" fill="rgb(227,98,0)" fg:x="1585" fg:w="18"/><text x="40.5715%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.46%)</title><rect x="40.4543%" y="501" width="0.4594%" height="15" fill="rgb(207,7,3)" fg:x="1585" fg:w="18"/><text x="40.5715%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (18 samples, 0.46%)</title><rect x="40.4543%" y="485" width="0.4594%" height="15" fill="rgb(206,98,19)" fg:x="1585" fg:w="18"/><text x="40.5715%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.10%)</title><rect x="40.8116%" y="469" width="0.1021%" height="15" fill="rgb(217,5,26)" fg:x="1599" fg:w="4"/><text x="40.9288%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.10%)</title><rect x="40.8116%" y="453" width="0.1021%" height="15" fill="rgb(235,190,38)" fg:x="1599" fg:w="4"/><text x="40.9288%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.10%)</title><rect x="40.8116%" y="437" width="0.1021%" height="15" fill="rgb(247,86,24)" fg:x="1599" fg:w="4"/><text x="40.9288%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.64%)</title><rect x="40.3012%" y="629" width="0.6381%" height="15" fill="rgb(205,101,16)" fg:x="1579" fg:w="25"/><text x="40.4184%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (25 samples, 0.64%)</title><rect x="40.3012%" y="613" width="0.6381%" height="15" fill="rgb(246,168,33)" fg:x="1579" fg:w="25"/><text x="40.4184%" y="623.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="40.9137%" y="597" width="0.0255%" height="15" fill="rgb(231,114,1)" fg:x="1603" fg:w="1"/><text x="41.0309%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="40.9903%" y="565" width="0.0255%" height="15" fill="rgb(207,184,53)" fg:x="1606" fg:w="1"/><text x="41.1075%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (71 samples, 1.81%)</title><rect x="41.0158%" y="549" width="1.8121%" height="15" fill="rgb(224,95,51)" fg:x="1607" fg:w="71"/><text x="41.1330%" y="559.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (71 samples, 1.81%)</title><rect x="41.0158%" y="533" width="1.8121%" height="15" fill="rgb(212,188,45)" fg:x="1607" fg:w="71"/><text x="41.1330%" y="543.50">core..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (71 samples, 1.81%)</title><rect x="41.0158%" y="517" width="1.8121%" height="15" fill="rgb(223,154,38)" fg:x="1607" fg:w="71"/><text x="41.1330%" y="527.50">frin..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="42.8025%" y="501" width="0.0255%" height="15" fill="rgb(251,22,52)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="42.8025%" y="485" width="0.0255%" height="15" fill="rgb(229,209,22)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="495.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="42.8025%" y="469" width="0.0255%" height="15" fill="rgb(234,138,34)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="479.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="42.8025%" y="453" width="0.0255%" height="15" fill="rgb(212,95,11)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="463.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="42.8025%" y="437" width="0.0255%" height="15" fill="rgb(240,179,47)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="447.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="42.8025%" y="421" width="0.0255%" height="15" fill="rgb(240,163,11)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="431.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="42.8025%" y="405" width="0.0255%" height="15" fill="rgb(236,37,12)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="415.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="42.8025%" y="389" width="0.0255%" height="15" fill="rgb(232,164,16)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="399.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="42.8025%" y="373" width="0.0255%" height="15" fill="rgb(244,205,15)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="383.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="42.8025%" y="357" width="0.0255%" height="15" fill="rgb(223,117,47)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="367.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="42.8025%" y="341" width="0.0255%" height="15" fill="rgb(244,107,35)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="351.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.03%)</title><rect x="42.8025%" y="325" width="0.0255%" height="15" fill="rgb(205,140,8)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="335.50"></text></g><g><title>native_write_msr (1 samples, 0.03%)</title><rect x="42.8025%" y="309" width="0.0255%" height="15" fill="rgb(228,84,46)" fg:x="1677" fg:w="1"/><text x="42.9196%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 1.94%)</title><rect x="40.9393%" y="629" width="1.9398%" height="15" fill="rgb(254,188,9)" fg:x="1604" fg:w="76"/><text x="41.0564%" y="639.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::find (76 samples, 1.94%)</title><rect x="40.9393%" y="613" width="1.9398%" height="15" fill="rgb(206,112,54)" fg:x="1604" fg:w="76"/><text x="41.0564%" y="623.50">core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 1.94%)</title><rect x="40.9393%" y="597" width="1.9398%" height="15" fill="rgb(216,84,49)" fg:x="1604" fg:w="76"/><text x="41.0564%" y="607.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (76 samples, 1.94%)</title><rect x="40.9393%" y="581" width="1.9398%" height="15" fill="rgb(214,194,35)" fg:x="1604" fg:w="76"/><text x="41.0564%" y="591.50">core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (73 samples, 1.86%)</title><rect x="41.0158%" y="565" width="1.8632%" height="15" fill="rgb(249,28,3)" fg:x="1607" fg:w="73"/><text x="41.1330%" y="575.50">core..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (2 samples, 0.05%)</title><rect x="42.8280%" y="549" width="0.0510%" height="15" fill="rgb(222,56,52)" fg:x="1678" fg:w="2"/><text x="42.9452%" y="559.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&lt;&amp;f64&gt;&gt;::add (2 samples, 0.05%)</title><rect x="42.8280%" y="533" width="0.0510%" height="15" fill="rgb(245,217,50)" fg:x="1678" fg:w="2"/><text x="42.9452%" y="543.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2 samples, 0.05%)</title><rect x="42.8280%" y="517" width="0.0510%" height="15" fill="rgb(213,201,24)" fg:x="1678" fg:w="2"/><text x="42.9452%" y="527.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.13%)</title><rect x="42.8790%" y="517" width="0.1276%" height="15" fill="rgb(248,116,28)" fg:x="1680" fg:w="5"/><text x="42.9962%" y="527.50"></text></g><g><title>checked_request2size (4 samples, 0.10%)</title><rect x="42.9045%" y="501" width="0.1021%" height="15" fill="rgb(219,72,43)" fg:x="1681" fg:w="4"/><text x="43.0217%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.15%)</title><rect x="42.8790%" y="629" width="0.1531%" height="15" fill="rgb(209,138,14)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.15%)</title><rect x="42.8790%" y="613" width="0.1531%" height="15" fill="rgb(222,18,33)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.15%)</title><rect x="42.8790%" y="597" width="0.1531%" height="15" fill="rgb(213,199,7)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.15%)</title><rect x="42.8790%" y="581" width="0.1531%" height="15" fill="rgb(250,110,10)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.15%)</title><rect x="42.8790%" y="565" width="0.1531%" height="15" fill="rgb(248,123,6)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.15%)</title><rect x="42.8790%" y="549" width="0.1531%" height="15" fill="rgb(206,91,31)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="559.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.15%)</title><rect x="42.8790%" y="533" width="0.1531%" height="15" fill="rgb(211,154,13)" fg:x="1680" fg:w="6"/><text x="42.9962%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="43.0066%" y="517" width="0.0255%" height="15" fill="rgb(225,148,7)" fg:x="1685" fg:w="1"/><text x="43.1238%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (109 samples, 2.78%)</title><rect x="40.2757%" y="693" width="2.7820%" height="15" fill="rgb(220,160,43)" fg:x="1578" fg:w="109"/><text x="40.3928%" y="703.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (109 samples, 2.78%)</title><rect x="40.2757%" y="677" width="2.7820%" height="15" fill="rgb(213,52,39)" fg:x="1578" fg:w="109"/><text x="40.3928%" y="687.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (109 samples, 2.78%)</title><rect x="40.2757%" y="661" width="2.7820%" height="15" fill="rgb(243,137,7)" fg:x="1578" fg:w="109"/><text x="40.3928%" y="671.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (109 samples, 2.78%)</title><rect x="40.2757%" y="645" width="2.7820%" height="15" fill="rgb(230,79,13)" fg:x="1578" fg:w="109"/><text x="40.3928%" y="655.50">&lt;alloc::..</text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="43.0322%" y="629" width="0.0255%" height="15" fill="rgb(247,105,23)" fg:x="1686" fg:w="1"/><text x="43.1493%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (1 samples, 0.03%)</title><rect x="43.0577%" y="693" width="0.0255%" height="15" fill="rgb(223,179,41)" fg:x="1687" fg:w="1"/><text x="43.1749%" y="703.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (1 samples, 0.03%)</title><rect x="43.0577%" y="677" width="0.0255%" height="15" fill="rgb(218,9,34)" fg:x="1687" fg:w="1"/><text x="43.1749%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="43.0832%" y="597" width="0.0510%" height="15" fill="rgb(222,106,8)" fg:x="1688" fg:w="2"/><text x="43.2004%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="43.0832%" y="581" width="0.0510%" height="15" fill="rgb(211,220,0)" fg:x="1688" fg:w="2"/><text x="43.2004%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="43.0832%" y="565" width="0.0510%" height="15" fill="rgb(229,52,16)" fg:x="1688" fg:w="2"/><text x="43.2004%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="43.1087%" y="549" width="0.0255%" height="15" fill="rgb(212,155,18)" fg:x="1689" fg:w="1"/><text x="43.2259%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(&amp;usize,f64)&gt;&gt; (3 samples, 0.08%)</title><rect x="43.0832%" y="693" width="0.0766%" height="15" fill="rgb(242,21,14)" fg:x="1688" fg:w="3"/><text x="43.2004%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="43.0832%" y="677" width="0.0766%" height="15" fill="rgb(222,19,48)" fg:x="1688" fg:w="3"/><text x="43.2004%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(&amp;usize,f64),alloc::alloc::Global&gt;&gt; (3 samples, 0.08%)</title><rect x="43.0832%" y="661" width="0.0766%" height="15" fill="rgb(232,45,27)" fg:x="1688" fg:w="3"/><text x="43.2004%" y="671.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="43.0832%" y="645" width="0.0766%" height="15" fill="rgb(249,103,42)" fg:x="1688" fg:w="3"/><text x="43.2004%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(&amp;usize,f64)&gt;&gt; (3 samples, 0.08%)</title><rect x="43.0832%" y="629" width="0.0766%" height="15" fill="rgb(246,81,33)" fg:x="1688" fg:w="3"/><text x="43.2004%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="43.0832%" y="613" width="0.0766%" height="15" fill="rgb(252,33,42)" fg:x="1688" fg:w="3"/><text x="43.2004%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="43.1343%" y="597" width="0.0255%" height="15" fill="rgb(209,212,41)" fg:x="1690" fg:w="1"/><text x="43.2514%" y="607.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (1 samples, 0.03%)</title><rect x="43.1598%" y="693" width="0.0255%" height="15" fill="rgb(207,154,6)" fg:x="1691" fg:w="1"/><text x="43.2770%" y="703.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (1 samples, 0.03%)</title><rect x="43.1598%" y="677" width="0.0255%" height="15" fill="rgb(223,64,47)" fg:x="1691" fg:w="1"/><text x="43.2770%" y="687.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="43.1853%" y="437" width="0.0255%" height="15" fill="rgb(211,161,38)" fg:x="1692" fg:w="1"/><text x="43.3025%" y="447.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="43.1853%" y="421" width="0.0255%" height="15" fill="rgb(219,138,40)" fg:x="1692" fg:w="1"/><text x="43.3025%" y="431.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="43.1853%" y="405" width="0.0255%" height="15" fill="rgb(241,228,46)" fg:x="1692" fg:w="1"/><text x="43.3025%" y="415.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="43.1853%" y="389" width="0.0255%" height="15" fill="rgb(223,209,38)" fg:x="1692" fg:w="1"/><text x="43.3025%" y="399.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="43.1853%" y="373" width="0.0255%" height="15" fill="rgb(236,164,45)" fg:x="1692" fg:w="1"/><text x="43.3025%" y="383.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="43.1853%" y="357" width="0.0255%" height="15" fill="rgb(231,15,5)" fg:x="1692" fg:w="1"/><text x="43.3025%" y="367.50"></text></g><g><title>_compound_head (3 samples, 0.08%)</title><rect x="43.2108%" y="373" width="0.0766%" height="15" fill="rgb(252,35,15)" fg:x="1693" fg:w="3"/><text x="43.3280%" y="383.50"></text></g><g><title>vm_normal_page (2 samples, 0.05%)</title><rect x="43.2874%" y="373" width="0.0510%" height="15" fill="rgb(248,181,18)" fg:x="1696" fg:w="2"/><text x="43.4046%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="43.3895%" y="341" width="0.0255%" height="15" fill="rgb(233,39,42)" fg:x="1700" fg:w="1"/><text x="43.5067%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="43.3895%" y="325" width="0.0255%" height="15" fill="rgb(238,110,33)" fg:x="1700" fg:w="1"/><text x="43.5067%" y="335.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="43.3895%" y="309" width="0.0255%" height="15" fill="rgb(233,195,10)" fg:x="1700" fg:w="1"/><text x="43.5067%" y="319.50"></text></g><g><title>page_remove_rmap (3 samples, 0.08%)</title><rect x="43.3640%" y="357" width="0.0766%" height="15" fill="rgb(254,105,3)" fg:x="1699" fg:w="3"/><text x="43.4811%" y="367.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.03%)</title><rect x="43.4150%" y="341" width="0.0255%" height="15" fill="rgb(221,225,9)" fg:x="1701" fg:w="1"/><text x="43.5322%" y="351.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="43.4661%" y="277" width="0.0255%" height="15" fill="rgb(224,227,45)" fg:x="1703" fg:w="1"/><text x="43.5832%" y="287.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.05%)</title><rect x="43.4661%" y="293" width="0.0510%" height="15" fill="rgb(229,198,43)" fg:x="1703" fg:w="2"/><text x="43.5832%" y="303.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="43.4916%" y="277" width="0.0255%" height="15" fill="rgb(206,209,35)" fg:x="1704" fg:w="1"/><text x="43.6088%" y="287.50"></text></g><g><title>free_unref_page_commit (10 samples, 0.26%)</title><rect x="43.5171%" y="277" width="0.2552%" height="15" fill="rgb(245,195,53)" fg:x="1705" fg:w="10"/><text x="43.6343%" y="287.50"></text></g><g><title>free_pcppages_bulk (8 samples, 0.20%)</title><rect x="43.5681%" y="261" width="0.2042%" height="15" fill="rgb(240,92,26)" fg:x="1707" fg:w="8"/><text x="43.6853%" y="271.50"></text></g><g><title>__free_one_page (8 samples, 0.20%)</title><rect x="43.5681%" y="245" width="0.2042%" height="15" fill="rgb(207,40,23)" fg:x="1707" fg:w="8"/><text x="43.6853%" y="255.50"></text></g><g><title>free_unref_page_list (11 samples, 0.28%)</title><rect x="43.5171%" y="293" width="0.2808%" height="15" fill="rgb(223,111,35)" fg:x="1705" fg:w="11"/><text x="43.6343%" y="303.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="43.7723%" y="277" width="0.0255%" height="15" fill="rgb(229,147,28)" fg:x="1715" fg:w="1"/><text x="43.8895%" y="287.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::construct_path (31 samples, 0.79%)</title><rect x="43.1853%" y="693" width="0.7912%" height="15" fill="rgb(211,29,28)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(f64,usize,core::option::Option&lt;f64&gt;)&gt;&gt; (31 samples, 0.79%)</title><rect x="43.1853%" y="677" width="0.7912%" height="15" fill="rgb(228,72,33)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(f64,usize,core::option::Option&lt;f64&gt;)&gt;&gt; (31 samples, 0.79%)</title><rect x="43.1853%" y="661" width="0.7912%" height="15" fill="rgb(205,214,31)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.79%)</title><rect x="43.1853%" y="645" width="0.7912%" height="15" fill="rgb(224,111,15)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.79%)</title><rect x="43.1853%" y="629" width="0.7912%" height="15" fill="rgb(253,21,26)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.79%)</title><rect x="43.1853%" y="613" width="0.7912%" height="15" fill="rgb(245,139,43)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="623.50"></text></g><g><title>__GI___libc_free (31 samples, 0.79%)</title><rect x="43.1853%" y="597" width="0.7912%" height="15" fill="rgb(252,170,7)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="607.50"></text></g><g><title>__GI___munmap (31 samples, 0.79%)</title><rect x="43.1853%" y="581" width="0.7912%" height="15" fill="rgb(231,118,14)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.79%)</title><rect x="43.1853%" y="565" width="0.7912%" height="15" fill="rgb(238,83,0)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="575.50"></text></g><g><title>do_syscall_64 (31 samples, 0.79%)</title><rect x="43.1853%" y="549" width="0.7912%" height="15" fill="rgb(221,39,39)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="559.50"></text></g><g><title>x64_sys_call (31 samples, 0.79%)</title><rect x="43.1853%" y="533" width="0.7912%" height="15" fill="rgb(222,119,46)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="543.50"></text></g><g><title>__x64_sys_munmap (31 samples, 0.79%)</title><rect x="43.1853%" y="517" width="0.7912%" height="15" fill="rgb(222,165,49)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="527.50"></text></g><g><title>__vm_munmap (31 samples, 0.79%)</title><rect x="43.1853%" y="501" width="0.7912%" height="15" fill="rgb(219,113,52)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="511.50"></text></g><g><title>do_vmi_munmap (31 samples, 0.79%)</title><rect x="43.1853%" y="485" width="0.7912%" height="15" fill="rgb(214,7,15)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="495.50"></text></g><g><title>do_vmi_align_munmap (31 samples, 0.79%)</title><rect x="43.1853%" y="469" width="0.7912%" height="15" fill="rgb(235,32,4)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="479.50"></text></g><g><title>unmap_region (31 samples, 0.79%)</title><rect x="43.1853%" y="453" width="0.7912%" height="15" fill="rgb(238,90,54)" fg:x="1692" fg:w="31"/><text x="43.3025%" y="463.50"></text></g><g><title>unmap_vmas (30 samples, 0.77%)</title><rect x="43.2108%" y="437" width="0.7657%" height="15" fill="rgb(213,208,19)" fg:x="1693" fg:w="30"/><text x="43.3280%" y="447.50"></text></g><g><title>unmap_single_vma (30 samples, 0.77%)</title><rect x="43.2108%" y="421" width="0.7657%" height="15" fill="rgb(233,156,4)" fg:x="1693" fg:w="30"/><text x="43.3280%" y="431.50"></text></g><g><title>unmap_page_range (30 samples, 0.77%)</title><rect x="43.2108%" y="405" width="0.7657%" height="15" fill="rgb(207,194,5)" fg:x="1693" fg:w="30"/><text x="43.3280%" y="415.50"></text></g><g><title>zap_pmd_range.isra.0 (30 samples, 0.77%)</title><rect x="43.2108%" y="389" width="0.7657%" height="15" fill="rgb(206,111,30)" fg:x="1693" fg:w="30"/><text x="43.3280%" y="399.50"></text></g><g><title>zap_pte_range (25 samples, 0.64%)</title><rect x="43.3384%" y="373" width="0.6381%" height="15" fill="rgb(243,70,54)" fg:x="1698" fg:w="25"/><text x="43.4556%" y="383.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.54%)</title><rect x="43.4405%" y="357" width="0.5360%" height="15" fill="rgb(242,28,8)" fg:x="1702" fg:w="21"/><text x="43.5577%" y="367.50"></text></g><g><title>tlb_batch_pages_flush (21 samples, 0.54%)</title><rect x="43.4405%" y="341" width="0.5360%" height="15" fill="rgb(219,106,18)" fg:x="1702" fg:w="21"/><text x="43.5577%" y="351.50"></text></g><g><title>free_pages_and_swap_cache (21 samples, 0.54%)</title><rect x="43.4405%" y="325" width="0.5360%" height="15" fill="rgb(244,222,10)" fg:x="1702" fg:w="21"/><text x="43.5577%" y="335.50"></text></g><g><title>release_pages (21 samples, 0.54%)</title><rect x="43.4405%" y="309" width="0.5360%" height="15" fill="rgb(236,179,52)" fg:x="1702" fg:w="21"/><text x="43.5577%" y="319.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (7 samples, 0.18%)</title><rect x="43.7979%" y="293" width="0.1787%" height="15" fill="rgb(213,23,39)" fg:x="1716" fg:w="7"/><text x="43.9150%" y="303.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="43.9255%" y="277" width="0.0510%" height="15" fill="rgb(238,48,10)" fg:x="1721" fg:w="2"/><text x="44.0427%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="43.9255%" y="261" width="0.0510%" height="15" fill="rgb(251,196,23)" fg:x="1721" fg:w="2"/><text x="44.0427%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.82%)</title><rect x="43.9765%" y="597" width="0.8167%" height="15" fill="rgb(250,152,24)" fg:x="1723" fg:w="32"/><text x="44.0937%" y="607.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (26 samples, 0.66%)</title><rect x="44.1297%" y="581" width="0.6636%" height="15" fill="rgb(209,150,17)" fg:x="1729" fg:w="26"/><text x="44.2468%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (26 samples, 0.66%)</title><rect x="44.1297%" y="565" width="0.6636%" height="15" fill="rgb(234,202,34)" fg:x="1729" fg:w="26"/><text x="44.2468%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (26 samples, 0.66%)</title><rect x="44.1297%" y="549" width="0.6636%" height="15" fill="rgb(253,148,53)" fg:x="1729" fg:w="26"/><text x="44.2468%" y="559.50"></text></g><g><title>core::ptr::write (26 samples, 0.66%)</title><rect x="44.1297%" y="533" width="0.6636%" height="15" fill="rgb(218,129,16)" fg:x="1729" fg:w="26"/><text x="44.2468%" y="543.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (60 samples, 1.53%)</title><rect x="43.9765%" y="693" width="1.5314%" height="15" fill="rgb(216,85,19)" fg:x="1723" fg:w="60"/><text x="44.0937%" y="703.50">fri..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (60 samples, 1.53%)</title><rect x="43.9765%" y="677" width="1.5314%" height="15" fill="rgb(235,228,7)" fg:x="1723" fg:w="60"/><text x="44.0937%" y="687.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (60 samples, 1.53%)</title><rect x="43.9765%" y="661" width="1.5314%" height="15" fill="rgb(245,175,0)" fg:x="1723" fg:w="60"/><text x="44.0937%" y="671.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (60 samples, 1.53%)</title><rect x="43.9765%" y="645" width="1.5314%" height="15" fill="rgb(208,168,36)" fg:x="1723" fg:w="60"/><text x="44.0937%" y="655.50">all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (60 samples, 1.53%)</title><rect x="43.9765%" y="629" width="1.5314%" height="15" fill="rgb(246,171,24)" fg:x="1723" fg:w="60"/><text x="44.0937%" y="639.50">cor..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (60 samples, 1.53%)</title><rect x="43.9765%" y="613" width="1.5314%" height="15" fill="rgb(215,142,24)" fg:x="1723" fg:w="60"/><text x="44.0937%" y="623.50">&lt;co..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (28 samples, 0.71%)</title><rect x="44.7933%" y="597" width="0.7147%" height="15" fill="rgb(250,187,7)" fg:x="1755" fg:w="28"/><text x="44.9104%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="49.8213%" y="661" width="0.0255%" height="15" fill="rgb(228,66,33)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="49.8213%" y="645" width="0.0255%" height="15" fill="rgb(234,215,21)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="49.8213%" y="629" width="0.0255%" height="15" fill="rgb(222,191,20)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="639.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="49.8213%" y="613" width="0.0255%" height="15" fill="rgb(245,79,54)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="623.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="49.8213%" y="597" width="0.0255%" height="15" fill="rgb(240,10,37)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="607.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="49.8213%" y="581" width="0.0255%" height="15" fill="rgb(214,192,32)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="591.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="49.8213%" y="565" width="0.0255%" height="15" fill="rgb(209,36,54)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="575.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="49.8213%" y="549" width="0.0255%" height="15" fill="rgb(220,10,11)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="559.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="49.8213%" y="533" width="0.0255%" height="15" fill="rgb(221,106,17)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="543.50"></text></g><g><title>arch_scale_freq_tick (1 samples, 0.03%)</title><rect x="49.8213%" y="517" width="0.0255%" height="15" fill="rgb(251,142,44)" fg:x="1952" fg:w="1"/><text x="49.9385%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (278 samples, 7.10%)</title><rect x="45.5079%" y="693" width="7.0955%" height="15" fill="rgb(238,13,15)" fg:x="1783" fg:w="278"/><text x="45.6251%" y="703.50">fringe_vs_astar::struct..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (278 samples, 7.10%)</title><rect x="45.5079%" y="677" width="7.0955%" height="15" fill="rgb(208,107,27)" fg:x="1783" fg:w="278"/><text x="45.6251%" y="687.50">alloc::vec::Vec&lt;T,A&gt;::p..</text></g><g><title>core::ptr::read (108 samples, 2.76%)</title><rect x="49.8469%" y="661" width="2.7565%" height="15" fill="rgb(205,136,37)" fg:x="1953" fg:w="108"/><text x="49.9640%" y="671.50">core::p..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (178 samples, 4.54%)</title><rect x="52.6034%" y="693" width="4.5431%" height="15" fill="rgb(250,205,27)" fg:x="2061" fg:w="178"/><text x="52.7206%" y="703.50">fringe_vs_asta..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (178 samples, 4.54%)</title><rect x="52.6034%" y="677" width="4.5431%" height="15" fill="rgb(210,80,43)" fg:x="2061" fg:w="178"/><text x="52.7206%" y="687.50">alloc::vec::Ve..</text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="57.1210%" y="661" width="0.0255%" height="15" fill="rgb(247,160,36)" fg:x="2238" fg:w="1"/><text x="57.2382%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_now (2 samples, 0.05%)</title><rect x="57.1465%" y="693" width="0.0510%" height="15" fill="rgb(234,13,49)" fg:x="2239" fg:w="2"/><text x="57.2637%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.05%)</title><rect x="57.1465%" y="677" width="0.0510%" height="15" fill="rgb(234,122,0)" fg:x="2239" fg:w="2"/><text x="57.2637%" y="687.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (2,010 samples, 51.30%)</title><rect x="5.9214%" y="741" width="51.3017%" height="15" fill="rgb(207,146,38)" fg:x="232" fg:w="2010"/><text x="6.0386%" y="751.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (1,792 samples, 45.74%)</title><rect x="11.4855%" y="725" width="45.7376%" height="15" fill="rgb(207,177,25)" fg:x="450" fg:w="1792"/><text x="11.6026%" y="735.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1,524 samples, 38.90%)</title><rect x="18.3257%" y="709" width="38.8974%" height="15" fill="rgb(211,178,42)" fg:x="718" fg:w="1524"/><text x="18.4429%" y="719.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::neighbors (1 samples, 0.03%)</title><rect x="57.1975%" y="693" width="0.0255%" height="15" fill="rgb(230,69,54)" fg:x="2241" fg:w="1"/><text x="57.3147%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (3 samples, 0.08%)</title><rect x="57.6570%" y="709" width="0.0766%" height="15" fill="rgb(214,135,41)" fg:x="2259" fg:w="3"/><text x="57.7742%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3 samples, 0.08%)</title><rect x="57.6570%" y="693" width="0.0766%" height="15" fill="rgb(237,67,25)" fg:x="2259" fg:w="3"/><text x="57.7742%" y="703.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="59.2905%" y="677" width="0.0255%" height="15" fill="rgb(222,189,50)" fg:x="2323" fg:w="1"/><text x="59.4076%" y="687.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="59.3925%" y="629" width="0.0255%" height="15" fill="rgb(245,148,34)" fg:x="2327" fg:w="1"/><text x="59.5097%" y="639.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="59.4181%" y="629" width="0.0255%" height="15" fill="rgb(222,29,6)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="639.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="59.4181%" y="613" width="0.0255%" height="15" fill="rgb(221,189,43)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="623.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="59.4181%" y="597" width="0.0255%" height="15" fill="rgb(207,36,27)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="607.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="59.4181%" y="581" width="0.0255%" height="15" fill="rgb(217,90,24)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="591.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="59.4181%" y="565" width="0.0255%" height="15" fill="rgb(224,66,35)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="575.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="59.4181%" y="549" width="0.0255%" height="15" fill="rgb(221,13,50)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="559.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="59.4181%" y="533" width="0.0255%" height="15" fill="rgb(236,68,49)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="543.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="59.4181%" y="517" width="0.0255%" height="15" fill="rgb(229,146,28)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="527.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="59.4181%" y="501" width="0.0255%" height="15" fill="rgb(225,31,38)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="511.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="59.4181%" y="485" width="0.0255%" height="15" fill="rgb(250,208,3)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="495.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="59.4181%" y="469" width="0.0255%" height="15" fill="rgb(246,54,23)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="479.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="59.4181%" y="453" width="0.0255%" height="15" fill="rgb(243,76,11)" fg:x="2328" fg:w="1"/><text x="59.5353%" y="463.50"></text></g><g><title>down_read_trylock (2 samples, 0.05%)</title><rect x="59.4436%" y="629" width="0.0510%" height="15" fill="rgb(245,21,50)" fg:x="2329" fg:w="2"/><text x="59.5608%" y="639.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="59.8009%" y="565" width="0.0255%" height="15" fill="rgb(228,9,43)" fg:x="2343" fg:w="1"/><text x="59.9181%" y="575.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="59.8264%" y="565" width="0.0255%" height="15" fill="rgb(208,100,47)" fg:x="2344" fg:w="1"/><text x="59.9436%" y="575.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="59.8264%" y="549" width="0.0255%" height="15" fill="rgb(232,26,8)" fg:x="2344" fg:w="1"/><text x="59.9436%" y="559.50"></text></g><g><title>__rcu_read_unlock (24 samples, 0.61%)</title><rect x="59.8775%" y="549" width="0.6126%" height="15" fill="rgb(216,166,38)" fg:x="2346" fg:w="24"/><text x="59.9947%" y="559.50"></text></g><g><title>__count_memcg_events (6 samples, 0.15%)</title><rect x="60.5666%" y="533" width="0.1531%" height="15" fill="rgb(251,202,51)" fg:x="2373" fg:w="6"/><text x="60.6838%" y="543.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="60.6942%" y="517" width="0.0255%" height="15" fill="rgb(254,216,34)" fg:x="2378" fg:w="1"/><text x="60.8114%" y="527.50"></text></g><g><title>charge_memcg (15 samples, 0.38%)</title><rect x="60.4900%" y="549" width="0.3828%" height="15" fill="rgb(251,32,27)" fg:x="2370" fg:w="15"/><text x="60.6072%" y="559.50"></text></g><g><title>try_charge_memcg (6 samples, 0.15%)</title><rect x="60.7198%" y="533" width="0.1531%" height="15" fill="rgb(208,127,28)" fg:x="2379" fg:w="6"/><text x="60.8369%" y="543.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="60.8474%" y="517" width="0.0255%" height="15" fill="rgb(224,137,22)" fg:x="2384" fg:w="1"/><text x="60.9646%" y="527.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.08%)</title><rect x="60.8729%" y="549" width="0.0766%" height="15" fill="rgb(254,70,32)" fg:x="2385" fg:w="3"/><text x="60.9901%" y="559.50"></text></g><g><title>__mem_cgroup_charge (45 samples, 1.15%)</title><rect x="59.8520%" y="565" width="1.1485%" height="15" fill="rgb(229,75,37)" fg:x="2345" fg:w="45"/><text x="59.9692%" y="575.50">__..</text></g><g><title>try_charge_memcg (2 samples, 0.05%)</title><rect x="60.9495%" y="549" width="0.0510%" height="15" fill="rgb(252,64,23)" fg:x="2388" fg:w="2"/><text x="61.0667%" y="559.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.05%)</title><rect x="61.0005%" y="565" width="0.0510%" height="15" fill="rgb(232,162,48)" fg:x="2390" fg:w="2"/><text x="61.1177%" y="575.50"></text></g><g><title>__pte_offset_map (2 samples, 0.05%)</title><rect x="61.0005%" y="549" width="0.0510%" height="15" fill="rgb(246,160,12)" fg:x="2390" fg:w="2"/><text x="61.1177%" y="559.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.05%)</title><rect x="61.0516%" y="565" width="0.0510%" height="15" fill="rgb(247,166,0)" fg:x="2392" fg:w="2"/><text x="61.1687%" y="575.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="61.1026%" y="565" width="0.0255%" height="15" fill="rgb(249,219,21)" fg:x="2394" fg:w="1"/><text x="61.2198%" y="575.50"></text></g><g><title>lru_add_fn (9 samples, 0.23%)</title><rect x="61.1536%" y="517" width="0.2297%" height="15" fill="rgb(205,209,3)" fg:x="2396" fg:w="9"/><text x="61.2708%" y="527.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.15%)</title><rect x="61.2302%" y="501" width="0.1531%" height="15" fill="rgb(243,44,1)" fg:x="2399" fg:w="6"/><text x="61.3474%" y="511.50"></text></g><g><title>folio_add_lru_vma (11 samples, 0.28%)</title><rect x="61.1281%" y="565" width="0.2808%" height="15" fill="rgb(206,159,16)" fg:x="2395" fg:w="11"/><text x="61.2453%" y="575.50"></text></g><g><title>folio_add_lru (11 samples, 0.28%)</title><rect x="61.1281%" y="549" width="0.2808%" height="15" fill="rgb(244,77,30)" fg:x="2395" fg:w="11"/><text x="61.2453%" y="559.50"></text></g><g><title>folio_batch_move_lru (10 samples, 0.26%)</title><rect x="61.1536%" y="533" width="0.2552%" height="15" fill="rgb(218,69,12)" fg:x="2396" fg:w="10"/><text x="61.2708%" y="543.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="61.3834%" y="517" width="0.0255%" height="15" fill="rgb(212,87,7)" fg:x="2405" fg:w="1"/><text x="61.5005%" y="527.50"></text></g><g><title>folio_add_new_anon_rmap (4 samples, 0.10%)</title><rect x="61.4089%" y="565" width="0.1021%" height="15" fill="rgb(245,114,25)" fg:x="2406" fg:w="4"/><text x="61.5261%" y="575.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.10%)</title><rect x="61.4089%" y="549" width="0.1021%" height="15" fill="rgb(210,61,42)" fg:x="2406" fg:w="4"/><text x="61.5261%" y="559.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.10%)</title><rect x="61.4089%" y="533" width="0.1021%" height="15" fill="rgb(211,52,33)" fg:x="2406" fg:w="4"/><text x="61.5261%" y="543.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.08%)</title><rect x="61.4344%" y="517" width="0.0766%" height="15" fill="rgb(234,58,33)" fg:x="2407" fg:w="3"/><text x="61.5516%" y="527.50"></text></g><g><title>inc_mm_counter (1 samples, 0.03%)</title><rect x="61.5110%" y="565" width="0.0255%" height="15" fill="rgb(220,115,36)" fg:x="2410" fg:w="1"/><text x="61.6282%" y="575.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="61.5110%" y="549" width="0.0255%" height="15" fill="rgb(243,153,54)" fg:x="2410" fg:w="1"/><text x="61.6282%" y="559.50"></text></g><g><title>policy_nodemask (1 samples, 0.03%)</title><rect x="61.5365%" y="565" width="0.0255%" height="15" fill="rgb(251,47,18)" fg:x="2411" fg:w="1"/><text x="61.6537%" y="575.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="61.6896%" y="517" width="0.0255%" height="15" fill="rgb(242,102,42)" fg:x="2417" fg:w="1"/><text x="61.8068%" y="527.50"></text></g><g><title>clear_page_erms (5 samples, 0.13%)</title><rect x="61.7917%" y="501" width="0.1276%" height="15" fill="rgb(234,31,38)" fg:x="2421" fg:w="5"/><text x="61.9089%" y="511.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="61.9193%" y="501" width="0.0255%" height="15" fill="rgb(221,117,51)" fg:x="2426" fg:w="1"/><text x="62.0365%" y="511.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.38%)</title><rect x="61.7152%" y="517" width="0.3828%" height="15" fill="rgb(212,20,18)" fg:x="2418" fg:w="15"/><text x="61.8323%" y="527.50"></text></g><g><title>rmqueue (6 samples, 0.15%)</title><rect x="61.9449%" y="501" width="0.1531%" height="15" fill="rgb(245,133,36)" fg:x="2427" fg:w="6"/><text x="62.0621%" y="511.50"></text></g><g><title>__rmqueue_pcplist (6 samples, 0.15%)</title><rect x="61.9449%" y="485" width="0.1531%" height="15" fill="rgb(212,6,19)" fg:x="2427" fg:w="6"/><text x="62.0621%" y="495.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.13%)</title><rect x="61.9704%" y="469" width="0.1276%" height="15" fill="rgb(218,1,36)" fg:x="2428" fg:w="5"/><text x="62.0876%" y="479.50"></text></g><g><title>do_anonymous_page (92 samples, 2.35%)</title><rect x="59.7754%" y="581" width="2.3481%" height="15" fill="rgb(246,84,54)" fg:x="2342" fg:w="92"/><text x="59.8926%" y="591.50">do_ano..</text></g><g><title>vma_alloc_folio (22 samples, 0.56%)</title><rect x="61.5620%" y="565" width="0.5615%" height="15" fill="rgb(242,110,6)" fg:x="2412" fg:w="22"/><text x="61.6792%" y="575.50"></text></g><g><title>__folio_alloc (20 samples, 0.51%)</title><rect x="61.6131%" y="549" width="0.5105%" height="15" fill="rgb(214,47,5)" fg:x="2414" fg:w="20"/><text x="61.7303%" y="559.50"></text></g><g><title>__alloc_pages (20 samples, 0.51%)</title><rect x="61.6131%" y="533" width="0.5105%" height="15" fill="rgb(218,159,25)" fg:x="2414" fg:w="20"/><text x="61.7303%" y="543.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="62.0980%" y="517" width="0.0255%" height="15" fill="rgb(215,211,28)" fg:x="2433" fg:w="1"/><text x="62.2152%" y="527.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="62.1235%" y="581" width="0.0255%" height="15" fill="rgb(238,59,32)" fg:x="2434" fg:w="1"/><text x="62.2407%" y="591.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="62.1491%" y="581" width="0.0255%" height="15" fill="rgb(226,82,3)" fg:x="2435" fg:w="1"/><text x="62.2662%" y="591.50"></text></g><g><title>__handle_mm_fault (102 samples, 2.60%)</title><rect x="59.6223%" y="613" width="2.6034%" height="15" fill="rgb(240,164,32)" fg:x="2336" fg:w="102"/><text x="59.7394%" y="623.50">__handl..</text></g><g><title>handle_pte_fault (97 samples, 2.48%)</title><rect x="59.7499%" y="597" width="2.4758%" height="15" fill="rgb(232,46,7)" fg:x="2341" fg:w="97"/><text x="59.8671%" y="607.50">handle..</text></g><g><title>pte_offset_map_nolock (2 samples, 0.05%)</title><rect x="62.1746%" y="581" width="0.0510%" height="15" fill="rgb(229,129,53)" fg:x="2436" fg:w="2"/><text x="62.2918%" y="591.50"></text></g><g><title>__pte_offset_map (2 samples, 0.05%)</title><rect x="62.1746%" y="565" width="0.0510%" height="15" fill="rgb(234,188,29)" fg:x="2436" fg:w="2"/><text x="62.2918%" y="575.50"></text></g><g><title>handle_mm_fault (108 samples, 2.76%)</title><rect x="59.4946%" y="629" width="2.7565%" height="15" fill="rgb(246,141,4)" fg:x="2331" fg:w="108"/><text x="59.6118%" y="639.50">handle_..</text></g><g><title>mem_cgroup_from_task (1 samples, 0.03%)</title><rect x="62.2256%" y="613" width="0.0255%" height="15" fill="rgb(229,23,39)" fg:x="2438" fg:w="1"/><text x="62.3428%" y="623.50"></text></g><g><title>lock_vma_under_rcu (5 samples, 0.13%)</title><rect x="62.2511%" y="629" width="0.1276%" height="15" fill="rgb(206,12,3)" fg:x="2439" fg:w="5"/><text x="62.3683%" y="639.50"></text></g><g><title>mas_walk (3 samples, 0.08%)</title><rect x="62.3022%" y="613" width="0.0766%" height="15" fill="rgb(252,226,20)" fg:x="2441" fg:w="3"/><text x="62.4194%" y="623.50"></text></g><g><title>mtree_range_walk (3 samples, 0.08%)</title><rect x="62.3022%" y="597" width="0.0766%" height="15" fill="rgb(216,123,35)" fg:x="2441" fg:w="3"/><text x="62.4194%" y="607.50"></text></g><g><title>asm_exc_page_fault (123 samples, 3.14%)</title><rect x="59.3160%" y="677" width="3.1394%" height="15" fill="rgb(212,68,40)" fg:x="2324" fg:w="123"/><text x="59.4332%" y="687.50">asm_exc_p..</text></g><g><title>exc_page_fault (120 samples, 3.06%)</title><rect x="59.3925%" y="661" width="3.0628%" height="15" fill="rgb(254,125,32)" fg:x="2327" fg:w="120"/><text x="59.5097%" y="671.50">exc_page_..</text></g><g><title>do_user_addr_fault (120 samples, 3.06%)</title><rect x="59.3925%" y="645" width="3.0628%" height="15" fill="rgb(253,97,22)" fg:x="2327" fg:w="120"/><text x="59.5097%" y="655.50">do_user_a..</text></g><g><title>up_read (3 samples, 0.08%)</title><rect x="62.3788%" y="629" width="0.0766%" height="15" fill="rgb(241,101,14)" fg:x="2444" fg:w="3"/><text x="62.4960%" y="639.50"></text></g><g><title>error_entry (2 samples, 0.05%)</title><rect x="62.4553%" y="677" width="0.0510%" height="15" fill="rgb(238,103,29)" fg:x="2447" fg:w="2"/><text x="62.5725%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (208 samples, 5.31%)</title><rect x="57.7335%" y="709" width="5.3088%" height="15" fill="rgb(233,195,47)" fg:x="2262" fg:w="208"/><text x="57.8507%" y="719.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (188 samples, 4.80%)</title><rect x="58.2440%" y="693" width="4.7984%" height="15" fill="rgb(246,218,30)" fg:x="2282" fg:w="188"/><text x="58.3612%" y="703.50">core::ptr::write</text></g><g><title>sync_regs (21 samples, 0.54%)</title><rect x="62.5064%" y="677" width="0.5360%" height="15" fill="rgb(219,145,47)" fg:x="2449" fg:w="21"/><text x="62.6236%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.28%)</title><rect x="63.0424%" y="709" width="0.2808%" height="15" fill="rgb(243,12,26)" fg:x="2470" fg:w="11"/><text x="63.1596%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.28%)</title><rect x="63.0424%" y="693" width="0.2808%" height="15" fill="rgb(214,87,16)" fg:x="2470" fg:w="11"/><text x="63.1596%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (10 samples, 0.26%)</title><rect x="63.0679%" y="677" width="0.2552%" height="15" fill="rgb(208,99,42)" fg:x="2471" fg:w="10"/><text x="63.1851%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.08%)</title><rect x="63.6039%" y="613" width="0.0766%" height="15" fill="rgb(253,99,2)" fg:x="2492" fg:w="3"/><text x="63.7211%" y="623.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.08%)</title><rect x="63.6039%" y="597" width="0.0766%" height="15" fill="rgb(220,168,23)" fg:x="2492" fg:w="3"/><text x="63.7211%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.08%)</title><rect x="63.6039%" y="581" width="0.0766%" height="15" fill="rgb(242,38,24)" fg:x="2492" fg:w="3"/><text x="63.7211%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (3 samples, 0.08%)</title><rect x="63.6039%" y="565" width="0.0766%" height="15" fill="rgb(225,182,9)" fg:x="2492" fg:w="3"/><text x="63.7211%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.08%)</title><rect x="63.6039%" y="549" width="0.0766%" height="15" fill="rgb(243,178,37)" fg:x="2492" fg:w="3"/><text x="63.7211%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="63.6804%" y="613" width="0.0510%" height="15" fill="rgb(232,139,19)" fg:x="2495" fg:w="2"/><text x="63.7976%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="63.6804%" y="597" width="0.0510%" height="15" fill="rgb(225,201,24)" fg:x="2495" fg:w="2"/><text x="63.7976%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.84%)</title><rect x="63.7315%" y="549" width="0.8423%" height="15" fill="rgb(221,47,46)" fg:x="2497" fg:w="33"/><text x="63.8487%" y="559.50">&lt;..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (17 samples, 0.43%)</title><rect x="64.1399%" y="533" width="0.4339%" height="15" fill="rgb(249,23,13)" fg:x="2513" fg:w="17"/><text x="64.2571%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.92%)</title><rect x="63.7315%" y="565" width="0.9188%" height="15" fill="rgb(219,9,5)" fg:x="2497" fg:w="36"/><text x="63.8487%" y="575.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.08%)</title><rect x="64.5738%" y="549" width="0.0766%" height="15" fill="rgb(254,171,16)" fg:x="2530" fg:w="3"/><text x="64.6909%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.10%)</title><rect x="64.6503%" y="549" width="0.1021%" height="15" fill="rgb(230,171,20)" fg:x="2533" fg:w="4"/><text x="64.7675%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4 samples, 0.10%)</title><rect x="64.6503%" y="533" width="0.1021%" height="15" fill="rgb(210,71,41)" fg:x="2533" fg:w="4"/><text x="64.7675%" y="543.50"></text></g><g><title>core::ptr::write (4 samples, 0.10%)</title><rect x="64.6503%" y="517" width="0.1021%" height="15" fill="rgb(206,173,20)" fg:x="2533" fg:w="4"/><text x="64.7675%" y="527.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="64.7269%" y="501" width="0.0255%" height="15" fill="rgb(233,88,34)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="64.7269%" y="485" width="0.0255%" height="15" fill="rgb(223,209,46)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="495.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="64.7269%" y="469" width="0.0255%" height="15" fill="rgb(250,43,18)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="479.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="64.7269%" y="453" width="0.0255%" height="15" fill="rgb(208,13,10)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="463.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="64.7269%" y="437" width="0.0255%" height="15" fill="rgb(212,200,36)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="447.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="64.7269%" y="421" width="0.0255%" height="15" fill="rgb(225,90,30)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="431.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="64.7269%" y="405" width="0.0255%" height="15" fill="rgb(236,182,39)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="415.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="64.7269%" y="389" width="0.0255%" height="15" fill="rgb(212,144,35)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="399.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="64.7269%" y="373" width="0.0255%" height="15" fill="rgb(228,63,44)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="383.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="64.7269%" y="357" width="0.0255%" height="15" fill="rgb(228,109,6)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="367.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="64.7269%" y="341" width="0.0255%" height="15" fill="rgb(238,117,24)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="351.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="64.7269%" y="325" width="0.0255%" height="15" fill="rgb(242,26,26)" fg:x="2536" fg:w="1"/><text x="64.8441%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (16 samples, 0.41%)</title><rect x="64.6503%" y="565" width="0.4084%" height="15" fill="rgb(221,92,48)" fg:x="2533" fg:w="16"/><text x="64.7675%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (12 samples, 0.31%)</title><rect x="64.7524%" y="549" width="0.3063%" height="15" fill="rgb(209,209,32)" fg:x="2537" fg:w="12"/><text x="64.8696%" y="559.50"></text></g><g><title>fringe_vs_astar::xy_to_index (12 samples, 0.31%)</title><rect x="64.7524%" y="533" width="0.3063%" height="15" fill="rgb(221,70,22)" fg:x="2537" fg:w="12"/><text x="64.8696%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (61 samples, 1.56%)</title><rect x="63.5528%" y="645" width="1.5569%" height="15" fill="rgb(248,145,5)" fg:x="2490" fg:w="61"/><text x="63.6700%" y="655.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (61 samples, 1.56%)</title><rect x="63.5528%" y="629" width="1.5569%" height="15" fill="rgb(226,116,26)" fg:x="2490" fg:w="61"/><text x="63.6700%" y="639.50">all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (54 samples, 1.38%)</title><rect x="63.7315%" y="613" width="1.3783%" height="15" fill="rgb(244,5,17)" fg:x="2497" fg:w="54"/><text x="63.8487%" y="623.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 1.38%)</title><rect x="63.7315%" y="597" width="1.3783%" height="15" fill="rgb(252,159,33)" fg:x="2497" fg:w="54"/><text x="63.8487%" y="607.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (54 samples, 1.38%)</title><rect x="63.7315%" y="581" width="1.3783%" height="15" fill="rgb(206,71,0)" fg:x="2497" fg:w="54"/><text x="63.8487%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.05%)</title><rect x="65.0587%" y="565" width="0.0510%" height="15" fill="rgb(233,118,54)" fg:x="2549" fg:w="2"/><text x="65.1759%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="65.0587%" y="549" width="0.0510%" height="15" fill="rgb(234,83,48)" fg:x="2549" fg:w="2"/><text x="65.1759%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (2 samples, 0.05%)</title><rect x="65.0587%" y="533" width="0.0510%" height="15" fill="rgb(228,3,54)" fg:x="2549" fg:w="2"/><text x="65.1759%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="65.0587%" y="517" width="0.0510%" height="15" fill="rgb(226,155,13)" fg:x="2549" fg:w="2"/><text x="65.1759%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.13%)</title><rect x="65.1097%" y="645" width="0.1276%" height="15" fill="rgb(241,28,37)" fg:x="2551" fg:w="5"/><text x="65.2269%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.13%)</title><rect x="65.1097%" y="629" width="0.1276%" height="15" fill="rgb(233,93,10)" fg:x="2551" fg:w="5"/><text x="65.2269%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.13%)</title><rect x="65.1097%" y="613" width="0.1276%" height="15" fill="rgb(225,113,19)" fg:x="2551" fg:w="5"/><text x="65.2269%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (5 samples, 0.13%)</title><rect x="65.1097%" y="597" width="0.1276%" height="15" fill="rgb(241,2,18)" fg:x="2551" fg:w="5"/><text x="65.2269%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (5 samples, 0.13%)</title><rect x="65.1097%" y="581" width="0.1276%" height="15" fill="rgb(228,207,21)" fg:x="2551" fg:w="5"/><text x="65.2269%" y="591.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="65.2118%" y="565" width="0.0255%" height="15" fill="rgb(213,211,35)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="575.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="65.2118%" y="549" width="0.0255%" height="15" fill="rgb(209,83,10)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="559.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="65.2118%" y="533" width="0.0255%" height="15" fill="rgb(209,164,1)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="543.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="65.2118%" y="517" width="0.0255%" height="15" fill="rgb(213,184,43)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="527.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="65.2118%" y="501" width="0.0255%" height="15" fill="rgb(231,61,34)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="511.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="65.2118%" y="485" width="0.0255%" height="15" fill="rgb(235,75,3)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="495.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="65.2118%" y="469" width="0.0255%" height="15" fill="rgb(220,106,47)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="479.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="65.2118%" y="453" width="0.0255%" height="15" fill="rgb(210,196,33)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="463.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="65.2118%" y="437" width="0.0255%" height="15" fill="rgb(229,154,42)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="447.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="65.2118%" y="421" width="0.0255%" height="15" fill="rgb(228,114,26)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="431.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="65.2118%" y="405" width="0.0255%" height="15" fill="rgb(208,144,1)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="415.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="65.2118%" y="389" width="0.0255%" height="15" fill="rgb(239,112,37)" fg:x="2555" fg:w="1"/><text x="65.3290%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.10%)</title><rect x="65.2629%" y="597" width="0.1021%" height="15" fill="rgb(210,96,50)" fg:x="2557" fg:w="4"/><text x="65.3801%" y="607.50"></text></g><g><title>__irqentry_text_end (2 samples, 0.05%)</title><rect x="67.6876%" y="501" width="0.0510%" height="15" fill="rgb(222,178,2)" fg:x="2652" fg:w="2"/><text x="67.8048%" y="511.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="67.7386%" y="501" width="0.0255%" height="15" fill="rgb(226,74,18)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="67.7386%" y="485" width="0.0255%" height="15" fill="rgb(225,67,54)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="495.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="67.7386%" y="469" width="0.0255%" height="15" fill="rgb(251,92,32)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="479.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="67.7386%" y="453" width="0.0255%" height="15" fill="rgb(228,149,22)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="463.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="67.7386%" y="437" width="0.0255%" height="15" fill="rgb(243,54,13)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="447.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="67.7386%" y="421" width="0.0255%" height="15" fill="rgb(243,180,28)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="431.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="67.7386%" y="405" width="0.0255%" height="15" fill="rgb(208,167,24)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="415.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="67.7386%" y="389" width="0.0255%" height="15" fill="rgb(245,73,45)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="399.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="67.7386%" y="373" width="0.0255%" height="15" fill="rgb(237,203,48)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="383.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="67.7386%" y="357" width="0.0255%" height="15" fill="rgb(211,197,16)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="367.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="67.7386%" y="341" width="0.0255%" height="15" fill="rgb(243,99,51)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="351.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="67.7386%" y="325" width="0.0255%" height="15" fill="rgb(215,123,29)" fg:x="2654" fg:w="1"/><text x="67.8558%" y="335.50"></text></g><g><title>access_error (2 samples, 0.05%)</title><rect x="67.7897%" y="469" width="0.0510%" height="15" fill="rgb(239,186,37)" fg:x="2656" fg:w="2"/><text x="67.9069%" y="479.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="67.9173%" y="453" width="0.0255%" height="15" fill="rgb(252,136,39)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="463.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="67.9173%" y="437" width="0.0255%" height="15" fill="rgb(223,213,32)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="447.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="67.9173%" y="421" width="0.0255%" height="15" fill="rgb(233,115,5)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="431.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="67.9173%" y="405" width="0.0255%" height="15" fill="rgb(207,226,44)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="415.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="67.9173%" y="389" width="0.0255%" height="15" fill="rgb(208,126,0)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="399.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="67.9173%" y="373" width="0.0255%" height="15" fill="rgb(244,66,21)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="383.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="67.9173%" y="357" width="0.0255%" height="15" fill="rgb(222,97,12)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="367.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="67.9173%" y="341" width="0.0255%" height="15" fill="rgb(219,213,19)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="351.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="67.9173%" y="325" width="0.0255%" height="15" fill="rgb(252,169,30)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="335.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="67.9173%" y="309" width="0.0255%" height="15" fill="rgb(206,32,51)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="319.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="67.9173%" y="293" width="0.0255%" height="15" fill="rgb(250,172,42)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="303.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="67.9173%" y="277" width="0.0255%" height="15" fill="rgb(209,34,43)" fg:x="2661" fg:w="1"/><text x="68.0345%" y="287.50"></text></g><g><title>down_read_trylock (4 samples, 0.10%)</title><rect x="67.9428%" y="453" width="0.1021%" height="15" fill="rgb(223,11,35)" fg:x="2662" fg:w="4"/><text x="68.0600%" y="463.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="68.2746%" y="421" width="0.0255%" height="15" fill="rgb(251,219,26)" fg:x="2675" fg:w="1"/><text x="68.3918%" y="431.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="68.3002%" y="405" width="0.0255%" height="15" fill="rgb(231,119,3)" fg:x="2676" fg:w="1"/><text x="68.4173%" y="415.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="68.3257%" y="405" width="0.0255%" height="15" fill="rgb(216,97,11)" fg:x="2677" fg:w="1"/><text x="68.4429%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="68.4022%" y="373" width="0.0255%" height="15" fill="rgb(223,59,9)" fg:x="2680" fg:w="1"/><text x="68.5194%" y="383.50"></text></g><g><title>__folio_throttle_swaprate (3 samples, 0.08%)</title><rect x="68.3767%" y="389" width="0.0766%" height="15" fill="rgb(233,93,31)" fg:x="2679" fg:w="3"/><text x="68.4939%" y="399.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="68.4278%" y="373" width="0.0255%" height="15" fill="rgb(239,81,33)" fg:x="2681" fg:w="1"/><text x="68.5450%" y="383.50"></text></g><g><title>kthread_blkcg (1 samples, 0.03%)</title><rect x="68.4278%" y="357" width="0.0255%" height="15" fill="rgb(213,120,34)" fg:x="2681" fg:w="1"/><text x="68.5450%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="68.5809%" y="373" width="0.0255%" height="15" fill="rgb(243,49,53)" fg:x="2687" fg:w="1"/><text x="68.6981%" y="383.50"></text></g><g><title>__rcu_read_unlock (30 samples, 0.77%)</title><rect x="68.6064%" y="373" width="0.7657%" height="15" fill="rgb(247,216,33)" fg:x="2688" fg:w="30"/><text x="68.7236%" y="383.50"></text></g><g><title>__count_memcg_events (8 samples, 0.20%)</title><rect x="69.6018%" y="357" width="0.2042%" height="15" fill="rgb(226,26,14)" fg:x="2727" fg:w="8"/><text x="69.7190%" y="367.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.10%)</title><rect x="69.7039%" y="341" width="0.1021%" height="15" fill="rgb(215,49,53)" fg:x="2731" fg:w="4"/><text x="69.8211%" y="351.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.05%)</title><rect x="70.0102%" y="341" width="0.0510%" height="15" fill="rgb(245,162,40)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="351.50"></text></g><g><title>common_interrupt (2 samples, 0.05%)</title><rect x="70.0102%" y="325" width="0.0510%" height="15" fill="rgb(229,68,17)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="335.50"></text></g><g><title>__common_interrupt (2 samples, 0.05%)</title><rect x="70.0102%" y="309" width="0.0510%" height="15" fill="rgb(213,182,10)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="319.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.05%)</title><rect x="70.0102%" y="293" width="0.0510%" height="15" fill="rgb(245,125,30)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="303.50"></text></g><g><title>handle_irq_event (2 samples, 0.05%)</title><rect x="70.0102%" y="277" width="0.0510%" height="15" fill="rgb(232,202,2)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.05%)</title><rect x="70.0102%" y="261" width="0.0510%" height="15" fill="rgb(237,140,51)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="271.50"></text></g><g><title>acpi_irq (2 samples, 0.05%)</title><rect x="70.0102%" y="245" width="0.0510%" height="15" fill="rgb(236,157,25)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="255.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (2 samples, 0.05%)</title><rect x="70.0102%" y="229" width="0.0510%" height="15" fill="rgb(219,209,0)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="239.50"></text></g><g><title>acpi_ev_gpe_detect (2 samples, 0.05%)</title><rect x="70.0102%" y="213" width="0.0510%" height="15" fill="rgb(240,116,54)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="223.50"></text></g><g><title>acpi_ev_detect_gpe (2 samples, 0.05%)</title><rect x="70.0102%" y="197" width="0.0510%" height="15" fill="rgb(216,10,36)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="207.50"></text></g><g><title>acpi_ec_gpe_handler (2 samples, 0.05%)</title><rect x="70.0102%" y="181" width="0.0510%" height="15" fill="rgb(222,72,44)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="191.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (2 samples, 0.05%)</title><rect x="70.0102%" y="165" width="0.0510%" height="15" fill="rgb(232,159,9)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="175.50"></text></g><g><title>advance_transaction (2 samples, 0.05%)</title><rect x="70.0102%" y="149" width="0.0510%" height="15" fill="rgb(210,39,32)" fg:x="2743" fg:w="2"/><text x="70.1274%" y="159.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="70.0613%" y="341" width="0.0255%" height="15" fill="rgb(216,194,45)" fg:x="2745" fg:w="1"/><text x="70.1784%" y="351.50"></text></g><g><title>charge_memcg (29 samples, 0.74%)</title><rect x="69.3721%" y="373" width="0.7402%" height="15" fill="rgb(218,18,35)" fg:x="2718" fg:w="29"/><text x="69.4893%" y="383.50"></text></g><g><title>try_charge_memcg (12 samples, 0.31%)</title><rect x="69.8060%" y="357" width="0.3063%" height="15" fill="rgb(207,83,51)" fg:x="2735" fg:w="12"/><text x="69.9232%" y="367.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="70.0868%" y="341" width="0.0255%" height="15" fill="rgb(225,63,43)" fg:x="2746" fg:w="1"/><text x="70.2040%" y="351.50"></text></g><g><title>__mem_cgroup_charge (76 samples, 1.94%)</title><rect x="68.4533%" y="389" width="1.9398%" height="15" fill="rgb(207,57,36)" fg:x="2682" fg:w="76"/><text x="68.5705%" y="399.50">__mem..</text></g><g><title>get_mem_cgroup_from_mm (11 samples, 0.28%)</title><rect x="70.1123%" y="373" width="0.2808%" height="15" fill="rgb(216,99,33)" fg:x="2747" fg:w="11"/><text x="70.2295%" y="383.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="70.3675%" y="357" width="0.0255%" height="15" fill="rgb(225,42,16)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="367.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="70.3675%" y="341" width="0.0255%" height="15" fill="rgb(220,201,45)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="351.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="70.3675%" y="325" width="0.0255%" height="15" fill="rgb(225,33,4)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="335.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="70.3675%" y="309" width="0.0255%" height="15" fill="rgb(224,33,50)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="319.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="70.3675%" y="293" width="0.0255%" height="15" fill="rgb(246,198,51)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="70.3675%" y="277" width="0.0255%" height="15" fill="rgb(205,22,4)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="287.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="70.3675%" y="261" width="0.0255%" height="15" fill="rgb(206,3,8)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="271.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="70.3675%" y="245" width="0.0255%" height="15" fill="rgb(251,23,15)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="255.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="70.3675%" y="229" width="0.0255%" height="15" fill="rgb(252,88,28)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="239.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="70.3675%" y="213" width="0.0255%" height="15" fill="rgb(212,127,14)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="223.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="70.3675%" y="197" width="0.0255%" height="15" fill="rgb(247,145,37)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="207.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="70.3675%" y="181" width="0.0255%" height="15" fill="rgb(209,117,53)" fg:x="2757" fg:w="1"/><text x="70.4847%" y="191.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="70.3931%" y="389" width="0.0255%" height="15" fill="rgb(212,90,42)" fg:x="2758" fg:w="1"/><text x="70.5102%" y="399.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.03%)</title><rect x="70.4186%" y="389" width="0.0255%" height="15" fill="rgb(218,164,37)" fg:x="2759" fg:w="1"/><text x="70.5358%" y="399.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="70.4441%" y="389" width="0.0255%" height="15" fill="rgb(246,65,34)" fg:x="2760" fg:w="1"/><text x="70.5613%" y="399.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.08%)</title><rect x="70.4696%" y="389" width="0.0766%" height="15" fill="rgb(231,100,33)" fg:x="2761" fg:w="3"/><text x="70.5868%" y="399.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="70.5462%" y="389" width="0.0255%" height="15" fill="rgb(228,126,14)" fg:x="2764" fg:w="1"/><text x="70.6634%" y="399.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.03%)</title><rect x="70.7249%" y="341" width="0.0255%" height="15" fill="rgb(215,173,21)" fg:x="2771" fg:w="1"/><text x="70.8420%" y="351.50"></text></g><g><title>folio_mapping (1 samples, 0.03%)</title><rect x="70.7504%" y="341" width="0.0255%" height="15" fill="rgb(210,6,40)" fg:x="2772" fg:w="1"/><text x="70.8676%" y="351.50"></text></g><g><title>lru_add_fn (9 samples, 0.23%)</title><rect x="70.7759%" y="341" width="0.2297%" height="15" fill="rgb(212,48,18)" fg:x="2773" fg:w="9"/><text x="70.8931%" y="351.50"></text></g><g><title>lru_gen_add_folio (4 samples, 0.10%)</title><rect x="70.9035%" y="325" width="0.1021%" height="15" fill="rgb(230,214,11)" fg:x="2778" fg:w="4"/><text x="71.0207%" y="335.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.05%)</title><rect x="70.9546%" y="309" width="0.0510%" height="15" fill="rgb(254,105,39)" fg:x="2780" fg:w="2"/><text x="71.0718%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="70.9546%" y="293" width="0.0510%" height="15" fill="rgb(245,158,5)" fg:x="2780" fg:w="2"/><text x="71.0718%" y="303.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.05%)</title><rect x="70.9546%" y="277" width="0.0510%" height="15" fill="rgb(249,208,11)" fg:x="2780" fg:w="2"/><text x="71.0718%" y="287.50"></text></g><g><title>folio_add_lru_vma (19 samples, 0.48%)</title><rect x="70.5717%" y="389" width="0.4849%" height="15" fill="rgb(210,39,28)" fg:x="2765" fg:w="19"/><text x="70.6889%" y="399.50"></text></g><g><title>folio_add_lru (19 samples, 0.48%)</title><rect x="70.5717%" y="373" width="0.4849%" height="15" fill="rgb(211,56,53)" fg:x="2765" fg:w="19"/><text x="70.6889%" y="383.50"></text></g><g><title>folio_batch_move_lru (13 samples, 0.33%)</title><rect x="70.7249%" y="357" width="0.3318%" height="15" fill="rgb(226,201,30)" fg:x="2771" fg:w="13"/><text x="70.8420%" y="367.50"></text></g><g><title>release_pages (2 samples, 0.05%)</title><rect x="71.0056%" y="341" width="0.0510%" height="15" fill="rgb(239,101,34)" fg:x="2782" fg:w="2"/><text x="71.1228%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="71.1077%" y="357" width="0.0255%" height="15" fill="rgb(226,209,5)" fg:x="2786" fg:w="1"/><text x="71.2249%" y="367.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="71.1077%" y="341" width="0.0255%" height="15" fill="rgb(250,105,47)" fg:x="2786" fg:w="1"/><text x="71.2249%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.08%)</title><rect x="71.0822%" y="373" width="0.0766%" height="15" fill="rgb(230,72,3)" fg:x="2785" fg:w="3"/><text x="71.1994%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="71.1332%" y="357" width="0.0255%" height="15" fill="rgb(232,218,39)" fg:x="2787" fg:w="1"/><text x="71.2504%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.13%)</title><rect x="71.0567%" y="389" width="0.1276%" height="15" fill="rgb(248,166,6)" fg:x="2784" fg:w="5"/><text x="71.1738%" y="399.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="71.1588%" y="373" width="0.0255%" height="15" fill="rgb(247,89,20)" fg:x="2788" fg:w="1"/><text x="71.2759%" y="383.50"></text></g><g><title>inc_mm_counter (2 samples, 0.05%)</title><rect x="71.1843%" y="389" width="0.0510%" height="15" fill="rgb(248,130,54)" fg:x="2789" fg:w="2"/><text x="71.3015%" y="399.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="71.2098%" y="373" width="0.0255%" height="15" fill="rgb(234,196,4)" fg:x="2790" fg:w="1"/><text x="71.3270%" y="383.50"></text></g><g><title>policy_nodemask (2 samples, 0.05%)</title><rect x="71.2353%" y="389" width="0.0510%" height="15" fill="rgb(250,143,31)" fg:x="2791" fg:w="2"/><text x="71.3525%" y="399.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="71.3629%" y="373" width="0.0255%" height="15" fill="rgb(211,110,34)" fg:x="2796" fg:w="1"/><text x="71.4801%" y="383.50"></text></g><g><title>_raw_spin_trylock (5 samples, 0.13%)</title><rect x="71.6182%" y="325" width="0.1276%" height="15" fill="rgb(215,124,48)" fg:x="2806" fg:w="5"/><text x="71.7354%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="71.7458%" y="325" width="0.0255%" height="15" fill="rgb(216,46,13)" fg:x="2811" fg:w="1"/><text x="71.8630%" y="335.50"></text></g><g><title>clear_page_erms (10 samples, 0.26%)</title><rect x="71.7713%" y="325" width="0.2552%" height="15" fill="rgb(205,184,25)" fg:x="2812" fg:w="10"/><text x="71.8885%" y="335.50"></text></g><g><title>get_page_from_freelist (32 samples, 0.82%)</title><rect x="71.4650%" y="341" width="0.8167%" height="15" fill="rgb(228,1,10)" fg:x="2800" fg:w="32"/><text x="71.5822%" y="351.50"></text></g><g><title>rmqueue (10 samples, 0.26%)</title><rect x="72.0265%" y="325" width="0.2552%" height="15" fill="rgb(213,116,27)" fg:x="2822" fg:w="10"/><text x="72.1437%" y="335.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.23%)</title><rect x="72.0521%" y="309" width="0.2297%" height="15" fill="rgb(241,95,50)" fg:x="2823" fg:w="9"/><text x="72.1693%" y="319.50"></text></g><g><title>rmqueue_bulk (9 samples, 0.23%)</title><rect x="72.0521%" y="293" width="0.2297%" height="15" fill="rgb(238,48,32)" fg:x="2823" fg:w="9"/><text x="72.1693%" y="303.50"></text></g><g><title>__alloc_pages (37 samples, 0.94%)</title><rect x="71.3885%" y="357" width="0.9444%" height="15" fill="rgb(235,113,49)" fg:x="2797" fg:w="37"/><text x="71.5057%" y="367.50">_..</text></g><g><title>rmqueue (2 samples, 0.05%)</title><rect x="72.2818%" y="341" width="0.0510%" height="15" fill="rgb(205,127,43)" fg:x="2832" fg:w="2"/><text x="72.3990%" y="351.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="72.3073%" y="325" width="0.0255%" height="15" fill="rgb(250,162,2)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="335.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="72.3073%" y="309" width="0.0255%" height="15" fill="rgb(220,13,41)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="319.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="72.3073%" y="293" width="0.0255%" height="15" fill="rgb(249,221,25)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="303.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="72.3073%" y="277" width="0.0255%" height="15" fill="rgb(215,208,19)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="287.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="72.3073%" y="261" width="0.0255%" height="15" fill="rgb(236,175,2)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="72.3073%" y="245" width="0.0255%" height="15" fill="rgb(241,52,2)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="255.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="72.3073%" y="229" width="0.0255%" height="15" fill="rgb(248,140,14)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="239.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="72.3073%" y="213" width="0.0255%" height="15" fill="rgb(253,22,42)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="223.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="72.3073%" y="197" width="0.0255%" height="15" fill="rgb(234,61,47)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="207.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="72.3073%" y="181" width="0.0255%" height="15" fill="rgb(208,226,15)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="191.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="72.3073%" y="165" width="0.0255%" height="15" fill="rgb(217,221,4)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="175.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="72.3073%" y="149" width="0.0255%" height="15" fill="rgb(212,174,34)" fg:x="2833" fg:w="1"/><text x="72.4245%" y="159.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="72.3328%" y="357" width="0.0255%" height="15" fill="rgb(253,83,4)" fg:x="2834" fg:w="1"/><text x="72.4500%" y="367.50"></text></g><g><title>__folio_alloc (39 samples, 1.00%)</title><rect x="71.3885%" y="373" width="0.9954%" height="15" fill="rgb(250,195,49)" fg:x="2797" fg:w="39"/><text x="71.5057%" y="383.50">_..</text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="72.3583%" y="357" width="0.0255%" height="15" fill="rgb(241,192,25)" fg:x="2835" fg:w="1"/><text x="72.4755%" y="367.50"></text></g><g><title>do_anonymous_page (159 samples, 4.06%)</title><rect x="68.3512%" y="405" width="4.0582%" height="15" fill="rgb(208,124,10)" fg:x="2678" fg:w="159"/><text x="68.4684%" y="415.50">do_anonymous..</text></g><g><title>vma_alloc_folio (44 samples, 1.12%)</title><rect x="71.2864%" y="389" width="1.1230%" height="15" fill="rgb(222,33,0)" fg:x="2793" fg:w="44"/><text x="71.4036%" y="399.50">vm..</text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="72.3839%" y="373" width="0.0255%" height="15" fill="rgb(234,209,28)" fg:x="2836" fg:w="1"/><text x="72.5011%" y="383.50"></text></g><g><title>pte_offset_map_nolock (2 samples, 0.05%)</title><rect x="72.4094%" y="405" width="0.0510%" height="15" fill="rgb(224,11,23)" fg:x="2837" fg:w="2"/><text x="72.5266%" y="415.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="72.4349%" y="389" width="0.0255%" height="15" fill="rgb(232,99,1)" fg:x="2838" fg:w="1"/><text x="72.5521%" y="399.50"></text></g><g><title>__handle_mm_fault (170 samples, 4.34%)</title><rect x="68.1470%" y="437" width="4.3389%" height="15" fill="rgb(237,95,45)" fg:x="2670" fg:w="170"/><text x="68.2642%" y="447.50">__handle_mm_f..</text></g><g><title>handle_pte_fault (164 samples, 4.19%)</title><rect x="68.3002%" y="421" width="4.1858%" height="15" fill="rgb(208,109,11)" fg:x="2676" fg:w="164"/><text x="68.4173%" y="431.50">handle_pte_fa..</text></g><g><title>set_pte (1 samples, 0.03%)</title><rect x="72.4604%" y="405" width="0.0255%" height="15" fill="rgb(216,190,48)" fg:x="2839" fg:w="1"/><text x="72.5776%" y="415.50"></text></g><g><title>count_memcg_events.constprop.0 (3 samples, 0.08%)</title><rect x="72.4860%" y="437" width="0.0766%" height="15" fill="rgb(251,171,36)" fg:x="2840" fg:w="3"/><text x="72.6031%" y="447.50"></text></g><g><title>__count_memcg_events (3 samples, 0.08%)</title><rect x="72.4860%" y="421" width="0.0766%" height="15" fill="rgb(230,62,22)" fg:x="2840" fg:w="3"/><text x="72.6031%" y="431.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="72.5370%" y="405" width="0.0255%" height="15" fill="rgb(225,114,35)" fg:x="2842" fg:w="1"/><text x="72.6542%" y="415.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="72.5625%" y="437" width="0.0255%" height="15" fill="rgb(215,118,42)" fg:x="2843" fg:w="1"/><text x="72.6797%" y="447.50"></text></g><g><title>handle_mm_fault (179 samples, 4.57%)</title><rect x="68.0449%" y="453" width="4.5687%" height="15" fill="rgb(243,119,21)" fg:x="2666" fg:w="179"/><text x="68.1621%" y="463.50">handle_mm_fault</text></g><g><title>p4d_offset (1 samples, 0.03%)</title><rect x="72.5881%" y="437" width="0.0255%" height="15" fill="rgb(252,177,53)" fg:x="2844" fg:w="1"/><text x="72.7052%" y="447.50"></text></g><g><title>lock_vma_under_rcu (4 samples, 0.10%)</title><rect x="72.6136%" y="453" width="0.1021%" height="15" fill="rgb(237,209,29)" fg:x="2845" fg:w="4"/><text x="72.7308%" y="463.50"></text></g><g><title>mas_walk (4 samples, 0.10%)</title><rect x="72.6136%" y="437" width="0.1021%" height="15" fill="rgb(212,65,23)" fg:x="2845" fg:w="4"/><text x="72.7308%" y="447.50"></text></g><g><title>mtree_range_walk (3 samples, 0.08%)</title><rect x="72.6391%" y="421" width="0.0766%" height="15" fill="rgb(230,222,46)" fg:x="2846" fg:w="3"/><text x="72.7563%" y="431.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="72.6901%" y="405" width="0.0255%" height="15" fill="rgb(215,135,32)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="415.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="72.6901%" y="389" width="0.0255%" height="15" fill="rgb(246,101,22)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="399.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="72.6901%" y="373" width="0.0255%" height="15" fill="rgb(206,107,13)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="383.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="72.6901%" y="357" width="0.0255%" height="15" fill="rgb(250,100,44)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="367.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="72.6901%" y="341" width="0.0255%" height="15" fill="rgb(231,147,38)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="351.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="72.6901%" y="325" width="0.0255%" height="15" fill="rgb(229,8,40)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="335.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="72.6901%" y="309" width="0.0255%" height="15" fill="rgb(221,135,30)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="319.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="72.6901%" y="293" width="0.0255%" height="15" fill="rgb(249,193,18)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="303.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="72.6901%" y="277" width="0.0255%" height="15" fill="rgb(209,133,39)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="287.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="72.6901%" y="261" width="0.0255%" height="15" fill="rgb(232,100,14)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="271.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="72.6901%" y="245" width="0.0255%" height="15" fill="rgb(224,185,1)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="255.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="72.6901%" y="229" width="0.0255%" height="15" fill="rgb(223,139,8)" fg:x="2848" fg:w="1"/><text x="72.8073%" y="239.50"></text></g><g><title>do_user_addr_fault (193 samples, 4.93%)</title><rect x="67.8407%" y="469" width="4.9260%" height="15" fill="rgb(232,213,38)" fg:x="2658" fg:w="193"/><text x="67.9579%" y="479.50">do_user_addr_fa..</text></g><g><title>up_read (2 samples, 0.05%)</title><rect x="72.7157%" y="453" width="0.0510%" height="15" fill="rgb(207,94,22)" fg:x="2849" fg:w="2"/><text x="72.8329%" y="463.50"></text></g><g><title>asm_exc_page_fault (197 samples, 5.03%)</title><rect x="67.7642%" y="501" width="5.0281%" height="15" fill="rgb(219,183,54)" fg:x="2655" fg:w="197"/><text x="67.8814%" y="511.50">asm_exc_page_fau..</text></g><g><title>exc_page_fault (196 samples, 5.00%)</title><rect x="67.7897%" y="485" width="5.0026%" height="15" fill="rgb(216,185,54)" fg:x="2656" fg:w="196"/><text x="67.9069%" y="495.50">exc_page_fault</text></g><g><title>irqentry_exit (1 samples, 0.03%)</title><rect x="72.7667%" y="469" width="0.0255%" height="15" fill="rgb(254,217,39)" fg:x="2851" fg:w="1"/><text x="72.8839%" y="479.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="72.7667%" y="453" width="0.0255%" height="15" fill="rgb(240,178,23)" fg:x="2851" fg:w="1"/><text x="72.8839%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="72.7667%" y="437" width="0.0255%" height="15" fill="rgb(218,11,47)" fg:x="2851" fg:w="1"/><text x="72.8839%" y="447.50"></text></g><g><title>checked_request2size (1 samples, 0.03%)</title><rect x="72.7922%" y="501" width="0.0255%" height="15" fill="rgb(218,51,51)" fg:x="2852" fg:w="1"/><text x="72.9094%" y="511.50"></text></g><g><title>error_entry (2 samples, 0.05%)</title><rect x="72.8178%" y="501" width="0.0510%" height="15" fill="rgb(238,126,27)" fg:x="2853" fg:w="2"/><text x="72.9350%" y="511.50"></text></g><g><title>sync_regs (29 samples, 0.74%)</title><rect x="72.8688%" y="501" width="0.7402%" height="15" fill="rgb(249,202,22)" fg:x="2855" fg:w="29"/><text x="72.9860%" y="511.50"></text></g><g><title>mas_preallocate (1 samples, 0.03%)</title><rect x="73.6345%" y="325" width="0.0255%" height="15" fill="rgb(254,195,49)" fg:x="2885" fg:w="1"/><text x="73.7517%" y="335.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.03%)</title><rect x="73.6345%" y="309" width="0.0255%" height="15" fill="rgb(208,123,14)" fg:x="2885" fg:w="1"/><text x="73.7517%" y="319.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.03%)</title><rect x="73.6345%" y="293" width="0.0255%" height="15" fill="rgb(224,200,8)" fg:x="2885" fg:w="1"/><text x="73.7517%" y="303.50"></text></g><g><title>__kmem_cache_alloc_bulk (1 samples, 0.03%)</title><rect x="73.6345%" y="277" width="0.0255%" height="15" fill="rgb(217,61,36)" fg:x="2885" fg:w="1"/><text x="73.7517%" y="287.50"></text></g><g><title>mas_store_prealloc (1 samples, 0.03%)</title><rect x="73.6600%" y="325" width="0.0255%" height="15" fill="rgb(206,35,45)" fg:x="2886" fg:w="1"/><text x="73.7772%" y="335.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="73.6600%" y="309" width="0.0255%" height="15" fill="rgb(217,65,33)" fg:x="2886" fg:w="1"/><text x="73.7772%" y="319.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="73.6856%" y="309" width="0.0255%" height="15" fill="rgb(222,158,48)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="319.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="73.6856%" y="293" width="0.0255%" height="15" fill="rgb(254,2,54)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="303.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="73.6856%" y="277" width="0.0255%" height="15" fill="rgb(250,143,38)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="287.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="73.6856%" y="261" width="0.0255%" height="15" fill="rgb(248,25,0)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="271.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="73.6856%" y="245" width="0.0255%" height="15" fill="rgb(206,152,27)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="73.6856%" y="229" width="0.0255%" height="15" fill="rgb(240,77,30)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="239.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="73.6856%" y="213" width="0.0255%" height="15" fill="rgb(231,5,3)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="223.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="73.6856%" y="197" width="0.0255%" height="15" fill="rgb(207,226,32)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="207.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="73.6856%" y="181" width="0.0255%" height="15" fill="rgb(222,207,47)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="191.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="73.6856%" y="165" width="0.0255%" height="15" fill="rgb(229,115,45)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="175.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="73.6856%" y="149" width="0.0255%" height="15" fill="rgb(224,191,6)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="159.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="73.6856%" y="133" width="0.0255%" height="15" fill="rgb(230,227,24)" fg:x="2887" fg:w="1"/><text x="73.8027%" y="143.50"></text></g><g><title>do_brk_flags (5 samples, 0.13%)</title><rect x="73.6345%" y="341" width="0.1276%" height="15" fill="rgb(228,80,19)" fg:x="2885" fg:w="5"/><text x="73.7517%" y="351.50"></text></g><g><title>perf_event_mmap (3 samples, 0.08%)</title><rect x="73.6856%" y="325" width="0.0766%" height="15" fill="rgb(247,229,0)" fg:x="2887" fg:w="3"/><text x="73.8027%" y="335.50"></text></g><g><title>perf_event_mmap_event (2 samples, 0.05%)</title><rect x="73.7111%" y="309" width="0.0510%" height="15" fill="rgb(237,194,15)" fg:x="2888" fg:w="2"/><text x="73.8283%" y="319.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="73.7366%" y="293" width="0.0255%" height="15" fill="rgb(219,203,20)" fg:x="2889" fg:w="1"/><text x="73.8538%" y="303.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="73.7366%" y="277" width="0.0255%" height="15" fill="rgb(234,128,8)" fg:x="2889" fg:w="1"/><text x="73.8538%" y="287.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="73.7366%" y="261" width="0.0255%" height="15" fill="rgb(248,202,8)" fg:x="2889" fg:w="1"/><text x="73.8538%" y="271.50"></text></g><g><title>khugepaged_enter_vma (1 samples, 0.03%)</title><rect x="73.7621%" y="341" width="0.0255%" height="15" fill="rgb(206,104,37)" fg:x="2890" fg:w="1"/><text x="73.8793%" y="351.50"></text></g><g><title>__do_sys_brk (7 samples, 0.18%)</title><rect x="73.6345%" y="357" width="0.1787%" height="15" fill="rgb(223,8,27)" fg:x="2885" fg:w="7"/><text x="73.7517%" y="367.50"></text></g><g><title>mas_find (1 samples, 0.03%)</title><rect x="73.7876%" y="341" width="0.0255%" height="15" fill="rgb(216,217,28)" fg:x="2891" fg:w="1"/><text x="73.9048%" y="351.50"></text></g><g><title>mas_walk (1 samples, 0.03%)</title><rect x="73.7876%" y="325" width="0.0255%" height="15" fill="rgb(249,199,1)" fg:x="2891" fg:w="1"/><text x="73.9048%" y="335.50"></text></g><g><title>mtree_range_walk (1 samples, 0.03%)</title><rect x="73.7876%" y="309" width="0.0255%" height="15" fill="rgb(240,85,17)" fg:x="2891" fg:w="1"/><text x="73.9048%" y="319.50"></text></g><g><title>__glibc_morecore (8 samples, 0.20%)</title><rect x="73.6345%" y="485" width="0.2042%" height="15" fill="rgb(206,108,45)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="495.50"></text></g><g><title>__GI___sbrk (8 samples, 0.20%)</title><rect x="73.6345%" y="469" width="0.2042%" height="15" fill="rgb(245,210,41)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="479.50"></text></g><g><title>__GI___sbrk (8 samples, 0.20%)</title><rect x="73.6345%" y="453" width="0.2042%" height="15" fill="rgb(206,13,37)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="463.50"></text></g><g><title>__brk (8 samples, 0.20%)</title><rect x="73.6345%" y="437" width="0.2042%" height="15" fill="rgb(250,61,18)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="73.6345%" y="421" width="0.2042%" height="15" fill="rgb(235,172,48)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="431.50"></text></g><g><title>do_syscall_64 (8 samples, 0.20%)</title><rect x="73.6345%" y="405" width="0.2042%" height="15" fill="rgb(249,201,17)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="415.50"></text></g><g><title>x64_sys_call (8 samples, 0.20%)</title><rect x="73.6345%" y="389" width="0.2042%" height="15" fill="rgb(219,208,6)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="399.50"></text></g><g><title>__x64_sys_brk (8 samples, 0.20%)</title><rect x="73.6345%" y="373" width="0.2042%" height="15" fill="rgb(248,31,23)" fg:x="2885" fg:w="8"/><text x="73.7517%" y="383.50"></text></g><g><title>mas_find (1 samples, 0.03%)</title><rect x="73.8132%" y="357" width="0.0255%" height="15" fill="rgb(245,15,42)" fg:x="2892" fg:w="1"/><text x="73.9304%" y="367.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="73.8387%" y="389" width="0.0255%" height="15" fill="rgb(222,217,39)" fg:x="2893" fg:w="1"/><text x="73.9559%" y="399.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="73.8387%" y="485" width="0.0510%" height="15" fill="rgb(210,219,27)" fg:x="2893" fg:w="2"/><text x="73.9559%" y="495.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="73.8387%" y="469" width="0.0510%" height="15" fill="rgb(252,166,36)" fg:x="2893" fg:w="2"/><text x="73.9559%" y="479.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="73.8387%" y="453" width="0.0510%" height="15" fill="rgb(245,132,34)" fg:x="2893" fg:w="2"/><text x="73.9559%" y="463.50"></text></g><g><title>handle_mm_fault (2 samples, 0.05%)</title><rect x="73.8387%" y="437" width="0.0510%" height="15" fill="rgb(236,54,3)" fg:x="2893" fg:w="2"/><text x="73.9559%" y="447.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="73.8387%" y="421" width="0.0510%" height="15" fill="rgb(241,173,43)" fg:x="2893" fg:w="2"/><text x="73.9559%" y="431.50"></text></g><g><title>handle_pte_fault (2 samples, 0.05%)</title><rect x="73.8387%" y="405" width="0.0510%" height="15" fill="rgb(215,190,9)" fg:x="2893" fg:w="2"/><text x="73.9559%" y="415.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="73.8642%" y="389" width="0.0255%" height="15" fill="rgb(242,101,16)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="399.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="73.8642%" y="373" width="0.0255%" height="15" fill="rgb(223,190,21)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="383.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="73.8642%" y="357" width="0.0255%" height="15" fill="rgb(215,228,25)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="367.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.03%)</title><rect x="73.8642%" y="341" width="0.0255%" height="15" fill="rgb(225,36,22)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="351.50"></text></g><g><title>lru_add_fn (1 samples, 0.03%)</title><rect x="73.8642%" y="325" width="0.0255%" height="15" fill="rgb(251,106,46)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="335.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.03%)</title><rect x="73.8642%" y="309" width="0.0255%" height="15" fill="rgb(208,90,1)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="73.8642%" y="293" width="0.0255%" height="15" fill="rgb(243,10,4)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="73.8642%" y="277" width="0.0255%" height="15" fill="rgb(212,137,27)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="287.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="73.8642%" y="261" width="0.0255%" height="15" fill="rgb(231,220,49)" fg:x="2894" fg:w="1"/><text x="73.9814%" y="271.50"></text></g><g><title>_int_malloc (325 samples, 8.30%)</title><rect x="65.6457%" y="517" width="8.2950%" height="15" fill="rgb(237,96,20)" fg:x="2572" fg:w="325"/><text x="65.7629%" y="527.50">_int_malloc</text></g><g><title>sysmalloc (13 samples, 0.33%)</title><rect x="73.6090%" y="501" width="0.3318%" height="15" fill="rgb(239,229,30)" fg:x="2884" fg:w="13"/><text x="73.7262%" y="511.50"></text></g><g><title>sync_regs (2 samples, 0.05%)</title><rect x="73.8897%" y="485" width="0.0510%" height="15" fill="rgb(219,65,33)" fg:x="2895" fg:w="2"/><text x="74.0069%" y="495.50"></text></g><g><title>acpi_ec_gpe_handler (1 samples, 0.03%)</title><rect x="73.9408%" y="357" width="0.0255%" height="15" fill="rgb(243,134,7)" fg:x="2897" fg:w="1"/><text x="74.0580%" y="367.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (1 samples, 0.03%)</title><rect x="73.9408%" y="341" width="0.0255%" height="15" fill="rgb(216,177,54)" fg:x="2897" fg:w="1"/><text x="74.0580%" y="351.50"></text></g><g><title>advance_transaction (1 samples, 0.03%)</title><rect x="73.9408%" y="325" width="0.0255%" height="15" fill="rgb(211,160,20)" fg:x="2897" fg:w="1"/><text x="74.0580%" y="335.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.05%)</title><rect x="73.9408%" y="517" width="0.0510%" height="15" fill="rgb(239,85,39)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="527.50"></text></g><g><title>common_interrupt (2 samples, 0.05%)</title><rect x="73.9408%" y="501" width="0.0510%" height="15" fill="rgb(232,125,22)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="511.50"></text></g><g><title>__common_interrupt (2 samples, 0.05%)</title><rect x="73.9408%" y="485" width="0.0510%" height="15" fill="rgb(244,57,34)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="495.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.05%)</title><rect x="73.9408%" y="469" width="0.0510%" height="15" fill="rgb(214,203,32)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="479.50"></text></g><g><title>handle_irq_event (2 samples, 0.05%)</title><rect x="73.9408%" y="453" width="0.0510%" height="15" fill="rgb(207,58,43)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="463.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.05%)</title><rect x="73.9408%" y="437" width="0.0510%" height="15" fill="rgb(215,193,15)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="447.50"></text></g><g><title>acpi_irq (2 samples, 0.05%)</title><rect x="73.9408%" y="421" width="0.0510%" height="15" fill="rgb(232,15,44)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="431.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (2 samples, 0.05%)</title><rect x="73.9408%" y="405" width="0.0510%" height="15" fill="rgb(212,3,48)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="415.50"></text></g><g><title>acpi_ev_gpe_detect (2 samples, 0.05%)</title><rect x="73.9408%" y="389" width="0.0510%" height="15" fill="rgb(218,128,7)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="399.50"></text></g><g><title>acpi_ev_detect_gpe (2 samples, 0.05%)</title><rect x="73.9408%" y="373" width="0.0510%" height="15" fill="rgb(226,216,39)" fg:x="2897" fg:w="2"/><text x="74.0580%" y="383.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="73.9663%" y="357" width="0.0255%" height="15" fill="rgb(243,47,51)" fg:x="2898" fg:w="1"/><text x="74.0835%" y="367.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="73.9663%" y="341" width="0.0255%" height="15" fill="rgb(241,183,40)" fg:x="2898" fg:w="1"/><text x="74.0835%" y="351.50"></text></g><g><title>__GI___libc_malloc (340 samples, 8.68%)</title><rect x="65.4160%" y="533" width="8.6779%" height="15" fill="rgb(231,217,32)" fg:x="2563" fg:w="340"/><text x="65.5332%" y="543.50">__GI___libc_malloc</text></g><g><title>checked_request2size (4 samples, 0.10%)</title><rect x="73.9918%" y="517" width="0.1021%" height="15" fill="rgb(229,61,38)" fg:x="2899" fg:w="4"/><text x="74.1090%" y="527.50"></text></g><g><title>__rdl_alloc (4 samples, 0.10%)</title><rect x="74.0939%" y="533" width="0.1021%" height="15" fill="rgb(225,210,5)" fg:x="2903" fg:w="4"/><text x="74.2111%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (427 samples, 10.90%)</title><rect x="63.3231%" y="709" width="10.8984%" height="15" fill="rgb(231,79,45)" fg:x="2481" fg:w="427"/><text x="63.4403%" y="719.50">core::iter::traits::iterator::Iterato..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (427 samples, 10.90%)</title><rect x="63.3231%" y="693" width="10.8984%" height="15" fill="rgb(224,100,7)" fg:x="2481" fg:w="427"/><text x="63.4403%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::tr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (427 samples, 10.90%)</title><rect x="63.3231%" y="677" width="10.8984%" height="15" fill="rgb(241,198,18)" fg:x="2481" fg:w="427"/><text x="63.4403%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::sp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (426 samples, 10.87%)</title><rect x="63.3486%" y="661" width="10.8729%" height="15" fill="rgb(252,97,53)" fg:x="2482" fg:w="426"/><text x="63.4658%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::sp..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (352 samples, 8.98%)</title><rect x="65.2374%" y="645" width="8.9842%" height="15" fill="rgb(220,88,7)" fg:x="2556" fg:w="352"/><text x="65.3546%" y="655.50">alloc::vec::Vec&lt;T&gt;::with_capac..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (352 samples, 8.98%)</title><rect x="65.2374%" y="629" width="8.9842%" height="15" fill="rgb(213,176,14)" fg:x="2556" fg:w="352"/><text x="65.3546%" y="639.50">alloc::vec::Vec&lt;T,A&gt;::with_cap..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (351 samples, 8.96%)</title><rect x="65.2629%" y="613" width="8.9587%" height="15" fill="rgb(246,73,7)" fg:x="2557" fg:w="351"/><text x="65.3801%" y="623.50">alloc::raw_vec::RawVec&lt;T,A&gt;::w..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (347 samples, 8.86%)</title><rect x="65.3650%" y="597" width="8.8566%" height="15" fill="rgb(245,64,36)" fg:x="2561" fg:w="347"/><text x="65.4822%" y="607.50">alloc::raw_vec::RawVec&lt;T,A&gt;::t..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (346 samples, 8.83%)</title><rect x="65.3905%" y="581" width="8.8310%" height="15" fill="rgb(245,80,10)" fg:x="2562" fg:w="346"/><text x="65.5077%" y="591.50">&lt;alloc::alloc::Global as core..</text></g><g><title>alloc::alloc::Global::alloc_impl (346 samples, 8.83%)</title><rect x="65.3905%" y="565" width="8.8310%" height="15" fill="rgb(232,107,50)" fg:x="2562" fg:w="346"/><text x="65.5077%" y="575.50">alloc::alloc::Global::alloc_i..</text></g><g><title>alloc::alloc::alloc (346 samples, 8.83%)</title><rect x="65.3905%" y="549" width="8.8310%" height="15" fill="rgb(253,3,0)" fg:x="2562" fg:w="346"/><text x="65.5077%" y="559.50">alloc::alloc::alloc</text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="74.1960%" y="533" width="0.0255%" height="15" fill="rgb(212,99,53)" fg:x="2907" fg:w="1"/><text x="74.3132%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="74.2215%" y="709" width="0.0255%" height="15" fill="rgb(249,111,54)" fg:x="2908" fg:w="1"/><text x="74.3387%" y="719.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.03%)</title><rect x="74.2215%" y="693" width="0.0255%" height="15" fill="rgb(249,55,30)" fg:x="2908" fg:w="1"/><text x="74.3387%" y="703.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="75.5998%" y="597" width="0.0255%" height="15" fill="rgb(237,47,42)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="607.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="75.5998%" y="581" width="0.0255%" height="15" fill="rgb(211,20,18)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="591.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="75.5998%" y="565" width="0.0255%" height="15" fill="rgb(231,203,46)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="575.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="75.5998%" y="549" width="0.0255%" height="15" fill="rgb(237,142,3)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="559.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="75.5998%" y="533" width="0.0255%" height="15" fill="rgb(241,107,1)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="543.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="75.5998%" y="517" width="0.0255%" height="15" fill="rgb(229,83,13)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="527.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="75.5998%" y="501" width="0.0255%" height="15" fill="rgb(241,91,40)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="511.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="75.5998%" y="485" width="0.0255%" height="15" fill="rgb(225,3,45)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="495.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="75.5998%" y="469" width="0.0255%" height="15" fill="rgb(244,223,14)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="479.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="75.5998%" y="453" width="0.0255%" height="15" fill="rgb(224,124,37)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="463.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="75.5998%" y="437" width="0.0255%" height="15" fill="rgb(251,171,30)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="447.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="75.5998%" y="421" width="0.0255%" height="15" fill="rgb(236,46,54)" fg:x="2962" fg:w="1"/><text x="75.7170%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="75.6253%" y="597" width="0.0255%" height="15" fill="rgb(245,213,5)" fg:x="2963" fg:w="1"/><text x="75.7425%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="75.6253%" y="581" width="0.0255%" height="15" fill="rgb(230,144,27)" fg:x="2963" fg:w="1"/><text x="75.7425%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="75.6253%" y="565" width="0.0255%" height="15" fill="rgb(220,86,6)" fg:x="2963" fg:w="1"/><text x="75.7425%" y="575.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="75.6253%" y="549" width="0.0255%" height="15" fill="rgb(240,20,13)" fg:x="2963" fg:w="1"/><text x="75.7425%" y="559.50"></text></g><g><title>_int_free (47 samples, 1.20%)</title><rect x="74.5023%" y="613" width="1.1996%" height="15" fill="rgb(217,89,34)" fg:x="2919" fg:w="47"/><text x="74.6195%" y="623.50">_i..</text></g><g><title>free_perturb (2 samples, 0.05%)</title><rect x="75.6508%" y="597" width="0.0510%" height="15" fill="rgb(229,13,5)" fg:x="2964" fg:w="2"/><text x="75.7680%" y="607.50"></text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="75.7019%" y="613" width="0.0255%" height="15" fill="rgb(244,67,35)" fg:x="2966" fg:w="1"/><text x="75.8191%" y="623.50"></text></g><g><title>__GI___libc_free (57 samples, 1.45%)</title><rect x="74.3236%" y="629" width="1.4548%" height="15" fill="rgb(221,40,2)" fg:x="2912" fg:w="57"/><text x="74.4408%" y="639.50">__G..</text></g><g><title>asm_common_interrupt (2 samples, 0.05%)</title><rect x="75.7274%" y="613" width="0.0510%" height="15" fill="rgb(237,157,21)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.05%)</title><rect x="75.7274%" y="597" width="0.0510%" height="15" fill="rgb(222,94,11)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="607.50"></text></g><g><title>__common_interrupt (2 samples, 0.05%)</title><rect x="75.7274%" y="581" width="0.0510%" height="15" fill="rgb(249,113,6)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="591.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.05%)</title><rect x="75.7274%" y="565" width="0.0510%" height="15" fill="rgb(238,137,36)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="575.50"></text></g><g><title>handle_irq_event (2 samples, 0.05%)</title><rect x="75.7274%" y="549" width="0.0510%" height="15" fill="rgb(210,102,26)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.05%)</title><rect x="75.7274%" y="533" width="0.0510%" height="15" fill="rgb(218,30,30)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="543.50"></text></g><g><title>acpi_irq (2 samples, 0.05%)</title><rect x="75.7274%" y="517" width="0.0510%" height="15" fill="rgb(214,67,26)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="527.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (2 samples, 0.05%)</title><rect x="75.7274%" y="501" width="0.0510%" height="15" fill="rgb(251,9,53)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="511.50"></text></g><g><title>acpi_ev_gpe_detect (2 samples, 0.05%)</title><rect x="75.7274%" y="485" width="0.0510%" height="15" fill="rgb(228,204,25)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="495.50"></text></g><g><title>acpi_ev_detect_gpe (2 samples, 0.05%)</title><rect x="75.7274%" y="469" width="0.0510%" height="15" fill="rgb(207,153,8)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="479.50"></text></g><g><title>acpi_hw_gpe_read (2 samples, 0.05%)</title><rect x="75.7274%" y="453" width="0.0510%" height="15" fill="rgb(242,9,16)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="463.50"></text></g><g><title>acpi_os_read_port (2 samples, 0.05%)</title><rect x="75.7274%" y="437" width="0.0510%" height="15" fill="rgb(217,211,10)" fg:x="2967" fg:w="2"/><text x="75.8446%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 1.48%)</title><rect x="74.3236%" y="645" width="1.4803%" height="15" fill="rgb(219,228,52)" fg:x="2912" fg:w="58"/><text x="74.4408%" y="655.50">all..</text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="75.7785%" y="629" width="0.0255%" height="15" fill="rgb(231,92,29)" fg:x="2969" fg:w="1"/><text x="75.8956%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61 samples, 1.56%)</title><rect x="74.3236%" y="661" width="1.5569%" height="15" fill="rgb(232,8,23)" fg:x="2912" fg:w="61"/><text x="74.4408%" y="671.50">&lt;al..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (3 samples, 0.08%)</title><rect x="75.8040%" y="645" width="0.0766%" height="15" fill="rgb(216,211,34)" fg:x="2970" fg:w="3"/><text x="75.9212%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (65 samples, 1.66%)</title><rect x="74.2471%" y="709" width="1.6590%" height="15" fill="rgb(236,151,0)" fg:x="2909" fg:w="65"/><text x="74.3643%" y="719.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (65 samples, 1.66%)</title><rect x="74.2471%" y="693" width="1.6590%" height="15" fill="rgb(209,168,3)" fg:x="2909" fg:w="65"/><text x="74.3643%" y="703.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 1.66%)</title><rect x="74.2471%" y="677" width="1.6590%" height="15" fill="rgb(208,129,28)" fg:x="2909" fg:w="65"/><text x="74.3643%" y="687.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="75.8806%" y="661" width="0.0255%" height="15" fill="rgb(229,78,22)" fg:x="2973" fg:w="1"/><text x="75.9977%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="75.8806%" y="645" width="0.0255%" height="15" fill="rgb(228,187,13)" fg:x="2973" fg:w="1"/><text x="75.9977%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (4 samples, 0.10%)</title><rect x="75.9061%" y="709" width="0.1021%" height="15" fill="rgb(240,119,24)" fg:x="2974" fg:w="4"/><text x="76.0233%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (4 samples, 0.10%)</title><rect x="75.9061%" y="693" width="0.1021%" height="15" fill="rgb(209,194,42)" fg:x="2974" fg:w="4"/><text x="76.0233%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.10%)</title><rect x="75.9061%" y="677" width="0.1021%" height="15" fill="rgb(247,200,46)" fg:x="2974" fg:w="4"/><text x="76.0233%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.10%)</title><rect x="75.9061%" y="661" width="0.1021%" height="15" fill="rgb(218,76,16)" fg:x="2974" fg:w="4"/><text x="76.0233%" y="671.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.05%)</title><rect x="77.8714%" y="613" width="0.0510%" height="15" fill="rgb(225,21,48)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="623.50"></text></g><g><title>common_interrupt (2 samples, 0.05%)</title><rect x="77.8714%" y="597" width="0.0510%" height="15" fill="rgb(239,223,50)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="607.50"></text></g><g><title>__common_interrupt (2 samples, 0.05%)</title><rect x="77.8714%" y="581" width="0.0510%" height="15" fill="rgb(244,45,21)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="591.50"></text></g><g><title>handle_fasteoi_irq (2 samples, 0.05%)</title><rect x="77.8714%" y="565" width="0.0510%" height="15" fill="rgb(232,33,43)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="575.50"></text></g><g><title>handle_irq_event (2 samples, 0.05%)</title><rect x="77.8714%" y="549" width="0.0510%" height="15" fill="rgb(209,8,3)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="559.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.05%)</title><rect x="77.8714%" y="533" width="0.0510%" height="15" fill="rgb(214,25,53)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="543.50"></text></g><g><title>acpi_irq (2 samples, 0.05%)</title><rect x="77.8714%" y="517" width="0.0510%" height="15" fill="rgb(254,186,54)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="527.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (2 samples, 0.05%)</title><rect x="77.8714%" y="501" width="0.0510%" height="15" fill="rgb(208,174,49)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="511.50"></text></g><g><title>acpi_ev_gpe_detect (2 samples, 0.05%)</title><rect x="77.8714%" y="485" width="0.0510%" height="15" fill="rgb(233,191,51)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="495.50"></text></g><g><title>acpi_ev_detect_gpe (2 samples, 0.05%)</title><rect x="77.8714%" y="469" width="0.0510%" height="15" fill="rgb(222,134,10)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="479.50"></text></g><g><title>acpi_hw_gpe_read (2 samples, 0.05%)</title><rect x="77.8714%" y="453" width="0.0510%" height="15" fill="rgb(230,226,20)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="463.50"></text></g><g><title>acpi_os_read_port (2 samples, 0.05%)</title><rect x="77.8714%" y="437" width="0.0510%" height="15" fill="rgb(251,111,25)" fg:x="3051" fg:w="2"/><text x="77.9886%" y="447.50"></text></g><g><title>checked_request2size (6 samples, 0.15%)</title><rect x="77.9224%" y="613" width="0.1531%" height="15" fill="rgb(224,40,46)" fg:x="3053" fg:w="6"/><text x="78.0396%" y="623.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.79%)</title><rect x="77.4630%" y="629" width="0.7912%" height="15" fill="rgb(236,108,47)" fg:x="3035" fg:w="31"/><text x="77.5802%" y="639.50"></text></g><g><title>tcache_get (7 samples, 0.18%)</title><rect x="78.0755%" y="613" width="0.1787%" height="15" fill="rgb(234,93,0)" fg:x="3059" fg:w="7"/><text x="78.1927%" y="623.50"></text></g><g><title>__rdl_alloc (8 samples, 0.20%)</title><rect x="78.2542%" y="629" width="0.2042%" height="15" fill="rgb(224,213,32)" fg:x="3066" fg:w="8"/><text x="78.3714%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (56 samples, 1.43%)</title><rect x="77.2333%" y="693" width="1.4293%" height="15" fill="rgb(251,11,48)" fg:x="3026" fg:w="56"/><text x="77.3505%" y="703.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 1.43%)</title><rect x="77.2333%" y="677" width="1.4293%" height="15" fill="rgb(236,173,5)" fg:x="3026" fg:w="56"/><text x="77.3505%" y="687.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 1.43%)</title><rect x="77.2333%" y="661" width="1.4293%" height="15" fill="rgb(230,95,12)" fg:x="3026" fg:w="56"/><text x="77.3505%" y="671.50">all..</text></g><g><title>alloc::alloc::alloc (56 samples, 1.43%)</title><rect x="77.2333%" y="645" width="1.4293%" height="15" fill="rgb(232,209,1)" fg:x="3026" fg:w="56"/><text x="77.3505%" y="655.50">all..</text></g><g><title>__rust_alloc (8 samples, 0.20%)</title><rect x="78.4584%" y="629" width="0.2042%" height="15" fill="rgb(232,6,1)" fg:x="3074" fg:w="8"/><text x="78.5756%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (1 samples, 0.03%)</title><rect x="78.6626%" y="693" width="0.0255%" height="15" fill="rgb(210,224,50)" fg:x="3082" fg:w="1"/><text x="78.7798%" y="703.50"></text></g><g><title>alloc::slice::hack::into_vec (1 samples, 0.03%)</title><rect x="78.6626%" y="677" width="0.0255%" height="15" fill="rgb(228,127,35)" fg:x="3082" fg:w="1"/><text x="78.7798%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (1 samples, 0.03%)</title><rect x="78.6626%" y="661" width="0.0255%" height="15" fill="rgb(245,102,45)" fg:x="3082" fg:w="1"/><text x="78.7798%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (4 samples, 0.10%)</title><rect x="78.6881%" y="693" width="0.1021%" height="15" fill="rgb(214,1,49)" fg:x="3083" fg:w="4"/><text x="78.8053%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.10%)</title><rect x="78.6881%" y="677" width="0.1021%" height="15" fill="rgb(226,163,40)" fg:x="3083" fg:w="4"/><text x="78.8053%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (4 samples, 0.10%)</title><rect x="78.6881%" y="661" width="0.1021%" height="15" fill="rgb(239,212,28)" fg:x="3083" fg:w="4"/><text x="78.8053%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.10%)</title><rect x="78.6881%" y="645" width="0.1021%" height="15" fill="rgb(220,20,13)" fg:x="3083" fg:w="4"/><text x="78.8053%" y="655.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="78.7902%" y="693" width="0.0255%" height="15" fill="rgb(210,164,35)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="703.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="78.7902%" y="677" width="0.0255%" height="15" fill="rgb(248,109,41)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="687.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="78.7902%" y="661" width="0.0255%" height="15" fill="rgb(238,23,50)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="671.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="78.7902%" y="645" width="0.0255%" height="15" fill="rgb(211,48,49)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="655.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="78.7902%" y="629" width="0.0255%" height="15" fill="rgb(223,36,21)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="639.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="78.7902%" y="613" width="0.0255%" height="15" fill="rgb(207,123,46)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="623.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="78.7902%" y="597" width="0.0255%" height="15" fill="rgb(240,218,32)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="607.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="78.7902%" y="581" width="0.0255%" height="15" fill="rgb(252,5,43)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="591.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="78.7902%" y="565" width="0.0255%" height="15" fill="rgb(252,84,19)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="575.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="78.7902%" y="549" width="0.0255%" height="15" fill="rgb(243,152,39)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="559.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="78.7902%" y="533" width="0.0255%" height="15" fill="rgb(234,160,15)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="543.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="78.7902%" y="517" width="0.0255%" height="15" fill="rgb(237,34,20)" fg:x="3087" fg:w="1"/><text x="78.9074%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (9 samples, 0.23%)</title><rect x="78.8157%" y="693" width="0.2297%" height="15" fill="rgb(229,97,13)" fg:x="3088" fg:w="9"/><text x="78.9329%" y="703.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (9 samples, 0.23%)</title><rect x="78.8157%" y="677" width="0.2297%" height="15" fill="rgb(234,71,50)" fg:x="3088" fg:w="9"/><text x="78.9329%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.18%)</title><rect x="79.0454%" y="645" width="0.1787%" height="15" fill="rgb(253,155,4)" fg:x="3097" fg:w="7"/><text x="79.1626%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.23%)</title><rect x="79.4028%" y="613" width="0.2297%" height="15" fill="rgb(222,185,37)" fg:x="3111" fg:w="9"/><text x="79.5199%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="79.9643%" y="597" width="0.0255%" height="15" fill="rgb(251,177,13)" fg:x="3133" fg:w="1"/><text x="80.0815%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.23%)</title><rect x="79.9898%" y="549" width="0.2297%" height="15" fill="rgb(250,179,40)" fg:x="3134" fg:w="9"/><text x="80.1070%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.31%)</title><rect x="80.2195%" y="389" width="0.3063%" height="15" fill="rgb(242,44,2)" fg:x="3143" fg:w="12"/><text x="80.3367%" y="399.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.56%)</title><rect x="80.2195%" y="405" width="0.5615%" height="15" fill="rgb(216,177,13)" fg:x="3143" fg:w="22"/><text x="80.3367%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.26%)</title><rect x="80.5258%" y="389" width="0.2552%" height="15" fill="rgb(216,106,43)" fg:x="3155" fg:w="10"/><text x="80.6430%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.20%)</title><rect x="80.5768%" y="373" width="0.2042%" height="15" fill="rgb(216,183,2)" fg:x="3157" fg:w="8"/><text x="80.6940%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (36 samples, 0.92%)</title><rect x="80.2195%" y="533" width="0.9188%" height="15" fill="rgb(249,75,3)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="543.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (36 samples, 0.92%)</title><rect x="80.2195%" y="517" width="0.9188%" height="15" fill="rgb(219,67,39)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="527.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.92%)</title><rect x="80.2195%" y="501" width="0.9188%" height="15" fill="rgb(253,228,2)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.92%)</title><rect x="80.2195%" y="485" width="0.9188%" height="15" fill="rgb(235,138,27)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.92%)</title><rect x="80.2195%" y="469" width="0.9188%" height="15" fill="rgb(236,97,51)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="479.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 0.92%)</title><rect x="80.2195%" y="453" width="0.9188%" height="15" fill="rgb(240,80,30)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="463.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (36 samples, 0.92%)</title><rect x="80.2195%" y="437" width="0.9188%" height="15" fill="rgb(230,178,19)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="447.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (36 samples, 0.92%)</title><rect x="80.2195%" y="421" width="0.9188%" height="15" fill="rgb(210,190,27)" fg:x="3143" fg:w="36"/><text x="80.3367%" y="431.50">c..</text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (14 samples, 0.36%)</title><rect x="80.7810%" y="405" width="0.3573%" height="15" fill="rgb(222,107,31)" fg:x="3165" fg:w="14"/><text x="80.8982%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (14 samples, 0.36%)</title><rect x="80.7810%" y="389" width="0.3573%" height="15" fill="rgb(216,127,34)" fg:x="3165" fg:w="14"/><text x="80.8982%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (14 samples, 0.36%)</title><rect x="80.7810%" y="373" width="0.3573%" height="15" fill="rgb(234,116,52)" fg:x="3165" fg:w="14"/><text x="80.8982%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.13%)</title><rect x="81.0107%" y="357" width="0.1276%" height="15" fill="rgb(222,124,15)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.13%)</title><rect x="81.0107%" y="341" width="0.1276%" height="15" fill="rgb(231,179,28)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="351.50"></text></g><g><title>irqentry_exit (5 samples, 0.13%)</title><rect x="81.0107%" y="325" width="0.1276%" height="15" fill="rgb(226,93,45)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.13%)</title><rect x="81.0107%" y="309" width="0.1276%" height="15" fill="rgb(215,8,51)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="319.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.13%)</title><rect x="81.0107%" y="293" width="0.1276%" height="15" fill="rgb(223,106,5)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="303.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.13%)</title><rect x="81.0107%" y="277" width="0.1276%" height="15" fill="rgb(250,191,5)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="287.50"></text></g><g><title>schedule (5 samples, 0.13%)</title><rect x="81.0107%" y="261" width="0.1276%" height="15" fill="rgb(242,132,44)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="271.50"></text></g><g><title>__schedule (5 samples, 0.13%)</title><rect x="81.0107%" y="245" width="0.1276%" height="15" fill="rgb(251,152,29)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="255.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.13%)</title><rect x="81.0107%" y="229" width="0.1276%" height="15" fill="rgb(218,179,5)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="239.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.13%)</title><rect x="81.0107%" y="213" width="0.1276%" height="15" fill="rgb(227,67,19)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="223.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.13%)</title><rect x="81.0107%" y="197" width="0.1276%" height="15" fill="rgb(233,119,31)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="207.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.13%)</title><rect x="81.0107%" y="181" width="0.1276%" height="15" fill="rgb(241,120,22)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="191.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.13%)</title><rect x="81.0107%" y="165" width="0.1276%" height="15" fill="rgb(224,102,30)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="175.50"></text></g><g><title>native_write_msr (5 samples, 0.13%)</title><rect x="81.0107%" y="149" width="0.1276%" height="15" fill="rgb(210,164,37)" fg:x="3174" fg:w="5"/><text x="81.1279%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (14 samples, 0.36%)</title><rect x="81.1383%" y="533" width="0.3573%" height="15" fill="rgb(226,191,16)" fg:x="3179" fg:w="14"/><text x="81.2555%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.13%)</title><rect x="81.4957%" y="421" width="0.1276%" height="15" fill="rgb(214,40,45)" fg:x="3193" fg:w="5"/><text x="81.6128%" y="431.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (57 samples, 1.45%)</title><rect x="80.2195%" y="549" width="1.4548%" height="15" fill="rgb(244,29,26)" fg:x="3143" fg:w="57"/><text x="80.3367%" y="559.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="533" width="0.1787%" height="15" fill="rgb(216,16,5)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="517" width="0.1787%" height="15" fill="rgb(249,76,35)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="501" width="0.1787%" height="15" fill="rgb(207,11,44)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="485" width="0.1787%" height="15" fill="rgb(228,190,49)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="469" width="0.1787%" height="15" fill="rgb(214,173,12)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="453" width="0.1787%" height="15" fill="rgb(218,26,35)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (7 samples, 0.18%)</title><rect x="81.4957%" y="437" width="0.1787%" height="15" fill="rgb(220,200,19)" fg:x="3193" fg:w="7"/><text x="81.6128%" y="447.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="81.6233%" y="421" width="0.0510%" height="15" fill="rgb(239,95,49)" fg:x="3198" fg:w="2"/><text x="81.7405%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.05%)</title><rect x="81.6233%" y="405" width="0.0510%" height="15" fill="rgb(235,85,53)" fg:x="3198" fg:w="2"/><text x="81.7405%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="81.6233%" y="389" width="0.0510%" height="15" fill="rgb(233,133,31)" fg:x="3198" fg:w="2"/><text x="81.7405%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="81.6743%" y="389" width="0.1531%" height="15" fill="rgb(218,25,20)" fg:x="3200" fg:w="6"/><text x="81.7915%" y="399.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.28%)</title><rect x="81.6743%" y="405" width="0.2808%" height="15" fill="rgb(252,210,38)" fg:x="3200" fg:w="11"/><text x="81.7915%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.13%)</title><rect x="81.8275%" y="389" width="0.1276%" height="15" fill="rgb(242,134,21)" fg:x="3206" fg:w="5"/><text x="81.9447%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.08%)</title><rect x="81.8785%" y="373" width="0.0766%" height="15" fill="rgb(213,28,48)" fg:x="3208" fg:w="3"/><text x="81.9957%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (22 samples, 0.56%)</title><rect x="81.6743%" y="517" width="0.5615%" height="15" fill="rgb(250,196,2)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.56%)</title><rect x="81.6743%" y="501" width="0.5615%" height="15" fill="rgb(227,5,17)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.56%)</title><rect x="81.6743%" y="485" width="0.5615%" height="15" fill="rgb(221,226,24)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.56%)</title><rect x="81.6743%" y="469" width="0.5615%" height="15" fill="rgb(211,5,48)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.56%)</title><rect x="81.6743%" y="453" width="0.5615%" height="15" fill="rgb(219,150,6)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (22 samples, 0.56%)</title><rect x="81.6743%" y="437" width="0.5615%" height="15" fill="rgb(251,46,16)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.56%)</title><rect x="81.6743%" y="421" width="0.5615%" height="15" fill="rgb(220,204,40)" fg:x="3200" fg:w="22"/><text x="81.7915%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (11 samples, 0.28%)</title><rect x="81.9551%" y="405" width="0.2808%" height="15" fill="rgb(211,85,2)" fg:x="3211" fg:w="11"/><text x="82.0723%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (11 samples, 0.28%)</title><rect x="81.9551%" y="389" width="0.2808%" height="15" fill="rgb(229,17,7)" fg:x="3211" fg:w="11"/><text x="82.0723%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (11 samples, 0.28%)</title><rect x="81.9551%" y="373" width="0.2808%" height="15" fill="rgb(239,72,28)" fg:x="3211" fg:w="11"/><text x="82.0723%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 2.27%)</title><rect x="79.9898%" y="597" width="2.2716%" height="15" fill="rgb(230,47,54)" fg:x="3134" fg:w="89"/><text x="80.1070%" y="607.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 2.27%)</title><rect x="79.9898%" y="581" width="2.2716%" height="15" fill="rgb(214,50,8)" fg:x="3134" fg:w="89"/><text x="80.1070%" y="591.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (89 samples, 2.27%)</title><rect x="79.9898%" y="565" width="2.2716%" height="15" fill="rgb(216,198,43)" fg:x="3134" fg:w="89"/><text x="80.1070%" y="575.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (23 samples, 0.59%)</title><rect x="81.6743%" y="549" width="0.5870%" height="15" fill="rgb(234,20,35)" fg:x="3200" fg:w="23"/><text x="81.7915%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (23 samples, 0.59%)</title><rect x="81.6743%" y="533" width="0.5870%" height="15" fill="rgb(254,45,19)" fg:x="3200" fg:w="23"/><text x="81.7915%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="82.2358%" y="517" width="0.0255%" height="15" fill="rgb(219,14,44)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="527.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="82.2358%" y="501" width="0.0255%" height="15" fill="rgb(217,220,26)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="82.2358%" y="485" width="0.0255%" height="15" fill="rgb(213,158,28)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="495.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="82.2358%" y="469" width="0.0255%" height="15" fill="rgb(252,51,52)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="479.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="82.2358%" y="453" width="0.0255%" height="15" fill="rgb(246,89,16)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="463.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="82.2358%" y="437" width="0.0255%" height="15" fill="rgb(216,158,49)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="447.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="82.2358%" y="421" width="0.0255%" height="15" fill="rgb(236,107,19)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="431.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="82.2358%" y="405" width="0.0255%" height="15" fill="rgb(228,185,30)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="415.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="82.2358%" y="389" width="0.0255%" height="15" fill="rgb(246,134,8)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="399.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="82.2358%" y="373" width="0.0255%" height="15" fill="rgb(214,143,50)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="383.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="82.2358%" y="357" width="0.0255%" height="15" fill="rgb(228,75,8)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="367.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="82.2358%" y="341" width="0.0255%" height="15" fill="rgb(207,175,4)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="351.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="82.2358%" y="325" width="0.0255%" height="15" fill="rgb(205,108,24)" fg:x="3222" fg:w="1"/><text x="82.3530%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="82.4145%" y="533" width="0.0255%" height="15" fill="rgb(244,120,49)" fg:x="3229" fg:w="1"/><text x="82.5317%" y="543.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.8162836431132042258 (2 samples, 0.05%)</title><rect x="82.4400%" y="533" width="0.0510%" height="15" fill="rgb(223,47,38)" fg:x="3230" fg:w="2"/><text x="82.5572%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.13%)</title><rect x="82.4911%" y="533" width="0.1276%" height="15" fill="rgb(229,179,11)" fg:x="3232" fg:w="5"/><text x="82.6083%" y="543.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14 samples, 0.36%)</title><rect x="83.7928%" y="437" width="0.3573%" height="15" fill="rgb(231,122,1)" fg:x="3283" fg:w="14"/><text x="83.9099%" y="447.50"></text></g><g><title>_int_free (22 samples, 0.56%)</title><rect x="84.1501%" y="437" width="0.5615%" height="15" fill="rgb(245,119,9)" fg:x="3297" fg:w="22"/><text x="84.2673%" y="447.50"></text></g><g><title>tcache_put (3 samples, 0.08%)</title><rect x="84.6350%" y="421" width="0.0766%" height="15" fill="rgb(241,163,25)" fg:x="3316" fg:w="3"/><text x="84.7522%" y="431.50"></text></g><g><title>alloc_perturb (3 samples, 0.08%)</title><rect x="86.5237%" y="421" width="0.0766%" height="15" fill="rgb(217,214,3)" fg:x="3390" fg:w="3"/><text x="86.6409%" y="431.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="86.6003%" y="421" width="0.0255%" height="15" fill="rgb(240,86,28)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="431.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="86.6003%" y="405" width="0.0255%" height="15" fill="rgb(215,47,9)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="415.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="86.6003%" y="389" width="0.0255%" height="15" fill="rgb(252,25,45)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="399.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="86.6003%" y="373" width="0.0255%" height="15" fill="rgb(251,164,9)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="383.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="86.6003%" y="357" width="0.0255%" height="15" fill="rgb(233,194,0)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="367.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="86.6003%" y="341" width="0.0255%" height="15" fill="rgb(249,111,24)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="351.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="86.6003%" y="325" width="0.0255%" height="15" fill="rgb(250,223,3)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="335.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="86.6003%" y="309" width="0.0255%" height="15" fill="rgb(236,178,37)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="319.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="86.6003%" y="293" width="0.0255%" height="15" fill="rgb(241,158,50)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="303.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="86.6003%" y="277" width="0.0255%" height="15" fill="rgb(213,121,41)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="287.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="86.6003%" y="261" width="0.0255%" height="15" fill="rgb(240,92,3)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="271.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="86.6003%" y="245" width="0.0255%" height="15" fill="rgb(205,123,3)" fg:x="3393" fg:w="1"/><text x="86.7175%" y="255.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="86.6258%" y="421" width="0.0255%" height="15" fill="rgb(205,97,47)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="86.6258%" y="405" width="0.0255%" height="15" fill="rgb(247,152,14)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="86.6258%" y="389" width="0.0255%" height="15" fill="rgb(248,195,53)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="86.6258%" y="373" width="0.0255%" height="15" fill="rgb(226,201,16)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="86.6258%" y="357" width="0.0255%" height="15" fill="rgb(205,98,0)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="367.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="86.6258%" y="341" width="0.0255%" height="15" fill="rgb(214,191,48)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="351.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="86.6258%" y="325" width="0.0255%" height="15" fill="rgb(237,112,39)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="335.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="86.6258%" y="309" width="0.0255%" height="15" fill="rgb(247,203,27)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="319.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="86.6258%" y="293" width="0.0255%" height="15" fill="rgb(235,124,28)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="303.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="86.6258%" y="277" width="0.0255%" height="15" fill="rgb(208,207,46)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="287.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="86.6258%" y="261" width="0.0255%" height="15" fill="rgb(234,176,4)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="271.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="86.6258%" y="245" width="0.0255%" height="15" fill="rgb(230,133,28)" fg:x="3394" fg:w="1"/><text x="86.7430%" y="255.50"></text></g><g><title>checked_request2size (4 samples, 0.10%)</title><rect x="86.6514%" y="421" width="0.1021%" height="15" fill="rgb(211,137,40)" fg:x="3395" fg:w="4"/><text x="86.7685%" y="431.50"></text></g><g><title>_int_realloc (141 samples, 3.60%)</title><rect x="83.2312%" y="453" width="3.5988%" height="15" fill="rgb(254,35,13)" fg:x="3261" fg:w="141"/><text x="83.3484%" y="463.50">_int_realloc</text></g><g><title>_int_malloc (83 samples, 2.12%)</title><rect x="84.7116%" y="437" width="2.1184%" height="15" fill="rgb(225,49,51)" fg:x="3319" fg:w="83"/><text x="84.8288%" y="447.50">_int_..</text></g><g><title>tcache_put (3 samples, 0.08%)</title><rect x="86.7534%" y="421" width="0.0766%" height="15" fill="rgb(251,10,15)" fg:x="3399" fg:w="3"/><text x="86.8706%" y="431.50"></text></g><g><title>arena_for_chunk (7 samples, 0.18%)</title><rect x="86.8300%" y="453" width="0.1787%" height="15" fill="rgb(228,207,15)" fg:x="3402" fg:w="7"/><text x="86.9472%" y="463.50"></text></g><g><title>__GI___libc_realloc (175 samples, 4.47%)</title><rect x="82.6442%" y="469" width="4.4666%" height="15" fill="rgb(241,99,19)" fg:x="3238" fg:w="175"/><text x="82.7614%" y="479.50">__GI___libc_re..</text></g><g><title>checked_request2size (4 samples, 0.10%)</title><rect x="87.0087%" y="453" width="0.1021%" height="15" fill="rgb(207,104,49)" fg:x="3409" fg:w="4"/><text x="87.1259%" y="463.50"></text></g><g><title>__rdl_realloc (4 samples, 0.10%)</title><rect x="87.1108%" y="469" width="0.1021%" height="15" fill="rgb(234,99,18)" fg:x="3413" fg:w="4"/><text x="87.2280%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (182 samples, 4.65%)</title><rect x="82.6442%" y="517" width="4.6452%" height="15" fill="rgb(213,191,49)" fg:x="3238" fg:w="182"/><text x="82.7614%" y="527.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::Global::grow_impl (182 samples, 4.65%)</title><rect x="82.6442%" y="501" width="4.6452%" height="15" fill="rgb(210,226,19)" fg:x="3238" fg:w="182"/><text x="82.7614%" y="511.50">alloc::alloc::..</text></g><g><title>alloc::alloc::realloc (182 samples, 4.65%)</title><rect x="82.6442%" y="485" width="4.6452%" height="15" fill="rgb(229,97,18)" fg:x="3238" fg:w="182"/><text x="82.7614%" y="495.50">alloc::alloc::..</text></g><g><title>__rust_realloc (3 samples, 0.08%)</title><rect x="87.2129%" y="469" width="0.0766%" height="15" fill="rgb(211,167,15)" fg:x="3417" fg:w="3"/><text x="87.3301%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (185 samples, 4.72%)</title><rect x="82.6187%" y="533" width="4.7218%" height="15" fill="rgb(210,169,34)" fg:x="3237" fg:w="185"/><text x="82.7359%" y="543.50">alloc::raw_vec:..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.8162836431132042258 (2 samples, 0.05%)</title><rect x="87.2894%" y="517" width="0.0510%" height="15" fill="rgb(241,121,31)" fg:x="3420" fg:w="2"/><text x="87.4066%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.05%)</title><rect x="87.3405%" y="533" width="0.0510%" height="15" fill="rgb(232,40,11)" fg:x="3422" fg:w="2"/><text x="87.4577%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.05%)</title><rect x="87.3405%" y="517" width="0.0510%" height="15" fill="rgb(205,86,26)" fg:x="3422" fg:w="2"/><text x="87.4577%" y="527.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="87.3660%" y="501" width="0.0255%" height="15" fill="rgb(231,126,28)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="87.3660%" y="485" width="0.0255%" height="15" fill="rgb(219,221,18)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="495.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="87.3660%" y="469" width="0.0255%" height="15" fill="rgb(211,40,0)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="479.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="87.3660%" y="453" width="0.0255%" height="15" fill="rgb(239,85,43)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="463.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="87.3660%" y="437" width="0.0255%" height="15" fill="rgb(231,55,21)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="447.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="87.3660%" y="421" width="0.0255%" height="15" fill="rgb(225,184,43)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="431.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="87.3660%" y="405" width="0.0255%" height="15" fill="rgb(251,158,41)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="415.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="87.3660%" y="389" width="0.0255%" height="15" fill="rgb(234,159,37)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="399.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="87.3660%" y="373" width="0.0255%" height="15" fill="rgb(216,204,22)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="383.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="87.3660%" y="357" width="0.0255%" height="15" fill="rgb(214,17,3)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="367.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="87.3660%" y="341" width="0.0255%" height="15" fill="rgb(212,111,17)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="351.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="87.3660%" y="325" width="0.0255%" height="15" fill="rgb(221,157,24)" fg:x="3423" fg:w="1"/><text x="87.4832%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (206 samples, 5.26%)</title><rect x="82.2614%" y="597" width="5.2578%" height="15" fill="rgb(252,16,13)" fg:x="3223" fg:w="206"/><text x="82.3785%" y="607.50">alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (206 samples, 5.26%)</title><rect x="82.2614%" y="581" width="5.2578%" height="15" fill="rgb(221,62,2)" fg:x="3223" fg:w="206"/><text x="82.3785%" y="591.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (201 samples, 5.13%)</title><rect x="82.3890%" y="565" width="5.1302%" height="15" fill="rgb(247,87,22)" fg:x="3228" fg:w="201"/><text x="82.5062%" y="575.50">alloc::raw_vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (201 samples, 5.13%)</title><rect x="82.3890%" y="549" width="5.1302%" height="15" fill="rgb(215,73,9)" fg:x="3228" fg:w="201"/><text x="82.5062%" y="559.50">alloc::raw_vec::..</text></g><g><title>core::cmp::max (5 samples, 0.13%)</title><rect x="87.3915%" y="533" width="0.1276%" height="15" fill="rgb(207,175,33)" fg:x="3424" fg:w="5"/><text x="87.5087%" y="543.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.13%)</title><rect x="87.3915%" y="517" width="0.1276%" height="15" fill="rgb(243,129,54)" fg:x="3424" fg:w="5"/><text x="87.5087%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.13%)</title><rect x="87.3915%" y="501" width="0.1276%" height="15" fill="rgb(227,119,45)" fg:x="3424" fg:w="5"/><text x="87.5087%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (16 samples, 0.41%)</title><rect x="87.5191%" y="597" width="0.4084%" height="15" fill="rgb(205,109,36)" fg:x="3429" fg:w="16"/><text x="87.6363%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="87.9275%" y="549" width="0.0255%" height="15" fill="rgb(205,6,39)" fg:x="3445" fg:w="1"/><text x="88.0447%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.10%)</title><rect x="87.9275%" y="597" width="0.1021%" height="15" fill="rgb(221,32,16)" fg:x="3445" fg:w="4"/><text x="88.0447%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.10%)</title><rect x="87.9275%" y="581" width="0.1021%" height="15" fill="rgb(228,144,50)" fg:x="3445" fg:w="4"/><text x="88.0447%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.10%)</title><rect x="87.9275%" y="565" width="0.1021%" height="15" fill="rgb(229,201,53)" fg:x="3445" fg:w="4"/><text x="88.0447%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="549" width="0.0766%" height="15" fill="rgb(249,153,27)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="533" width="0.0766%" height="15" fill="rgb(227,106,25)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="517" width="0.0766%" height="15" fill="rgb(230,65,29)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="501" width="0.0766%" height="15" fill="rgb(221,57,46)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="485" width="0.0766%" height="15" fill="rgb(229,161,17)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="469" width="0.0766%" height="15" fill="rgb(222,213,11)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="453" width="0.0766%" height="15" fill="rgb(235,35,13)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="87.9530%" y="437" width="0.0766%" height="15" fill="rgb(233,158,34)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.08%)</title><rect x="87.9530%" y="421" width="0.0766%" height="15" fill="rgb(215,151,48)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="87.9530%" y="405" width="0.0766%" height="15" fill="rgb(229,84,14)" fg:x="3446" fg:w="3"/><text x="88.0702%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (365 samples, 9.32%)</title><rect x="79.4028%" y="629" width="9.3160%" height="15" fill="rgb(229,68,14)" fg:x="3111" fg:w="365"/><text x="79.5199%" y="639.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (356 samples, 9.09%)</title><rect x="79.6325%" y="613" width="9.0863%" height="15" fill="rgb(243,106,26)" fg:x="3120" fg:w="356"/><text x="79.7497%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::extend_d..</text></g><g><title>core::ptr::write (27 samples, 0.69%)</title><rect x="88.0296%" y="597" width="0.6891%" height="15" fill="rgb(206,45,38)" fg:x="3449" fg:w="27"/><text x="88.1468%" y="607.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.08%)</title><rect x="88.6422%" y="581" width="0.0766%" height="15" fill="rgb(226,6,15)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="591.50"></text></g><g><title>common_interrupt (3 samples, 0.08%)</title><rect x="88.6422%" y="565" width="0.0766%" height="15" fill="rgb(232,22,54)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="575.50"></text></g><g><title>__common_interrupt (3 samples, 0.08%)</title><rect x="88.6422%" y="549" width="0.0766%" height="15" fill="rgb(229,222,32)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="559.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.08%)</title><rect x="88.6422%" y="533" width="0.0766%" height="15" fill="rgb(228,62,29)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="543.50"></text></g><g><title>handle_irq_event (3 samples, 0.08%)</title><rect x="88.6422%" y="517" width="0.0766%" height="15" fill="rgb(251,103,34)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="527.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.08%)</title><rect x="88.6422%" y="501" width="0.0766%" height="15" fill="rgb(233,12,30)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="511.50"></text></g><g><title>acpi_irq (3 samples, 0.08%)</title><rect x="88.6422%" y="485" width="0.0766%" height="15" fill="rgb(238,52,0)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="495.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (3 samples, 0.08%)</title><rect x="88.6422%" y="469" width="0.0766%" height="15" fill="rgb(223,98,5)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="479.50"></text></g><g><title>acpi_ev_gpe_detect (3 samples, 0.08%)</title><rect x="88.6422%" y="453" width="0.0766%" height="15" fill="rgb(228,75,37)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="463.50"></text></g><g><title>acpi_ev_detect_gpe (3 samples, 0.08%)</title><rect x="88.6422%" y="437" width="0.0766%" height="15" fill="rgb(205,115,49)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="447.50"></text></g><g><title>acpi_hw_gpe_read (3 samples, 0.08%)</title><rect x="88.6422%" y="421" width="0.0766%" height="15" fill="rgb(250,154,43)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="431.50"></text></g><g><title>acpi_os_read_port (3 samples, 0.08%)</title><rect x="88.6422%" y="405" width="0.0766%" height="15" fill="rgb(226,43,29)" fg:x="3473" fg:w="3"/><text x="88.7594%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="88.7187%" y="453" width="0.0255%" height="15" fill="rgb(249,228,39)" fg:x="3476" fg:w="1"/><text x="88.8359%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="88.8464%" y="405" width="0.0766%" height="15" fill="rgb(216,79,43)" fg:x="3481" fg:w="3"/><text x="88.9635%" y="415.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.18%)</title><rect x="88.7698%" y="437" width="0.1787%" height="15" fill="rgb(228,95,12)" fg:x="3478" fg:w="7"/><text x="88.8870%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.18%)</title><rect x="88.7698%" y="421" width="0.1787%" height="15" fill="rgb(249,221,15)" fg:x="3478" fg:w="7"/><text x="88.8870%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="88.9229%" y="405" width="0.0255%" height="15" fill="rgb(233,34,13)" fg:x="3484" fg:w="1"/><text x="89.0401%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (10 samples, 0.26%)</title><rect x="88.7187%" y="565" width="0.2552%" height="15" fill="rgb(214,103,39)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (10 samples, 0.26%)</title><rect x="88.7187%" y="549" width="0.2552%" height="15" fill="rgb(251,126,39)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.26%)</title><rect x="88.7187%" y="533" width="0.2552%" height="15" fill="rgb(214,216,36)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.26%)</title><rect x="88.7187%" y="517" width="0.2552%" height="15" fill="rgb(220,221,8)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.26%)</title><rect x="88.7187%" y="501" width="0.2552%" height="15" fill="rgb(240,216,3)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.26%)</title><rect x="88.7187%" y="485" width="0.2552%" height="15" fill="rgb(232,218,17)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (10 samples, 0.26%)</title><rect x="88.7187%" y="469" width="0.2552%" height="15" fill="rgb(229,163,45)" fg:x="3476" fg:w="10"/><text x="88.8359%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.23%)</title><rect x="88.7443%" y="453" width="0.2297%" height="15" fill="rgb(231,110,42)" fg:x="3477" fg:w="9"/><text x="88.8614%" y="463.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (1 samples, 0.03%)</title><rect x="88.9484%" y="437" width="0.0255%" height="15" fill="rgb(208,170,48)" fg:x="3485" fg:w="1"/><text x="89.0656%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="88.9484%" y="421" width="0.0255%" height="15" fill="rgb(239,116,25)" fg:x="3485" fg:w="1"/><text x="89.0656%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.03%)</title><rect x="88.9484%" y="405" width="0.0255%" height="15" fill="rgb(219,200,50)" fg:x="3485" fg:w="1"/><text x="89.0656%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.28%)</title><rect x="88.7187%" y="613" width="0.2808%" height="15" fill="rgb(245,200,0)" fg:x="3476" fg:w="11"/><text x="88.8359%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (11 samples, 0.28%)</title><rect x="88.7187%" y="597" width="0.2808%" height="15" fill="rgb(245,119,33)" fg:x="3476" fg:w="11"/><text x="88.8359%" y="607.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (11 samples, 0.28%)</title><rect x="88.7187%" y="581" width="0.2808%" height="15" fill="rgb(231,125,12)" fg:x="3476" fg:w="11"/><text x="88.8359%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="88.9740%" y="565" width="0.0255%" height="15" fill="rgb(216,96,41)" fg:x="3486" fg:w="1"/><text x="89.0912%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.33%)</title><rect x="88.7187%" y="629" width="0.3318%" height="15" fill="rgb(248,43,45)" fg:x="3476" fg:w="13"/><text x="88.8359%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.05%)</title><rect x="88.9995%" y="613" width="0.0510%" height="15" fill="rgb(217,222,7)" fg:x="3487" fg:w="2"/><text x="89.1167%" y="623.50"></text></g><g><title>__memcpy_evex_unaligned_erms (11 samples, 0.28%)</title><rect x="89.0505%" y="629" width="0.2808%" height="15" fill="rgb(233,28,6)" fg:x="3489" fg:w="11"/><text x="89.1677%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="89.7652%" y="501" width="0.0255%" height="15" fill="rgb(231,218,15)" fg:x="3517" fg:w="1"/><text x="89.8824%" y="511.50"></text></g><g><title>checked_request2size (4 samples, 0.10%)</title><rect x="89.7907%" y="501" width="0.1021%" height="15" fill="rgb(226,171,48)" fg:x="3518" fg:w="4"/><text x="89.9079%" y="511.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.71%)</title><rect x="89.3568%" y="517" width="0.7147%" height="15" fill="rgb(235,201,9)" fg:x="3501" fg:w="28"/><text x="89.4740%" y="527.50"></text></g><g><title>tcache_get (7 samples, 0.18%)</title><rect x="89.8928%" y="501" width="0.1787%" height="15" fill="rgb(217,80,15)" fg:x="3522" fg:w="7"/><text x="90.0100%" y="511.50"></text></g><g><title>__rdl_alloc (2 samples, 0.05%)</title><rect x="90.0715%" y="517" width="0.0510%" height="15" fill="rgb(219,152,8)" fg:x="3529" fg:w="2"/><text x="90.1887%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (33 samples, 0.84%)</title><rect x="89.3313%" y="629" width="0.8423%" height="15" fill="rgb(243,107,38)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="639.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33 samples, 0.84%)</title><rect x="89.3313%" y="613" width="0.8423%" height="15" fill="rgb(231,17,5)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="623.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.84%)</title><rect x="89.3313%" y="597" width="0.8423%" height="15" fill="rgb(209,25,54)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="607.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (33 samples, 0.84%)</title><rect x="89.3313%" y="581" width="0.8423%" height="15" fill="rgb(219,0,2)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="591.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.84%)</title><rect x="89.3313%" y="565" width="0.8423%" height="15" fill="rgb(246,9,5)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="575.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.84%)</title><rect x="89.3313%" y="549" width="0.8423%" height="15" fill="rgb(226,159,4)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="559.50">a..</text></g><g><title>alloc::alloc::alloc (33 samples, 0.84%)</title><rect x="89.3313%" y="533" width="0.8423%" height="15" fill="rgb(219,175,34)" fg:x="3500" fg:w="33"/><text x="89.4485%" y="543.50">a..</text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="90.1225%" y="517" width="0.0510%" height="15" fill="rgb(236,10,46)" fg:x="3531" fg:w="2"/><text x="90.2397%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (443 samples, 11.31%)</title><rect x="79.0454%" y="693" width="11.3068%" height="15" fill="rgb(240,211,16)" fg:x="3097" fg:w="443"/><text x="79.1626%" y="703.50">core::iter::traits::iterator::Iterator..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (443 samples, 11.31%)</title><rect x="79.0454%" y="677" width="11.3068%" height="15" fill="rgb(205,3,43)" fg:x="3097" fg:w="443"/><text x="79.1626%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (443 samples, 11.31%)</title><rect x="79.0454%" y="661" width="11.3068%" height="15" fill="rgb(245,7,22)" fg:x="3097" fg:w="443"/><text x="79.1626%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spe..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (436 samples, 11.13%)</title><rect x="79.2241%" y="645" width="11.1281%" height="15" fill="rgb(239,132,32)" fg:x="3104" fg:w="436"/><text x="79.3413%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spe..</text></g><g><title>core::ptr::write (7 samples, 0.18%)</title><rect x="90.1736%" y="629" width="0.1787%" height="15" fill="rgb(228,202,34)" fg:x="3533" fg:w="7"/><text x="90.2907%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (3 samples, 0.08%)</title><rect x="90.3522%" y="693" width="0.0766%" height="15" fill="rgb(254,200,22)" fg:x="3540" fg:w="3"/><text x="90.4694%" y="703.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (3 samples, 0.08%)</title><rect x="90.3522%" y="677" width="0.0766%" height="15" fill="rgb(219,10,39)" fg:x="3540" fg:w="3"/><text x="90.4694%" y="687.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (3 samples, 0.08%)</title><rect x="90.3522%" y="661" width="0.0766%" height="15" fill="rgb(226,210,39)" fg:x="3540" fg:w="3"/><text x="90.4694%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (3 samples, 0.08%)</title><rect x="90.3522%" y="645" width="0.0766%" height="15" fill="rgb(208,219,16)" fg:x="3540" fg:w="3"/><text x="90.4694%" y="655.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (3 samples, 0.08%)</title><rect x="90.3522%" y="629" width="0.0766%" height="15" fill="rgb(216,158,51)" fg:x="3540" fg:w="3"/><text x="90.4694%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="90.4288%" y="693" width="0.0255%" height="15" fill="rgb(233,14,44)" fg:x="3543" fg:w="1"/><text x="90.5460%" y="703.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.03%)</title><rect x="90.4288%" y="677" width="0.0255%" height="15" fill="rgb(237,97,39)" fg:x="3543" fg:w="1"/><text x="90.5460%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1 samples, 0.03%)</title><rect x="90.4543%" y="693" width="0.0255%" height="15" fill="rgb(218,198,43)" fg:x="3544" fg:w="1"/><text x="90.5715%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.03%)</title><rect x="90.4543%" y="677" width="0.0255%" height="15" fill="rgb(231,104,20)" fg:x="3544" fg:w="1"/><text x="90.5715%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6 samples, 0.15%)</title><rect x="90.4798%" y="693" width="0.1531%" height="15" fill="rgb(254,36,13)" fg:x="3545" fg:w="6"/><text x="90.5970%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (6 samples, 0.15%)</title><rect x="90.4798%" y="677" width="0.1531%" height="15" fill="rgb(248,14,50)" fg:x="3545" fg:w="6"/><text x="90.5970%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.15%)</title><rect x="90.4798%" y="661" width="0.1531%" height="15" fill="rgb(217,107,29)" fg:x="3545" fg:w="6"/><text x="90.5970%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (6 samples, 0.15%)</title><rect x="90.4798%" y="645" width="0.1531%" height="15" fill="rgb(251,169,33)" fg:x="3545" fg:w="6"/><text x="90.5970%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (6 samples, 0.15%)</title><rect x="90.4798%" y="629" width="0.1531%" height="15" fill="rgb(217,108,32)" fg:x="3545" fg:w="6"/><text x="90.5970%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.08%)</title><rect x="90.5564%" y="613" width="0.0766%" height="15" fill="rgb(219,66,42)" fg:x="3548" fg:w="3"/><text x="90.6736%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.08%)</title><rect x="90.5564%" y="597" width="0.0766%" height="15" fill="rgb(206,180,7)" fg:x="3548" fg:w="3"/><text x="90.6736%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.08%)</title><rect x="90.5564%" y="581" width="0.0766%" height="15" fill="rgb(208,226,31)" fg:x="3548" fg:w="3"/><text x="90.6736%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.13%)</title><rect x="90.6330%" y="693" width="0.1276%" height="15" fill="rgb(218,26,49)" fg:x="3551" fg:w="5"/><text x="90.7502%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (5 samples, 0.13%)</title><rect x="90.6330%" y="677" width="0.1276%" height="15" fill="rgb(233,197,48)" fg:x="3551" fg:w="5"/><text x="90.7502%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (5 samples, 0.13%)</title><rect x="90.6330%" y="661" width="0.1276%" height="15" fill="rgb(252,181,51)" fg:x="3551" fg:w="5"/><text x="90.7502%" y="671.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="92.0368%" y="581" width="0.0255%" height="15" fill="rgb(253,90,19)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="591.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="92.0368%" y="565" width="0.0255%" height="15" fill="rgb(215,171,30)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="575.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="92.0368%" y="549" width="0.0255%" height="15" fill="rgb(214,222,9)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="559.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="92.0368%" y="533" width="0.0255%" height="15" fill="rgb(223,3,22)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="543.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="92.0368%" y="517" width="0.0255%" height="15" fill="rgb(225,196,46)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="527.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="92.0368%" y="501" width="0.0255%" height="15" fill="rgb(209,110,37)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="511.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="92.0368%" y="485" width="0.0255%" height="15" fill="rgb(249,89,12)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="495.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="92.0368%" y="469" width="0.0255%" height="15" fill="rgb(226,27,33)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="479.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="92.0368%" y="453" width="0.0255%" height="15" fill="rgb(213,82,22)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="463.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="92.0368%" y="437" width="0.0255%" height="15" fill="rgb(248,140,0)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="447.50"></text></g><g><title>acpi_ec_gpe_handler (1 samples, 0.03%)</title><rect x="92.0368%" y="421" width="0.0255%" height="15" fill="rgb(228,106,3)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="431.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (1 samples, 0.03%)</title><rect x="92.0368%" y="405" width="0.0255%" height="15" fill="rgb(209,23,37)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="415.50"></text></g><g><title>advance_transaction (1 samples, 0.03%)</title><rect x="92.0368%" y="389" width="0.0255%" height="15" fill="rgb(241,93,50)" fg:x="3606" fg:w="1"/><text x="92.1539%" y="399.50"></text></g><g><title>_int_free (48 samples, 1.23%)</title><rect x="91.0669%" y="597" width="1.2251%" height="15" fill="rgb(253,46,43)" fg:x="3568" fg:w="48"/><text x="91.1841%" y="607.50">_i..</text></g><g><title>tcache_put (9 samples, 0.23%)</title><rect x="92.0623%" y="581" width="0.2297%" height="15" fill="rgb(226,206,43)" fg:x="3607" fg:w="9"/><text x="92.1795%" y="591.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="92.2665%" y="565" width="0.0255%" height="15" fill="rgb(217,54,7)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="575.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="92.2665%" y="549" width="0.0255%" height="15" fill="rgb(223,5,52)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="559.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="92.2665%" y="533" width="0.0255%" height="15" fill="rgb(206,52,46)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="543.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="92.2665%" y="517" width="0.0255%" height="15" fill="rgb(253,136,11)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="527.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="92.2665%" y="501" width="0.0255%" height="15" fill="rgb(208,106,33)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="511.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="92.2665%" y="485" width="0.0255%" height="15" fill="rgb(206,54,4)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="495.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="92.2665%" y="469" width="0.0255%" height="15" fill="rgb(213,3,15)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="479.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="92.2665%" y="453" width="0.0255%" height="15" fill="rgb(252,211,39)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="463.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="92.2665%" y="437" width="0.0255%" height="15" fill="rgb(223,6,36)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="447.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="92.2665%" y="421" width="0.0255%" height="15" fill="rgb(252,169,45)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="431.50"></text></g><g><title>acpi_ec_gpe_handler (1 samples, 0.03%)</title><rect x="92.2665%" y="405" width="0.0255%" height="15" fill="rgb(212,48,26)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="415.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (1 samples, 0.03%)</title><rect x="92.2665%" y="389" width="0.0255%" height="15" fill="rgb(251,102,48)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="399.50"></text></g><g><title>advance_transaction (1 samples, 0.03%)</title><rect x="92.2665%" y="373" width="0.0255%" height="15" fill="rgb(243,208,16)" fg:x="3615" fg:w="1"/><text x="92.3836%" y="383.50"></text></g><g><title>arena_for_chunk (1 samples, 0.03%)</title><rect x="92.2920%" y="597" width="0.0255%" height="15" fill="rgb(219,96,24)" fg:x="3616" fg:w="1"/><text x="92.4092%" y="607.50"></text></g><g><title>__GI___libc_free (59 samples, 1.51%)</title><rect x="90.8372%" y="613" width="1.5059%" height="15" fill="rgb(219,33,29)" fg:x="3559" fg:w="59"/><text x="90.9543%" y="623.50">__G..</text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="92.3175%" y="597" width="0.0255%" height="15" fill="rgb(223,176,5)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="607.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="92.3175%" y="581" width="0.0255%" height="15" fill="rgb(228,140,14)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="591.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="92.3175%" y="565" width="0.0255%" height="15" fill="rgb(217,179,31)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="575.50"></text></g><g><title>handle_fasteoi_irq (1 samples, 0.03%)</title><rect x="92.3175%" y="549" width="0.0255%" height="15" fill="rgb(230,9,30)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="559.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="92.3175%" y="533" width="0.0255%" height="15" fill="rgb(230,136,20)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="543.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="92.3175%" y="517" width="0.0255%" height="15" fill="rgb(215,210,22)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="527.50"></text></g><g><title>acpi_irq (1 samples, 0.03%)</title><rect x="92.3175%" y="501" width="0.0255%" height="15" fill="rgb(218,43,5)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="511.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (1 samples, 0.03%)</title><rect x="92.3175%" y="485" width="0.0255%" height="15" fill="rgb(216,11,5)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="495.50"></text></g><g><title>acpi_ev_gpe_detect (1 samples, 0.03%)</title><rect x="92.3175%" y="469" width="0.0255%" height="15" fill="rgb(209,82,29)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="479.50"></text></g><g><title>acpi_ev_detect_gpe (1 samples, 0.03%)</title><rect x="92.3175%" y="453" width="0.0255%" height="15" fill="rgb(244,115,12)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="463.50"></text></g><g><title>acpi_hw_gpe_read (1 samples, 0.03%)</title><rect x="92.3175%" y="437" width="0.0255%" height="15" fill="rgb(222,82,18)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="447.50"></text></g><g><title>acpi_os_read_port (1 samples, 0.03%)</title><rect x="92.3175%" y="421" width="0.0255%" height="15" fill="rgb(249,227,8)" fg:x="3617" fg:w="1"/><text x="92.4347%" y="431.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.05%)</title><rect x="92.3430%" y="613" width="0.0510%" height="15" fill="rgb(253,141,45)" fg:x="3618" fg:w="2"/><text x="92.4602%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 1.63%)</title><rect x="90.8372%" y="645" width="1.6335%" height="15" fill="rgb(234,184,4)" fg:x="3559" fg:w="64"/><text x="90.9543%" y="655.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (64 samples, 1.63%)</title><rect x="90.8372%" y="629" width="1.6335%" height="15" fill="rgb(218,194,23)" fg:x="3559" fg:w="64"/><text x="90.9543%" y="639.50">all..</text></g><g><title>__rust_dealloc (3 samples, 0.08%)</title><rect x="92.3941%" y="613" width="0.0766%" height="15" fill="rgb(235,66,41)" fg:x="3620" fg:w="3"/><text x="92.5113%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (68 samples, 1.74%)</title><rect x="90.7606%" y="693" width="1.7356%" height="15" fill="rgb(245,217,1)" fg:x="3556" fg:w="68"/><text x="90.8778%" y="703.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (68 samples, 1.74%)</title><rect x="90.7606%" y="677" width="1.7356%" height="15" fill="rgb(229,91,1)" fg:x="3556" fg:w="68"/><text x="90.8778%" y="687.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 1.74%)</title><rect x="90.7606%" y="661" width="1.7356%" height="15" fill="rgb(207,101,30)" fg:x="3556" fg:w="68"/><text x="90.8778%" y="671.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="92.4706%" y="645" width="0.0255%" height="15" fill="rgb(223,82,49)" fg:x="3623" fg:w="1"/><text x="92.5878%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (657 samples, 16.77%)</title><rect x="76.0082%" y="709" width="16.7688%" height="15" fill="rgb(218,167,17)" fg:x="2978" fg:w="657"/><text x="76.1254%" y="719.50">fringe_vs_astar::structures::graph::generate_neighbors</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (11 samples, 0.28%)</title><rect x="92.4962%" y="693" width="0.2808%" height="15" fill="rgb(208,103,14)" fg:x="3624" fg:w="11"/><text x="92.6134%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.08%)</title><rect x="92.7004%" y="677" width="0.0766%" height="15" fill="rgb(238,20,8)" fg:x="3632" fg:w="3"/><text x="92.8175%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.08%)</title><rect x="92.7004%" y="661" width="0.0766%" height="15" fill="rgb(218,80,54)" fg:x="3632" fg:w="3"/><text x="92.8175%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.08%)</title><rect x="92.7004%" y="645" width="0.0766%" height="15" fill="rgb(240,144,17)" fg:x="3632" fg:w="3"/><text x="92.8175%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (21 samples, 0.54%)</title><rect x="92.7769%" y="709" width="0.5360%" height="15" fill="rgb(245,27,50)" fg:x="3635" fg:w="21"/><text x="92.8941%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,419 samples, 36.22%)</title><rect x="57.2231%" y="741" width="36.2175%" height="15" fill="rgb(251,51,7)" fg:x="2242" fg:w="1419"/><text x="57.3403%" y="751.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,419 samples, 36.22%)</title><rect x="57.2231%" y="725" width="36.2175%" height="15" fill="rgb(245,217,29)" fg:x="2242" fg:w="1419"/><text x="57.3403%" y="735.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (5 samples, 0.13%)</title><rect x="93.3129%" y="709" width="0.1276%" height="15" fill="rgb(221,176,29)" fg:x="3656" fg:w="5"/><text x="93.4301%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.13%)</title><rect x="93.3129%" y="693" width="0.1276%" height="15" fill="rgb(212,180,24)" fg:x="3656" fg:w="5"/><text x="93.4301%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.13%)</title><rect x="93.3129%" y="677" width="0.1276%" height="15" fill="rgb(254,24,2)" fg:x="3656" fg:w="5"/><text x="93.4301%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.13%)</title><rect x="93.3129%" y="661" width="0.1276%" height="15" fill="rgb(230,100,2)" fg:x="3656" fg:w="5"/><text x="93.4301%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.23%)</title><rect x="93.5681%" y="597" width="0.2297%" height="15" fill="rgb(219,142,25)" fg:x="3666" fg:w="9"/><text x="93.6853%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="93.8234%" y="533" width="0.0255%" height="15" fill="rgb(240,73,43)" fg:x="3676" fg:w="1"/><text x="93.9406%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.08%)</title><rect x="93.7979%" y="565" width="0.0766%" height="15" fill="rgb(214,114,15)" fg:x="3675" fg:w="3"/><text x="93.9150%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="93.7979%" y="549" width="0.0766%" height="15" fill="rgb(207,130,4)" fg:x="3675" fg:w="3"/><text x="93.9150%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="93.8489%" y="533" width="0.0255%" height="15" fill="rgb(221,25,40)" fg:x="3677" fg:w="1"/><text x="93.9661%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (10 samples, 0.26%)</title><rect x="93.8744%" y="565" width="0.2552%" height="15" fill="rgb(241,184,7)" fg:x="3678" fg:w="10"/><text x="93.9916%" y="575.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="94.1297%" y="197" width="0.0255%" height="15" fill="rgb(235,159,4)" fg:x="3688" fg:w="1"/><text x="94.2468%" y="207.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="94.1297%" y="181" width="0.0255%" height="15" fill="rgb(214,87,48)" fg:x="3688" fg:w="1"/><text x="94.2468%" y="191.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="94.1297%" y="165" width="0.0255%" height="15" fill="rgb(246,198,24)" fg:x="3688" fg:w="1"/><text x="94.2468%" y="175.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="94.1297%" y="149" width="0.0255%" height="15" fill="rgb(209,66,40)" fg:x="3688" fg:w="1"/><text x="94.2468%" y="159.50"></text></g><g><title>_compound_head (1 samples, 0.03%)</title><rect x="94.1552%" y="133" width="0.0255%" height="15" fill="rgb(233,147,39)" fg:x="3689" fg:w="1"/><text x="94.2724%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.64%)</title><rect x="93.5681%" y="613" width="0.6381%" height="15" fill="rgb(231,145,52)" fg:x="3666" fg:w="25"/><text x="93.6853%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.41%)</title><rect x="93.7979%" y="597" width="0.4084%" height="15" fill="rgb(206,20,26)" fg:x="3675" fg:w="16"/><text x="93.9150%" y="607.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (16 samples, 0.41%)</title><rect x="93.7979%" y="581" width="0.4084%" height="15" fill="rgb(238,220,4)" fg:x="3675" fg:w="16"/><text x="93.9150%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="94.1297%" y="565" width="0.0766%" height="15" fill="rgb(252,195,42)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (3 samples, 0.08%)</title><rect x="94.1297%" y="549" width="0.0766%" height="15" fill="rgb(209,10,6)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="94.1297%" y="533" width="0.0766%" height="15" fill="rgb(229,3,52)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (3 samples, 0.08%)</title><rect x="94.1297%" y="517" width="0.0766%" height="15" fill="rgb(253,49,37)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="94.1297%" y="501" width="0.0766%" height="15" fill="rgb(240,103,49)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3 samples, 0.08%)</title><rect x="94.1297%" y="485" width="0.0766%" height="15" fill="rgb(250,182,30)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="94.1297%" y="469" width="0.0766%" height="15" fill="rgb(248,8,30)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="94.1297%" y="453" width="0.0766%" height="15" fill="rgb(237,120,30)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="94.1297%" y="437" width="0.0766%" height="15" fill="rgb(221,146,34)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="447.50"></text></g><g><title>__GI___libc_free (3 samples, 0.08%)</title><rect x="94.1297%" y="421" width="0.0766%" height="15" fill="rgb(242,55,13)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="431.50"></text></g><g><title>_int_free (3 samples, 0.08%)</title><rect x="94.1297%" y="405" width="0.0766%" height="15" fill="rgb(242,112,31)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="415.50"></text></g><g><title>systrim (3 samples, 0.08%)</title><rect x="94.1297%" y="389" width="0.0766%" height="15" fill="rgb(249,192,27)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="399.50"></text></g><g><title>__glibc_morecore (3 samples, 0.08%)</title><rect x="94.1297%" y="373" width="0.0766%" height="15" fill="rgb(208,204,44)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="383.50"></text></g><g><title>__GI___sbrk (3 samples, 0.08%)</title><rect x="94.1297%" y="357" width="0.0766%" height="15" fill="rgb(208,93,54)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="367.50"></text></g><g><title>__GI___sbrk (3 samples, 0.08%)</title><rect x="94.1297%" y="341" width="0.0766%" height="15" fill="rgb(242,1,31)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="351.50"></text></g><g><title>__brk (3 samples, 0.08%)</title><rect x="94.1297%" y="325" width="0.0766%" height="15" fill="rgb(241,83,25)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="94.1297%" y="309" width="0.0766%" height="15" fill="rgb(205,169,50)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="319.50"></text></g><g><title>do_syscall_64 (3 samples, 0.08%)</title><rect x="94.1297%" y="293" width="0.0766%" height="15" fill="rgb(239,186,37)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="303.50"></text></g><g><title>x64_sys_call (3 samples, 0.08%)</title><rect x="94.1297%" y="277" width="0.0766%" height="15" fill="rgb(205,221,10)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="287.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.08%)</title><rect x="94.1297%" y="261" width="0.0766%" height="15" fill="rgb(218,196,15)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="271.50"></text></g><g><title>__do_sys_brk (3 samples, 0.08%)</title><rect x="94.1297%" y="245" width="0.0766%" height="15" fill="rgb(218,196,35)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="255.50"></text></g><g><title>do_vmi_align_munmap (3 samples, 0.08%)</title><rect x="94.1297%" y="229" width="0.0766%" height="15" fill="rgb(233,63,24)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="239.50"></text></g><g><title>unmap_region (3 samples, 0.08%)</title><rect x="94.1297%" y="213" width="0.0766%" height="15" fill="rgb(225,8,4)" fg:x="3688" fg:w="3"/><text x="94.2468%" y="223.50"></text></g><g><title>unmap_vmas (2 samples, 0.05%)</title><rect x="94.1552%" y="197" width="0.0510%" height="15" fill="rgb(234,105,35)" fg:x="3689" fg:w="2"/><text x="94.2724%" y="207.50"></text></g><g><title>unmap_single_vma (2 samples, 0.05%)</title><rect x="94.1552%" y="181" width="0.0510%" height="15" fill="rgb(236,21,32)" fg:x="3689" fg:w="2"/><text x="94.2724%" y="191.50"></text></g><g><title>unmap_page_range (2 samples, 0.05%)</title><rect x="94.1552%" y="165" width="0.0510%" height="15" fill="rgb(228,109,6)" fg:x="3689" fg:w="2"/><text x="94.2724%" y="175.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.05%)</title><rect x="94.1552%" y="149" width="0.0510%" height="15" fill="rgb(229,215,31)" fg:x="3689" fg:w="2"/><text x="94.2724%" y="159.50"></text></g><g><title>zap_pte_range (1 samples, 0.03%)</title><rect x="94.1807%" y="133" width="0.0255%" height="15" fill="rgb(221,52,54)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="143.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.03%)</title><rect x="94.1807%" y="117" width="0.0255%" height="15" fill="rgb(252,129,43)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="127.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="94.1807%" y="101" width="0.0255%" height="15" fill="rgb(248,183,27)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="111.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="94.1807%" y="85" width="0.0255%" height="15" fill="rgb(250,0,22)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="95.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="94.1807%" y="69" width="0.0255%" height="15" fill="rgb(213,166,10)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="79.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="94.1807%" y="53" width="0.0255%" height="15" fill="rgb(207,163,36)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="63.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="94.1807%" y="37" width="0.0255%" height="15" fill="rgb(208,122,22)" fg:x="3690" fg:w="1"/><text x="94.2979%" y="47.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="94.3338%" y="325" width="0.0255%" height="15" fill="rgb(207,104,49)" fg:x="3696" fg:w="1"/><text x="94.4510%" y="335.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="94.3338%" y="309" width="0.0255%" height="15" fill="rgb(248,211,50)" fg:x="3696" fg:w="1"/><text x="94.4510%" y="319.50"></text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="94.3338%" y="293" width="0.0255%" height="15" fill="rgb(217,13,45)" fg:x="3696" fg:w="1"/><text x="94.4510%" y="303.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="94.3338%" y="373" width="0.0510%" height="15" fill="rgb(211,216,49)" fg:x="3696" fg:w="2"/><text x="94.4510%" y="383.50"></text></g><g><title>handle_pte_fault (2 samples, 0.05%)</title><rect x="94.3338%" y="357" width="0.0510%" height="15" fill="rgb(221,58,53)" fg:x="3696" fg:w="2"/><text x="94.4510%" y="367.50"></text></g><g><title>do_anonymous_page (2 samples, 0.05%)</title><rect x="94.3338%" y="341" width="0.0510%" height="15" fill="rgb(220,112,41)" fg:x="3696" fg:w="2"/><text x="94.4510%" y="351.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="94.3594%" y="325" width="0.0255%" height="15" fill="rgb(236,38,28)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="335.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="94.3594%" y="309" width="0.0255%" height="15" fill="rgb(227,195,22)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="319.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="94.3594%" y="293" width="0.0255%" height="15" fill="rgb(214,55,33)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="94.3594%" y="277" width="0.0255%" height="15" fill="rgb(248,80,13)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="287.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="94.3594%" y="261" width="0.0255%" height="15" fill="rgb(238,52,6)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="271.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="94.3594%" y="245" width="0.0255%" height="15" fill="rgb(224,198,47)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="255.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.03%)</title><rect x="94.3594%" y="229" width="0.0255%" height="15" fill="rgb(233,171,20)" fg:x="3697" fg:w="1"/><text x="94.4766%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.20%)</title><rect x="94.2062%" y="613" width="0.2042%" height="15" fill="rgb(241,30,25)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.20%)</title><rect x="94.2062%" y="597" width="0.2042%" height="15" fill="rgb(207,171,38)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.20%)</title><rect x="94.2062%" y="581" width="0.2042%" height="15" fill="rgb(234,70,1)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.20%)</title><rect x="94.2062%" y="565" width="0.2042%" height="15" fill="rgb(232,178,18)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.20%)</title><rect x="94.2062%" y="549" width="0.2042%" height="15" fill="rgb(241,78,40)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.20%)</title><rect x="94.2062%" y="533" width="0.2042%" height="15" fill="rgb(222,35,25)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.20%)</title><rect x="94.2062%" y="517" width="0.2042%" height="15" fill="rgb(207,92,16)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="527.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.20%)</title><rect x="94.2062%" y="501" width="0.2042%" height="15" fill="rgb(216,59,51)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="511.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.20%)</title><rect x="94.2062%" y="485" width="0.2042%" height="15" fill="rgb(213,80,28)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="495.50"></text></g><g><title>_int_realloc (8 samples, 0.20%)</title><rect x="94.2062%" y="469" width="0.2042%" height="15" fill="rgb(220,93,7)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="479.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.20%)</title><rect x="94.2062%" y="453" width="0.2042%" height="15" fill="rgb(225,24,44)" fg:x="3691" fg:w="8"/><text x="94.3234%" y="463.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.10%)</title><rect x="94.3083%" y="437" width="0.1021%" height="15" fill="rgb(243,74,40)" fg:x="3695" fg:w="4"/><text x="94.4255%" y="447.50"></text></g><g><title>exc_page_fault (3 samples, 0.08%)</title><rect x="94.3338%" y="421" width="0.0766%" height="15" fill="rgb(228,39,7)" fg:x="3696" fg:w="3"/><text x="94.4510%" y="431.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.08%)</title><rect x="94.3338%" y="405" width="0.0766%" height="15" fill="rgb(227,79,8)" fg:x="3696" fg:w="3"/><text x="94.4510%" y="415.50"></text></g><g><title>handle_mm_fault (3 samples, 0.08%)</title><rect x="94.3338%" y="389" width="0.0766%" height="15" fill="rgb(236,58,11)" fg:x="3696" fg:w="3"/><text x="94.4510%" y="399.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="94.3849%" y="373" width="0.0255%" height="15" fill="rgb(249,63,35)" fg:x="3698" fg:w="1"/><text x="94.5021%" y="383.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="94.3849%" y="357" width="0.0255%" height="15" fill="rgb(252,114,16)" fg:x="3698" fg:w="1"/><text x="94.5021%" y="367.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.05%)</title><rect x="94.4359%" y="485" width="0.0510%" height="15" fill="rgb(254,151,24)" fg:x="3700" fg:w="2"/><text x="94.5531%" y="495.50"></text></g><g><title>charge_memcg (2 samples, 0.05%)</title><rect x="94.4359%" y="469" width="0.0510%" height="15" fill="rgb(253,54,39)" fg:x="3700" fg:w="2"/><text x="94.5531%" y="479.50"></text></g><g><title>__count_memcg_events (2 samples, 0.05%)</title><rect x="94.4359%" y="453" width="0.0510%" height="15" fill="rgb(243,25,45)" fg:x="3700" fg:w="2"/><text x="94.5531%" y="463.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.08%)</title><rect x="94.4359%" y="597" width="0.0766%" height="15" fill="rgb(234,134,9)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="607.50"></text></g><g><title>exc_page_fault (3 samples, 0.08%)</title><rect x="94.4359%" y="581" width="0.0766%" height="15" fill="rgb(227,166,31)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="591.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.08%)</title><rect x="94.4359%" y="565" width="0.0766%" height="15" fill="rgb(245,143,41)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="575.50"></text></g><g><title>handle_mm_fault (3 samples, 0.08%)</title><rect x="94.4359%" y="549" width="0.0766%" height="15" fill="rgb(238,181,32)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="559.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.08%)</title><rect x="94.4359%" y="533" width="0.0766%" height="15" fill="rgb(224,113,18)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="543.50"></text></g><g><title>handle_pte_fault (3 samples, 0.08%)</title><rect x="94.4359%" y="517" width="0.0766%" height="15" fill="rgb(240,229,28)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="527.50"></text></g><g><title>do_anonymous_page (3 samples, 0.08%)</title><rect x="94.4359%" y="501" width="0.0766%" height="15" fill="rgb(250,185,3)" fg:x="3700" fg:w="3"/><text x="94.5531%" y="511.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="94.4870%" y="485" width="0.0255%" height="15" fill="rgb(212,59,25)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="495.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="94.4870%" y="469" width="0.0255%" height="15" fill="rgb(221,87,20)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="479.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.03%)</title><rect x="94.4870%" y="453" width="0.0255%" height="15" fill="rgb(213,74,28)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="463.50"></text></g><g><title>lru_add_fn (1 samples, 0.03%)</title><rect x="94.4870%" y="437" width="0.0255%" height="15" fill="rgb(224,132,34)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="447.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.03%)</title><rect x="94.4870%" y="421" width="0.0255%" height="15" fill="rgb(222,101,24)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="431.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="94.4870%" y="405" width="0.0255%" height="15" fill="rgb(254,142,4)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="94.4870%" y="389" width="0.0255%" height="15" fill="rgb(230,229,49)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="399.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="94.4870%" y="373" width="0.0255%" height="15" fill="rgb(238,70,47)" fg:x="3702" fg:w="1"/><text x="94.6042%" y="383.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (43 samples, 1.10%)</title><rect x="93.4405%" y="725" width="1.0975%" height="15" fill="rgb(231,160,17)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="735.50">f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 1.10%)</title><rect x="93.4405%" y="709" width="1.0975%" height="15" fill="rgb(218,68,53)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="719.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 1.10%)</title><rect x="93.4405%" y="693" width="1.0975%" height="15" fill="rgb(236,111,10)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 1.10%)</title><rect x="93.4405%" y="677" width="1.0975%" height="15" fill="rgb(224,34,41)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="687.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (43 samples, 1.10%)</title><rect x="93.4405%" y="661" width="1.0975%" height="15" fill="rgb(241,118,19)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="671.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (43 samples, 1.10%)</title><rect x="93.4405%" y="645" width="1.0975%" height="15" fill="rgb(238,129,25)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="655.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (43 samples, 1.10%)</title><rect x="93.4405%" y="629" width="1.0975%" height="15" fill="rgb(238,22,31)" fg:x="3661" fg:w="43"/><text x="93.5577%" y="639.50">a..</text></g><g><title>core::ptr::write (5 samples, 0.13%)</title><rect x="94.4104%" y="613" width="0.1276%" height="15" fill="rgb(222,174,48)" fg:x="3699" fg:w="5"/><text x="94.5276%" y="623.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="94.5125%" y="597" width="0.0255%" height="15" fill="rgb(206,152,40)" fg:x="3703" fg:w="1"/><text x="94.6297%" y="607.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.05%)</title><rect x="94.5636%" y="549" width="0.0510%" height="15" fill="rgb(218,99,54)" fg:x="3705" fg:w="2"/><text x="94.6807%" y="559.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.05%)</title><rect x="94.5636%" y="533" width="0.0510%" height="15" fill="rgb(220,174,26)" fg:x="3705" fg:w="2"/><text x="94.6807%" y="543.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.03%)</title><rect x="94.6146%" y="517" width="0.0255%" height="15" fill="rgb(245,116,9)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="527.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.03%)</title><rect x="94.6146%" y="501" width="0.0255%" height="15" fill="rgb(209,72,35)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.03%)</title><rect x="94.6146%" y="485" width="0.0255%" height="15" fill="rgb(226,126,21)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.03%)</title><rect x="94.6146%" y="469" width="0.0255%" height="15" fill="rgb(227,192,1)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="479.50"></text></g><g><title>__GI___libc_read (1 samples, 0.03%)</title><rect x="94.6146%" y="453" width="0.0255%" height="15" fill="rgb(237,180,29)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="94.6146%" y="437" width="0.0255%" height="15" fill="rgb(230,197,35)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="94.6146%" y="421" width="0.0255%" height="15" fill="rgb(246,193,31)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="431.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="94.6146%" y="405" width="0.0255%" height="15" fill="rgb(241,36,4)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="415.50"></text></g><g><title>__x64_sys_read (1 samples, 0.03%)</title><rect x="94.6146%" y="389" width="0.0255%" height="15" fill="rgb(241,130,17)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="399.50"></text></g><g><title>ksys_read (1 samples, 0.03%)</title><rect x="94.6146%" y="373" width="0.0255%" height="15" fill="rgb(206,137,32)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="383.50"></text></g><g><title>vfs_read (1 samples, 0.03%)</title><rect x="94.6146%" y="357" width="0.0255%" height="15" fill="rgb(237,228,51)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="367.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="94.6146%" y="341" width="0.0255%" height="15" fill="rgb(243,6,42)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="351.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.03%)</title><rect x="94.6146%" y="325" width="0.0255%" height="15" fill="rgb(251,74,28)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="335.50"></text></g><g><title>filemap_read (1 samples, 0.03%)</title><rect x="94.6146%" y="309" width="0.0255%" height="15" fill="rgb(218,20,49)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="319.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="94.6146%" y="293" width="0.0255%" height="15" fill="rgb(238,28,14)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="303.50"></text></g><g><title>_copy_to_iter (1 samples, 0.03%)</title><rect x="94.6146%" y="277" width="0.0255%" height="15" fill="rgb(229,40,46)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="287.50"></text></g><g><title>copyout (1 samples, 0.03%)</title><rect x="94.6146%" y="261" width="0.0255%" height="15" fill="rgb(244,195,20)" fg:x="3707" fg:w="1"/><text x="94.7318%" y="271.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="94.6401%" y="325" width="0.0255%" height="15" fill="rgb(253,56,35)" fg:x="3708" fg:w="1"/><text x="94.7573%" y="335.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="94.6401%" y="309" width="0.0255%" height="15" fill="rgb(210,149,44)" fg:x="3708" fg:w="1"/><text x="94.7573%" y="319.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (6 samples, 0.15%)</title><rect x="94.5380%" y="725" width="0.1531%" height="15" fill="rgb(240,135,12)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.15%)</title><rect x="94.5380%" y="709" width="0.1531%" height="15" fill="rgb(251,24,50)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="94.5380%" y="693" width="0.1531%" height="15" fill="rgb(243,200,47)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="94.5380%" y="677" width="0.1531%" height="15" fill="rgb(224,166,26)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="94.5380%" y="661" width="0.1531%" height="15" fill="rgb(233,0,47)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.15%)</title><rect x="94.5380%" y="645" width="0.1531%" height="15" fill="rgb(253,80,5)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.15%)</title><rect x="94.5380%" y="629" width="0.1531%" height="15" fill="rgb(214,133,25)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.15%)</title><rect x="94.5380%" y="613" width="0.1531%" height="15" fill="rgb(209,27,14)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="623.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.15%)</title><rect x="94.5380%" y="597" width="0.1531%" height="15" fill="rgb(219,102,51)" fg:x="3704" fg:w="6"/><text x="94.6552%" y="607.50"></text></g><g><title>std::io::BufRead::read_line (5 samples, 0.13%)</title><rect x="94.5636%" y="581" width="0.1276%" height="15" fill="rgb(237,18,16)" fg:x="3705" fg:w="5"/><text x="94.6807%" y="591.50"></text></g><g><title>std::io::append_to_string (5 samples, 0.13%)</title><rect x="94.5636%" y="565" width="0.1276%" height="15" fill="rgb(241,85,17)" fg:x="3705" fg:w="5"/><text x="94.6807%" y="575.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (3 samples, 0.08%)</title><rect x="94.6146%" y="549" width="0.0766%" height="15" fill="rgb(236,90,42)" fg:x="3707" fg:w="3"/><text x="94.7318%" y="559.50"></text></g><g><title>std::io::read_until (3 samples, 0.08%)</title><rect x="94.6146%" y="533" width="0.0766%" height="15" fill="rgb(249,57,21)" fg:x="3707" fg:w="3"/><text x="94.7318%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="94.6401%" y="517" width="0.0510%" height="15" fill="rgb(243,12,36)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="94.6401%" y="501" width="0.0510%" height="15" fill="rgb(253,128,47)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="94.6401%" y="485" width="0.0510%" height="15" fill="rgb(207,33,20)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="94.6401%" y="469" width="0.0510%" height="15" fill="rgb(233,215,35)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="479.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.05%)</title><rect x="94.6401%" y="453" width="0.0510%" height="15" fill="rgb(249,188,52)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="463.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="94.6401%" y="437" width="0.0510%" height="15" fill="rgb(225,12,32)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="447.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="94.6401%" y="421" width="0.0510%" height="15" fill="rgb(247,98,14)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="431.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="94.6401%" y="405" width="0.0510%" height="15" fill="rgb(247,219,48)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="415.50"></text></g><g><title>handle_mm_fault (2 samples, 0.05%)</title><rect x="94.6401%" y="389" width="0.0510%" height="15" fill="rgb(253,60,48)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="399.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="94.6401%" y="373" width="0.0510%" height="15" fill="rgb(245,15,52)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="383.50"></text></g><g><title>handle_pte_fault (2 samples, 0.05%)</title><rect x="94.6401%" y="357" width="0.0510%" height="15" fill="rgb(220,133,28)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="367.50"></text></g><g><title>do_anonymous_page (2 samples, 0.05%)</title><rect x="94.6401%" y="341" width="0.0510%" height="15" fill="rgb(217,180,4)" fg:x="3708" fg:w="2"/><text x="94.7573%" y="351.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.03%)</title><rect x="94.6656%" y="325" width="0.0255%" height="15" fill="rgb(251,24,1)" fg:x="3709" fg:w="1"/><text x="94.7828%" y="335.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="94.6656%" y="309" width="0.0255%" height="15" fill="rgb(212,185,49)" fg:x="3709" fg:w="1"/><text x="94.7828%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.38%)</title><rect x="94.6912%" y="421" width="0.3828%" height="15" fill="rgb(215,175,22)" fg:x="3710" fg:w="15"/><text x="94.8084%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.38%)</title><rect x="94.6912%" y="405" width="0.3828%" height="15" fill="rgb(250,205,14)" fg:x="3710" fg:w="15"/><text x="94.8084%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.43%)</title><rect x="94.6912%" y="437" width="0.4339%" height="15" fill="rgb(225,211,22)" fg:x="3710" fg:w="17"/><text x="94.8084%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.05%)</title><rect x="95.0740%" y="421" width="0.0510%" height="15" fill="rgb(251,179,42)" fg:x="3725" fg:w="2"/><text x="95.1912%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.05%)</title><rect x="95.0740%" y="405" width="0.0510%" height="15" fill="rgb(208,216,51)" fg:x="3725" fg:w="2"/><text x="95.1912%" y="415.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (2 samples, 0.05%)</title><rect x="95.0740%" y="389" width="0.0510%" height="15" fill="rgb(235,36,11)" fg:x="3725" fg:w="2"/><text x="95.1912%" y="399.50"></text></g><g><title>__pte_alloc (1 samples, 0.03%)</title><rect x="95.1251%" y="149" width="0.0255%" height="15" fill="rgb(213,189,28)" fg:x="3727" fg:w="1"/><text x="95.2423%" y="159.50"></text></g><g><title>pte_alloc_one (1 samples, 0.03%)</title><rect x="95.1251%" y="133" width="0.0255%" height="15" fill="rgb(227,203,42)" fg:x="3727" fg:w="1"/><text x="95.2423%" y="143.50"></text></g><g><title>alloc_pages (1 samples, 0.03%)</title><rect x="95.1251%" y="117" width="0.0255%" height="15" fill="rgb(244,72,36)" fg:x="3727" fg:w="1"/><text x="95.2423%" y="127.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="95.1251%" y="101" width="0.0255%" height="15" fill="rgb(213,53,17)" fg:x="3727" fg:w="1"/><text x="95.2423%" y="111.50"></text></g><g><title>__memcg_kmem_charge_page (1 samples, 0.03%)</title><rect x="95.1251%" y="85" width="0.0255%" height="15" fill="rgb(207,167,3)" fg:x="3727" fg:w="1"/><text x="95.2423%" y="95.50"></text></g><g><title>__get_obj_cgroup_from_memcg (1 samples, 0.03%)</title><rect x="95.1251%" y="69" width="0.0255%" height="15" fill="rgb(216,98,30)" fg:x="3727" fg:w="1"/><text x="95.2423%" y="79.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="95.1251%" y="277" width="0.0510%" height="15" fill="rgb(236,123,15)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="287.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="95.1251%" y="261" width="0.0510%" height="15" fill="rgb(248,81,50)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="271.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="95.1251%" y="245" width="0.0510%" height="15" fill="rgb(214,120,4)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="255.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="95.1251%" y="229" width="0.0510%" height="15" fill="rgb(208,179,34)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="239.50"></text></g><g><title>handle_mm_fault (2 samples, 0.05%)</title><rect x="95.1251%" y="213" width="0.0510%" height="15" fill="rgb(227,140,7)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="223.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="95.1251%" y="197" width="0.0510%" height="15" fill="rgb(214,22,6)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="207.50"></text></g><g><title>handle_pte_fault (2 samples, 0.05%)</title><rect x="95.1251%" y="181" width="0.0510%" height="15" fill="rgb(207,137,27)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="191.50"></text></g><g><title>do_anonymous_page (2 samples, 0.05%)</title><rect x="95.1251%" y="165" width="0.0510%" height="15" fill="rgb(210,8,46)" fg:x="3727" fg:w="2"/><text x="95.2423%" y="175.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="95.1506%" y="149" width="0.0255%" height="15" fill="rgb(240,16,54)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="159.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="95.1506%" y="133" width="0.0255%" height="15" fill="rgb(211,209,29)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="143.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="95.1506%" y="117" width="0.0255%" height="15" fill="rgb(226,228,24)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="127.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="95.1506%" y="101" width="0.0255%" height="15" fill="rgb(222,84,9)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="111.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="95.1506%" y="85" width="0.0255%" height="15" fill="rgb(234,203,30)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="95.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="95.1506%" y="69" width="0.0255%" height="15" fill="rgb(238,109,14)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="79.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.03%)</title><rect x="95.1506%" y="53" width="0.0255%" height="15" fill="rgb(233,206,34)" fg:x="3728" fg:w="1"/><text x="95.2678%" y="63.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="95.1761%" y="229" width="0.0255%" height="15" fill="rgb(220,167,47)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="239.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="95.1761%" y="213" width="0.0255%" height="15" fill="rgb(238,105,10)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="223.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="95.1761%" y="197" width="0.0255%" height="15" fill="rgb(213,227,17)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="207.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="95.1761%" y="181" width="0.0255%" height="15" fill="rgb(217,132,38)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="191.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="95.1761%" y="165" width="0.0255%" height="15" fill="rgb(242,146,4)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="175.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="95.1761%" y="149" width="0.0255%" height="15" fill="rgb(212,61,9)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="159.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="95.1761%" y="133" width="0.0255%" height="15" fill="rgb(247,126,22)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="143.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="95.1761%" y="117" width="0.0255%" height="15" fill="rgb(220,196,2)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="127.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.03%)</title><rect x="95.1761%" y="101" width="0.0255%" height="15" fill="rgb(208,46,4)" fg:x="3729" fg:w="1"/><text x="95.2933%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="95.1251%" y="437" width="0.1021%" height="15" fill="rgb(252,104,46)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="95.1251%" y="421" width="0.1021%" height="15" fill="rgb(237,152,48)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.10%)</title><rect x="95.1251%" y="405" width="0.1021%" height="15" fill="rgb(221,59,37)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.10%)</title><rect x="95.1251%" y="389" width="0.1021%" height="15" fill="rgb(209,202,51)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.10%)</title><rect x="95.1251%" y="373" width="0.1021%" height="15" fill="rgb(228,81,30)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.10%)</title><rect x="95.1251%" y="357" width="0.1021%" height="15" fill="rgb(227,42,39)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.10%)</title><rect x="95.1251%" y="341" width="0.1021%" height="15" fill="rgb(221,26,2)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="351.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.10%)</title><rect x="95.1251%" y="325" width="0.1021%" height="15" fill="rgb(254,61,31)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="335.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.10%)</title><rect x="95.1251%" y="309" width="0.1021%" height="15" fill="rgb(222,173,38)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="319.50"></text></g><g><title>_int_realloc (4 samples, 0.10%)</title><rect x="95.1251%" y="293" width="0.1021%" height="15" fill="rgb(218,50,12)" fg:x="3727" fg:w="4"/><text x="95.2423%" y="303.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="95.1761%" y="277" width="0.0510%" height="15" fill="rgb(223,88,40)" fg:x="3729" fg:w="2"/><text x="95.2933%" y="287.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="95.1761%" y="261" width="0.0510%" height="15" fill="rgb(237,54,19)" fg:x="3729" fg:w="2"/><text x="95.2933%" y="271.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="95.1761%" y="245" width="0.0510%" height="15" fill="rgb(251,129,25)" fg:x="3729" fg:w="2"/><text x="95.2933%" y="255.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.03%)</title><rect x="95.2016%" y="229" width="0.0255%" height="15" fill="rgb(238,97,19)" fg:x="3730" fg:w="1"/><text x="95.3188%" y="239.50"></text></g><g><title>mas_walk (1 samples, 0.03%)</title><rect x="95.2016%" y="213" width="0.0255%" height="15" fill="rgb(240,169,18)" fg:x="3730" fg:w="1"/><text x="95.3188%" y="223.50"></text></g><g><title>mtree_range_walk (1 samples, 0.03%)</title><rect x="95.2016%" y="197" width="0.0255%" height="15" fill="rgb(230,187,49)" fg:x="3730" fg:w="1"/><text x="95.3188%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (6 samples, 0.15%)</title><rect x="95.2272%" y="437" width="0.1531%" height="15" fill="rgb(209,44,26)" fg:x="3731" fg:w="6"/><text x="95.3443%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.71%)</title><rect x="94.6912%" y="469" width="0.7147%" height="15" fill="rgb(244,0,6)" fg:x="3710" fg:w="28"/><text x="94.8084%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (28 samples, 0.71%)</title><rect x="94.6912%" y="453" width="0.7147%" height="15" fill="rgb(248,18,21)" fg:x="3710" fg:w="28"/><text x="94.8084%" y="463.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="95.3803%" y="437" width="0.0255%" height="15" fill="rgb(245,180,19)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="447.50"></text></g><g><title>common_interrupt (1 samples, 0.03%)</title><rect x="95.3803%" y="421" width="0.0255%" height="15" fill="rgb(252,118,36)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="431.50"></text></g><g><title>__common_interrupt (1 samples, 0.03%)</title><rect x="95.3803%" y="405" width="0.0255%" height="15" fill="rgb(210,224,19)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="415.50"></text></g><g><title>handle_edge_irq (1 samples, 0.03%)</title><rect x="95.3803%" y="389" width="0.0255%" height="15" fill="rgb(218,30,24)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="399.50"></text></g><g><title>handle_irq_event (1 samples, 0.03%)</title><rect x="95.3803%" y="373" width="0.0255%" height="15" fill="rgb(219,75,50)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="383.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="95.3803%" y="357" width="0.0255%" height="15" fill="rgb(234,72,50)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="367.50"></text></g><g><title>gen11_irq_handler (1 samples, 0.03%)</title><rect x="95.3803%" y="341" width="0.0255%" height="15" fill="rgb(219,100,48)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="351.50"></text></g><g><title>gen11_display_irq_handler (1 samples, 0.03%)</title><rect x="95.3803%" y="325" width="0.0255%" height="15" fill="rgb(253,5,41)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="335.50"></text></g><g><title>gen8_de_irq_handler (1 samples, 0.03%)</title><rect x="95.3803%" y="309" width="0.0255%" height="15" fill="rgb(247,181,11)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="319.50"></text></g><g><title>drm_crtc_handle_vblank (1 samples, 0.03%)</title><rect x="95.3803%" y="293" width="0.0255%" height="15" fill="rgb(222,223,25)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="303.50"></text></g><g><title>drm_handle_vblank (1 samples, 0.03%)</title><rect x="95.3803%" y="277" width="0.0255%" height="15" fill="rgb(214,198,28)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="287.50"></text></g><g><title>drm_update_vblank_count (1 samples, 0.03%)</title><rect x="95.3803%" y="261" width="0.0255%" height="15" fill="rgb(230,46,43)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="271.50"></text></g><g><title>__get_vblank_counter (1 samples, 0.03%)</title><rect x="95.3803%" y="245" width="0.0255%" height="15" fill="rgb(233,65,53)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="255.50"></text></g><g><title>g4x_get_vblank_counter (1 samples, 0.03%)</title><rect x="95.3803%" y="229" width="0.0255%" height="15" fill="rgb(221,121,27)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="239.50"></text></g><g><title>fwtable_read32 (1 samples, 0.03%)</title><rect x="95.3803%" y="213" width="0.0255%" height="15" fill="rgb(247,70,47)" fg:x="3737" fg:w="1"/><text x="95.4975%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.74%)</title><rect x="94.6912%" y="709" width="0.7402%" height="15" fill="rgb(228,85,35)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.74%)</title><rect x="94.6912%" y="693" width="0.7402%" height="15" fill="rgb(209,50,18)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.74%)</title><rect x="94.6912%" y="677" width="0.7402%" height="15" fill="rgb(250,19,35)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.74%)</title><rect x="94.6912%" y="661" width="0.7402%" height="15" fill="rgb(253,107,29)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.74%)</title><rect x="94.6912%" y="645" width="0.7402%" height="15" fill="rgb(252,179,29)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (29 samples, 0.74%)</title><rect x="94.6912%" y="629" width="0.7402%" height="15" fill="rgb(238,194,6)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29 samples, 0.74%)</title><rect x="94.6912%" y="613" width="0.7402%" height="15" fill="rgb(238,164,29)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.74%)</title><rect x="94.6912%" y="597" width="0.7402%" height="15" fill="rgb(224,25,9)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.74%)</title><rect x="94.6912%" y="581" width="0.7402%" height="15" fill="rgb(244,153,23)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (29 samples, 0.74%)</title><rect x="94.6912%" y="565" width="0.7402%" height="15" fill="rgb(212,203,14)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (29 samples, 0.74%)</title><rect x="94.6912%" y="549" width="0.7402%" height="15" fill="rgb(220,164,20)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.74%)</title><rect x="94.6912%" y="533" width="0.7402%" height="15" fill="rgb(222,203,48)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.74%)</title><rect x="94.6912%" y="517" width="0.7402%" height="15" fill="rgb(215,159,22)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.74%)</title><rect x="94.6912%" y="501" width="0.7402%" height="15" fill="rgb(216,183,47)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.74%)</title><rect x="94.6912%" y="485" width="0.7402%" height="15" fill="rgb(229,195,25)" fg:x="3710" fg:w="29"/><text x="94.8084%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="95.4058%" y="469" width="0.0255%" height="15" fill="rgb(224,132,51)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="95.4058%" y="453" width="0.0255%" height="15" fill="rgb(240,63,7)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="95.4058%" y="437" width="0.0255%" height="15" fill="rgb(249,182,41)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="95.4058%" y="421" width="0.0255%" height="15" fill="rgb(243,47,26)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="95.4058%" y="405" width="0.0255%" height="15" fill="rgb(233,48,2)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="95.4058%" y="389" width="0.0255%" height="15" fill="rgb(244,165,34)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="95.4058%" y="373" width="0.0255%" height="15" fill="rgb(207,89,7)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.03%)</title><rect x="95.4058%" y="357" width="0.0255%" height="15" fill="rgb(244,117,36)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="95.4058%" y="341" width="0.0255%" height="15" fill="rgb(226,144,34)" fg:x="3738" fg:w="1"/><text x="95.5230%" y="351.50"></text></g><g><title>_start (3,508 samples, 89.54%)</title><rect x="5.9214%" y="901" width="89.5355%" height="15" fill="rgb(213,23,19)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="911.50">_start</text></g><g><title>__libc_start_main_impl (3,508 samples, 89.54%)</title><rect x="5.9214%" y="885" width="89.5355%" height="15" fill="rgb(217,75,12)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="895.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,508 samples, 89.54%)</title><rect x="5.9214%" y="869" width="89.5355%" height="15" fill="rgb(224,159,17)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="879.50">__libc_start_call_main</text></g><g><title>main (3,508 samples, 89.54%)</title><rect x="5.9214%" y="853" width="89.5355%" height="15" fill="rgb(217,118,1)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (3,508 samples, 89.54%)</title><rect x="5.9214%" y="837" width="89.5355%" height="15" fill="rgb(232,180,48)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (3,508 samples, 89.54%)</title><rect x="5.9214%" y="821" width="89.5355%" height="15" fill="rgb(230,27,33)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="831.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,508 samples, 89.54%)</title><rect x="5.9214%" y="805" width="89.5355%" height="15" fill="rgb(205,31,21)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,508 samples, 89.54%)</title><rect x="5.9214%" y="789" width="89.5355%" height="15" fill="rgb(253,59,4)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="799.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (3,508 samples, 89.54%)</title><rect x="5.9214%" y="773" width="89.5355%" height="15" fill="rgb(224,201,9)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="783.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (3,508 samples, 89.54%)</title><rect x="5.9214%" y="757" width="89.5355%" height="15" fill="rgb(229,206,30)" fg:x="232" fg:w="3508"/><text x="6.0386%" y="767.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (79 samples, 2.02%)</title><rect x="93.4405%" y="741" width="2.0163%" height="15" fill="rgb(212,67,47)" fg:x="3661" fg:w="79"/><text x="93.5577%" y="751.50">fring..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map (30 samples, 0.77%)</title><rect x="94.6912%" y="725" width="0.7657%" height="15" fill="rgb(211,96,50)" fg:x="3710" fg:w="30"/><text x="94.8084%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.03%)</title><rect x="95.4313%" y="709" width="0.0255%" height="15" fill="rgb(252,114,18)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="95.4313%" y="693" width="0.0255%" height="15" fill="rgb(223,58,37)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.03%)</title><rect x="95.4313%" y="677" width="0.0255%" height="15" fill="rgb(237,70,4)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.03%)</title><rect x="95.4313%" y="661" width="0.0255%" height="15" fill="rgb(244,85,46)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="95.4313%" y="645" width="0.0255%" height="15" fill="rgb(223,39,52)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="95.4313%" y="629" width="0.0255%" height="15" fill="rgb(218,200,14)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="95.4313%" y="613" width="0.0255%" height="15" fill="rgb(208,171,16)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="95.4313%" y="597" width="0.0255%" height="15" fill="rgb(234,200,18)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="95.4313%" y="581" width="0.0255%" height="15" fill="rgb(228,45,11)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="95.4313%" y="565" width="0.0255%" height="15" fill="rgb(237,182,11)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="95.4313%" y="549" width="0.0255%" height="15" fill="rgb(241,175,49)" fg:x="3739" fg:w="1"/><text x="95.5485%" y="559.50"></text></g><g><title>asm_exc_page_fault (124 samples, 3.16%)</title><rect x="95.4569%" y="901" width="3.1649%" height="15" fill="rgb(247,38,35)" fg:x="3740" fg:w="124"/><text x="95.5741%" y="911.50">asm_exc_p..</text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="98.6217%" y="853" width="0.0255%" height="15" fill="rgb(228,39,49)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="863.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="98.6217%" y="837" width="0.0255%" height="15" fill="rgb(226,101,26)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="847.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="98.6217%" y="821" width="0.0255%" height="15" fill="rgb(206,141,19)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="831.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.03%)</title><rect x="98.6217%" y="805" width="0.0255%" height="15" fill="rgb(211,200,13)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="815.50"></text></g><g><title>exec_binprm (1 samples, 0.03%)</title><rect x="98.6217%" y="789" width="0.0255%" height="15" fill="rgb(241,121,6)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="799.50"></text></g><g><title>search_binary_handler (1 samples, 0.03%)</title><rect x="98.6217%" y="773" width="0.0255%" height="15" fill="rgb(234,221,29)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="783.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="98.6217%" y="757" width="0.0255%" height="15" fill="rgb(229,136,5)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="767.50"></text></g><g><title>setup_arg_pages (1 samples, 0.03%)</title><rect x="98.6217%" y="741" width="0.0255%" height="15" fill="rgb(238,36,11)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="751.50"></text></g><g><title>shift_arg_pages (1 samples, 0.03%)</title><rect x="98.6217%" y="725" width="0.0255%" height="15" fill="rgb(251,55,41)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="735.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="98.6217%" y="709" width="0.0255%" height="15" fill="rgb(242,34,40)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="719.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.03%)</title><rect x="98.6217%" y="693" width="0.0255%" height="15" fill="rgb(215,42,17)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="703.50"></text></g><g><title>flush_tlb_func (1 samples, 0.03%)</title><rect x="98.6217%" y="677" width="0.0255%" height="15" fill="rgb(207,44,46)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="687.50"></text></g><g><title>native_flush_tlb_local (1 samples, 0.03%)</title><rect x="98.6217%" y="661" width="0.0255%" height="15" fill="rgb(211,206,28)" fg:x="3864" fg:w="1"/><text x="98.7389%" y="671.50"></text></g><g><title>_compound_head (5 samples, 0.13%)</title><rect x="98.6473%" y="677" width="0.1276%" height="15" fill="rgb(237,167,16)" fg:x="3865" fg:w="5"/><text x="98.7645%" y="687.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="98.7749%" y="661" width="0.0255%" height="15" fill="rgb(233,66,6)" fg:x="3870" fg:w="1"/><text x="98.8921%" y="671.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="98.9025%" y="629" width="0.0255%" height="15" fill="rgb(246,123,29)" fg:x="3875" fg:w="1"/><text x="99.0197%" y="639.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="98.9025%" y="613" width="0.0255%" height="15" fill="rgb(209,62,40)" fg:x="3875" fg:w="1"/><text x="99.0197%" y="623.50"></text></g><g><title>page_remove_rmap (6 samples, 0.15%)</title><rect x="98.8004%" y="661" width="0.1531%" height="15" fill="rgb(218,4,25)" fg:x="3871" fg:w="6"/><text x="98.9176%" y="671.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.05%)</title><rect x="98.9025%" y="645" width="0.0510%" height="15" fill="rgb(253,91,49)" fg:x="3875" fg:w="2"/><text x="99.0197%" y="655.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="98.9280%" y="629" width="0.0255%" height="15" fill="rgb(228,155,29)" fg:x="3876" fg:w="1"/><text x="99.0452%" y="639.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.03%)</title><rect x="98.9535%" y="613" width="0.0255%" height="15" fill="rgb(243,57,37)" fg:x="3877" fg:w="1"/><text x="99.0707%" y="623.50"></text></g><g><title>__mem_cgroup_uncharge_list (3 samples, 0.08%)</title><rect x="99.0301%" y="597" width="0.0766%" height="15" fill="rgb(244,167,17)" fg:x="3880" fg:w="3"/><text x="99.1473%" y="607.50"></text></g><g><title>uncharge_folio (3 samples, 0.08%)</title><rect x="99.0301%" y="581" width="0.0766%" height="15" fill="rgb(207,181,38)" fg:x="3880" fg:w="3"/><text x="99.1473%" y="591.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="99.1067%" y="597" width="0.0255%" height="15" fill="rgb(211,8,23)" fg:x="3883" fg:w="1"/><text x="99.2239%" y="607.50"></text></g><g><title>free_unref_page_list (15 samples, 0.38%)</title><rect x="99.1322%" y="597" width="0.3828%" height="15" fill="rgb(235,11,44)" fg:x="3884" fg:w="15"/><text x="99.2494%" y="607.50"></text></g><g><title>free_unref_page_commit (14 samples, 0.36%)</title><rect x="99.1577%" y="581" width="0.3573%" height="15" fill="rgb(248,18,52)" fg:x="3885" fg:w="14"/><text x="99.2749%" y="591.50"></text></g><g><title>free_pcppages_bulk (14 samples, 0.36%)</title><rect x="99.1577%" y="565" width="0.3573%" height="15" fill="rgb(208,4,7)" fg:x="3885" fg:w="14"/><text x="99.2749%" y="575.50"></text></g><g><title>__free_one_page (13 samples, 0.33%)</title><rect x="99.1833%" y="549" width="0.3318%" height="15" fill="rgb(240,17,39)" fg:x="3886" fg:w="13"/><text x="99.3004%" y="559.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.05%)</title><rect x="99.4640%" y="533" width="0.0510%" height="15" fill="rgb(207,170,3)" fg:x="3897" fg:w="2"/><text x="99.5812%" y="543.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.08%)</title><rect x="99.6937%" y="581" width="0.0766%" height="15" fill="rgb(236,100,52)" fg:x="3906" fg:w="3"/><text x="99.8109%" y="591.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="99.7192%" y="565" width="0.0510%" height="15" fill="rgb(246,78,51)" fg:x="3907" fg:w="2"/><text x="99.8364%" y="575.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (12 samples, 0.31%)</title><rect x="99.5151%" y="597" width="0.3063%" height="15" fill="rgb(211,17,15)" fg:x="3899" fg:w="12"/><text x="99.6322%" y="607.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.05%)</title><rect x="99.7703%" y="581" width="0.0510%" height="15" fill="rgb(209,59,46)" fg:x="3909" fg:w="2"/><text x="99.8875%" y="591.50"></text></g><g><title>free_pages_and_swap_cache (35 samples, 0.89%)</title><rect x="98.9535%" y="629" width="0.8933%" height="15" fill="rgb(210,92,25)" fg:x="3877" fg:w="35"/><text x="99.0707%" y="639.50">f..</text></g><g><title>release_pages (34 samples, 0.87%)</title><rect x="98.9791%" y="613" width="0.8678%" height="15" fill="rgb(238,174,52)" fg:x="3878" fg:w="34"/><text x="99.0963%" y="623.50">r..</text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="99.8213%" y="597" width="0.0255%" height="15" fill="rgb(230,73,7)" fg:x="3911" fg:w="1"/><text x="99.9385%" y="607.50"></text></g><g><title>fringe-vs-astar (3,913 samples, 99.87%)</title><rect x="0.0000%" y="917" width="99.8724%" height="15" fill="rgb(243,124,40)" fg:x="0" fg:w="3913"/><text x="0.1172%" y="927.50">fringe-vs-astar</text></g><g><title>entry_SYSCALL_64_after_hwframe (49 samples, 1.25%)</title><rect x="98.6217%" y="901" width="1.2506%" height="15" fill="rgb(244,170,11)" fg:x="3864" fg:w="49"/><text x="98.7389%" y="911.50">en..</text></g><g><title>do_syscall_64 (49 samples, 1.25%)</title><rect x="98.6217%" y="885" width="1.2506%" height="15" fill="rgb(207,114,54)" fg:x="3864" fg:w="49"/><text x="98.7389%" y="895.50">do..</text></g><g><title>x64_sys_call (49 samples, 1.25%)</title><rect x="98.6217%" y="869" width="1.2506%" height="15" fill="rgb(205,42,20)" fg:x="3864" fg:w="49"/><text x="98.7389%" y="879.50">x6..</text></g><g><title>__x64_sys_exit_group (48 samples, 1.23%)</title><rect x="98.6473%" y="853" width="1.2251%" height="15" fill="rgb(230,30,28)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="863.50">__..</text></g><g><title>do_group_exit (48 samples, 1.23%)</title><rect x="98.6473%" y="837" width="1.2251%" height="15" fill="rgb(205,73,54)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="847.50">do..</text></g><g><title>do_exit (48 samples, 1.23%)</title><rect x="98.6473%" y="821" width="1.2251%" height="15" fill="rgb(254,227,23)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="831.50">do..</text></g><g><title>exit_mm (48 samples, 1.23%)</title><rect x="98.6473%" y="805" width="1.2251%" height="15" fill="rgb(228,202,34)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="815.50">ex..</text></g><g><title>mmput (48 samples, 1.23%)</title><rect x="98.6473%" y="789" width="1.2251%" height="15" fill="rgb(222,225,37)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="799.50">mm..</text></g><g><title>__mmput (48 samples, 1.23%)</title><rect x="98.6473%" y="773" width="1.2251%" height="15" fill="rgb(221,14,54)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="783.50">__..</text></g><g><title>exit_mmap (48 samples, 1.23%)</title><rect x="98.6473%" y="757" width="1.2251%" height="15" fill="rgb(254,102,2)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="767.50">ex..</text></g><g><title>unmap_vmas (48 samples, 1.23%)</title><rect x="98.6473%" y="741" width="1.2251%" height="15" fill="rgb(232,104,17)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="751.50">un..</text></g><g><title>unmap_single_vma (48 samples, 1.23%)</title><rect x="98.6473%" y="725" width="1.2251%" height="15" fill="rgb(250,220,14)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="735.50">un..</text></g><g><title>unmap_page_range (48 samples, 1.23%)</title><rect x="98.6473%" y="709" width="1.2251%" height="15" fill="rgb(241,158,9)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="719.50">un..</text></g><g><title>zap_pmd_range.isra.0 (48 samples, 1.23%)</title><rect x="98.6473%" y="693" width="1.2251%" height="15" fill="rgb(246,9,43)" fg:x="3865" fg:w="48"/><text x="98.7645%" y="703.50">za..</text></g><g><title>zap_pte_range (43 samples, 1.10%)</title><rect x="98.7749%" y="677" width="1.0975%" height="15" fill="rgb(206,73,33)" fg:x="3870" fg:w="43"/><text x="98.8921%" y="687.50">z..</text></g><g><title>tlb_flush_mmu (36 samples, 0.92%)</title><rect x="98.9535%" y="661" width="0.9188%" height="15" fill="rgb(222,79,8)" fg:x="3877" fg:w="36"/><text x="99.0707%" y="671.50">t..</text></g><g><title>tlb_batch_pages_flush (36 samples, 0.92%)</title><rect x="98.9535%" y="645" width="0.9188%" height="15" fill="rgb(234,8,54)" fg:x="3877" fg:w="36"/><text x="99.0707%" y="655.50">t..</text></g><g><title>free_swap_cache (1 samples, 0.03%)</title><rect x="99.8469%" y="629" width="0.0255%" height="15" fill="rgb(209,134,38)" fg:x="3912" fg:w="1"/><text x="99.9640%" y="639.50"></text></g><g><title>all (3,918 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(230,127,29)" fg:x="0" fg:w="3918"/><text x="0.1172%" y="943.50"></text></g><g><title>perf-exec (5 samples, 0.13%)</title><rect x="99.8724%" y="917" width="0.1276%" height="15" fill="rgb(242,44,41)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.13%)</title><rect x="99.8724%" y="901" width="0.1276%" height="15" fill="rgb(222,56,43)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="911.50"></text></g><g><title>do_syscall_64 (5 samples, 0.13%)</title><rect x="99.8724%" y="885" width="0.1276%" height="15" fill="rgb(238,39,47)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="895.50"></text></g><g><title>x64_sys_call (5 samples, 0.13%)</title><rect x="99.8724%" y="869" width="0.1276%" height="15" fill="rgb(226,79,43)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="879.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.13%)</title><rect x="99.8724%" y="853" width="0.1276%" height="15" fill="rgb(242,105,53)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="863.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.13%)</title><rect x="99.8724%" y="837" width="0.1276%" height="15" fill="rgb(251,132,46)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="847.50"></text></g><g><title>bprm_execve (5 samples, 0.13%)</title><rect x="99.8724%" y="821" width="0.1276%" height="15" fill="rgb(231,77,14)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="831.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.13%)</title><rect x="99.8724%" y="805" width="0.1276%" height="15" fill="rgb(240,135,9)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="815.50"></text></g><g><title>exec_binprm (5 samples, 0.13%)</title><rect x="99.8724%" y="789" width="0.1276%" height="15" fill="rgb(248,109,14)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="799.50"></text></g><g><title>search_binary_handler (5 samples, 0.13%)</title><rect x="99.8724%" y="773" width="0.1276%" height="15" fill="rgb(227,146,52)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="783.50"></text></g><g><title>load_elf_binary (5 samples, 0.13%)</title><rect x="99.8724%" y="757" width="0.1276%" height="15" fill="rgb(232,54,3)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="767.50"></text></g><g><title>begin_new_exec (5 samples, 0.13%)</title><rect x="99.8724%" y="741" width="0.1276%" height="15" fill="rgb(229,201,43)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="751.50"></text></g><g><title>perf_event_exec (5 samples, 0.13%)</title><rect x="99.8724%" y="725" width="0.1276%" height="15" fill="rgb(252,161,33)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="735.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.13%)</title><rect x="99.8724%" y="709" width="0.1276%" height="15" fill="rgb(226,146,40)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="719.50"></text></g><g><title>ctx_resched (5 samples, 0.13%)</title><rect x="99.8724%" y="693" width="0.1276%" height="15" fill="rgb(219,47,25)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="703.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.13%)</title><rect x="99.8724%" y="677" width="0.1276%" height="15" fill="rgb(250,135,13)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="687.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.13%)</title><rect x="99.8724%" y="661" width="0.1276%" height="15" fill="rgb(219,229,18)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="671.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.13%)</title><rect x="99.8724%" y="645" width="0.1276%" height="15" fill="rgb(217,152,27)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="655.50"></text></g><g><title>native_write_msr (5 samples, 0.13%)</title><rect x="99.8724%" y="629" width="0.1276%" height="15" fill="rgb(225,71,47)" fg:x="3913" fg:w="5"/><text x="99.9896%" y="639.50"></text></g></svg></svg>