<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="982" onload="init(evt)" viewBox="0 0 2560 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="965.00"> </text><svg id="frames" x="10" width="2540" total_samples="3599"><g><title>__glibc_morecore (1 samples, 0.03%)</title><rect x="0.0000%" y="885" width="0.0278%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.1172%" y="895.50"></text></g><g><title>_int_free (8 samples, 0.22%)</title><rect x="0.0278%" y="885" width="0.2223%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="8"/><text x="0.1450%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.28%)</title><rect x="0.2501%" y="885" width="0.2779%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="10"/><text x="0.3673%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.19%)</title><rect x="0.3334%" y="869" width="0.1945%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="7"/><text x="0.4506%" y="879.50"></text></g><g><title>[[heap]] (22 samples, 0.61%)</title><rect x="0.0000%" y="901" width="0.6113%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="22"/><text x="0.1172%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (3 samples, 0.08%)</title><rect x="0.5279%" y="885" width="0.0834%" height="15" fill="rgb(232,128,0)" fg:x="19" fg:w="3"/><text x="0.6451%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="0.5279%" y="869" width="0.0834%" height="15" fill="rgb(207,160,47)" fg:x="19" fg:w="3"/><text x="0.6451%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="0.5279%" y="853" width="0.0834%" height="15" fill="rgb(228,23,34)" fg:x="19" fg:w="3"/><text x="0.6451%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (3 samples, 0.08%)</title><rect x="0.5279%" y="837" width="0.0834%" height="15" fill="rgb(218,30,26)" fg:x="19" fg:w="3"/><text x="0.6451%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (3 samples, 0.08%)</title><rect x="0.5279%" y="821" width="0.0834%" height="15" fill="rgb(220,122,19)" fg:x="19" fg:w="3"/><text x="0.6451%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (3 samples, 0.08%)</title><rect x="0.5279%" y="805" width="0.0834%" height="15" fill="rgb(250,228,42)" fg:x="19" fg:w="3"/><text x="0.6451%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="0.5279%" y="789" width="0.0834%" height="15" fill="rgb(240,193,28)" fg:x="19" fg:w="3"/><text x="0.6451%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="0.5279%" y="773" width="0.0834%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="3"/><text x="0.6451%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="0.5279%" y="757" width="0.0834%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="3"/><text x="0.6451%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.6113%" y="885" width="0.0278%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="1"/><text x="0.7285%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.6113%" y="869" width="0.0278%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="1"/><text x="0.7285%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.03%)</title><rect x="0.6113%" y="853" width="0.0278%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="1"/><text x="0.7285%" y="863.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1 samples, 0.03%)</title><rect x="0.6113%" y="837" width="0.0278%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="1"/><text x="0.7285%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="0.6113%" y="821" width="0.0278%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="1"/><text x="0.7285%" y="831.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_width (14 samples, 0.39%)</title><rect x="0.6391%" y="885" width="0.3890%" height="15" fill="rgb(226,26,5)" fg:x="23" fg:w="14"/><text x="0.7563%" y="895.50"></text></g><g><title>__GI___libc_free (5 samples, 0.14%)</title><rect x="1.0281%" y="885" width="0.1389%" height="15" fill="rgb(249,33,26)" fg:x="37" fg:w="5"/><text x="1.1453%" y="895.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.17%)</title><rect x="1.1670%" y="885" width="0.1667%" height="15" fill="rgb(235,183,28)" fg:x="42" fg:w="6"/><text x="1.2842%" y="895.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.08%)</title><rect x="1.3337%" y="885" width="0.0834%" height="15" fill="rgb(221,5,38)" fg:x="48" fg:w="3"/><text x="1.4509%" y="895.50"></text></g><g><title>__rdl_realloc (2 samples, 0.06%)</title><rect x="1.4171%" y="885" width="0.0556%" height="15" fill="rgb(247,18,42)" fg:x="51" fg:w="2"/><text x="1.5342%" y="895.50"></text></g><g><title>[[stack]] (33 samples, 0.92%)</title><rect x="0.6113%" y="901" width="0.9169%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="33"/><text x="0.7285%" y="911.50">[..</text></g><g><title>_int_malloc (2 samples, 0.06%)</title><rect x="1.4726%" y="885" width="0.0556%" height="15" fill="rgb(249,31,29)" fg:x="53" fg:w="2"/><text x="1.5898%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.19%)</title><rect x="1.5282%" y="885" width="0.1945%" height="15" fill="rgb(225,111,53)" fg:x="55" fg:w="7"/><text x="1.6454%" y="895.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (28 samples, 0.78%)</title><rect x="1.7227%" y="885" width="0.7780%" height="15" fill="rgb(238,160,17)" fg:x="62" fg:w="28"/><text x="1.8399%" y="895.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_width (5 samples, 0.14%)</title><rect x="2.5007%" y="885" width="0.1389%" height="15" fill="rgb(214,148,48)" fg:x="90" fg:w="5"/><text x="2.6179%" y="895.50"></text></g><g><title>__GI___libc_free (9 samples, 0.25%)</title><rect x="2.6396%" y="885" width="0.2501%" height="15" fill="rgb(232,36,49)" fg:x="95" fg:w="9"/><text x="2.7568%" y="895.50"></text></g><g><title>[anon] (52 samples, 1.44%)</title><rect x="1.5282%" y="901" width="1.4448%" height="15" fill="rgb(209,103,24)" fg:x="55" fg:w="52"/><text x="1.6454%" y="911.50">[an..</text></g><g><title>__GI___libc_malloc (3 samples, 0.08%)</title><rect x="2.8897%" y="885" width="0.0834%" height="15" fill="rgb(229,88,8)" fg:x="104" fg:w="3"/><text x="3.0069%" y="895.50"></text></g><g><title>[fringe-vs-astar] (5 samples, 0.14%)</title><rect x="2.9730%" y="901" width="0.1389%" height="15" fill="rgb(213,181,19)" fg:x="107" fg:w="5"/><text x="3.0902%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.14%)</title><rect x="2.9730%" y="885" width="0.1389%" height="15" fill="rgb(254,191,54)" fg:x="107" fg:w="5"/><text x="3.0902%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.14%)</title><rect x="2.9730%" y="869" width="0.1389%" height="15" fill="rgb(241,83,37)" fg:x="107" fg:w="5"/><text x="3.0902%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.14%)</title><rect x="2.9730%" y="853" width="0.1389%" height="15" fill="rgb(233,36,39)" fg:x="107" fg:w="5"/><text x="3.0902%" y="863.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.14%)</title><rect x="2.9730%" y="837" width="0.1389%" height="15" fill="rgb(226,3,54)" fg:x="107" fg:w="5"/><text x="3.0902%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="3.6121%" y="837" width="0.0278%" height="15" fill="rgb(245,192,40)" fg:x="130" fg:w="1"/><text x="3.7293%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="3.6121%" y="821" width="0.0278%" height="15" fill="rgb(238,167,29)" fg:x="130" fg:w="1"/><text x="3.7293%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="3.6121%" y="805" width="0.0278%" height="15" fill="rgb(232,182,51)" fg:x="130" fg:w="1"/><text x="3.7293%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.36%)</title><rect x="3.6121%" y="853" width="0.3612%" height="15" fill="rgb(231,60,39)" fg:x="130" fg:w="13"/><text x="3.7293%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (12 samples, 0.33%)</title><rect x="3.6399%" y="837" width="0.3334%" height="15" fill="rgb(208,69,12)" fg:x="131" fg:w="12"/><text x="3.7571%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.33%)</title><rect x="3.6399%" y="821" width="0.3334%" height="15" fill="rgb(235,93,37)" fg:x="131" fg:w="12"/><text x="3.7571%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.33%)</title><rect x="3.6399%" y="805" width="0.3334%" height="15" fill="rgb(213,116,39)" fg:x="131" fg:w="12"/><text x="3.7571%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.33%)</title><rect x="3.6399%" y="789" width="0.3334%" height="15" fill="rgb(222,207,29)" fg:x="131" fg:w="12"/><text x="3.7571%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12 samples, 0.33%)</title><rect x="3.6399%" y="773" width="0.3334%" height="15" fill="rgb(206,96,30)" fg:x="131" fg:w="12"/><text x="3.7571%" y="783.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (12 samples, 0.33%)</title><rect x="3.6399%" y="757" width="0.3334%" height="15" fill="rgb(218,138,4)" fg:x="131" fg:w="12"/><text x="3.7571%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 1.08%)</title><rect x="3.1120%" y="885" width="1.0836%" height="15" fill="rgb(250,191,14)" fg:x="112" fg:w="39"/><text x="3.2292%" y="895.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="3.3898%" y="869" width="0.8058%" height="15" fill="rgb(239,60,40)" fg:x="122" fg:w="29"/><text x="3.5070%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.22%)</title><rect x="3.9733%" y="853" width="0.2223%" height="15" fill="rgb(206,27,48)" fg:x="143" fg:w="8"/><text x="4.0905%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.22%)</title><rect x="3.9733%" y="837" width="0.2223%" height="15" fill="rgb(225,35,8)" fg:x="143" fg:w="8"/><text x="4.0905%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.22%)</title><rect x="3.9733%" y="821" width="0.2223%" height="15" fill="rgb(250,213,24)" fg:x="143" fg:w="8"/><text x="4.0905%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.22%)</title><rect x="3.9733%" y="805" width="0.2223%" height="15" fill="rgb(247,123,22)" fg:x="143" fg:w="8"/><text x="4.0905%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.22%)</title><rect x="3.9733%" y="789" width="0.2223%" height="15" fill="rgb(231,138,38)" fg:x="143" fg:w="8"/><text x="4.0905%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.22%)</title><rect x="3.9733%" y="773" width="0.2223%" height="15" fill="rgb(231,145,46)" fg:x="143" fg:w="8"/><text x="4.0905%" y="783.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.22%)</title><rect x="3.9733%" y="757" width="0.2223%" height="15" fill="rgb(251,118,11)" fg:x="143" fg:w="8"/><text x="4.0905%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="4.1956%" y="885" width="0.0834%" height="15" fill="rgb(217,147,25)" fg:x="151" fg:w="3"/><text x="4.3128%" y="895.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph as fringe_vs_astar::structures::graph::Graph&gt;::get_width (45 samples, 1.25%)</title><rect x="4.2790%" y="885" width="1.2503%" height="15" fill="rgb(247,81,37)" fg:x="154" fg:w="45"/><text x="4.3962%" y="895.50">&lt;f..</text></g><g><title>__GI___libc_free (6 samples, 0.17%)</title><rect x="5.5293%" y="885" width="0.1667%" height="15" fill="rgb(209,12,38)" fg:x="199" fg:w="6"/><text x="5.6465%" y="895.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.14%)</title><rect x="5.6960%" y="885" width="0.1389%" height="15" fill="rgb(227,1,9)" fg:x="205" fg:w="5"/><text x="5.8132%" y="895.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.14%)</title><rect x="5.8350%" y="885" width="0.1389%" height="15" fill="rgb(248,47,43)" fg:x="210" fg:w="5"/><text x="5.9521%" y="895.50"></text></g><g><title>_int_realloc (1 samples, 0.03%)</title><rect x="5.9461%" y="869" width="0.0278%" height="15" fill="rgb(221,10,30)" fg:x="214" fg:w="1"/><text x="6.0633%" y="879.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="5.9461%" y="853" width="0.0278%" height="15" fill="rgb(210,229,1)" fg:x="214" fg:w="1"/><text x="6.0633%" y="863.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="5.9461%" y="837" width="0.0278%" height="15" fill="rgb(222,148,37)" fg:x="214" fg:w="1"/><text x="6.0633%" y="847.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4 samples, 0.11%)</title><rect x="5.9739%" y="885" width="0.1111%" height="15" fill="rgb(234,67,33)" fg:x="215" fg:w="4"/><text x="6.0911%" y="895.50"></text></g><g><title>__rdl_realloc (4 samples, 0.11%)</title><rect x="6.0850%" y="885" width="0.1111%" height="15" fill="rgb(247,98,35)" fg:x="219" fg:w="4"/><text x="6.2022%" y="895.50"></text></g><g><title>_int_free (13 samples, 0.36%)</title><rect x="6.1962%" y="885" width="0.3612%" height="15" fill="rgb(247,138,52)" fg:x="223" fg:w="13"/><text x="6.3134%" y="895.50"></text></g><g><title>_int_malloc (4 samples, 0.11%)</title><rect x="6.5574%" y="885" width="0.1111%" height="15" fill="rgb(213,79,30)" fg:x="236" fg:w="4"/><text x="6.6746%" y="895.50"></text></g><g><title>_int_realloc (20 samples, 0.56%)</title><rect x="6.6685%" y="885" width="0.5557%" height="15" fill="rgb(246,177,23)" fg:x="240" fg:w="20"/><text x="6.7857%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="7.2242%" y="885" width="0.0278%" height="15" fill="rgb(230,62,27)" fg:x="260" fg:w="1"/><text x="7.3414%" y="895.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (50 samples, 1.39%)</title><rect x="7.2520%" y="885" width="1.3893%" height="15" fill="rgb(216,154,8)" fg:x="261" fg:w="50"/><text x="7.3692%" y="895.50">fri..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (49 samples, 1.36%)</title><rect x="7.2798%" y="869" width="1.3615%" height="15" fill="rgb(244,35,45)" fg:x="262" fg:w="49"/><text x="7.3970%" y="879.50">fr..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (49 samples, 1.36%)</title><rect x="7.2798%" y="853" width="1.3615%" height="15" fill="rgb(251,115,12)" fg:x="262" fg:w="49"/><text x="7.3970%" y="863.50">fr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (4 samples, 0.11%)</title><rect x="9.4193%" y="853" width="0.1111%" height="15" fill="rgb(240,54,50)" fg:x="339" fg:w="4"/><text x="9.5365%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (4 samples, 0.11%)</title><rect x="9.4193%" y="837" width="0.1111%" height="15" fill="rgb(233,84,52)" fg:x="339" fg:w="4"/><text x="9.5365%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="9.4193%" y="821" width="0.1111%" height="15" fill="rgb(207,117,47)" fg:x="339" fg:w="4"/><text x="9.5365%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.11%)</title><rect x="9.4193%" y="805" width="0.1111%" height="15" fill="rgb(249,43,39)" fg:x="339" fg:w="4"/><text x="9.5365%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.11%)</title><rect x="9.4193%" y="789" width="0.1111%" height="15" fill="rgb(209,38,44)" fg:x="339" fg:w="4"/><text x="9.5365%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.14%)</title><rect x="9.6694%" y="837" width="0.1389%" height="15" fill="rgb(236,212,23)" fg:x="348" fg:w="5"/><text x="9.7865%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.14%)</title><rect x="9.6694%" y="821" width="0.1389%" height="15" fill="rgb(242,79,21)" fg:x="348" fg:w="5"/><text x="9.7865%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.14%)</title><rect x="9.6694%" y="805" width="0.1389%" height="15" fill="rgb(211,96,35)" fg:x="348" fg:w="5"/><text x="9.7865%" y="815.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.14%)</title><rect x="9.6694%" y="789" width="0.1389%" height="15" fill="rgb(253,215,40)" fg:x="348" fg:w="5"/><text x="9.7865%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="9.8083%" y="837" width="0.0278%" height="15" fill="rgb(211,81,21)" fg:x="353" fg:w="1"/><text x="9.9255%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="9.8083%" y="821" width="0.0278%" height="15" fill="rgb(208,190,38)" fg:x="353" fg:w="1"/><text x="9.9255%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.11%)</title><rect x="9.8361%" y="837" width="0.1111%" height="15" fill="rgb(235,213,38)" fg:x="354" fg:w="4"/><text x="9.9533%" y="847.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (4 samples, 0.11%)</title><rect x="9.8361%" y="821" width="0.1111%" height="15" fill="rgb(237,122,38)" fg:x="354" fg:w="4"/><text x="9.9533%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.11%)</title><rect x="9.8361%" y="805" width="0.1111%" height="15" fill="rgb(244,218,35)" fg:x="354" fg:w="4"/><text x="9.9533%" y="815.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (4 samples, 0.11%)</title><rect x="9.8361%" y="789" width="0.1111%" height="15" fill="rgb(240,68,47)" fg:x="354" fg:w="4"/><text x="9.9533%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.28%)</title><rect x="9.9472%" y="837" width="0.2779%" height="15" fill="rgb(210,16,53)" fg:x="358" fg:w="10"/><text x="10.0644%" y="847.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (10 samples, 0.28%)</title><rect x="9.9472%" y="821" width="0.2779%" height="15" fill="rgb(235,124,12)" fg:x="358" fg:w="10"/><text x="10.0644%" y="831.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (67 samples, 1.86%)</title><rect x="8.6413%" y="885" width="1.8616%" height="15" fill="rgb(224,169,11)" fg:x="311" fg:w="67"/><text x="8.7585%" y="895.50">frin..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (67 samples, 1.86%)</title><rect x="8.6413%" y="869" width="1.8616%" height="15" fill="rgb(250,166,2)" fg:x="311" fg:w="67"/><text x="8.7585%" y="879.50">frin..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (35 samples, 0.97%)</title><rect x="9.5304%" y="853" width="0.9725%" height="15" fill="rgb(242,216,29)" fg:x="343" fg:w="35"/><text x="9.6476%" y="863.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.28%)</title><rect x="10.2251%" y="837" width="0.2779%" height="15" fill="rgb(230,116,27)" fg:x="368" fg:w="10"/><text x="10.3423%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (10 samples, 0.28%)</title><rect x="10.2251%" y="821" width="0.2779%" height="15" fill="rgb(228,99,48)" fg:x="368" fg:w="10"/><text x="10.3423%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.28%)</title><rect x="10.2251%" y="805" width="0.2779%" height="15" fill="rgb(253,11,6)" fg:x="368" fg:w="10"/><text x="10.3423%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.28%)</title><rect x="10.2251%" y="789" width="0.2779%" height="15" fill="rgb(247,143,39)" fg:x="368" fg:w="10"/><text x="10.3423%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.28%)</title><rect x="10.2251%" y="773" width="0.2779%" height="15" fill="rgb(236,97,10)" fg:x="368" fg:w="10"/><text x="10.3423%" y="783.50"></text></g><g><title>[unknown] (270 samples, 7.50%)</title><rect x="3.1120%" y="901" width="7.5021%" height="15" fill="rgb(233,208,19)" fg:x="112" fg:w="270"/><text x="3.2292%" y="911.50">[unknown]</text></g><g><title>unlink_chunk (4 samples, 0.11%)</title><rect x="10.5029%" y="885" width="0.1111%" height="15" fill="rgb(216,164,2)" fg:x="378" fg:w="4"/><text x="10.6201%" y="895.50"></text></g><g><title>_int_malloc (3 samples, 0.08%)</title><rect x="10.6141%" y="885" width="0.0834%" height="15" fill="rgb(220,129,5)" fg:x="382" fg:w="3"/><text x="10.7312%" y="895.50"></text></g><g><title>_IO_wide_data_0 (6 samples, 0.17%)</title><rect x="10.6141%" y="901" width="0.1667%" height="15" fill="rgb(242,17,10)" fg:x="382" fg:w="6"/><text x="10.7312%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.08%)</title><rect x="10.6974%" y="885" width="0.0834%" height="15" fill="rgb(242,107,0)" fg:x="385" fg:w="3"/><text x="10.8146%" y="895.50"></text></g><g><title>__irqentry_text_end (2 samples, 0.06%)</title><rect x="10.7808%" y="901" width="0.0556%" height="15" fill="rgb(251,28,31)" fg:x="388" fg:w="2"/><text x="10.8980%" y="911.50"></text></g><g><title>_int_free (21 samples, 0.58%)</title><rect x="10.8363%" y="901" width="0.5835%" height="15" fill="rgb(233,223,10)" fg:x="390" fg:w="21"/><text x="10.9535%" y="911.50"></text></g><g><title>clap_builder::derive::Parser::parse (1 samples, 0.03%)</title><rect x="11.4198%" y="757" width="0.0278%" height="15" fill="rgb(215,21,27)" fg:x="411" fg:w="1"/><text x="11.5370%" y="767.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches (1 samples, 0.03%)</title><rect x="11.4198%" y="741" width="0.0278%" height="15" fill="rgb(232,23,21)" fg:x="411" fg:w="1"/><text x="11.5370%" y="751.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches_from (1 samples, 0.03%)</title><rect x="11.4198%" y="725" width="0.0278%" height="15" fill="rgb(244,5,23)" fg:x="411" fg:w="1"/><text x="11.5370%" y="735.50"></text></g><g><title>clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.03%)</title><rect x="11.4198%" y="709" width="0.0278%" height="15" fill="rgb(226,81,46)" fg:x="411" fg:w="1"/><text x="11.5370%" y="719.50"></text></g><g><title>clap_builder::builder::command::Command::_do_parse (1 samples, 0.03%)</title><rect x="11.4198%" y="693" width="0.0278%" height="15" fill="rgb(247,70,30)" fg:x="411" fg:w="1"/><text x="11.5370%" y="703.50"></text></g><g><title>clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.03%)</title><rect x="11.4198%" y="677" width="0.0278%" height="15" fill="rgb(212,68,19)" fg:x="411" fg:w="1"/><text x="11.5370%" y="687.50"></text></g><g><title>clap_builder::parser::parser::Parser::resolve_pending (1 samples, 0.03%)</title><rect x="11.4198%" y="661" width="0.0278%" height="15" fill="rgb(240,187,13)" fg:x="411" fg:w="1"/><text x="11.5370%" y="671.50"></text></g><g><title>clap_builder::parser::parser::Parser::react (1 samples, 0.03%)</title><rect x="11.4198%" y="645" width="0.0278%" height="15" fill="rgb(223,113,26)" fg:x="411" fg:w="1"/><text x="11.5370%" y="655.50"></text></g><g><title>clap_builder::parser::parser::Parser::push_arg_values (1 samples, 0.03%)</title><rect x="11.4198%" y="629" width="0.0278%" height="15" fill="rgb(206,192,2)" fg:x="411" fg:w="1"/><text x="11.5370%" y="639.50"></text></g><g><title>clap_builder::builder::value_parser::ValueParser::parse_ref (1 samples, 0.03%)</title><rect x="11.4198%" y="613" width="0.0278%" height="15" fill="rgb(241,108,4)" fg:x="411" fg:w="1"/><text x="11.5370%" y="623.50"></text></g><g><title>&lt;P as clap_builder::builder::value_parser::AnyValueParser&gt;::parse_ref_ (1 samples, 0.03%)</title><rect x="11.4198%" y="597" width="0.0278%" height="15" fill="rgb(247,173,49)" fg:x="411" fg:w="1"/><text x="11.5370%" y="607.50"></text></g><g><title>clap_builder::builder::value_parser::TypedValueParser::parse_ref_ (1 samples, 0.03%)</title><rect x="11.4198%" y="581" width="0.0278%" height="15" fill="rgb(224,114,35)" fg:x="411" fg:w="1"/><text x="11.5370%" y="591.50"></text></g><g><title>&lt;F as clap_builder::builder::value_parser::TypedValueParser&gt;::parse_ref (1 samples, 0.03%)</title><rect x="11.4198%" y="565" width="0.0278%" height="15" fill="rgb(245,159,27)" fg:x="411" fg:w="1"/><text x="11.5370%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.03%)</title><rect x="11.4198%" y="549" width="0.0278%" height="15" fill="rgb(245,172,44)" fg:x="411" fg:w="1"/><text x="11.5370%" y="559.50"></text></g><g><title>fringe_vs_astar::cli::map_exists (1 samples, 0.03%)</title><rect x="11.4198%" y="533" width="0.0278%" height="15" fill="rgb(236,23,11)" fg:x="411" fg:w="1"/><text x="11.5370%" y="543.50"></text></g><g><title>std::path::Path::try_exists (1 samples, 0.03%)</title><rect x="11.4198%" y="517" width="0.0278%" height="15" fill="rgb(205,117,38)" fg:x="411" fg:w="1"/><text x="11.5370%" y="527.50"></text></g><g><title>std::fs::try_exists (1 samples, 0.03%)</title><rect x="11.4198%" y="501" width="0.0278%" height="15" fill="rgb(237,72,25)" fg:x="411" fg:w="1"/><text x="11.5370%" y="511.50"></text></g><g><title>std::sys_common::fs::try_exists (1 samples, 0.03%)</title><rect x="11.4198%" y="485" width="0.0278%" height="15" fill="rgb(244,70,9)" fg:x="411" fg:w="1"/><text x="11.5370%" y="495.50"></text></g><g><title>std::sys::pal::unix::fs::stat (1 samples, 0.03%)</title><rect x="11.4198%" y="469" width="0.0278%" height="15" fill="rgb(217,125,39)" fg:x="411" fg:w="1"/><text x="11.5370%" y="479.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx (1 samples, 0.03%)</title><rect x="11.4198%" y="453" width="0.0278%" height="15" fill="rgb(235,36,10)" fg:x="411" fg:w="1"/><text x="11.5370%" y="463.50"></text></g><g><title>statx (1 samples, 0.03%)</title><rect x="11.4198%" y="437" width="0.0278%" height="15" fill="rgb(251,123,47)" fg:x="411" fg:w="1"/><text x="11.5370%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="11.4198%" y="421" width="0.0278%" height="15" fill="rgb(221,13,13)" fg:x="411" fg:w="1"/><text x="11.5370%" y="431.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="11.4198%" y="405" width="0.0278%" height="15" fill="rgb(238,131,9)" fg:x="411" fg:w="1"/><text x="11.5370%" y="415.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="11.4198%" y="389" width="0.0278%" height="15" fill="rgb(211,50,8)" fg:x="411" fg:w="1"/><text x="11.5370%" y="399.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="11.4476%" y="533" width="0.0278%" height="15" fill="rgb(245,182,24)" fg:x="412" fg:w="1"/><text x="11.5648%" y="543.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="11.4476%" y="517" width="0.0278%" height="15" fill="rgb(242,14,37)" fg:x="412" fg:w="1"/><text x="11.5648%" y="527.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="11.4476%" y="501" width="0.0278%" height="15" fill="rgb(246,228,12)" fg:x="412" fg:w="1"/><text x="11.5648%" y="511.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="11.4476%" y="485" width="0.0278%" height="15" fill="rgb(213,55,15)" fg:x="412" fg:w="1"/><text x="11.5648%" y="495.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="11.4476%" y="469" width="0.0278%" height="15" fill="rgb(209,9,3)" fg:x="412" fg:w="1"/><text x="11.5648%" y="479.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="11.4476%" y="453" width="0.0278%" height="15" fill="rgb(230,59,30)" fg:x="412" fg:w="1"/><text x="11.5648%" y="463.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="11.4476%" y="437" width="0.0278%" height="15" fill="rgb(209,121,21)" fg:x="412" fg:w="1"/><text x="11.5648%" y="447.50"></text></g><g><title>_compound_head (3 samples, 0.08%)</title><rect x="11.4754%" y="469" width="0.0834%" height="15" fill="rgb(220,109,13)" fg:x="413" fg:w="3"/><text x="11.5926%" y="479.50"></text></g><g><title>page_remove_rmap (1 samples, 0.03%)</title><rect x="11.5588%" y="453" width="0.0278%" height="15" fill="rgb(232,18,1)" fg:x="416" fg:w="1"/><text x="11.6760%" y="463.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="11.6699%" y="373" width="0.0278%" height="15" fill="rgb(215,41,42)" fg:x="420" fg:w="1"/><text x="11.7871%" y="383.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.06%)</title><rect x="11.6699%" y="389" width="0.0556%" height="15" fill="rgb(224,123,36)" fg:x="420" fg:w="2"/><text x="11.7871%" y="399.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="11.6977%" y="373" width="0.0278%" height="15" fill="rgb(240,125,3)" fg:x="421" fg:w="1"/><text x="11.8149%" y="383.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.06%)</title><rect x="11.7255%" y="389" width="0.0556%" height="15" fill="rgb(205,98,50)" fg:x="422" fg:w="2"/><text x="11.8427%" y="399.50"></text></g><g><title>__free_one_page (4 samples, 0.11%)</title><rect x="11.8088%" y="341" width="0.1111%" height="15" fill="rgb(205,185,37)" fg:x="425" fg:w="4"/><text x="11.9260%" y="351.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="11.8922%" y="325" width="0.0278%" height="15" fill="rgb(238,207,15)" fg:x="428" fg:w="1"/><text x="12.0094%" y="335.50"></text></g><g><title>free_unref_page_commit (6 samples, 0.17%)</title><rect x="11.7811%" y="373" width="0.1667%" height="15" fill="rgb(213,199,42)" fg:x="424" fg:w="6"/><text x="11.8982%" y="383.50"></text></g><g><title>free_pcppages_bulk (6 samples, 0.17%)</title><rect x="11.7811%" y="357" width="0.1667%" height="15" fill="rgb(235,201,11)" fg:x="424" fg:w="6"/><text x="11.8982%" y="367.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="11.9200%" y="341" width="0.0278%" height="15" fill="rgb(207,46,11)" fg:x="429" fg:w="1"/><text x="12.0372%" y="351.50"></text></g><g><title>free_unref_page_list (8 samples, 0.22%)</title><rect x="11.7811%" y="389" width="0.2223%" height="15" fill="rgb(241,35,35)" fg:x="424" fg:w="8"/><text x="11.8982%" y="399.50"></text></g><g><title>free_unref_page_prepare (2 samples, 0.06%)</title><rect x="11.9478%" y="373" width="0.0556%" height="15" fill="rgb(243,32,47)" fg:x="430" fg:w="2"/><text x="12.0650%" y="383.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="12.0867%" y="373" width="0.0278%" height="15" fill="rgb(247,202,23)" fg:x="435" fg:w="1"/><text x="12.2039%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="12.0867%" y="357" width="0.0278%" height="15" fill="rgb(219,102,11)" fg:x="435" fg:w="1"/><text x="12.2039%" y="367.50"></text></g><g><title>free_pages_and_swap_cache (20 samples, 0.56%)</title><rect x="11.5866%" y="421" width="0.5557%" height="15" fill="rgb(243,110,44)" fg:x="417" fg:w="20"/><text x="11.7037%" y="431.50"></text></g><g><title>release_pages (20 samples, 0.56%)</title><rect x="11.5866%" y="405" width="0.5557%" height="15" fill="rgb(222,74,54)" fg:x="417" fg:w="20"/><text x="11.7037%" y="415.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (5 samples, 0.14%)</title><rect x="12.0033%" y="389" width="0.1389%" height="15" fill="rgb(216,99,12)" fg:x="432" fg:w="5"/><text x="12.1205%" y="399.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="12.1145%" y="373" width="0.0278%" height="15" fill="rgb(226,22,26)" fg:x="436" fg:w="1"/><text x="12.2317%" y="383.50"></text></g><g><title>__GI___libc_free (26 samples, 0.72%)</title><rect x="11.4476%" y="693" width="0.7224%" height="15" fill="rgb(217,163,10)" fg:x="412" fg:w="26"/><text x="11.5648%" y="703.50"></text></g><g><title>__GI___munmap (26 samples, 0.72%)</title><rect x="11.4476%" y="677" width="0.7224%" height="15" fill="rgb(213,25,53)" fg:x="412" fg:w="26"/><text x="11.5648%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.72%)</title><rect x="11.4476%" y="661" width="0.7224%" height="15" fill="rgb(252,105,26)" fg:x="412" fg:w="26"/><text x="11.5648%" y="671.50"></text></g><g><title>do_syscall_64 (26 samples, 0.72%)</title><rect x="11.4476%" y="645" width="0.7224%" height="15" fill="rgb(220,39,43)" fg:x="412" fg:w="26"/><text x="11.5648%" y="655.50"></text></g><g><title>x64_sys_call (26 samples, 0.72%)</title><rect x="11.4476%" y="629" width="0.7224%" height="15" fill="rgb(229,68,48)" fg:x="412" fg:w="26"/><text x="11.5648%" y="639.50"></text></g><g><title>__x64_sys_munmap (26 samples, 0.72%)</title><rect x="11.4476%" y="613" width="0.7224%" height="15" fill="rgb(252,8,32)" fg:x="412" fg:w="26"/><text x="11.5648%" y="623.50"></text></g><g><title>__vm_munmap (26 samples, 0.72%)</title><rect x="11.4476%" y="597" width="0.7224%" height="15" fill="rgb(223,20,43)" fg:x="412" fg:w="26"/><text x="11.5648%" y="607.50"></text></g><g><title>do_vmi_munmap (26 samples, 0.72%)</title><rect x="11.4476%" y="581" width="0.7224%" height="15" fill="rgb(229,81,49)" fg:x="412" fg:w="26"/><text x="11.5648%" y="591.50"></text></g><g><title>do_vmi_align_munmap (26 samples, 0.72%)</title><rect x="11.4476%" y="565" width="0.7224%" height="15" fill="rgb(236,28,36)" fg:x="412" fg:w="26"/><text x="11.5648%" y="575.50"></text></g><g><title>unmap_region (26 samples, 0.72%)</title><rect x="11.4476%" y="549" width="0.7224%" height="15" fill="rgb(249,185,26)" fg:x="412" fg:w="26"/><text x="11.5648%" y="559.50"></text></g><g><title>unmap_vmas (25 samples, 0.69%)</title><rect x="11.4754%" y="533" width="0.6946%" height="15" fill="rgb(249,174,33)" fg:x="413" fg:w="25"/><text x="11.5926%" y="543.50"></text></g><g><title>unmap_single_vma (25 samples, 0.69%)</title><rect x="11.4754%" y="517" width="0.6946%" height="15" fill="rgb(233,201,37)" fg:x="413" fg:w="25"/><text x="11.5926%" y="527.50"></text></g><g><title>unmap_page_range (25 samples, 0.69%)</title><rect x="11.4754%" y="501" width="0.6946%" height="15" fill="rgb(221,78,26)" fg:x="413" fg:w="25"/><text x="11.5926%" y="511.50"></text></g><g><title>zap_pmd_range.isra.0 (25 samples, 0.69%)</title><rect x="11.4754%" y="485" width="0.6946%" height="15" fill="rgb(250,127,30)" fg:x="413" fg:w="25"/><text x="11.5926%" y="495.50"></text></g><g><title>zap_pte_range (22 samples, 0.61%)</title><rect x="11.5588%" y="469" width="0.6113%" height="15" fill="rgb(230,49,44)" fg:x="416" fg:w="22"/><text x="11.6760%" y="479.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.58%)</title><rect x="11.5866%" y="453" width="0.5835%" height="15" fill="rgb(229,67,23)" fg:x="417" fg:w="21"/><text x="11.7037%" y="463.50"></text></g><g><title>tlb_batch_pages_flush (21 samples, 0.58%)</title><rect x="11.5866%" y="437" width="0.5835%" height="15" fill="rgb(249,83,47)" fg:x="417" fg:w="21"/><text x="11.7037%" y="447.50"></text></g><g><title>free_swap_cache (1 samples, 0.03%)</title><rect x="12.1423%" y="421" width="0.0278%" height="15" fill="rgb(215,43,3)" fg:x="437" fg:w="1"/><text x="12.2594%" y="431.50"></text></g><g><title>free_perturb (1 samples, 0.03%)</title><rect x="16.3101%" y="517" width="0.0278%" height="15" fill="rgb(238,154,13)" fg:x="587" fg:w="1"/><text x="16.4273%" y="527.50"></text></g><g><title>malloc_consolidate (8 samples, 0.22%)</title><rect x="16.3379%" y="517" width="0.2223%" height="15" fill="rgb(219,56,2)" fg:x="588" fg:w="8"/><text x="16.4551%" y="527.50"></text></g><g><title>unlink_chunk (2 samples, 0.06%)</title><rect x="16.5046%" y="501" width="0.0556%" height="15" fill="rgb(233,0,4)" fg:x="594" fg:w="2"/><text x="16.6218%" y="511.50"></text></g><g><title>_int_free (130 samples, 3.61%)</title><rect x="13.1703%" y="533" width="3.6121%" height="15" fill="rgb(235,30,7)" fg:x="474" fg:w="130"/><text x="13.2875%" y="543.50">_int_free</text></g><g><title>unlink_chunk (8 samples, 0.22%)</title><rect x="16.5602%" y="517" width="0.2223%" height="15" fill="rgb(250,79,13)" fg:x="596" fg:w="8"/><text x="16.6773%" y="527.50"></text></g><g><title>__GI___libc_free (136 samples, 3.78%)</title><rect x="13.1148%" y="549" width="3.7788%" height="15" fill="rgb(211,146,34)" fg:x="472" fg:w="136"/><text x="13.2319%" y="559.50">__GI___libc..</text></g><g><title>arena_for_chunk (4 samples, 0.11%)</title><rect x="16.7824%" y="533" width="0.1111%" height="15" fill="rgb(228,22,38)" fg:x="604" fg:w="4"/><text x="16.8996%" y="543.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.06%)</title><rect x="16.8936%" y="549" width="0.0556%" height="15" fill="rgb(235,168,5)" fg:x="608" fg:w="2"/><text x="17.0108%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (139 samples, 3.86%)</title><rect x="13.1148%" y="565" width="3.8622%" height="15" fill="rgb(221,155,16)" fg:x="472" fg:w="139"/><text x="13.2319%" y="575.50">alloc::allo..</text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="16.9492%" y="549" width="0.0278%" height="15" fill="rgb(215,215,53)" fg:x="610" fg:w="1"/><text x="17.0663%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (140 samples, 3.89%)</title><rect x="13.1148%" y="581" width="3.8900%" height="15" fill="rgb(223,4,10)" fg:x="472" fg:w="140"/><text x="13.2319%" y="591.50">&lt;alloc::allo..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (1 samples, 0.03%)</title><rect x="16.9769%" y="565" width="0.0278%" height="15" fill="rgb(234,103,6)" fg:x="611" fg:w="1"/><text x="17.0941%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::graph::Graph&gt;&gt; (208 samples, 5.78%)</title><rect x="11.4476%" y="709" width="5.7794%" height="15" fill="rgb(227,97,0)" fg:x="412" fg:w="208"/><text x="11.5648%" y="719.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (182 samples, 5.06%)</title><rect x="12.1700%" y="693" width="5.0570%" height="15" fill="rgb(234,150,53)" fg:x="438" fg:w="182"/><text x="12.2872%" y="703.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (182 samples, 5.06%)</title><rect x="12.1700%" y="677" width="5.0570%" height="15" fill="rgb(228,201,54)" fg:x="438" fg:w="182"/><text x="12.2872%" y="687.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 5.06%)</title><rect x="12.1700%" y="661" width="5.0570%" height="15" fill="rgb(222,22,37)" fg:x="438" fg:w="182"/><text x="12.2872%" y="671.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (182 samples, 5.06%)</title><rect x="12.1700%" y="645" width="5.0570%" height="15" fill="rgb(237,53,32)" fg:x="438" fg:w="182"/><text x="12.2872%" y="655.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (182 samples, 5.06%)</title><rect x="12.1700%" y="629" width="5.0570%" height="15" fill="rgb(233,25,53)" fg:x="438" fg:w="182"/><text x="12.2872%" y="639.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (182 samples, 5.06%)</title><rect x="12.1700%" y="613" width="5.0570%" height="15" fill="rgb(210,40,34)" fg:x="438" fg:w="182"/><text x="12.2872%" y="623.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 5.06%)</title><rect x="12.1700%" y="597" width="5.0570%" height="15" fill="rgb(241,220,44)" fg:x="438" fg:w="182"/><text x="12.2872%" y="607.50">&lt;alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.22%)</title><rect x="17.0047%" y="581" width="0.2223%" height="15" fill="rgb(235,28,35)" fg:x="612" fg:w="8"/><text x="17.1219%" y="591.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="17.2270%" y="533" width="0.0278%" height="15" fill="rgb(210,56,17)" fg:x="620" fg:w="1"/><text x="17.3442%" y="543.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="17.2270%" y="517" width="0.0278%" height="15" fill="rgb(224,130,29)" fg:x="620" fg:w="1"/><text x="17.3442%" y="527.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="17.2270%" y="501" width="0.0278%" height="15" fill="rgb(235,212,8)" fg:x="620" fg:w="1"/><text x="17.3442%" y="511.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="17.2270%" y="485" width="0.0278%" height="15" fill="rgb(223,33,50)" fg:x="620" fg:w="1"/><text x="17.3442%" y="495.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="17.2270%" y="469" width="0.0278%" height="15" fill="rgb(219,149,13)" fg:x="620" fg:w="1"/><text x="17.3442%" y="479.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="17.2270%" y="453" width="0.0278%" height="15" fill="rgb(250,156,29)" fg:x="620" fg:w="1"/><text x="17.3442%" y="463.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="17.2270%" y="437" width="0.0278%" height="15" fill="rgb(216,193,19)" fg:x="620" fg:w="1"/><text x="17.3442%" y="447.50"></text></g><g><title>__free_one_page (1 samples, 0.03%)</title><rect x="17.2270%" y="421" width="0.0278%" height="15" fill="rgb(216,135,14)" fg:x="620" fg:w="1"/><text x="17.3442%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (210 samples, 5.83%)</title><rect x="11.4476%" y="725" width="5.8350%" height="15" fill="rgb(241,47,5)" fg:x="412" fg:w="210"/><text x="11.5648%" y="735.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::map::Map&gt;&gt; (2 samples, 0.06%)</title><rect x="17.2270%" y="709" width="0.0556%" height="15" fill="rgb(233,42,35)" fg:x="620" fg:w="2"/><text x="17.3442%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.06%)</title><rect x="17.2270%" y="693" width="0.0556%" height="15" fill="rgb(231,13,6)" fg:x="620" fg:w="2"/><text x="17.3442%" y="703.50"></text></g><g><title>__GI___munmap (2 samples, 0.06%)</title><rect x="17.2270%" y="677" width="0.0556%" height="15" fill="rgb(207,181,40)" fg:x="620" fg:w="2"/><text x="17.3442%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="17.2270%" y="661" width="0.0556%" height="15" fill="rgb(254,173,49)" fg:x="620" fg:w="2"/><text x="17.3442%" y="671.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="17.2270%" y="645" width="0.0556%" height="15" fill="rgb(221,1,38)" fg:x="620" fg:w="2"/><text x="17.3442%" y="655.50"></text></g><g><title>x64_sys_call (2 samples, 0.06%)</title><rect x="17.2270%" y="629" width="0.0556%" height="15" fill="rgb(206,124,46)" fg:x="620" fg:w="2"/><text x="17.3442%" y="639.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.06%)</title><rect x="17.2270%" y="613" width="0.0556%" height="15" fill="rgb(249,21,11)" fg:x="620" fg:w="2"/><text x="17.3442%" y="623.50"></text></g><g><title>__vm_munmap (2 samples, 0.06%)</title><rect x="17.2270%" y="597" width="0.0556%" height="15" fill="rgb(222,201,40)" fg:x="620" fg:w="2"/><text x="17.3442%" y="607.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.06%)</title><rect x="17.2270%" y="581" width="0.0556%" height="15" fill="rgb(235,61,29)" fg:x="620" fg:w="2"/><text x="17.3442%" y="591.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.06%)</title><rect x="17.2270%" y="565" width="0.0556%" height="15" fill="rgb(219,207,3)" fg:x="620" fg:w="2"/><text x="17.3442%" y="575.50"></text></g><g><title>unmap_region (2 samples, 0.06%)</title><rect x="17.2270%" y="549" width="0.0556%" height="15" fill="rgb(222,56,46)" fg:x="620" fg:w="2"/><text x="17.3442%" y="559.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="17.2548%" y="533" width="0.0278%" height="15" fill="rgb(239,76,54)" fg:x="621" fg:w="1"/><text x="17.3720%" y="543.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="17.2548%" y="517" width="0.0278%" height="15" fill="rgb(231,124,27)" fg:x="621" fg:w="1"/><text x="17.3720%" y="527.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="17.2548%" y="501" width="0.0278%" height="15" fill="rgb(249,195,6)" fg:x="621" fg:w="1"/><text x="17.3720%" y="511.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.03%)</title><rect x="17.2548%" y="485" width="0.0278%" height="15" fill="rgb(237,174,47)" fg:x="621" fg:w="1"/><text x="17.3720%" y="495.50"></text></g><g><title>_compound_head (1 samples, 0.03%)</title><rect x="17.2548%" y="469" width="0.0278%" height="15" fill="rgb(206,201,31)" fg:x="621" fg:w="1"/><text x="17.3720%" y="479.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="18.1995%" y="501" width="0.0278%" height="15" fill="rgb(231,57,52)" fg:x="655" fg:w="1"/><text x="18.3167%" y="511.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="18.2551%" y="485" width="0.0278%" height="15" fill="rgb(248,177,22)" fg:x="657" fg:w="1"/><text x="18.3723%" y="495.50"></text></g><g><title>access_error (1 samples, 0.03%)</title><rect x="18.3384%" y="469" width="0.0278%" height="15" fill="rgb(215,211,37)" fg:x="660" fg:w="1"/><text x="18.4556%" y="479.50"></text></g><g><title>down_read_trylock (1 samples, 0.03%)</title><rect x="18.3940%" y="453" width="0.0278%" height="15" fill="rgb(241,128,51)" fg:x="662" fg:w="1"/><text x="18.5112%" y="463.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="18.5885%" y="405" width="0.0278%" height="15" fill="rgb(227,165,31)" fg:x="669" fg:w="1"/><text x="18.7057%" y="415.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.06%)</title><rect x="18.6441%" y="389" width="0.0556%" height="15" fill="rgb(228,167,24)" fg:x="671" fg:w="2"/><text x="18.7613%" y="399.50"></text></g><g><title>blk_cgroup_congested (2 samples, 0.06%)</title><rect x="18.6441%" y="373" width="0.0556%" height="15" fill="rgb(228,143,12)" fg:x="671" fg:w="2"/><text x="18.7613%" y="383.50"></text></g><g><title>__get_vma_policy (1 samples, 0.03%)</title><rect x="18.6996%" y="389" width="0.0278%" height="15" fill="rgb(249,149,8)" fg:x="673" fg:w="1"/><text x="18.8168%" y="399.50"></text></g><g><title>__rcu_read_unlock (16 samples, 0.44%)</title><rect x="18.7552%" y="373" width="0.4446%" height="15" fill="rgb(243,35,44)" fg:x="675" fg:w="16"/><text x="18.8724%" y="383.50"></text></g><g><title>__count_memcg_events (3 samples, 0.08%)</title><rect x="19.3665%" y="357" width="0.0834%" height="15" fill="rgb(246,89,9)" fg:x="697" fg:w="3"/><text x="19.4837%" y="367.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="19.4221%" y="341" width="0.0278%" height="15" fill="rgb(233,213,13)" fg:x="699" fg:w="1"/><text x="19.5392%" y="351.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="19.4498%" y="357" width="0.0278%" height="15" fill="rgb(233,141,41)" fg:x="700" fg:w="1"/><text x="19.5670%" y="367.50"></text></g><g><title>charge_memcg (16 samples, 0.44%)</title><rect x="19.1998%" y="373" width="0.4446%" height="15" fill="rgb(239,167,4)" fg:x="691" fg:w="16"/><text x="19.3170%" y="383.50"></text></g><g><title>try_charge_memcg (6 samples, 0.17%)</title><rect x="19.4776%" y="357" width="0.1667%" height="15" fill="rgb(209,217,16)" fg:x="701" fg:w="6"/><text x="19.5948%" y="367.50"></text></g><g><title>get_mem_cgroup_from_mm (6 samples, 0.17%)</title><rect x="19.6443%" y="373" width="0.1667%" height="15" fill="rgb(219,88,35)" fg:x="707" fg:w="6"/><text x="19.7615%" y="383.50"></text></g><g><title>__mem_cgroup_charge (40 samples, 1.11%)</title><rect x="18.7274%" y="389" width="1.1114%" height="15" fill="rgb(220,193,23)" fg:x="674" fg:w="40"/><text x="18.8446%" y="399.50">__..</text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="19.8111%" y="373" width="0.0278%" height="15" fill="rgb(230,90,52)" fg:x="713" fg:w="1"/><text x="19.9282%" y="383.50"></text></g><g><title>__pte_offset_map_lock (3 samples, 0.08%)</title><rect x="19.8388%" y="389" width="0.0834%" height="15" fill="rgb(252,106,19)" fg:x="714" fg:w="3"/><text x="19.9560%" y="399.50"></text></g><g><title>__pte_offset_map (3 samples, 0.08%)</title><rect x="19.8388%" y="373" width="0.0834%" height="15" fill="rgb(206,74,20)" fg:x="714" fg:w="3"/><text x="19.9560%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="19.9222%" y="389" width="0.0278%" height="15" fill="rgb(230,138,44)" fg:x="717" fg:w="1"/><text x="20.0394%" y="399.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="19.9500%" y="389" width="0.0278%" height="15" fill="rgb(235,182,43)" fg:x="718" fg:w="1"/><text x="20.0672%" y="399.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="19.9778%" y="389" width="0.0278%" height="15" fill="rgb(242,16,51)" fg:x="719" fg:w="1"/><text x="20.0950%" y="399.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="20.0056%" y="389" width="0.0278%" height="15" fill="rgb(248,9,4)" fg:x="720" fg:w="1"/><text x="20.1227%" y="399.50"></text></g><g><title>lru_add_fn (6 samples, 0.17%)</title><rect x="20.1445%" y="341" width="0.1667%" height="15" fill="rgb(210,31,22)" fg:x="725" fg:w="6"/><text x="20.2617%" y="351.50"></text></g><g><title>lru_gen_add_folio (3 samples, 0.08%)</title><rect x="20.2278%" y="325" width="0.0834%" height="15" fill="rgb(239,54,39)" fg:x="728" fg:w="3"/><text x="20.3450%" y="335.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.06%)</title><rect x="20.2556%" y="309" width="0.0556%" height="15" fill="rgb(230,99,41)" fg:x="729" fg:w="2"/><text x="20.3728%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.06%)</title><rect x="20.2556%" y="293" width="0.0556%" height="15" fill="rgb(253,106,12)" fg:x="729" fg:w="2"/><text x="20.3728%" y="303.50"></text></g><g><title>folio_add_lru_vma (11 samples, 0.31%)</title><rect x="20.0333%" y="389" width="0.3056%" height="15" fill="rgb(213,46,41)" fg:x="721" fg:w="11"/><text x="20.1505%" y="399.50"></text></g><g><title>folio_add_lru (11 samples, 0.31%)</title><rect x="20.0333%" y="373" width="0.3056%" height="15" fill="rgb(215,133,35)" fg:x="721" fg:w="11"/><text x="20.1505%" y="383.50"></text></g><g><title>folio_batch_move_lru (8 samples, 0.22%)</title><rect x="20.1167%" y="357" width="0.2223%" height="15" fill="rgb(213,28,5)" fg:x="724" fg:w="8"/><text x="20.2339%" y="367.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="20.3112%" y="341" width="0.0278%" height="15" fill="rgb(215,77,49)" fg:x="731" fg:w="1"/><text x="20.4284%" y="351.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="20.3112%" y="325" width="0.0278%" height="15" fill="rgb(248,100,22)" fg:x="731" fg:w="1"/><text x="20.4284%" y="335.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.08%)</title><rect x="20.3390%" y="389" width="0.0834%" height="15" fill="rgb(208,67,9)" fg:x="732" fg:w="3"/><text x="20.4562%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.06%)</title><rect x="20.3668%" y="373" width="0.0556%" height="15" fill="rgb(219,133,21)" fg:x="733" fg:w="2"/><text x="20.4840%" y="383.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.06%)</title><rect x="20.3668%" y="357" width="0.0556%" height="15" fill="rgb(246,46,29)" fg:x="733" fg:w="2"/><text x="20.4840%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="20.3946%" y="341" width="0.0278%" height="15" fill="rgb(246,185,52)" fg:x="734" fg:w="1"/><text x="20.5117%" y="351.50"></text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="20.4223%" y="389" width="0.0278%" height="15" fill="rgb(252,136,11)" fg:x="735" fg:w="1"/><text x="20.5395%" y="399.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="20.5891%" y="341" width="0.0278%" height="15" fill="rgb(219,138,53)" fg:x="741" fg:w="1"/><text x="20.7062%" y="351.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.03%)</title><rect x="20.7002%" y="325" width="0.0278%" height="15" fill="rgb(211,51,23)" fg:x="745" fg:w="1"/><text x="20.8174%" y="335.50"></text></g><g><title>clear_page_erms (5 samples, 0.14%)</title><rect x="20.7280%" y="325" width="0.1389%" height="15" fill="rgb(247,221,28)" fg:x="746" fg:w="5"/><text x="20.8452%" y="335.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="20.8669%" y="325" width="0.0278%" height="15" fill="rgb(251,222,45)" fg:x="751" fg:w="1"/><text x="20.9841%" y="335.50"></text></g><g><title>__folio_alloc (27 samples, 0.75%)</title><rect x="20.4501%" y="373" width="0.7502%" height="15" fill="rgb(217,162,53)" fg:x="736" fg:w="27"/><text x="20.5673%" y="383.50"></text></g><g><title>__alloc_pages (27 samples, 0.75%)</title><rect x="20.4501%" y="357" width="0.7502%" height="15" fill="rgb(229,93,14)" fg:x="736" fg:w="27"/><text x="20.5673%" y="367.50"></text></g><g><title>get_page_from_freelist (21 samples, 0.58%)</title><rect x="20.6168%" y="341" width="0.5835%" height="15" fill="rgb(209,67,49)" fg:x="742" fg:w="21"/><text x="20.7340%" y="351.50"></text></g><g><title>rmqueue (11 samples, 0.31%)</title><rect x="20.8947%" y="325" width="0.3056%" height="15" fill="rgb(213,87,29)" fg:x="752" fg:w="11"/><text x="21.0119%" y="335.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.25%)</title><rect x="20.9503%" y="309" width="0.2501%" height="15" fill="rgb(205,151,52)" fg:x="754" fg:w="9"/><text x="21.0675%" y="319.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.22%)</title><rect x="20.9780%" y="293" width="0.2223%" height="15" fill="rgb(253,215,39)" fg:x="755" fg:w="8"/><text x="21.0952%" y="303.50"></text></g><g><title>handle_pte_fault (97 samples, 2.70%)</title><rect x="18.5329%" y="421" width="2.6952%" height="15" fill="rgb(221,220,41)" fg:x="667" fg:w="97"/><text x="18.6501%" y="431.50">handle_..</text></g><g><title>do_anonymous_page (94 samples, 2.61%)</title><rect x="18.6163%" y="405" width="2.6118%" height="15" fill="rgb(218,133,21)" fg:x="670" fg:w="94"/><text x="18.7335%" y="415.50">do_anon..</text></g><g><title>vma_alloc_folio (28 samples, 0.78%)</title><rect x="20.4501%" y="389" width="0.7780%" height="15" fill="rgb(221,193,43)" fg:x="736" fg:w="28"/><text x="20.5673%" y="399.50"></text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="21.2003%" y="373" width="0.0278%" height="15" fill="rgb(240,128,52)" fg:x="763" fg:w="1"/><text x="21.3175%" y="383.50"></text></g><g><title>__handle_mm_fault (101 samples, 2.81%)</title><rect x="18.4496%" y="437" width="2.8063%" height="15" fill="rgb(253,114,12)" fg:x="664" fg:w="101"/><text x="18.5668%" y="447.50">__handle..</text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="21.2281%" y="421" width="0.0278%" height="15" fill="rgb(215,223,47)" fg:x="764" fg:w="1"/><text x="21.3453%" y="431.50"></text></g><g><title>count_memcg_events.constprop.0 (3 samples, 0.08%)</title><rect x="21.2559%" y="437" width="0.0834%" height="15" fill="rgb(248,225,23)" fg:x="765" fg:w="3"/><text x="21.3731%" y="447.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="21.3115%" y="421" width="0.0278%" height="15" fill="rgb(250,108,0)" fg:x="767" fg:w="1"/><text x="21.4287%" y="431.50"></text></g><g><title>handle_mm_fault (106 samples, 2.95%)</title><rect x="18.4218%" y="453" width="2.9453%" height="15" fill="rgb(228,208,7)" fg:x="663" fg:w="106"/><text x="18.5390%" y="463.50">handle_m..</text></g><g><title>pud_val (1 samples, 0.03%)</title><rect x="21.3393%" y="437" width="0.0278%" height="15" fill="rgb(244,45,10)" fg:x="768" fg:w="1"/><text x="21.4564%" y="447.50"></text></g><g><title>mas_walk (3 samples, 0.08%)</title><rect x="21.3948%" y="437" width="0.0834%" height="15" fill="rgb(207,125,25)" fg:x="770" fg:w="3"/><text x="21.5120%" y="447.50"></text></g><g><title>mtree_range_walk (3 samples, 0.08%)</title><rect x="21.3948%" y="421" width="0.0834%" height="15" fill="rgb(210,195,18)" fg:x="770" fg:w="3"/><text x="21.5120%" y="431.50"></text></g><g><title>do_user_addr_fault (113 samples, 3.14%)</title><rect x="18.3662%" y="469" width="3.1398%" height="15" fill="rgb(249,80,12)" fg:x="661" fg:w="113"/><text x="18.4834%" y="479.50">do_user_a..</text></g><g><title>lock_vma_under_rcu (5 samples, 0.14%)</title><rect x="21.3670%" y="453" width="0.1389%" height="15" fill="rgb(221,65,9)" fg:x="769" fg:w="5"/><text x="21.4842%" y="463.50"></text></g><g><title>mtree_range_walk (1 samples, 0.03%)</title><rect x="21.4782%" y="437" width="0.0278%" height="15" fill="rgb(235,49,36)" fg:x="773" fg:w="1"/><text x="21.5954%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="21.5060%" y="437" width="0.0278%" height="15" fill="rgb(225,32,20)" fg:x="774" fg:w="1"/><text x="21.6232%" y="447.50"></text></g><g><title>asm_exc_page_fault (120 samples, 3.33%)</title><rect x="18.2273%" y="501" width="3.3343%" height="15" fill="rgb(215,141,46)" fg:x="656" fg:w="120"/><text x="18.3445%" y="511.50">asm_exc_pa..</text></g><g><title>exc_page_fault (118 samples, 3.28%)</title><rect x="18.2829%" y="485" width="3.2787%" height="15" fill="rgb(250,160,47)" fg:x="658" fg:w="118"/><text x="18.4000%" y="495.50">exc_page_..</text></g><g><title>irqentry_exit (2 samples, 0.06%)</title><rect x="21.5060%" y="469" width="0.0556%" height="15" fill="rgb(216,222,40)" fg:x="774" fg:w="2"/><text x="21.6232%" y="479.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.06%)</title><rect x="21.5060%" y="453" width="0.0556%" height="15" fill="rgb(234,217,39)" fg:x="774" fg:w="2"/><text x="21.6232%" y="463.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="21.5338%" y="437" width="0.0278%" height="15" fill="rgb(207,178,40)" fg:x="775" fg:w="1"/><text x="21.6509%" y="447.50"></text></g><g><title>error_entry (4 samples, 0.11%)</title><rect x="21.5615%" y="501" width="0.1111%" height="15" fill="rgb(221,136,13)" fg:x="776" fg:w="4"/><text x="21.6787%" y="511.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (178 samples, 4.95%)</title><rect x="17.2826%" y="709" width="4.9458%" height="15" fill="rgb(249,199,10)" fg:x="622" fg:w="178"/><text x="17.3998%" y="719.50">fringe_vs_astar..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (178 samples, 4.95%)</title><rect x="17.2826%" y="693" width="4.9458%" height="15" fill="rgb(249,222,13)" fg:x="622" fg:w="178"/><text x="17.3998%" y="703.50">core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (178 samples, 4.95%)</title><rect x="17.2826%" y="677" width="4.9458%" height="15" fill="rgb(244,185,38)" fg:x="622" fg:w="178"/><text x="17.3998%" y="687.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (178 samples, 4.95%)</title><rect x="17.2826%" y="661" width="4.9458%" height="15" fill="rgb(236,202,9)" fg:x="622" fg:w="178"/><text x="17.3998%" y="671.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (178 samples, 4.95%)</title><rect x="17.2826%" y="645" width="4.9458%" height="15" fill="rgb(250,229,37)" fg:x="622" fg:w="178"/><text x="17.3998%" y="655.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (178 samples, 4.95%)</title><rect x="17.2826%" y="629" width="4.9458%" height="15" fill="rgb(206,174,23)" fg:x="622" fg:w="178"/><text x="17.3998%" y="639.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (178 samples, 4.95%)</title><rect x="17.2826%" y="613" width="4.9458%" height="15" fill="rgb(211,33,43)" fg:x="622" fg:w="178"/><text x="17.3998%" y="623.50">alloc::vec::Vec..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (178 samples, 4.95%)</title><rect x="17.2826%" y="597" width="4.9458%" height="15" fill="rgb(245,58,50)" fg:x="622" fg:w="178"/><text x="17.3998%" y="607.50">&lt;core::iter::ad..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (178 samples, 4.95%)</title><rect x="17.2826%" y="581" width="4.9458%" height="15" fill="rgb(244,68,36)" fg:x="622" fg:w="178"/><text x="17.3998%" y="591.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (178 samples, 4.95%)</title><rect x="17.2826%" y="565" width="4.9458%" height="15" fill="rgb(232,229,15)" fg:x="622" fg:w="178"/><text x="17.3998%" y="575.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (174 samples, 4.83%)</title><rect x="17.3937%" y="549" width="4.8347%" height="15" fill="rgb(254,30,23)" fg:x="626" fg:w="174"/><text x="17.5109%" y="559.50">&lt;core::iter::ad..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (174 samples, 4.83%)</title><rect x="17.3937%" y="533" width="4.8347%" height="15" fill="rgb(235,160,14)" fg:x="626" fg:w="174"/><text x="17.5109%" y="543.50">alloc::vec::Vec..</text></g><g><title>core::ptr::write (174 samples, 4.83%)</title><rect x="17.3937%" y="517" width="4.8347%" height="15" fill="rgb(212,155,44)" fg:x="626" fg:w="174"/><text x="17.5109%" y="527.50">core::ptr::write</text></g><g><title>sync_regs (20 samples, 0.56%)</title><rect x="21.6727%" y="501" width="0.5557%" height="15" fill="rgb(226,2,50)" fg:x="780" fg:w="20"/><text x="21.7899%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.31%)</title><rect x="29.1748%" y="693" width="0.3056%" height="15" fill="rgb(234,177,6)" fg:x="1050" fg:w="11"/><text x="29.2920%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (51 samples, 1.42%)</title><rect x="29.4804%" y="693" width="1.4171%" height="15" fill="rgb(217,24,9)" fg:x="1061" fg:w="51"/><text x="29.5976%" y="703.50">&lt;al..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (51 samples, 1.42%)</title><rect x="29.4804%" y="677" width="1.4171%" height="15" fill="rgb(220,13,46)" fg:x="1061" fg:w="51"/><text x="29.5976%" y="687.50">cor..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (51 samples, 1.42%)</title><rect x="29.4804%" y="661" width="1.4171%" height="15" fill="rgb(239,221,27)" fg:x="1061" fg:w="51"/><text x="29.5976%" y="671.50">&lt;us..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="30.8975%" y="693" width="0.0278%" height="15" fill="rgb(222,198,25)" fg:x="1112" fg:w="1"/><text x="31.0147%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="30.8975%" y="677" width="0.0278%" height="15" fill="rgb(211,99,13)" fg:x="1112" fg:w="1"/><text x="31.0147%" y="687.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph as fringe_vs_astar::structures::graph::Graph&gt;::neighbors (1 samples, 0.03%)</title><rect x="30.9253%" y="693" width="0.0278%" height="15" fill="rgb(232,111,31)" fg:x="1113" fg:w="1"/><text x="31.0424%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="30.9253%" y="677" width="0.0278%" height="15" fill="rgb(245,82,37)" fg:x="1113" fg:w="1"/><text x="31.0424%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="30.9253%" y="661" width="0.0278%" height="15" fill="rgb(227,149,46)" fg:x="1113" fg:w="1"/><text x="31.0424%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="30.9253%" y="645" width="0.0278%" height="15" fill="rgb(218,36,50)" fg:x="1113" fg:w="1"/><text x="31.0424%" y="655.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (193 samples, 5.36%)</title><rect x="30.9530%" y="677" width="5.3626%" height="15" fill="rgb(226,80,48)" fg:x="1114" fg:w="193"/><text x="31.0702%" y="687.50">fringe_vs_astar::..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (169 samples, 4.70%)</title><rect x="36.3156%" y="677" width="4.6957%" height="15" fill="rgb(238,224,15)" fg:x="1307" fg:w="169"/><text x="36.4328%" y="687.50">fringe_vs_asta..</text></g><g><title>fringe_vs_astar::index_to_xy (151 samples, 4.20%)</title><rect x="36.8158%" y="661" width="4.1956%" height="15" fill="rgb(241,136,10)" fg:x="1325" fg:w="151"/><text x="36.9330%" y="671.50">fringe_vs_ast..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (565 samples, 15.70%)</title><rect x="30.9530%" y="693" width="15.6988%" height="15" fill="rgb(208,32,45)" fg:x="1114" fg:w="565"/><text x="31.0702%" y="703.50">fringe_vs_astar::algorithms::fringe::FringeSearch::sol..</text></g><g><title>fringe_vs_astar::algorithms::heuristic (203 samples, 5.64%)</title><rect x="41.0114%" y="677" width="5.6405%" height="15" fill="rgb(207,135,9)" fg:x="1476" fg:w="203"/><text x="41.1286%" y="687.50">fringe_vs_astar::a..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.03%)</title><rect x="46.6518%" y="693" width="0.0278%" height="15" fill="rgb(206,86,44)" fg:x="1679" fg:w="1"/><text x="46.7690%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="46.6518%" y="677" width="0.0278%" height="15" fill="rgb(245,177,15)" fg:x="1679" fg:w="1"/><text x="46.7690%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="46.6518%" y="661" width="0.0278%" height="15" fill="rgb(206,64,50)" fg:x="1679" fg:w="1"/><text x="46.7690%" y="671.50"></text></g><g><title>native_apic_msr_eoi_write (1 samples, 0.03%)</title><rect x="46.6518%" y="645" width="0.0278%" height="15" fill="rgb(234,36,40)" fg:x="1679" fg:w="1"/><text x="46.7690%" y="655.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="46.6796%" y="437" width="0.0278%" height="15" fill="rgb(213,64,8)" fg:x="1680" fg:w="1"/><text x="46.7968%" y="447.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="46.6796%" y="421" width="0.0278%" height="15" fill="rgb(210,75,36)" fg:x="1680" fg:w="1"/><text x="46.7968%" y="431.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="46.6796%" y="405" width="0.0278%" height="15" fill="rgb(229,88,21)" fg:x="1680" fg:w="1"/><text x="46.7968%" y="415.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="46.6796%" y="389" width="0.0278%" height="15" fill="rgb(252,204,47)" fg:x="1680" fg:w="1"/><text x="46.7968%" y="399.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="46.6796%" y="373" width="0.0278%" height="15" fill="rgb(208,77,27)" fg:x="1680" fg:w="1"/><text x="46.7968%" y="383.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="46.6796%" y="357" width="0.0278%" height="15" fill="rgb(221,76,26)" fg:x="1680" fg:w="1"/><text x="46.7968%" y="367.50"></text></g><g><title>_compound_head (2 samples, 0.06%)</title><rect x="46.7074%" y="373" width="0.0556%" height="15" fill="rgb(225,139,18)" fg:x="1681" fg:w="2"/><text x="46.8246%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="46.7630%" y="357" width="0.0278%" height="15" fill="rgb(230,137,11)" fg:x="1683" fg:w="1"/><text x="46.8802%" y="367.50"></text></g><g><title>page_remove_rmap (2 samples, 0.06%)</title><rect x="46.7908%" y="357" width="0.0556%" height="15" fill="rgb(212,28,1)" fg:x="1684" fg:w="2"/><text x="46.9080%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="46.8186%" y="341" width="0.0278%" height="15" fill="rgb(248,164,17)" fg:x="1685" fg:w="1"/><text x="46.9357%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="46.8186%" y="325" width="0.0278%" height="15" fill="rgb(222,171,42)" fg:x="1685" fg:w="1"/><text x="46.9357%" y="335.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="46.8186%" y="309" width="0.0278%" height="15" fill="rgb(243,84,45)" fg:x="1685" fg:w="1"/><text x="46.9357%" y="319.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.06%)</title><rect x="46.9019%" y="277" width="0.0556%" height="15" fill="rgb(252,49,23)" fg:x="1688" fg:w="2"/><text x="47.0191%" y="287.50"></text></g><g><title>__mem_cgroup_uncharge_list (3 samples, 0.08%)</title><rect x="46.9019%" y="293" width="0.0834%" height="15" fill="rgb(215,19,7)" fg:x="1688" fg:w="3"/><text x="47.0191%" y="303.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="46.9575%" y="277" width="0.0278%" height="15" fill="rgb(238,81,41)" fg:x="1690" fg:w="1"/><text x="47.0747%" y="287.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.03%)</title><rect x="46.9853%" y="293" width="0.0278%" height="15" fill="rgb(210,199,37)" fg:x="1691" fg:w="1"/><text x="47.1025%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="46.9853%" y="277" width="0.0278%" height="15" fill="rgb(244,192,49)" fg:x="1691" fg:w="1"/><text x="47.1025%" y="287.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="46.9853%" y="261" width="0.0278%" height="15" fill="rgb(226,211,11)" fg:x="1691" fg:w="1"/><text x="47.1025%" y="271.50"></text></g><g><title>__free_one_page (1 samples, 0.03%)</title><rect x="47.0131%" y="261" width="0.0278%" height="15" fill="rgb(236,162,54)" fg:x="1692" fg:w="1"/><text x="47.1302%" y="271.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.08%)</title><rect x="47.0131%" y="277" width="0.0834%" height="15" fill="rgb(220,229,9)" fg:x="1692" fg:w="3"/><text x="47.1302%" y="287.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.06%)</title><rect x="47.0408%" y="261" width="0.0556%" height="15" fill="rgb(250,87,22)" fg:x="1693" fg:w="2"/><text x="47.1580%" y="271.50"></text></g><g><title>__free_one_page (2 samples, 0.06%)</title><rect x="47.0408%" y="245" width="0.0556%" height="15" fill="rgb(239,43,17)" fg:x="1693" fg:w="2"/><text x="47.1580%" y="255.50"></text></g><g><title>free_unref_page_list (4 samples, 0.11%)</title><rect x="47.0131%" y="293" width="0.1111%" height="15" fill="rgb(231,177,25)" fg:x="1692" fg:w="4"/><text x="47.1302%" y="303.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="47.0964%" y="277" width="0.0278%" height="15" fill="rgb(219,179,1)" fg:x="1695" fg:w="1"/><text x="47.2136%" y="287.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::construct_path (23 samples, 0.64%)</title><rect x="46.6796%" y="693" width="0.6391%" height="15" fill="rgb(238,219,53)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(f64,usize,bool)&gt;&gt; (23 samples, 0.64%)</title><rect x="46.6796%" y="677" width="0.6391%" height="15" fill="rgb(232,167,36)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(f64,usize,bool)&gt;&gt; (23 samples, 0.64%)</title><rect x="46.6796%" y="661" width="0.6391%" height="15" fill="rgb(244,19,51)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.64%)</title><rect x="46.6796%" y="645" width="0.6391%" height="15" fill="rgb(224,6,22)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.64%)</title><rect x="46.6796%" y="629" width="0.6391%" height="15" fill="rgb(224,145,5)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.64%)</title><rect x="46.6796%" y="613" width="0.6391%" height="15" fill="rgb(234,130,49)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="623.50"></text></g><g><title>__GI___libc_free (23 samples, 0.64%)</title><rect x="46.6796%" y="597" width="0.6391%" height="15" fill="rgb(254,6,2)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="607.50"></text></g><g><title>__GI___munmap (23 samples, 0.64%)</title><rect x="46.6796%" y="581" width="0.6391%" height="15" fill="rgb(208,96,46)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.64%)</title><rect x="46.6796%" y="565" width="0.6391%" height="15" fill="rgb(239,3,39)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="575.50"></text></g><g><title>do_syscall_64 (23 samples, 0.64%)</title><rect x="46.6796%" y="549" width="0.6391%" height="15" fill="rgb(233,210,1)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="559.50"></text></g><g><title>x64_sys_call (23 samples, 0.64%)</title><rect x="46.6796%" y="533" width="0.6391%" height="15" fill="rgb(244,137,37)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="543.50"></text></g><g><title>__x64_sys_munmap (23 samples, 0.64%)</title><rect x="46.6796%" y="517" width="0.6391%" height="15" fill="rgb(240,136,2)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="527.50"></text></g><g><title>__vm_munmap (23 samples, 0.64%)</title><rect x="46.6796%" y="501" width="0.6391%" height="15" fill="rgb(239,18,37)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="511.50"></text></g><g><title>do_vmi_munmap (23 samples, 0.64%)</title><rect x="46.6796%" y="485" width="0.6391%" height="15" fill="rgb(218,185,22)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="495.50"></text></g><g><title>do_vmi_align_munmap (23 samples, 0.64%)</title><rect x="46.6796%" y="469" width="0.6391%" height="15" fill="rgb(225,218,4)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="479.50"></text></g><g><title>unmap_region (23 samples, 0.64%)</title><rect x="46.6796%" y="453" width="0.6391%" height="15" fill="rgb(230,182,32)" fg:x="1680" fg:w="23"/><text x="46.7968%" y="463.50"></text></g><g><title>unmap_vmas (22 samples, 0.61%)</title><rect x="46.7074%" y="437" width="0.6113%" height="15" fill="rgb(242,56,43)" fg:x="1681" fg:w="22"/><text x="46.8246%" y="447.50"></text></g><g><title>unmap_single_vma (22 samples, 0.61%)</title><rect x="46.7074%" y="421" width="0.6113%" height="15" fill="rgb(233,99,24)" fg:x="1681" fg:w="22"/><text x="46.8246%" y="431.50"></text></g><g><title>unmap_page_range (22 samples, 0.61%)</title><rect x="46.7074%" y="405" width="0.6113%" height="15" fill="rgb(234,209,42)" fg:x="1681" fg:w="22"/><text x="46.8246%" y="415.50"></text></g><g><title>zap_pmd_range.isra.0 (22 samples, 0.61%)</title><rect x="46.7074%" y="389" width="0.6113%" height="15" fill="rgb(227,7,12)" fg:x="1681" fg:w="22"/><text x="46.8246%" y="399.50"></text></g><g><title>zap_pte_range (20 samples, 0.56%)</title><rect x="46.7630%" y="373" width="0.5557%" height="15" fill="rgb(245,203,43)" fg:x="1683" fg:w="20"/><text x="46.8802%" y="383.50"></text></g><g><title>tlb_flush_mmu (17 samples, 0.47%)</title><rect x="46.8463%" y="357" width="0.4724%" height="15" fill="rgb(238,205,33)" fg:x="1686" fg:w="17"/><text x="46.9635%" y="367.50"></text></g><g><title>tlb_batch_pages_flush (17 samples, 0.47%)</title><rect x="46.8463%" y="341" width="0.4724%" height="15" fill="rgb(231,56,7)" fg:x="1686" fg:w="17"/><text x="46.9635%" y="351.50"></text></g><g><title>free_pages_and_swap_cache (17 samples, 0.47%)</title><rect x="46.8463%" y="325" width="0.4724%" height="15" fill="rgb(244,186,29)" fg:x="1686" fg:w="17"/><text x="46.9635%" y="335.50"></text></g><g><title>release_pages (17 samples, 0.47%)</title><rect x="46.8463%" y="309" width="0.4724%" height="15" fill="rgb(234,111,31)" fg:x="1686" fg:w="17"/><text x="46.9635%" y="319.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (7 samples, 0.19%)</title><rect x="47.1242%" y="293" width="0.1945%" height="15" fill="rgb(241,149,10)" fg:x="1696" fg:w="7"/><text x="47.2414%" y="303.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (16 samples, 0.44%)</title><rect x="47.4298%" y="581" width="0.4446%" height="15" fill="rgb(249,206,44)" fg:x="1707" fg:w="16"/><text x="47.5470%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (16 samples, 0.44%)</title><rect x="47.4298%" y="565" width="0.4446%" height="15" fill="rgb(251,153,30)" fg:x="1707" fg:w="16"/><text x="47.5470%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (16 samples, 0.44%)</title><rect x="47.4298%" y="549" width="0.4446%" height="15" fill="rgb(239,152,38)" fg:x="1707" fg:w="16"/><text x="47.5470%" y="559.50"></text></g><g><title>core::ptr::write (16 samples, 0.44%)</title><rect x="47.4298%" y="533" width="0.4446%" height="15" fill="rgb(249,139,47)" fg:x="1707" fg:w="16"/><text x="47.5470%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.58%)</title><rect x="47.3187%" y="597" width="0.5835%" height="15" fill="rgb(244,64,35)" fg:x="1703" fg:w="21"/><text x="47.4359%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::copied::copy_fold&lt;usize,(),core::iter::traits::iterator::Iterator::for_each::call&lt;usize,alloc::vec::Vec&lt;usize&gt;::extend_trusted&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;usize&gt;&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="47.8744%" y="581" width="0.0278%" height="15" fill="rgb(216,46,15)" fg:x="1723" fg:w="1"/><text x="47.9916%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;usize,alloc::vec::Vec&lt;usize&gt;::extend_trusted&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;usize&gt;&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="47.8744%" y="565" width="0.0278%" height="15" fill="rgb(250,74,19)" fg:x="1723" fg:w="1"/><text x="47.9916%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;::extend_trusted&lt;core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;usize&gt;&gt;&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="47.8744%" y="549" width="0.0278%" height="15" fill="rgb(249,42,33)" fg:x="1723" fg:w="1"/><text x="47.9916%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.03%)</title><rect x="47.8744%" y="533" width="0.0278%" height="15" fill="rgb(242,149,17)" fg:x="1723" fg:w="1"/><text x="47.9916%" y="543.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="47.8744%" y="517" width="0.0278%" height="15" fill="rgb(244,29,21)" fg:x="1723" fg:w="1"/><text x="47.9916%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (34 samples, 0.94%)</title><rect x="47.3187%" y="693" width="0.9447%" height="15" fill="rgb(220,130,37)" fg:x="1703" fg:w="34"/><text x="47.4359%" y="703.50">f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (34 samples, 0.94%)</title><rect x="47.3187%" y="677" width="0.9447%" height="15" fill="rgb(211,67,2)" fg:x="1703" fg:w="34"/><text x="47.4359%" y="687.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.94%)</title><rect x="47.3187%" y="661" width="0.9447%" height="15" fill="rgb(235,68,52)" fg:x="1703" fg:w="34"/><text x="47.4359%" y="671.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (34 samples, 0.94%)</title><rect x="47.3187%" y="645" width="0.9447%" height="15" fill="rgb(246,142,3)" fg:x="1703" fg:w="34"/><text x="47.4359%" y="655.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (34 samples, 0.94%)</title><rect x="47.3187%" y="629" width="0.9447%" height="15" fill="rgb(241,25,7)" fg:x="1703" fg:w="34"/><text x="47.4359%" y="639.50">c..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.94%)</title><rect x="47.3187%" y="613" width="0.9447%" height="15" fill="rgb(242,119,39)" fg:x="1703" fg:w="34"/><text x="47.4359%" y="623.50">&lt;..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (13 samples, 0.36%)</title><rect x="47.9022%" y="597" width="0.3612%" height="15" fill="rgb(241,98,45)" fg:x="1724" fg:w="13"/><text x="48.0194%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (50 samples, 1.39%)</title><rect x="48.2634%" y="693" width="1.3893%" height="15" fill="rgb(254,28,30)" fg:x="1737" fg:w="50"/><text x="48.3806%" y="703.50">fri..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (50 samples, 1.39%)</title><rect x="48.2634%" y="677" width="1.3893%" height="15" fill="rgb(241,142,54)" fg:x="1737" fg:w="50"/><text x="48.3806%" y="687.50">all..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.7647%" y="661" width="0.0278%" height="15" fill="rgb(222,85,15)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.7647%" y="645" width="0.0278%" height="15" fill="rgb(210,85,47)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.7647%" y="629" width="0.0278%" height="15" fill="rgb(224,206,25)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="639.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="52.7647%" y="613" width="0.0278%" height="15" fill="rgb(243,201,19)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="623.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="52.7647%" y="597" width="0.0278%" height="15" fill="rgb(236,59,4)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="607.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="52.7647%" y="581" width="0.0278%" height="15" fill="rgb(254,179,45)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="591.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="52.7647%" y="565" width="0.0278%" height="15" fill="rgb(226,14,10)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="575.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="52.7647%" y="549" width="0.0278%" height="15" fill="rgb(244,27,41)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="559.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="52.7647%" y="533" width="0.0278%" height="15" fill="rgb(235,35,32)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="543.50"></text></g><g><title>arch_scale_freq_tick (1 samples, 0.03%)</title><rect x="52.7647%" y="517" width="0.0278%" height="15" fill="rgb(218,68,31)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="527.50"></text></g><g><title>native_read_msr (1 samples, 0.03%)</title><rect x="52.7647%" y="501" width="0.0278%" height="15" fill="rgb(207,120,37)" fg:x="1899" fg:w="1"/><text x="52.8818%" y="511.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (135 samples, 3.75%)</title><rect x="49.6527%" y="693" width="3.7510%" height="15" fill="rgb(227,98,0)" fg:x="1787" fg:w="135"/><text x="49.7699%" y="703.50">fringe_vs_a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (135 samples, 3.75%)</title><rect x="49.6527%" y="677" width="3.7510%" height="15" fill="rgb(207,7,3)" fg:x="1787" fg:w="135"/><text x="49.7699%" y="687.50">alloc::vec:..</text></g><g><title>core::ptr::write (22 samples, 0.61%)</title><rect x="52.7924%" y="661" width="0.6113%" height="15" fill="rgb(206,98,19)" fg:x="1900" fg:w="22"/><text x="52.9096%" y="671.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (1,511 samples, 41.98%)</title><rect x="11.4476%" y="741" width="41.9839%" height="15" fill="rgb(217,5,26)" fg:x="412" fg:w="1511"/><text x="11.5648%" y="751.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (1,301 samples, 36.15%)</title><rect x="17.2826%" y="725" width="36.1489%" height="15" fill="rgb(235,190,38)" fg:x="622" fg:w="1301"/><text x="17.3998%" y="735.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1,123 samples, 31.20%)</title><rect x="22.2284%" y="709" width="31.2031%" height="15" fill="rgb(247,86,24)" fg:x="800" fg:w="1123"/><text x="22.3456%" y="719.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_now (1 samples, 0.03%)</title><rect x="53.4037%" y="693" width="0.0278%" height="15" fill="rgb(205,101,16)" fg:x="1922" fg:w="1"/><text x="53.5209%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="53.4037%" y="677" width="0.0278%" height="15" fill="rgb(246,168,33)" fg:x="1922" fg:w="1"/><text x="53.5209%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="54.2929%" y="709" width="0.0556%" height="15" fill="rgb(231,114,1)" fg:x="1954" fg:w="2"/><text x="54.4100%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.06%)</title><rect x="54.2929%" y="693" width="0.0556%" height="15" fill="rgb(207,184,53)" fg:x="1954" fg:w="2"/><text x="54.4100%" y="703.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="54.2929%" y="677" width="0.0556%" height="15" fill="rgb(224,95,51)" fg:x="1954" fg:w="2"/><text x="54.4100%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="54.3484%" y="709" width="0.0556%" height="15" fill="rgb(212,188,45)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="54.3484%" y="693" width="0.0556%" height="15" fill="rgb(223,154,38)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="54.3484%" y="677" width="0.0556%" height="15" fill="rgb(251,22,52)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.06%)</title><rect x="54.3484%" y="661" width="0.0556%" height="15" fill="rgb(229,209,22)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="54.3484%" y="645" width="0.0556%" height="15" fill="rgb(234,138,34)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="54.3484%" y="629" width="0.0556%" height="15" fill="rgb(212,95,11)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="54.3484%" y="613" width="0.0556%" height="15" fill="rgb(240,179,47)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.06%)</title><rect x="54.3484%" y="597" width="0.0556%" height="15" fill="rgb(240,163,11)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (2 samples, 0.06%)</title><rect x="54.3484%" y="581" width="0.0556%" height="15" fill="rgb(236,37,12)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.06%)</title><rect x="54.3484%" y="565" width="0.0556%" height="15" fill="rgb(232,164,16)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.06%)</title><rect x="54.3484%" y="549" width="0.0556%" height="15" fill="rgb(244,205,15)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="559.50"></text></g><g><title>error_entry (2 samples, 0.06%)</title><rect x="54.3484%" y="533" width="0.0556%" height="15" fill="rgb(223,117,47)" fg:x="1956" fg:w="2"/><text x="54.4656%" y="543.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (18 samples, 0.50%)</title><rect x="54.4040%" y="709" width="0.5001%" height="15" fill="rgb(244,107,35)" fg:x="1958" fg:w="18"/><text x="54.5212%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.03%)</title><rect x="54.9041%" y="709" width="0.0278%" height="15" fill="rgb(205,140,8)" fg:x="1976" fg:w="1"/><text x="55.0213%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.03%)</title><rect x="54.9041%" y="693" width="0.0278%" height="15" fill="rgb(228,84,46)" fg:x="1976" fg:w="1"/><text x="55.0213%" y="703.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="56.1545%" y="677" width="0.0278%" height="15" fill="rgb(254,188,9)" fg:x="2021" fg:w="1"/><text x="56.2717%" y="687.50"></text></g><g><title>access_error (2 samples, 0.06%)</title><rect x="56.2101%" y="645" width="0.0556%" height="15" fill="rgb(206,112,54)" fg:x="2023" fg:w="2"/><text x="56.3272%" y="655.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="56.2934%" y="629" width="0.0556%" height="15" fill="rgb(216,84,49)" fg:x="2026" fg:w="2"/><text x="56.4106%" y="639.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="56.3490%" y="629" width="0.0278%" height="15" fill="rgb(214,194,35)" fg:x="2028" fg:w="1"/><text x="56.4662%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="56.3768%" y="629" width="0.0278%" height="15" fill="rgb(249,28,3)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="56.3768%" y="613" width="0.0278%" height="15" fill="rgb(222,56,52)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="623.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="56.3768%" y="597" width="0.0278%" height="15" fill="rgb(245,217,50)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="607.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="56.3768%" y="581" width="0.0278%" height="15" fill="rgb(213,201,24)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="591.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="56.3768%" y="565" width="0.0278%" height="15" fill="rgb(248,116,28)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="575.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="56.3768%" y="549" width="0.0278%" height="15" fill="rgb(219,72,43)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="559.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="56.3768%" y="533" width="0.0278%" height="15" fill="rgb(209,138,14)" fg:x="2029" fg:w="1"/><text x="56.4940%" y="543.50"></text></g><g><title>down_read_trylock (3 samples, 0.08%)</title><rect x="56.4046%" y="629" width="0.0834%" height="15" fill="rgb(222,18,33)" fg:x="2030" fg:w="3"/><text x="56.5217%" y="639.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="56.7658%" y="565" width="0.0278%" height="15" fill="rgb(213,199,7)" fg:x="2043" fg:w="1"/><text x="56.8830%" y="575.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="56.7936%" y="565" width="0.0278%" height="15" fill="rgb(250,110,10)" fg:x="2044" fg:w="1"/><text x="56.9107%" y="575.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="56.7936%" y="549" width="0.0278%" height="15" fill="rgb(248,123,6)" fg:x="2044" fg:w="1"/><text x="56.9107%" y="559.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="56.9603%" y="549" width="0.0278%" height="15" fill="rgb(206,91,31)" fg:x="2050" fg:w="1"/><text x="57.0775%" y="559.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="56.9881%" y="549" width="0.0556%" height="15" fill="rgb(211,154,13)" fg:x="2051" fg:w="2"/><text x="57.1052%" y="559.50"></text></g><g><title>__rcu_read_unlock (23 samples, 0.64%)</title><rect x="57.0436%" y="549" width="0.6391%" height="15" fill="rgb(225,148,7)" fg:x="2053" fg:w="23"/><text x="57.1608%" y="559.50"></text></g><g><title>__count_memcg_events (4 samples, 0.11%)</title><rect x="57.7383%" y="533" width="0.1111%" height="15" fill="rgb(220,160,43)" fg:x="2078" fg:w="4"/><text x="57.8554%" y="543.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.06%)</title><rect x="57.7938%" y="517" width="0.0556%" height="15" fill="rgb(213,52,39)" fg:x="2080" fg:w="2"/><text x="57.9110%" y="527.50"></text></g><g><title>charge_memcg (16 samples, 0.44%)</title><rect x="57.6827%" y="549" width="0.4446%" height="15" fill="rgb(243,137,7)" fg:x="2076" fg:w="16"/><text x="57.7999%" y="559.50"></text></g><g><title>try_charge_memcg (10 samples, 0.28%)</title><rect x="57.8494%" y="533" width="0.2779%" height="15" fill="rgb(230,79,13)" fg:x="2082" fg:w="10"/><text x="57.9666%" y="543.50"></text></g><g><title>consume_stock (2 samples, 0.06%)</title><rect x="58.0717%" y="517" width="0.0556%" height="15" fill="rgb(247,105,23)" fg:x="2090" fg:w="2"/><text x="58.1889%" y="527.50"></text></g><g><title>__mem_cgroup_charge (53 samples, 1.47%)</title><rect x="56.8213%" y="565" width="1.4726%" height="15" fill="rgb(223,179,41)" fg:x="2045" fg:w="53"/><text x="56.9385%" y="575.50">__m..</text></g><g><title>get_mem_cgroup_from_mm (6 samples, 0.17%)</title><rect x="58.1273%" y="549" width="0.1667%" height="15" fill="rgb(218,9,34)" fg:x="2092" fg:w="6"/><text x="58.2444%" y="559.50"></text></g><g><title>__pte_offset_map_lock (3 samples, 0.08%)</title><rect x="58.2940%" y="565" width="0.0834%" height="15" fill="rgb(222,106,8)" fg:x="2098" fg:w="3"/><text x="58.4112%" y="575.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="58.3773%" y="565" width="0.0278%" height="15" fill="rgb(211,220,0)" fg:x="2101" fg:w="1"/><text x="58.4945%" y="575.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="58.5996%" y="517" width="0.0278%" height="15" fill="rgb(229,52,16)" fg:x="2109" fg:w="1"/><text x="58.7168%" y="527.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="58.8219%" y="469" width="0.0278%" height="15" fill="rgb(212,155,18)" fg:x="2117" fg:w="1"/><text x="58.9391%" y="479.50"></text></g><g><title>folio_add_lru_vma (17 samples, 0.47%)</title><rect x="58.4051%" y="565" width="0.4724%" height="15" fill="rgb(242,21,14)" fg:x="2102" fg:w="17"/><text x="58.5223%" y="575.50"></text></g><g><title>folio_add_lru (17 samples, 0.47%)</title><rect x="58.4051%" y="549" width="0.4724%" height="15" fill="rgb(222,19,48)" fg:x="2102" fg:w="17"/><text x="58.5223%" y="559.50"></text></g><g><title>folio_batch_move_lru (12 samples, 0.33%)</title><rect x="58.5440%" y="533" width="0.3334%" height="15" fill="rgb(232,45,27)" fg:x="2107" fg:w="12"/><text x="58.6612%" y="543.50"></text></g><g><title>lru_add_fn (9 samples, 0.25%)</title><rect x="58.6274%" y="517" width="0.2501%" height="15" fill="rgb(249,103,42)" fg:x="2110" fg:w="9"/><text x="58.7446%" y="527.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.17%)</title><rect x="58.7108%" y="501" width="0.1667%" height="15" fill="rgb(246,81,33)" fg:x="2113" fg:w="6"/><text x="58.8279%" y="511.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.06%)</title><rect x="58.8219%" y="485" width="0.0556%" height="15" fill="rgb(252,33,42)" fg:x="2117" fg:w="2"/><text x="58.9391%" y="495.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="58.8497%" y="469" width="0.0278%" height="15" fill="rgb(209,212,41)" fg:x="2118" fg:w="1"/><text x="58.9669%" y="479.50"></text></g><g><title>folio_add_new_anon_rmap (7 samples, 0.19%)</title><rect x="58.8775%" y="565" width="0.1945%" height="15" fill="rgb(207,154,6)" fg:x="2119" fg:w="7"/><text x="58.9947%" y="575.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.06%)</title><rect x="59.0164%" y="549" width="0.0556%" height="15" fill="rgb(223,64,47)" fg:x="2124" fg:w="2"/><text x="59.1336%" y="559.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="59.0442%" y="533" width="0.0278%" height="15" fill="rgb(211,161,38)" fg:x="2125" fg:w="1"/><text x="59.1614%" y="543.50"></text></g><g><title>native_set_pte (1 samples, 0.03%)</title><rect x="59.0720%" y="565" width="0.0278%" height="15" fill="rgb(219,138,40)" fg:x="2126" fg:w="1"/><text x="59.1892%" y="575.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="59.0997%" y="565" width="0.0278%" height="15" fill="rgb(241,228,46)" fg:x="2127" fg:w="1"/><text x="59.2169%" y="575.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.06%)</title><rect x="59.3220%" y="517" width="0.0556%" height="15" fill="rgb(223,209,38)" fg:x="2135" fg:w="2"/><text x="59.4392%" y="527.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="59.5165%" y="501" width="0.0278%" height="15" fill="rgb(236,164,45)" fg:x="2142" fg:w="1"/><text x="59.6337%" y="511.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="59.5443%" y="501" width="0.0278%" height="15" fill="rgb(231,15,5)" fg:x="2143" fg:w="1"/><text x="59.6615%" y="511.50"></text></g><g><title>clear_page_erms (3 samples, 0.08%)</title><rect x="59.5721%" y="501" width="0.0834%" height="15" fill="rgb(252,35,15)" fg:x="2144" fg:w="3"/><text x="59.6893%" y="511.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="59.6555%" y="501" width="0.0278%" height="15" fill="rgb(248,181,18)" fg:x="2147" fg:w="1"/><text x="59.7726%" y="511.50"></text></g><g><title>get_page_from_freelist (14 samples, 0.39%)</title><rect x="59.3776%" y="517" width="0.3890%" height="15" fill="rgb(233,39,42)" fg:x="2137" fg:w="14"/><text x="59.4948%" y="527.50"></text></g><g><title>rmqueue (3 samples, 0.08%)</title><rect x="59.6832%" y="501" width="0.0834%" height="15" fill="rgb(238,110,33)" fg:x="2148" fg:w="3"/><text x="59.8004%" y="511.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.06%)</title><rect x="59.7110%" y="485" width="0.0556%" height="15" fill="rgb(233,195,10)" fg:x="2149" fg:w="2"/><text x="59.8282%" y="495.50"></text></g><g><title>rmqueue_bulk (2 samples, 0.06%)</title><rect x="59.7110%" y="469" width="0.0556%" height="15" fill="rgb(254,105,3)" fg:x="2149" fg:w="2"/><text x="59.8282%" y="479.50"></text></g><g><title>__folio_alloc (19 samples, 0.53%)</title><rect x="59.2665%" y="549" width="0.5279%" height="15" fill="rgb(221,225,9)" fg:x="2133" fg:w="19"/><text x="59.3837%" y="559.50"></text></g><g><title>__alloc_pages (18 samples, 0.50%)</title><rect x="59.2942%" y="533" width="0.5001%" height="15" fill="rgb(224,227,45)" fg:x="2134" fg:w="18"/><text x="59.4114%" y="543.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="59.7666%" y="517" width="0.0278%" height="15" fill="rgb(229,198,43)" fg:x="2151" fg:w="1"/><text x="59.8838%" y="527.50"></text></g><g><title>do_anonymous_page (110 samples, 3.06%)</title><rect x="56.7658%" y="581" width="3.0564%" height="15" fill="rgb(206,209,35)" fg:x="2043" fg:w="110"/><text x="56.8830%" y="591.50">do_anonym..</text></g><g><title>vma_alloc_folio (25 samples, 0.69%)</title><rect x="59.1275%" y="565" width="0.6946%" height="15" fill="rgb(245,195,53)" fg:x="2128" fg:w="25"/><text x="59.2447%" y="575.50"></text></g><g><title>policy_nodemask (1 samples, 0.03%)</title><rect x="59.7944%" y="549" width="0.0278%" height="15" fill="rgb(240,92,26)" fg:x="2152" fg:w="1"/><text x="59.9116%" y="559.50"></text></g><g><title>inc_mm_counter (1 samples, 0.03%)</title><rect x="59.8222%" y="581" width="0.0278%" height="15" fill="rgb(207,40,23)" fg:x="2153" fg:w="1"/><text x="59.9394%" y="591.50"></text></g><g><title>__handle_mm_fault (120 samples, 3.33%)</title><rect x="56.5713%" y="613" width="3.3343%" height="15" fill="rgb(223,111,35)" fg:x="2036" fg:w="120"/><text x="56.6885%" y="623.50">__handle_m..</text></g><g><title>handle_pte_fault (113 samples, 3.14%)</title><rect x="56.7658%" y="597" width="3.1398%" height="15" fill="rgb(229,147,28)" fg:x="2043" fg:w="113"/><text x="56.8830%" y="607.50">handle_pt..</text></g><g><title>pte_offset_map_nolock (2 samples, 0.06%)</title><rect x="59.8500%" y="581" width="0.0556%" height="15" fill="rgb(211,29,28)" fg:x="2154" fg:w="2"/><text x="59.9671%" y="591.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="59.8777%" y="565" width="0.0278%" height="15" fill="rgb(228,72,33)" fg:x="2155" fg:w="1"/><text x="59.9949%" y="575.50"></text></g><g><title>count_memcg_events.constprop.0 (3 samples, 0.08%)</title><rect x="59.9055%" y="613" width="0.0834%" height="15" fill="rgb(205,214,31)" fg:x="2156" fg:w="3"/><text x="60.0227%" y="623.50"></text></g><g><title>__count_memcg_events (3 samples, 0.08%)</title><rect x="59.9055%" y="597" width="0.0834%" height="15" fill="rgb(224,111,15)" fg:x="2156" fg:w="3"/><text x="60.0227%" y="607.50"></text></g><g><title>handle_mm_fault (127 samples, 3.53%)</title><rect x="56.4879%" y="629" width="3.5288%" height="15" fill="rgb(253,21,26)" fg:x="2033" fg:w="127"/><text x="56.6051%" y="639.50">handle_mm_..</text></g><g><title>pgd_none (1 samples, 0.03%)</title><rect x="59.9889%" y="613" width="0.0278%" height="15" fill="rgb(245,139,43)" fg:x="2159" fg:w="1"/><text x="60.1061%" y="623.50"></text></g><g><title>lock_vma_under_rcu (11 samples, 0.31%)</title><rect x="60.0167%" y="629" width="0.3056%" height="15" fill="rgb(252,170,7)" fg:x="2160" fg:w="11"/><text x="60.1339%" y="639.50"></text></g><g><title>mas_walk (7 samples, 0.19%)</title><rect x="60.1278%" y="613" width="0.1945%" height="15" fill="rgb(231,118,14)" fg:x="2164" fg:w="7"/><text x="60.2450%" y="623.50"></text></g><g><title>mtree_range_walk (7 samples, 0.19%)</title><rect x="60.1278%" y="597" width="0.1945%" height="15" fill="rgb(238,83,0)" fg:x="2164" fg:w="7"/><text x="60.2450%" y="607.50"></text></g><g><title>do_user_addr_fault (147 samples, 4.08%)</title><rect x="56.2656%" y="645" width="4.0845%" height="15" fill="rgb(221,39,39)" fg:x="2025" fg:w="147"/><text x="56.3828%" y="655.50">do_user_addr..</text></g><g><title>up_read (1 samples, 0.03%)</title><rect x="60.3223%" y="629" width="0.0278%" height="15" fill="rgb(222,119,46)" fg:x="2171" fg:w="1"/><text x="60.4395%" y="639.50"></text></g><g><title>irqentry_exit (1 samples, 0.03%)</title><rect x="60.3501%" y="645" width="0.0278%" height="15" fill="rgb(222,165,49)" fg:x="2172" fg:w="1"/><text x="60.4673%" y="655.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="60.3501%" y="629" width="0.0278%" height="15" fill="rgb(219,113,52)" fg:x="2172" fg:w="1"/><text x="60.4673%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="60.3501%" y="613" width="0.0278%" height="15" fill="rgb(214,7,15)" fg:x="2172" fg:w="1"/><text x="60.4673%" y="623.50"></text></g><g><title>asm_exc_page_fault (152 samples, 4.22%)</title><rect x="56.1823%" y="677" width="4.2234%" height="15" fill="rgb(235,32,4)" fg:x="2022" fg:w="152"/><text x="56.2995%" y="687.50">asm_exc_page_..</text></g><g><title>exc_page_fault (151 samples, 4.20%)</title><rect x="56.2101%" y="661" width="4.1956%" height="15" fill="rgb(238,90,54)" fg:x="2023" fg:w="151"/><text x="56.3272%" y="671.50">exc_page_fault</text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="60.3779%" y="645" width="0.0278%" height="15" fill="rgb(213,208,19)" fg:x="2173" fg:w="1"/><text x="60.4951%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (212 samples, 5.89%)</title><rect x="54.9319%" y="709" width="5.8905%" height="15" fill="rgb(233,156,4)" fg:x="1977" fg:w="212"/><text x="55.0491%" y="719.50">alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::write (195 samples, 5.42%)</title><rect x="55.4043%" y="693" width="5.4182%" height="15" fill="rgb(207,194,5)" fg:x="1994" fg:w="195"/><text x="55.5215%" y="703.50">core::ptr::write</text></g><g><title>sync_regs (15 samples, 0.42%)</title><rect x="60.4057%" y="677" width="0.4168%" height="15" fill="rgb(206,111,30)" fg:x="2174" fg:w="15"/><text x="60.5229%" y="687.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="60.8225%" y="709" width="0.0278%" height="15" fill="rgb(243,70,54)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="60.8225%" y="693" width="0.0278%" height="15" fill="rgb(242,28,8)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="703.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="60.8225%" y="677" width="0.0278%" height="15" fill="rgb(219,106,18)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="687.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="60.8225%" y="661" width="0.0278%" height="15" fill="rgb(244,222,10)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="671.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="60.8225%" y="645" width="0.0278%" height="15" fill="rgb(236,179,52)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="655.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="60.8225%" y="629" width="0.0278%" height="15" fill="rgb(213,23,39)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="639.50"></text></g><g><title>rebalance_domains (1 samples, 0.03%)</title><rect x="60.8225%" y="613" width="0.0278%" height="15" fill="rgb(238,48,10)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="623.50"></text></g><g><title>__bitmap_and (1 samples, 0.03%)</title><rect x="60.8225%" y="597" width="0.0278%" height="15" fill="rgb(251,196,23)" fg:x="2189" fg:w="1"/><text x="60.9396%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.11%)</title><rect x="60.8502%" y="709" width="0.1111%" height="15" fill="rgb(250,152,24)" fg:x="2190" fg:w="4"/><text x="60.9674%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.11%)</title><rect x="60.8502%" y="693" width="0.1111%" height="15" fill="rgb(209,150,17)" fg:x="2190" fg:w="4"/><text x="60.9674%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.11%)</title><rect x="60.8502%" y="677" width="0.1111%" height="15" fill="rgb(234,202,34)" fg:x="2190" fg:w="4"/><text x="60.9674%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.08%)</title><rect x="61.2114%" y="613" width="0.0834%" height="15" fill="rgb(253,148,53)" fg:x="2203" fg:w="3"/><text x="61.3286%" y="623.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.08%)</title><rect x="61.2114%" y="597" width="0.0834%" height="15" fill="rgb(218,129,16)" fg:x="2203" fg:w="3"/><text x="61.3286%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.08%)</title><rect x="61.2114%" y="581" width="0.0834%" height="15" fill="rgb(216,85,19)" fg:x="2203" fg:w="3"/><text x="61.3286%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (3 samples, 0.08%)</title><rect x="61.2114%" y="565" width="0.0834%" height="15" fill="rgb(235,228,7)" fg:x="2203" fg:w="3"/><text x="61.3286%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (3 samples, 0.08%)</title><rect x="61.2114%" y="549" width="0.0834%" height="15" fill="rgb(245,175,0)" fg:x="2203" fg:w="3"/><text x="61.3286%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="61.2948%" y="613" width="0.0278%" height="15" fill="rgb(208,168,36)" fg:x="2206" fg:w="1"/><text x="61.4120%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="61.2948%" y="597" width="0.0278%" height="15" fill="rgb(246,171,24)" fg:x="2206" fg:w="1"/><text x="61.4120%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.56%)</title><rect x="61.3226%" y="549" width="0.5557%" height="15" fill="rgb(215,142,24)" fg:x="2207" fg:w="20"/><text x="61.4398%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.61%)</title><rect x="61.8783%" y="549" width="0.6113%" height="15" fill="rgb(250,187,7)" fg:x="2227" fg:w="22"/><text x="61.9955%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.22%)</title><rect x="62.2673%" y="533" width="0.2223%" height="15" fill="rgb(228,66,33)" fg:x="2241" fg:w="8"/><text x="62.3845%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 1.22%)</title><rect x="61.3226%" y="565" width="1.2226%" height="15" fill="rgb(234,215,21)" fg:x="2207" fg:w="44"/><text x="61.4398%" y="575.50">&lt;a..</text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.06%)</title><rect x="62.4896%" y="549" width="0.0556%" height="15" fill="rgb(222,191,20)" fg:x="2249" fg:w="2"/><text x="62.6068%" y="559.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (14 samples, 0.39%)</title><rect x="62.5452%" y="517" width="0.3890%" height="15" fill="rgb(245,79,54)" fg:x="2251" fg:w="14"/><text x="62.6623%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (31 samples, 0.86%)</title><rect x="62.5452%" y="565" width="0.8614%" height="15" fill="rgb(240,10,37)" fg:x="2251" fg:w="31"/><text x="62.6623%" y="575.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (31 samples, 0.86%)</title><rect x="62.5452%" y="549" width="0.8614%" height="15" fill="rgb(214,192,32)" fg:x="2251" fg:w="31"/><text x="62.6623%" y="559.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (31 samples, 0.86%)</title><rect x="62.5452%" y="533" width="0.8614%" height="15" fill="rgb(209,36,54)" fg:x="2251" fg:w="31"/><text x="62.6623%" y="543.50">a..</text></g><g><title>core::ptr::write (17 samples, 0.47%)</title><rect x="62.9341%" y="517" width="0.4724%" height="15" fill="rgb(220,10,11)" fg:x="2265" fg:w="17"/><text x="63.0513%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (4 samples, 0.11%)</title><rect x="63.4065%" y="565" width="0.1111%" height="15" fill="rgb(221,106,17)" fg:x="2282" fg:w="4"/><text x="63.5237%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="63.4065%" y="549" width="0.1111%" height="15" fill="rgb(251,142,44)" fg:x="2282" fg:w="4"/><text x="63.5237%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (4 samples, 0.11%)</title><rect x="63.4065%" y="533" width="0.1111%" height="15" fill="rgb(238,13,15)" fg:x="2282" fg:w="4"/><text x="63.5237%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="63.4065%" y="517" width="0.1111%" height="15" fill="rgb(208,107,27)" fg:x="2282" fg:w="4"/><text x="63.5237%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (87 samples, 2.42%)</title><rect x="61.1281%" y="645" width="2.4173%" height="15" fill="rgb(205,136,37)" fg:x="2200" fg:w="87"/><text x="61.2453%" y="655.50">&lt;alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (87 samples, 2.42%)</title><rect x="61.1281%" y="629" width="2.4173%" height="15" fill="rgb(250,205,27)" fg:x="2200" fg:w="87"/><text x="61.2453%" y="639.50">alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (80 samples, 2.22%)</title><rect x="61.3226%" y="613" width="2.2228%" height="15" fill="rgb(210,80,43)" fg:x="2207" fg:w="80"/><text x="61.4398%" y="623.50">core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 2.22%)</title><rect x="61.3226%" y="597" width="2.2228%" height="15" fill="rgb(247,160,36)" fg:x="2207" fg:w="80"/><text x="61.4398%" y="607.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (80 samples, 2.22%)</title><rect x="61.3226%" y="581" width="2.2228%" height="15" fill="rgb(234,13,49)" fg:x="2207" fg:w="80"/><text x="61.4398%" y="591.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;((usize,usize),f64),(usize,f64),(),fringe_vs_astar::structures::graph::AdjacencyListGraph::new::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;(usize,f64),alloc::vec::Vec&lt;(usize,f64)&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;,fringe_vs_astar::structures::graph::AdjacencyListGraph::new::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="63.5176%" y="565" width="0.0278%" height="15" fill="rgb(234,122,0)" fg:x="2286" fg:w="1"/><text x="63.6348%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;(usize,f64),alloc::vec::Vec&lt;(usize,f64)&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;,fringe_vs_astar::structures::graph::AdjacencyListGraph::new::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="63.5176%" y="549" width="0.0278%" height="15" fill="rgb(207,146,38)" fg:x="2286" fg:w="1"/><text x="63.6348%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;,fringe_vs_astar::structures::graph::AdjacencyListGraph::new::{{closure}}&gt;&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="63.5176%" y="533" width="0.0278%" height="15" fill="rgb(207,177,25)" fg:x="2286" fg:w="1"/><text x="63.6348%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.03%)</title><rect x="63.5176%" y="517" width="0.0278%" height="15" fill="rgb(211,178,42)" fg:x="2286" fg:w="1"/><text x="63.6348%" y="527.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="63.5176%" y="501" width="0.0278%" height="15" fill="rgb(230,69,54)" fg:x="2286" fg:w="1"/><text x="63.6348%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="63.5454%" y="645" width="0.0278%" height="15" fill="rgb(214,135,41)" fg:x="2287" fg:w="1"/><text x="63.6626%" y="655.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="63.5454%" y="629" width="0.0278%" height="15" fill="rgb(237,67,25)" fg:x="2287" fg:w="1"/><text x="63.6626%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="63.5454%" y="613" width="0.0278%" height="15" fill="rgb(222,189,50)" fg:x="2287" fg:w="1"/><text x="63.6626%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="63.5454%" y="597" width="0.0278%" height="15" fill="rgb(245,148,34)" fg:x="2287" fg:w="1"/><text x="63.6626%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="63.5454%" y="581" width="0.0278%" height="15" fill="rgb(222,29,6)" fg:x="2287" fg:w="1"/><text x="63.6626%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="63.6010%" y="597" width="0.0556%" height="15" fill="rgb(221,189,43)" fg:x="2289" fg:w="2"/><text x="63.7182%" y="607.50"></text></g><g><title>alloc_perturb (1 samples, 0.03%)</title><rect x="66.3240%" y="501" width="0.0278%" height="15" fill="rgb(207,36,27)" fg:x="2387" fg:w="1"/><text x="66.4412%" y="511.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="66.4351%" y="469" width="0.0278%" height="15" fill="rgb(217,90,24)" fg:x="2391" fg:w="1"/><text x="66.5523%" y="479.50"></text></g><g><title>access_error (2 samples, 0.06%)</title><rect x="66.4629%" y="469" width="0.0556%" height="15" fill="rgb(224,66,35)" fg:x="2392" fg:w="2"/><text x="66.5801%" y="479.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="66.5463%" y="453" width="0.0278%" height="15" fill="rgb(221,13,50)" fg:x="2395" fg:w="1"/><text x="66.6635%" y="463.50"></text></g><g><title>down_read_trylock (6 samples, 0.17%)</title><rect x="66.5740%" y="453" width="0.1667%" height="15" fill="rgb(236,68,49)" fg:x="2396" fg:w="6"/><text x="66.6912%" y="463.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.06%)</title><rect x="67.0742%" y="389" width="0.0556%" height="15" fill="rgb(229,146,28)" fg:x="2414" fg:w="2"/><text x="67.1914%" y="399.50"></text></g><g><title>blk_cgroup_congested (2 samples, 0.06%)</title><rect x="67.0742%" y="373" width="0.0556%" height="15" fill="rgb(225,31,38)" fg:x="2414" fg:w="2"/><text x="67.1914%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="67.3243%" y="373" width="0.0278%" height="15" fill="rgb(250,208,3)" fg:x="2423" fg:w="1"/><text x="67.4414%" y="383.50"></text></g><g><title>__rcu_read_unlock (35 samples, 0.97%)</title><rect x="67.3520%" y="373" width="0.9725%" height="15" fill="rgb(246,54,23)" fg:x="2424" fg:w="35"/><text x="67.4692%" y="383.50">_..</text></g><g><title>__count_memcg_events (5 samples, 0.14%)</title><rect x="68.4912%" y="357" width="0.1389%" height="15" fill="rgb(243,76,11)" fg:x="2465" fg:w="5"/><text x="68.6084%" y="367.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.06%)</title><rect x="68.5746%" y="341" width="0.0556%" height="15" fill="rgb(245,21,50)" fg:x="2468" fg:w="2"/><text x="68.6918%" y="351.50"></text></g><g><title>charge_memcg (22 samples, 0.61%)</title><rect x="68.3245%" y="373" width="0.6113%" height="15" fill="rgb(228,9,43)" fg:x="2459" fg:w="22"/><text x="68.4417%" y="383.50"></text></g><g><title>try_charge_memcg (11 samples, 0.31%)</title><rect x="68.6302%" y="357" width="0.3056%" height="15" fill="rgb(208,100,47)" fg:x="2470" fg:w="11"/><text x="68.7474%" y="367.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="68.9080%" y="341" width="0.0278%" height="15" fill="rgb(232,26,8)" fg:x="2480" fg:w="1"/><text x="69.0252%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (12 samples, 0.33%)</title><rect x="68.9358%" y="373" width="0.3334%" height="15" fill="rgb(216,166,38)" fg:x="2481" fg:w="12"/><text x="69.0530%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="69.2415%" y="357" width="0.0278%" height="15" fill="rgb(251,202,51)" fg:x="2492" fg:w="1"/><text x="69.3586%" y="367.50"></text></g><g><title>__mem_cgroup_charge (79 samples, 2.20%)</title><rect x="67.1298%" y="389" width="2.1951%" height="15" fill="rgb(254,216,34)" fg:x="2416" fg:w="79"/><text x="67.2469%" y="399.50">__mem..</text></g><g><title>try_charge_memcg (2 samples, 0.06%)</title><rect x="69.2692%" y="373" width="0.0556%" height="15" fill="rgb(251,32,27)" fg:x="2493" fg:w="2"/><text x="69.3864%" y="383.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.06%)</title><rect x="69.3248%" y="389" width="0.0556%" height="15" fill="rgb(208,127,28)" fg:x="2495" fg:w="2"/><text x="69.4420%" y="399.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="69.3804%" y="389" width="0.0278%" height="15" fill="rgb(224,137,22)" fg:x="2497" fg:w="1"/><text x="69.4976%" y="399.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="69.4082%" y="389" width="0.0278%" height="15" fill="rgb(254,70,32)" fg:x="2498" fg:w="1"/><text x="69.5254%" y="399.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="69.6027%" y="341" width="0.0278%" height="15" fill="rgb(229,75,37)" fg:x="2505" fg:w="1"/><text x="69.7199%" y="351.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.03%)</title><rect x="69.6305%" y="341" width="0.0278%" height="15" fill="rgb(252,64,23)" fg:x="2506" fg:w="1"/><text x="69.7476%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="69.6305%" y="325" width="0.0278%" height="15" fill="rgb(232,162,48)" fg:x="2506" fg:w="1"/><text x="69.7476%" y="335.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="69.6305%" y="309" width="0.0278%" height="15" fill="rgb(246,160,12)" fg:x="2506" fg:w="1"/><text x="69.7476%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="69.9083%" y="293" width="0.0278%" height="15" fill="rgb(247,166,0)" fg:x="2516" fg:w="1"/><text x="70.0255%" y="303.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="69.9083%" y="277" width="0.0278%" height="15" fill="rgb(249,219,21)" fg:x="2516" fg:w="1"/><text x="70.0255%" y="287.50"></text></g><g><title>lru_add_fn (11 samples, 0.31%)</title><rect x="69.6582%" y="341" width="0.3056%" height="15" fill="rgb(205,209,3)" fg:x="2507" fg:w="11"/><text x="69.7754%" y="351.50"></text></g><g><title>lru_gen_add_folio (7 samples, 0.19%)</title><rect x="69.7694%" y="325" width="0.1945%" height="15" fill="rgb(243,44,1)" fg:x="2511" fg:w="7"/><text x="69.8866%" y="335.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.11%)</title><rect x="69.8527%" y="309" width="0.1111%" height="15" fill="rgb(206,159,16)" fg:x="2514" fg:w="4"/><text x="69.9699%" y="319.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="69.9361%" y="293" width="0.0278%" height="15" fill="rgb(244,77,30)" fg:x="2517" fg:w="1"/><text x="70.0533%" y="303.50"></text></g><g><title>folio_add_lru_vma (23 samples, 0.64%)</title><rect x="69.4360%" y="389" width="0.6391%" height="15" fill="rgb(218,69,12)" fg:x="2499" fg:w="23"/><text x="69.5531%" y="399.50"></text></g><g><title>folio_add_lru (23 samples, 0.64%)</title><rect x="69.4360%" y="373" width="0.6391%" height="15" fill="rgb(212,87,7)" fg:x="2499" fg:w="23"/><text x="69.5531%" y="383.50"></text></g><g><title>folio_batch_move_lru (20 samples, 0.56%)</title><rect x="69.5193%" y="357" width="0.5557%" height="15" fill="rgb(245,114,25)" fg:x="2502" fg:w="20"/><text x="69.6365%" y="367.50"></text></g><g><title>release_pages (4 samples, 0.11%)</title><rect x="69.9639%" y="341" width="0.1111%" height="15" fill="rgb(210,61,42)" fg:x="2518" fg:w="4"/><text x="70.0811%" y="351.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.08%)</title><rect x="70.0750%" y="389" width="0.0834%" height="15" fill="rgb(211,52,33)" fg:x="2522" fg:w="3"/><text x="70.1922%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.08%)</title><rect x="70.0750%" y="373" width="0.0834%" height="15" fill="rgb(234,58,33)" fg:x="2522" fg:w="3"/><text x="70.1922%" y="383.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.08%)</title><rect x="70.0750%" y="357" width="0.0834%" height="15" fill="rgb(220,115,36)" fg:x="2522" fg:w="3"/><text x="70.1922%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.08%)</title><rect x="70.0750%" y="341" width="0.0834%" height="15" fill="rgb(243,153,54)" fg:x="2522" fg:w="3"/><text x="70.1922%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="70.1306%" y="325" width="0.0278%" height="15" fill="rgb(251,47,18)" fg:x="2524" fg:w="1"/><text x="70.2478%" y="335.50"></text></g><g><title>inc_mm_counter (2 samples, 0.06%)</title><rect x="70.1584%" y="389" width="0.0556%" height="15" fill="rgb(242,102,42)" fg:x="2525" fg:w="2"/><text x="70.2756%" y="399.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.06%)</title><rect x="70.1584%" y="373" width="0.0556%" height="15" fill="rgb(234,31,38)" fg:x="2525" fg:w="2"/><text x="70.2756%" y="383.50"></text></g><g><title>pfn_pte (1 samples, 0.03%)</title><rect x="70.2139%" y="389" width="0.0278%" height="15" fill="rgb(221,117,51)" fg:x="2527" fg:w="1"/><text x="70.3311%" y="399.50"></text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="70.2417%" y="389" width="0.0278%" height="15" fill="rgb(212,20,18)" fg:x="2528" fg:w="1"/><text x="70.3589%" y="399.50"></text></g><g><title>_raw_spin_trylock (3 samples, 0.08%)</title><rect x="70.4084%" y="325" width="0.0834%" height="15" fill="rgb(245,133,36)" fg:x="2534" fg:w="3"/><text x="70.5256%" y="335.50"></text></g><g><title>clear_page_erms (3 samples, 0.08%)</title><rect x="70.4918%" y="325" width="0.0834%" height="15" fill="rgb(212,6,19)" fg:x="2537" fg:w="3"/><text x="70.6090%" y="335.50"></text></g><g><title>__alloc_pages (23 samples, 0.64%)</title><rect x="70.3529%" y="357" width="0.6391%" height="15" fill="rgb(218,1,36)" fg:x="2532" fg:w="23"/><text x="70.4701%" y="367.50"></text></g><g><title>get_page_from_freelist (23 samples, 0.64%)</title><rect x="70.3529%" y="341" width="0.6391%" height="15" fill="rgb(246,84,54)" fg:x="2532" fg:w="23"/><text x="70.4701%" y="351.50"></text></g><g><title>rmqueue (15 samples, 0.42%)</title><rect x="70.5752%" y="325" width="0.4168%" height="15" fill="rgb(242,110,6)" fg:x="2540" fg:w="15"/><text x="70.6923%" y="335.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.25%)</title><rect x="70.7419%" y="309" width="0.2501%" height="15" fill="rgb(214,47,5)" fg:x="2546" fg:w="9"/><text x="70.8591%" y="319.50"></text></g><g><title>rmqueue_bulk (6 samples, 0.17%)</title><rect x="70.8252%" y="293" width="0.1667%" height="15" fill="rgb(218,159,25)" fg:x="2549" fg:w="6"/><text x="70.9424%" y="303.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="70.9642%" y="277" width="0.0278%" height="15" fill="rgb(215,211,28)" fg:x="2554" fg:w="1"/><text x="71.0813%" y="287.50"></text></g><g><title>__folio_alloc (24 samples, 0.67%)</title><rect x="70.3529%" y="373" width="0.6669%" height="15" fill="rgb(238,59,32)" fg:x="2532" fg:w="24"/><text x="70.4701%" y="383.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="70.9919%" y="357" width="0.0278%" height="15" fill="rgb(226,82,3)" fg:x="2555" fg:w="1"/><text x="71.1091%" y="367.50"></text></g><g><title>_find_first_bit (1 samples, 0.03%)</title><rect x="71.0197%" y="373" width="0.0278%" height="15" fill="rgb(240,164,32)" fg:x="2556" fg:w="1"/><text x="71.1369%" y="383.50"></text></g><g><title>do_anonymous_page (146 samples, 4.06%)</title><rect x="67.0186%" y="405" width="4.0567%" height="15" fill="rgb(232,46,7)" fg:x="2412" fg:w="146"/><text x="67.1358%" y="415.50">do_anonymous..</text></g><g><title>vma_alloc_folio (29 samples, 0.81%)</title><rect x="70.2695%" y="389" width="0.8058%" height="15" fill="rgb(229,129,53)" fg:x="2529" fg:w="29"/><text x="70.3867%" y="399.50"></text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="71.0475%" y="373" width="0.0278%" height="15" fill="rgb(234,188,29)" fg:x="2557" fg:w="1"/><text x="71.1647%" y="383.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="71.0753%" y="405" width="0.0278%" height="15" fill="rgb(246,141,4)" fg:x="2558" fg:w="1"/><text x="71.1925%" y="415.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="71.1031%" y="405" width="0.0278%" height="15" fill="rgb(229,23,39)" fg:x="2559" fg:w="1"/><text x="71.2203%" y="415.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="71.1031%" y="389" width="0.0278%" height="15" fill="rgb(206,12,3)" fg:x="2559" fg:w="1"/><text x="71.2203%" y="399.50"></text></g><g><title>set_pte (1 samples, 0.03%)</title><rect x="71.1309%" y="405" width="0.0278%" height="15" fill="rgb(252,226,20)" fg:x="2560" fg:w="1"/><text x="71.2481%" y="415.50"></text></g><g><title>handle_pte_fault (150 samples, 4.17%)</title><rect x="67.0186%" y="421" width="4.1678%" height="15" fill="rgb(216,123,35)" fg:x="2412" fg:w="150"/><text x="67.1358%" y="431.50">handle_pte_fa..</text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="71.1587%" y="405" width="0.0278%" height="15" fill="rgb(212,68,40)" fg:x="2561" fg:w="1"/><text x="71.2758%" y="415.50"></text></g><g><title>__handle_mm_fault (159 samples, 4.42%)</title><rect x="66.7963%" y="437" width="4.4179%" height="15" fill="rgb(254,125,32)" fg:x="2404" fg:w="159"/><text x="66.9135%" y="447.50">__handle_mm_f..</text></g><g><title>pud_val (1 samples, 0.03%)</title><rect x="71.1864%" y="421" width="0.0278%" height="15" fill="rgb(253,97,22)" fg:x="2562" fg:w="1"/><text x="71.3036%" y="431.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="71.2142%" y="437" width="0.0278%" height="15" fill="rgb(241,101,14)" fg:x="2563" fg:w="1"/><text x="71.3314%" y="447.50"></text></g><g><title>handle_mm_fault (163 samples, 4.53%)</title><rect x="66.7408%" y="453" width="4.5290%" height="15" fill="rgb(238,103,29)" fg:x="2402" fg:w="163"/><text x="66.8579%" y="463.50">handle_mm_fault</text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="71.2420%" y="437" width="0.0278%" height="15" fill="rgb(233,195,47)" fg:x="2564" fg:w="1"/><text x="71.3592%" y="447.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="71.2420%" y="421" width="0.0278%" height="15" fill="rgb(246,218,30)" fg:x="2564" fg:w="1"/><text x="71.3592%" y="431.50"></text></g><g><title>do_user_addr_fault (176 samples, 4.89%)</title><rect x="66.5185%" y="469" width="4.8902%" height="15" fill="rgb(219,145,47)" fg:x="2394" fg:w="176"/><text x="66.6357%" y="479.50">do_user_addr_fa..</text></g><g><title>lock_vma_under_rcu (5 samples, 0.14%)</title><rect x="71.2698%" y="453" width="0.1389%" height="15" fill="rgb(243,12,26)" fg:x="2565" fg:w="5"/><text x="71.3870%" y="463.50"></text></g><g><title>mas_walk (4 samples, 0.11%)</title><rect x="71.2976%" y="437" width="0.1111%" height="15" fill="rgb(214,87,16)" fg:x="2566" fg:w="4"/><text x="71.4148%" y="447.50"></text></g><g><title>mtree_range_walk (4 samples, 0.11%)</title><rect x="71.2976%" y="421" width="0.1111%" height="15" fill="rgb(208,99,42)" fg:x="2566" fg:w="4"/><text x="71.4148%" y="431.50"></text></g><g><title>asm_exc_page_fault (183 samples, 5.08%)</title><rect x="66.3518%" y="501" width="5.0847%" height="15" fill="rgb(253,99,2)" fg:x="2388" fg:w="183"/><text x="66.4690%" y="511.50">asm_exc_page_fau..</text></g><g><title>exc_page_fault (181 samples, 5.03%)</title><rect x="66.4073%" y="485" width="5.0292%" height="15" fill="rgb(220,168,23)" fg:x="2390" fg:w="181"/><text x="66.5245%" y="495.50">exc_page_fault</text></g><g><title>irqentry_exit (1 samples, 0.03%)</title><rect x="71.4087%" y="469" width="0.0278%" height="15" fill="rgb(242,38,24)" fg:x="2570" fg:w="1"/><text x="71.5259%" y="479.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.03%)</title><rect x="71.4087%" y="453" width="0.0278%" height="15" fill="rgb(225,182,9)" fg:x="2570" fg:w="1"/><text x="71.5259%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="71.4087%" y="437" width="0.0278%" height="15" fill="rgb(243,178,37)" fg:x="2570" fg:w="1"/><text x="71.5259%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.14%)</title><rect x="71.4365%" y="501" width="0.1389%" height="15" fill="rgb(232,139,19)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.14%)</title><rect x="71.4365%" y="485" width="0.1389%" height="15" fill="rgb(225,201,24)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="495.50"></text></g><g><title>irqentry_exit (5 samples, 0.14%)</title><rect x="71.4365%" y="469" width="0.1389%" height="15" fill="rgb(221,47,46)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="479.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.14%)</title><rect x="71.4365%" y="453" width="0.1389%" height="15" fill="rgb(249,23,13)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.14%)</title><rect x="71.4365%" y="437" width="0.1389%" height="15" fill="rgb(219,9,5)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="447.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.14%)</title><rect x="71.4365%" y="421" width="0.1389%" height="15" fill="rgb(254,171,16)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="431.50"></text></g><g><title>schedule (5 samples, 0.14%)</title><rect x="71.4365%" y="405" width="0.1389%" height="15" fill="rgb(230,171,20)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="415.50"></text></g><g><title>__schedule (5 samples, 0.14%)</title><rect x="71.4365%" y="389" width="0.1389%" height="15" fill="rgb(210,71,41)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="399.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.14%)</title><rect x="71.4365%" y="373" width="0.1389%" height="15" fill="rgb(206,173,20)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.14%)</title><rect x="71.4365%" y="357" width="0.1389%" height="15" fill="rgb(233,88,34)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="367.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.14%)</title><rect x="71.4365%" y="341" width="0.1389%" height="15" fill="rgb(223,209,46)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="351.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.14%)</title><rect x="71.4365%" y="325" width="0.1389%" height="15" fill="rgb(250,43,18)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="335.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.14%)</title><rect x="71.4365%" y="309" width="0.1389%" height="15" fill="rgb(208,13,10)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="319.50"></text></g><g><title>native_write_msr (5 samples, 0.14%)</title><rect x="71.4365%" y="293" width="0.1389%" height="15" fill="rgb(212,200,36)" fg:x="2571" fg:w="5"/><text x="71.5537%" y="303.50"></text></g><g><title>checked_request2size (2 samples, 0.06%)</title><rect x="71.5754%" y="501" width="0.0556%" height="15" fill="rgb(225,90,30)" fg:x="2576" fg:w="2"/><text x="71.6926%" y="511.50"></text></g><g><title>error_entry (2 samples, 0.06%)</title><rect x="71.6310%" y="501" width="0.0556%" height="15" fill="rgb(236,182,39)" fg:x="2578" fg:w="2"/><text x="71.7482%" y="511.50"></text></g><g><title>sync_regs (14 samples, 0.39%)</title><rect x="71.6866%" y="501" width="0.3890%" height="15" fill="rgb(212,144,35)" fg:x="2580" fg:w="14"/><text x="71.8038%" y="511.50"></text></g><g><title>check_brk_limits (1 samples, 0.03%)</title><rect x="72.1311%" y="341" width="0.0278%" height="15" fill="rgb(228,63,44)" fg:x="2596" fg:w="1"/><text x="72.2483%" y="351.50"></text></g><g><title>get_unmapped_area (1 samples, 0.03%)</title><rect x="72.1311%" y="325" width="0.0278%" height="15" fill="rgb(228,109,6)" fg:x="2596" fg:w="1"/><text x="72.2483%" y="335.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.03%)</title><rect x="72.1311%" y="309" width="0.0278%" height="15" fill="rgb(238,117,24)" fg:x="2596" fg:w="1"/><text x="72.2483%" y="319.50"></text></g><g><title>mas_preallocate (3 samples, 0.08%)</title><rect x="72.1589%" y="325" width="0.0834%" height="15" fill="rgb(242,26,26)" fg:x="2597" fg:w="3"/><text x="72.2761%" y="335.50"></text></g><g><title>mas_alloc_nodes (3 samples, 0.08%)</title><rect x="72.1589%" y="309" width="0.0834%" height="15" fill="rgb(221,92,48)" fg:x="2597" fg:w="3"/><text x="72.2761%" y="319.50"></text></g><g><title>kmem_cache_alloc_bulk (3 samples, 0.08%)</title><rect x="72.1589%" y="293" width="0.0834%" height="15" fill="rgb(209,209,32)" fg:x="2597" fg:w="3"/><text x="72.2761%" y="303.50"></text></g><g><title>__kmem_cache_alloc_bulk (3 samples, 0.08%)</title><rect x="72.1589%" y="277" width="0.0834%" height="15" fill="rgb(221,70,22)" fg:x="2597" fg:w="3"/><text x="72.2761%" y="287.50"></text></g><g><title>___slab_alloc (2 samples, 0.06%)</title><rect x="72.1867%" y="261" width="0.0556%" height="15" fill="rgb(248,145,5)" fg:x="2598" fg:w="2"/><text x="72.3039%" y="271.50"></text></g><g><title>__slab_free (1 samples, 0.03%)</title><rect x="72.2423%" y="261" width="0.0278%" height="15" fill="rgb(226,116,26)" fg:x="2600" fg:w="1"/><text x="72.3595%" y="271.50"></text></g><g><title>build_detached_freelist (1 samples, 0.03%)</title><rect x="72.2701%" y="261" width="0.0278%" height="15" fill="rgb(244,5,17)" fg:x="2601" fg:w="1"/><text x="72.3873%" y="271.50"></text></g><g><title>mas_destroy (3 samples, 0.08%)</title><rect x="72.2423%" y="309" width="0.0834%" height="15" fill="rgb(252,159,33)" fg:x="2600" fg:w="3"/><text x="72.3595%" y="319.50"></text></g><g><title>kmem_cache_free_bulk (3 samples, 0.08%)</title><rect x="72.2423%" y="293" width="0.0834%" height="15" fill="rgb(206,71,0)" fg:x="2600" fg:w="3"/><text x="72.3595%" y="303.50"></text></g><g><title>kmem_cache_free_bulk.part.0 (3 samples, 0.08%)</title><rect x="72.2423%" y="277" width="0.0834%" height="15" fill="rgb(233,118,54)" fg:x="2600" fg:w="3"/><text x="72.3595%" y="287.50"></text></g><g><title>cache_from_obj (1 samples, 0.03%)</title><rect x="72.2979%" y="261" width="0.0278%" height="15" fill="rgb(234,83,48)" fg:x="2602" fg:w="1"/><text x="72.4150%" y="271.50"></text></g><g><title>mas_store_prealloc (4 samples, 0.11%)</title><rect x="72.2423%" y="325" width="0.1111%" height="15" fill="rgb(228,3,54)" fg:x="2600" fg:w="4"/><text x="72.3595%" y="335.50"></text></g><g><title>mas_wr_store_entry.isra.0 (1 samples, 0.03%)</title><rect x="72.3256%" y="309" width="0.0278%" height="15" fill="rgb(226,155,13)" fg:x="2603" fg:w="1"/><text x="72.4428%" y="319.50"></text></g><g><title>mas_wr_modify (1 samples, 0.03%)</title><rect x="72.3256%" y="293" width="0.0278%" height="15" fill="rgb(241,28,37)" fg:x="2603" fg:w="1"/><text x="72.4428%" y="303.50"></text></g><g><title>mas_update_gap.part.0 (1 samples, 0.03%)</title><rect x="72.3256%" y="277" width="0.0278%" height="15" fill="rgb(233,93,10)" fg:x="2603" fg:w="1"/><text x="72.4428%" y="287.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="72.3534%" y="277" width="0.0278%" height="15" fill="rgb(225,113,19)" fg:x="2604" fg:w="1"/><text x="72.4706%" y="287.50"></text></g><g><title>__glibc_morecore (13 samples, 0.36%)</title><rect x="72.0756%" y="485" width="0.3612%" height="15" fill="rgb(241,2,18)" fg:x="2594" fg:w="13"/><text x="72.1928%" y="495.50"></text></g><g><title>__GI___sbrk (13 samples, 0.36%)</title><rect x="72.0756%" y="469" width="0.3612%" height="15" fill="rgb(228,207,21)" fg:x="2594" fg:w="13"/><text x="72.1928%" y="479.50"></text></g><g><title>__GI___sbrk (13 samples, 0.36%)</title><rect x="72.0756%" y="453" width="0.3612%" height="15" fill="rgb(213,211,35)" fg:x="2594" fg:w="13"/><text x="72.1928%" y="463.50"></text></g><g><title>__brk (13 samples, 0.36%)</title><rect x="72.0756%" y="437" width="0.3612%" height="15" fill="rgb(209,83,10)" fg:x="2594" fg:w="13"/><text x="72.1928%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.33%)</title><rect x="72.1034%" y="421" width="0.3334%" height="15" fill="rgb(209,164,1)" fg:x="2595" fg:w="12"/><text x="72.2205%" y="431.50"></text></g><g><title>do_syscall_64 (12 samples, 0.33%)</title><rect x="72.1034%" y="405" width="0.3334%" height="15" fill="rgb(213,184,43)" fg:x="2595" fg:w="12"/><text x="72.2205%" y="415.50"></text></g><g><title>x64_sys_call (12 samples, 0.33%)</title><rect x="72.1034%" y="389" width="0.3334%" height="15" fill="rgb(231,61,34)" fg:x="2595" fg:w="12"/><text x="72.2205%" y="399.50"></text></g><g><title>__x64_sys_brk (12 samples, 0.33%)</title><rect x="72.1034%" y="373" width="0.3334%" height="15" fill="rgb(235,75,3)" fg:x="2595" fg:w="12"/><text x="72.2205%" y="383.50"></text></g><g><title>__do_sys_brk (12 samples, 0.33%)</title><rect x="72.1034%" y="357" width="0.3334%" height="15" fill="rgb(220,106,47)" fg:x="2595" fg:w="12"/><text x="72.2205%" y="367.50"></text></g><g><title>do_brk_flags (10 samples, 0.28%)</title><rect x="72.1589%" y="341" width="0.2779%" height="15" fill="rgb(210,196,33)" fg:x="2597" fg:w="10"/><text x="72.2761%" y="351.50"></text></g><g><title>perf_event_mmap (3 samples, 0.08%)</title><rect x="72.3534%" y="325" width="0.0834%" height="15" fill="rgb(229,154,42)" fg:x="2604" fg:w="3"/><text x="72.4706%" y="335.50"></text></g><g><title>perf_event_mmap_event (3 samples, 0.08%)</title><rect x="72.3534%" y="309" width="0.0834%" height="15" fill="rgb(228,114,26)" fg:x="2604" fg:w="3"/><text x="72.4706%" y="319.50"></text></g><g><title>perf_iterate_sb (3 samples, 0.08%)</title><rect x="72.3534%" y="293" width="0.0834%" height="15" fill="rgb(208,144,1)" fg:x="2604" fg:w="3"/><text x="72.4706%" y="303.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.06%)</title><rect x="72.3812%" y="277" width="0.0556%" height="15" fill="rgb(239,112,37)" fg:x="2605" fg:w="2"/><text x="72.4984%" y="287.50"></text></g><g><title>perf_event_mmap_output (2 samples, 0.06%)</title><rect x="72.3812%" y="261" width="0.0556%" height="15" fill="rgb(210,96,50)" fg:x="2605" fg:w="2"/><text x="72.4984%" y="271.50"></text></g><g><title>perf_output_copy (2 samples, 0.06%)</title><rect x="72.3812%" y="245" width="0.0556%" height="15" fill="rgb(222,178,2)" fg:x="2605" fg:w="2"/><text x="72.4984%" y="255.50"></text></g><g><title>__memcpy (1 samples, 0.03%)</title><rect x="72.4090%" y="229" width="0.0278%" height="15" fill="rgb(226,74,18)" fg:x="2606" fg:w="1"/><text x="72.5262%" y="239.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="72.4368%" y="373" width="0.0278%" height="15" fill="rgb(225,67,54)" fg:x="2607" fg:w="1"/><text x="72.5540%" y="383.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="72.4368%" y="357" width="0.0278%" height="15" fill="rgb(251,92,32)" fg:x="2607" fg:w="1"/><text x="72.5540%" y="367.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="72.4368%" y="341" width="0.0278%" height="15" fill="rgb(228,149,22)" fg:x="2607" fg:w="1"/><text x="72.5540%" y="351.50"></text></g><g><title>folio_add_lru_vma (2 samples, 0.06%)</title><rect x="72.4646%" y="373" width="0.0556%" height="15" fill="rgb(243,54,13)" fg:x="2608" fg:w="2"/><text x="72.5818%" y="383.50"></text></g><g><title>folio_add_lru (2 samples, 0.06%)</title><rect x="72.4646%" y="357" width="0.0556%" height="15" fill="rgb(243,180,28)" fg:x="2608" fg:w="2"/><text x="72.5818%" y="367.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.03%)</title><rect x="72.4924%" y="341" width="0.0278%" height="15" fill="rgb(208,167,24)" fg:x="2609" fg:w="1"/><text x="72.6095%" y="351.50"></text></g><g><title>lru_add_fn (1 samples, 0.03%)</title><rect x="72.4924%" y="325" width="0.0278%" height="15" fill="rgb(245,73,45)" fg:x="2609" fg:w="1"/><text x="72.6095%" y="335.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.03%)</title><rect x="72.4924%" y="309" width="0.0278%" height="15" fill="rgb(237,203,48)" fg:x="2609" fg:w="1"/><text x="72.6095%" y="319.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.11%)</title><rect x="72.4368%" y="421" width="0.1111%" height="15" fill="rgb(211,197,16)" fg:x="2607" fg:w="4"/><text x="72.5540%" y="431.50"></text></g><g><title>handle_pte_fault (4 samples, 0.11%)</title><rect x="72.4368%" y="405" width="0.1111%" height="15" fill="rgb(243,99,51)" fg:x="2607" fg:w="4"/><text x="72.5540%" y="415.50"></text></g><g><title>do_anonymous_page (4 samples, 0.11%)</title><rect x="72.4368%" y="389" width="0.1111%" height="15" fill="rgb(215,123,29)" fg:x="2607" fg:w="4"/><text x="72.5540%" y="399.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="72.5201%" y="373" width="0.0278%" height="15" fill="rgb(239,186,37)" fg:x="2610" fg:w="1"/><text x="72.6373%" y="383.50"></text></g><g><title>handle_mm_fault (5 samples, 0.14%)</title><rect x="72.4368%" y="437" width="0.1389%" height="15" fill="rgb(252,136,39)" fg:x="2607" fg:w="5"/><text x="72.5540%" y="447.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="72.5479%" y="421" width="0.0278%" height="15" fill="rgb(223,213,32)" fg:x="2611" fg:w="1"/><text x="72.6651%" y="431.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="72.5479%" y="405" width="0.0278%" height="15" fill="rgb(233,115,5)" fg:x="2611" fg:w="1"/><text x="72.6651%" y="415.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="72.5479%" y="389" width="0.0278%" height="15" fill="rgb(207,226,44)" fg:x="2611" fg:w="1"/><text x="72.6651%" y="399.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.17%)</title><rect x="72.4368%" y="485" width="0.1667%" height="15" fill="rgb(208,126,0)" fg:x="2607" fg:w="6"/><text x="72.5540%" y="495.50"></text></g><g><title>exc_page_fault (6 samples, 0.17%)</title><rect x="72.4368%" y="469" width="0.1667%" height="15" fill="rgb(244,66,21)" fg:x="2607" fg:w="6"/><text x="72.5540%" y="479.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.17%)</title><rect x="72.4368%" y="453" width="0.1667%" height="15" fill="rgb(222,97,12)" fg:x="2607" fg:w="6"/><text x="72.5540%" y="463.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.03%)</title><rect x="72.5757%" y="437" width="0.0278%" height="15" fill="rgb(219,213,19)" fg:x="2612" fg:w="1"/><text x="72.6929%" y="447.50"></text></g><g><title>mas_walk (1 samples, 0.03%)</title><rect x="72.5757%" y="421" width="0.0278%" height="15" fill="rgb(252,169,30)" fg:x="2612" fg:w="1"/><text x="72.6929%" y="431.50"></text></g><g><title>mtree_range_walk (1 samples, 0.03%)</title><rect x="72.5757%" y="405" width="0.0278%" height="15" fill="rgb(206,32,51)" fg:x="2612" fg:w="1"/><text x="72.6929%" y="415.50"></text></g><g><title>_int_malloc (312 samples, 8.67%)</title><rect x="63.9622%" y="517" width="8.6691%" height="15" fill="rgb(250,172,42)" fg:x="2302" fg:w="312"/><text x="64.0794%" y="527.50">_int_malloc</text></g><g><title>sysmalloc (20 samples, 0.56%)</title><rect x="72.0756%" y="501" width="0.5557%" height="15" fill="rgb(209,34,43)" fg:x="2594" fg:w="20"/><text x="72.1928%" y="511.50"></text></g><g><title>sync_regs (1 samples, 0.03%)</title><rect x="72.6035%" y="485" width="0.0278%" height="15" fill="rgb(223,11,35)" fg:x="2613" fg:w="1"/><text x="72.7207%" y="495.50"></text></g><g><title>arena_for_chunk (3 samples, 0.08%)</title><rect x="72.6313%" y="517" width="0.0834%" height="15" fill="rgb(251,219,26)" fg:x="2614" fg:w="3"/><text x="72.7485%" y="527.50"></text></g><g><title>__GI___libc_malloc (332 samples, 9.22%)</title><rect x="63.7677%" y="533" width="9.2248%" height="15" fill="rgb(231,119,3)" fg:x="2295" fg:w="332"/><text x="63.8849%" y="543.50">__GI___libc_malloc</text></g><g><title>checked_request2size (10 samples, 0.28%)</title><rect x="72.7146%" y="517" width="0.2779%" height="15" fill="rgb(216,97,11)" fg:x="2617" fg:w="10"/><text x="72.8318%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (435 samples, 12.09%)</title><rect x="60.9614%" y="709" width="12.0867%" height="15" fill="rgb(223,59,9)" fg:x="2194" fg:w="435"/><text x="61.0786%" y="719.50">core::iter::traits::iterator::Iterator::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (435 samples, 12.09%)</title><rect x="60.9614%" y="693" width="12.0867%" height="15" fill="rgb(233,93,31)" fg:x="2194" fg:w="435"/><text x="61.0786%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (435 samples, 12.09%)</title><rect x="60.9614%" y="677" width="12.0867%" height="15" fill="rgb(239,81,33)" fg:x="2194" fg:w="435"/><text x="61.0786%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (435 samples, 12.09%)</title><rect x="60.9614%" y="661" width="12.0867%" height="15" fill="rgb(213,120,34)" fg:x="2194" fg:w="435"/><text x="61.0786%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_f..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (341 samples, 9.47%)</title><rect x="63.5732%" y="645" width="9.4749%" height="15" fill="rgb(243,49,53)" fg:x="2288" fg:w="341"/><text x="63.6904%" y="655.50">alloc::vec::Vec&lt;T&gt;::with_capacity</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (341 samples, 9.47%)</title><rect x="63.5732%" y="629" width="9.4749%" height="15" fill="rgb(247,216,33)" fg:x="2288" fg:w="341"/><text x="63.6904%" y="639.50">alloc::vec::Vec&lt;T,A&gt;::with_capac..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (340 samples, 9.45%)</title><rect x="63.6010%" y="613" width="9.4471%" height="15" fill="rgb(226,26,14)" fg:x="2289" fg:w="340"/><text x="63.7182%" y="623.50">alloc::raw_vec::RawVec&lt;T,A&gt;::wit..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (338 samples, 9.39%)</title><rect x="63.6566%" y="597" width="9.3915%" height="15" fill="rgb(215,49,53)" fg:x="2291" fg:w="338"/><text x="63.7738%" y="607.50">alloc::raw_vec::RawVec&lt;T,A&gt;::tr..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (336 samples, 9.34%)</title><rect x="63.7121%" y="581" width="9.3359%" height="15" fill="rgb(245,162,40)" fg:x="2293" fg:w="336"/><text x="63.8293%" y="591.50">&lt;alloc::alloc::Global as core::..</text></g><g><title>alloc::alloc::Global::alloc_impl (336 samples, 9.34%)</title><rect x="63.7121%" y="565" width="9.3359%" height="15" fill="rgb(229,68,17)" fg:x="2293" fg:w="336"/><text x="63.8293%" y="575.50">alloc::alloc::Global::alloc_impl</text></g><g><title>alloc::alloc::alloc (336 samples, 9.34%)</title><rect x="63.7121%" y="549" width="9.3359%" height="15" fill="rgb(213,182,10)" fg:x="2293" fg:w="336"/><text x="63.8293%" y="559.50">alloc::alloc::alloc</text></g><g><title>__rdl_alloc (2 samples, 0.06%)</title><rect x="72.9925%" y="533" width="0.0556%" height="15" fill="rgb(245,125,30)" fg:x="2627" fg:w="2"/><text x="73.1097%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (4 samples, 0.11%)</title><rect x="73.0481%" y="709" width="0.1111%" height="15" fill="rgb(232,202,2)" fg:x="2629" fg:w="4"/><text x="73.1653%" y="719.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (4 samples, 0.11%)</title><rect x="73.0481%" y="693" width="0.1111%" height="15" fill="rgb(237,140,51)" fg:x="2629" fg:w="4"/><text x="73.1653%" y="703.50"></text></g><g><title>_int_free (33 samples, 0.92%)</title><rect x="73.4093%" y="613" width="0.9169%" height="15" fill="rgb(236,157,25)" fg:x="2642" fg:w="33"/><text x="73.5265%" y="623.50">_..</text></g><g><title>free_perturb (1 samples, 0.03%)</title><rect x="74.2984%" y="597" width="0.0278%" height="15" fill="rgb(219,209,0)" fg:x="2674" fg:w="1"/><text x="74.4156%" y="607.50"></text></g><g><title>__GI___libc_free (44 samples, 1.22%)</title><rect x="73.1870%" y="629" width="1.2226%" height="15" fill="rgb(240,116,54)" fg:x="2634" fg:w="44"/><text x="73.3042%" y="639.50">__..</text></g><g><title>arena_for_chunk (3 samples, 0.08%)</title><rect x="74.3262%" y="613" width="0.0834%" height="15" fill="rgb(216,10,36)" fg:x="2675" fg:w="3"/><text x="74.4434%" y="623.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.11%)</title><rect x="74.4096%" y="629" width="0.1111%" height="15" fill="rgb(222,72,44)" fg:x="2678" fg:w="4"/><text x="74.5267%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 1.36%)</title><rect x="73.1870%" y="645" width="1.3615%" height="15" fill="rgb(232,159,9)" fg:x="2634" fg:w="49"/><text x="73.3042%" y="655.50">al..</text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="74.5207%" y="629" width="0.0278%" height="15" fill="rgb(210,39,32)" fg:x="2682" fg:w="1"/><text x="74.6379%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (53 samples, 1.47%)</title><rect x="73.1870%" y="661" width="1.4726%" height="15" fill="rgb(216,194,45)" fg:x="2634" fg:w="53"/><text x="73.3042%" y="671.50">&lt;al..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (4 samples, 0.11%)</title><rect x="74.5485%" y="645" width="0.1111%" height="15" fill="rgb(218,18,35)" fg:x="2683" fg:w="4"/><text x="74.6657%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (55 samples, 1.53%)</title><rect x="73.1592%" y="709" width="1.5282%" height="15" fill="rgb(207,83,51)" fg:x="2633" fg:w="55"/><text x="73.2764%" y="719.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (55 samples, 1.53%)</title><rect x="73.1592%" y="693" width="1.5282%" height="15" fill="rgb(225,63,43)" fg:x="2633" fg:w="55"/><text x="73.2764%" y="703.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 1.53%)</title><rect x="73.1592%" y="677" width="1.5282%" height="15" fill="rgb(207,57,36)" fg:x="2633" fg:w="55"/><text x="73.2764%" y="687.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="74.6596%" y="661" width="0.0278%" height="15" fill="rgb(216,99,33)" fg:x="2687" fg:w="1"/><text x="74.7768%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.03%)</title><rect x="74.6596%" y="645" width="0.0278%" height="15" fill="rgb(225,42,16)" fg:x="2687" fg:w="1"/><text x="74.7768%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (7 samples, 0.19%)</title><rect x="74.6874%" y="709" width="0.1945%" height="15" fill="rgb(220,201,45)" fg:x="2688" fg:w="7"/><text x="74.8046%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (7 samples, 0.19%)</title><rect x="74.6874%" y="693" width="0.1945%" height="15" fill="rgb(225,33,4)" fg:x="2688" fg:w="7"/><text x="74.8046%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.19%)</title><rect x="74.6874%" y="677" width="0.1945%" height="15" fill="rgb(224,33,50)" fg:x="2688" fg:w="7"/><text x="74.8046%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.14%)</title><rect x="74.7430%" y="661" width="0.1389%" height="15" fill="rgb(246,198,51)" fg:x="2690" fg:w="5"/><text x="74.8602%" y="671.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (25 samples, 0.69%)</title><rect x="76.1878%" y="693" width="0.6946%" height="15" fill="rgb(205,22,4)" fg:x="2742" fg:w="25"/><text x="76.3050%" y="703.50"></text></g><g><title>checked_request2size (10 samples, 0.28%)</title><rect x="77.6049%" y="613" width="0.2779%" height="15" fill="rgb(206,3,8)" fg:x="2793" fg:w="10"/><text x="77.7221%" y="623.50"></text></g><g><title>__GI___libc_malloc (41 samples, 1.14%)</title><rect x="77.0214%" y="629" width="1.1392%" height="15" fill="rgb(251,23,15)" fg:x="2772" fg:w="41"/><text x="77.1386%" y="639.50">__..</text></g><g><title>tcache_get (10 samples, 0.28%)</title><rect x="77.8827%" y="613" width="0.2779%" height="15" fill="rgb(252,88,28)" fg:x="2803" fg:w="10"/><text x="77.9999%" y="623.50"></text></g><g><title>__rdl_alloc (8 samples, 0.22%)</title><rect x="78.1606%" y="629" width="0.2223%" height="15" fill="rgb(212,127,14)" fg:x="2813" fg:w="8"/><text x="78.2778%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (58 samples, 1.61%)</title><rect x="76.8825%" y="693" width="1.6116%" height="15" fill="rgb(247,145,37)" fg:x="2767" fg:w="58"/><text x="76.9997%" y="703.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 1.61%)</title><rect x="76.8825%" y="677" width="1.6116%" height="15" fill="rgb(209,117,53)" fg:x="2767" fg:w="58"/><text x="76.9997%" y="687.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 1.61%)</title><rect x="76.8825%" y="661" width="1.6116%" height="15" fill="rgb(212,90,42)" fg:x="2767" fg:w="58"/><text x="76.9997%" y="671.50">all..</text></g><g><title>alloc::alloc::alloc (58 samples, 1.61%)</title><rect x="76.8825%" y="645" width="1.6116%" height="15" fill="rgb(218,164,37)" fg:x="2767" fg:w="58"/><text x="76.9997%" y="655.50">all..</text></g><g><title>__rust_alloc (4 samples, 0.11%)</title><rect x="78.3829%" y="629" width="0.1111%" height="15" fill="rgb(246,65,34)" fg:x="2821" fg:w="4"/><text x="78.5001%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.03%)</title><rect x="78.4940%" y="693" width="0.0278%" height="15" fill="rgb(231,100,33)" fg:x="2825" fg:w="1"/><text x="78.6112%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.03%)</title><rect x="78.4940%" y="677" width="0.0278%" height="15" fill="rgb(228,126,14)" fg:x="2825" fg:w="1"/><text x="78.6112%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (13 samples, 0.36%)</title><rect x="78.5218%" y="693" width="0.3612%" height="15" fill="rgb(215,173,21)" fg:x="2826" fg:w="13"/><text x="78.6390%" y="703.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (13 samples, 0.36%)</title><rect x="78.5218%" y="677" width="0.3612%" height="15" fill="rgb(210,6,40)" fg:x="2826" fg:w="13"/><text x="78.6390%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.39%)</title><rect x="78.8830%" y="645" width="0.3890%" height="15" fill="rgb(212,48,18)" fg:x="2839" fg:w="14"/><text x="79.0002%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.17%)</title><rect x="79.5499%" y="613" width="0.1667%" height="15" fill="rgb(230,214,11)" fg:x="2863" fg:w="6"/><text x="79.6671%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="80.0500%" y="597" width="0.0556%" height="15" fill="rgb(254,105,39)" fg:x="2881" fg:w="2"/><text x="80.1672%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.11%)</title><rect x="80.1056%" y="549" width="0.1111%" height="15" fill="rgb(245,158,5)" fg:x="2883" fg:w="4"/><text x="80.2228%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.17%)</title><rect x="80.2167%" y="389" width="0.1667%" height="15" fill="rgb(249,208,11)" fg:x="2887" fg:w="6"/><text x="80.3339%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="80.3834%" y="389" width="0.1667%" height="15" fill="rgb(210,39,28)" fg:x="2893" fg:w="6"/><text x="80.5006%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.14%)</title><rect x="80.4112%" y="373" width="0.1389%" height="15" fill="rgb(211,56,53)" fg:x="2894" fg:w="5"/><text x="80.5284%" y="383.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.42%)</title><rect x="80.2167%" y="405" width="0.4168%" height="15" fill="rgb(226,201,30)" fg:x="2887" fg:w="15"/><text x="80.3339%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.08%)</title><rect x="80.5502%" y="389" width="0.0834%" height="15" fill="rgb(239,101,34)" fg:x="2899" fg:w="3"/><text x="80.6673%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (21 samples, 0.58%)</title><rect x="80.2167%" y="533" width="0.5835%" height="15" fill="rgb(226,209,5)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (21 samples, 0.58%)</title><rect x="80.2167%" y="517" width="0.5835%" height="15" fill="rgb(250,105,47)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.58%)</title><rect x="80.2167%" y="501" width="0.5835%" height="15" fill="rgb(230,72,3)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.58%)</title><rect x="80.2167%" y="485" width="0.5835%" height="15" fill="rgb(232,218,39)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.58%)</title><rect x="80.2167%" y="469" width="0.5835%" height="15" fill="rgb(248,166,6)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.58%)</title><rect x="80.2167%" y="453" width="0.5835%" height="15" fill="rgb(247,89,20)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (21 samples, 0.58%)</title><rect x="80.2167%" y="437" width="0.5835%" height="15" fill="rgb(248,130,54)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.58%)</title><rect x="80.2167%" y="421" width="0.5835%" height="15" fill="rgb(234,196,4)" fg:x="2887" fg:w="21"/><text x="80.3339%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (6 samples, 0.17%)</title><rect x="80.6335%" y="405" width="0.1667%" height="15" fill="rgb(250,143,31)" fg:x="2902" fg:w="6"/><text x="80.7507%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (6 samples, 0.17%)</title><rect x="80.6335%" y="389" width="0.1667%" height="15" fill="rgb(211,110,34)" fg:x="2902" fg:w="6"/><text x="80.7507%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (6 samples, 0.17%)</title><rect x="80.6335%" y="373" width="0.1667%" height="15" fill="rgb(215,124,48)" fg:x="2902" fg:w="6"/><text x="80.7507%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.44%)</title><rect x="80.8002%" y="533" width="0.4446%" height="15" fill="rgb(216,46,13)" fg:x="2908" fg:w="16"/><text x="80.9174%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="81.2448%" y="421" width="0.1389%" height="15" fill="rgb(205,184,25)" fg:x="2924" fg:w="5"/><text x="81.3620%" y="431.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (44 samples, 1.22%)</title><rect x="80.2167%" y="549" width="1.2226%" height="15" fill="rgb(228,1,10)" fg:x="2887" fg:w="44"/><text x="80.3339%" y="559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="533" width="0.1945%" height="15" fill="rgb(213,116,27)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="517" width="0.1945%" height="15" fill="rgb(241,95,50)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="501" width="0.1945%" height="15" fill="rgb(238,48,32)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="485" width="0.1945%" height="15" fill="rgb(235,113,49)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="469" width="0.1945%" height="15" fill="rgb(205,127,43)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="453" width="0.1945%" height="15" fill="rgb(250,162,2)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (7 samples, 0.19%)</title><rect x="81.2448%" y="437" width="0.1945%" height="15" fill="rgb(220,13,41)" fg:x="2924" fg:w="7"/><text x="81.3620%" y="447.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="81.3837%" y="421" width="0.0556%" height="15" fill="rgb(249,221,25)" fg:x="2929" fg:w="2"/><text x="81.5009%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.06%)</title><rect x="81.3837%" y="405" width="0.0556%" height="15" fill="rgb(215,208,19)" fg:x="2929" fg:w="2"/><text x="81.5009%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="81.3837%" y="389" width="0.0556%" height="15" fill="rgb(236,175,2)" fg:x="2929" fg:w="2"/><text x="81.5009%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.11%)</title><rect x="81.4393%" y="389" width="0.1111%" height="15" fill="rgb(241,52,2)" fg:x="2931" fg:w="4"/><text x="81.5565%" y="399.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.28%)</title><rect x="81.4393%" y="405" width="0.2779%" height="15" fill="rgb(248,140,14)" fg:x="2931" fg:w="10"/><text x="81.5565%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="81.5504%" y="389" width="0.1667%" height="15" fill="rgb(253,22,42)" fg:x="2935" fg:w="6"/><text x="81.6676%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.11%)</title><rect x="81.6060%" y="373" width="0.1111%" height="15" fill="rgb(234,61,47)" fg:x="2937" fg:w="4"/><text x="81.7232%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 1.72%)</title><rect x="80.1056%" y="597" width="1.7227%" height="15" fill="rgb(208,226,15)" fg:x="2883" fg:w="62"/><text x="80.2228%" y="607.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 1.72%)</title><rect x="80.1056%" y="581" width="1.7227%" height="15" fill="rgb(217,221,4)" fg:x="2883" fg:w="62"/><text x="80.2228%" y="591.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (62 samples, 1.72%)</title><rect x="80.1056%" y="565" width="1.7227%" height="15" fill="rgb(212,174,34)" fg:x="2883" fg:w="62"/><text x="80.2228%" y="575.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (14 samples, 0.39%)</title><rect x="81.4393%" y="549" width="0.3890%" height="15" fill="rgb(253,83,4)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (14 samples, 0.39%)</title><rect x="81.4393%" y="533" width="0.3890%" height="15" fill="rgb(250,195,49)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.39%)</title><rect x="81.4393%" y="517" width="0.3890%" height="15" fill="rgb(241,192,25)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="81.4393%" y="501" width="0.3890%" height="15" fill="rgb(208,124,10)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="81.4393%" y="485" width="0.3890%" height="15" fill="rgb(222,33,0)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="81.4393%" y="469" width="0.3890%" height="15" fill="rgb(234,209,28)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="81.4393%" y="453" width="0.3890%" height="15" fill="rgb(224,11,23)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (14 samples, 0.39%)</title><rect x="81.4393%" y="437" width="0.3890%" height="15" fill="rgb(232,99,1)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.39%)</title><rect x="81.4393%" y="421" width="0.3890%" height="15" fill="rgb(237,95,45)" fg:x="2931" fg:w="14"/><text x="81.5565%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (4 samples, 0.11%)</title><rect x="81.7171%" y="405" width="0.1111%" height="15" fill="rgb(208,109,11)" fg:x="2941" fg:w="4"/><text x="81.8343%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 0.11%)</title><rect x="81.7171%" y="389" width="0.1111%" height="15" fill="rgb(216,190,48)" fg:x="2941" fg:w="4"/><text x="81.8343%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4 samples, 0.11%)</title><rect x="81.7171%" y="373" width="0.1111%" height="15" fill="rgb(251,171,36)" fg:x="2941" fg:w="4"/><text x="81.8343%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.08%)</title><rect x="82.0506%" y="533" width="0.0834%" height="15" fill="rgb(230,62,22)" fg:x="2953" fg:w="3"/><text x="82.1678%" y="543.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.13751919992101022388 (2 samples, 0.06%)</title><rect x="82.1339%" y="533" width="0.0556%" height="15" fill="rgb(225,114,35)" fg:x="2956" fg:w="2"/><text x="82.2511%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.11%)</title><rect x="82.1895%" y="533" width="0.1111%" height="15" fill="rgb(215,118,42)" fg:x="2958" fg:w="4"/><text x="82.3067%" y="543.50"></text></g><g><title>__memcpy_evex_unaligned_erms (10 samples, 0.28%)</title><rect x="83.4121%" y="437" width="0.2779%" height="15" fill="rgb(243,119,21)" fg:x="3002" fg:w="10"/><text x="83.5292%" y="447.50"></text></g><g><title>_int_free (29 samples, 0.81%)</title><rect x="83.6899%" y="437" width="0.8058%" height="15" fill="rgb(252,177,53)" fg:x="3012" fg:w="29"/><text x="83.8071%" y="447.50"></text></g><g><title>tcache_put (4 samples, 0.11%)</title><rect x="84.3846%" y="421" width="0.1111%" height="15" fill="rgb(237,209,29)" fg:x="3037" fg:w="4"/><text x="84.5017%" y="431.50"></text></g><g><title>alloc_perturb (4 samples, 0.11%)</title><rect x="85.8850%" y="421" width="0.1111%" height="15" fill="rgb(212,65,23)" fg:x="3091" fg:w="4"/><text x="86.0022%" y="431.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="85.9961%" y="421" width="0.0278%" height="15" fill="rgb(230,222,46)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="85.9961%" y="405" width="0.0278%" height="15" fill="rgb(215,135,32)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="85.9961%" y="389" width="0.0278%" height="15" fill="rgb(246,101,22)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="85.9961%" y="373" width="0.0278%" height="15" fill="rgb(206,107,13)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="85.9961%" y="357" width="0.0278%" height="15" fill="rgb(250,100,44)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="367.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="85.9961%" y="341" width="0.0278%" height="15" fill="rgb(231,147,38)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="351.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="85.9961%" y="325" width="0.0278%" height="15" fill="rgb(229,8,40)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="335.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="85.9961%" y="309" width="0.0278%" height="15" fill="rgb(221,135,30)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="319.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="85.9961%" y="293" width="0.0278%" height="15" fill="rgb(249,193,18)" fg:x="3095" fg:w="1"/><text x="86.1133%" y="303.50"></text></g><g><title>checked_request2size (1 samples, 0.03%)</title><rect x="86.0239%" y="421" width="0.0278%" height="15" fill="rgb(209,133,39)" fg:x="3096" fg:w="1"/><text x="86.1411%" y="431.50"></text></g><g><title>_int_realloc (117 samples, 3.25%)</title><rect x="82.9119%" y="453" width="3.2509%" height="15" fill="rgb(232,100,14)" fg:x="2984" fg:w="117"/><text x="83.0291%" y="463.50">_int_real..</text></g><g><title>_int_malloc (60 samples, 1.67%)</title><rect x="84.4957%" y="437" width="1.6671%" height="15" fill="rgb(224,185,1)" fg:x="3041" fg:w="60"/><text x="84.6129%" y="447.50">_int..</text></g><g><title>tcache_put (4 samples, 0.11%)</title><rect x="86.0517%" y="421" width="0.1111%" height="15" fill="rgb(223,139,8)" fg:x="3097" fg:w="4"/><text x="86.1689%" y="431.50"></text></g><g><title>arena_for_chunk (5 samples, 0.14%)</title><rect x="86.1628%" y="453" width="0.1389%" height="15" fill="rgb(232,213,38)" fg:x="3101" fg:w="5"/><text x="86.2800%" y="463.50"></text></g><g><title>__GI___libc_realloc (147 samples, 4.08%)</title><rect x="82.3562%" y="469" width="4.0845%" height="15" fill="rgb(207,94,22)" fg:x="2964" fg:w="147"/><text x="82.4734%" y="479.50">__GI___libc_..</text></g><g><title>checked_request2size (5 samples, 0.14%)</title><rect x="86.3018%" y="453" width="0.1389%" height="15" fill="rgb(219,183,54)" fg:x="3106" fg:w="5"/><text x="86.4189%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (153 samples, 4.25%)</title><rect x="82.3562%" y="517" width="4.2512%" height="15" fill="rgb(216,185,54)" fg:x="2964" fg:w="153"/><text x="82.4734%" y="527.50">&lt;alloc::alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (153 samples, 4.25%)</title><rect x="82.3562%" y="501" width="4.2512%" height="15" fill="rgb(254,217,39)" fg:x="2964" fg:w="153"/><text x="82.4734%" y="511.50">alloc::alloc:..</text></g><g><title>alloc::alloc::realloc (153 samples, 4.25%)</title><rect x="82.3562%" y="485" width="4.2512%" height="15" fill="rgb(240,178,23)" fg:x="2964" fg:w="153"/><text x="82.4734%" y="495.50">alloc::alloc:..</text></g><g><title>__rdl_realloc (6 samples, 0.17%)</title><rect x="86.4407%" y="469" width="0.1667%" height="15" fill="rgb(218,11,47)" fg:x="3111" fg:w="6"/><text x="86.5579%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 samples, 4.36%)</title><rect x="82.3006%" y="533" width="4.3623%" height="15" fill="rgb(218,51,51)" fg:x="2962" fg:w="157"/><text x="82.4178%" y="543.50">alloc::raw_ve..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.06%)</title><rect x="86.6074%" y="517" width="0.0556%" height="15" fill="rgb(238,126,27)" fg:x="3117" fg:w="2"/><text x="86.7246%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.08%)</title><rect x="86.6630%" y="533" width="0.0834%" height="15" fill="rgb(249,202,22)" fg:x="3119" fg:w="3"/><text x="86.7801%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.08%)</title><rect x="86.6630%" y="517" width="0.0834%" height="15" fill="rgb(254,195,49)" fg:x="3119" fg:w="3"/><text x="86.7801%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="86.7463%" y="501" width="0.0278%" height="15" fill="rgb(208,123,14)" fg:x="3122" fg:w="1"/><text x="86.8635%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (179 samples, 4.97%)</title><rect x="81.8283%" y="597" width="4.9736%" height="15" fill="rgb(224,200,8)" fg:x="2945" fg:w="179"/><text x="81.9455%" y="607.50">alloc::vec::Vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (179 samples, 4.97%)</title><rect x="81.8283%" y="581" width="4.9736%" height="15" fill="rgb(217,61,36)" fg:x="2945" fg:w="179"/><text x="81.9455%" y="591.50">alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (174 samples, 4.83%)</title><rect x="81.9672%" y="565" width="4.8347%" height="15" fill="rgb(206,35,45)" fg:x="2950" fg:w="174"/><text x="82.0844%" y="575.50">alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (174 samples, 4.83%)</title><rect x="81.9672%" y="549" width="4.8347%" height="15" fill="rgb(217,65,33)" fg:x="2950" fg:w="174"/><text x="82.0844%" y="559.50">alloc::raw_vec:..</text></g><g><title>core::cmp::max (2 samples, 0.06%)</title><rect x="86.7463%" y="533" width="0.0556%" height="15" fill="rgb(222,158,48)" fg:x="3122" fg:w="2"/><text x="86.8635%" y="543.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.06%)</title><rect x="86.7463%" y="517" width="0.0556%" height="15" fill="rgb(254,2,54)" fg:x="3122" fg:w="2"/><text x="86.8635%" y="527.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="86.7741%" y="501" width="0.0278%" height="15" fill="rgb(250,143,38)" fg:x="3123" fg:w="1"/><text x="86.8913%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (11 samples, 0.31%)</title><rect x="86.8019%" y="597" width="0.3056%" height="15" fill="rgb(248,25,0)" fg:x="3124" fg:w="11"/><text x="86.9191%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="87.1075%" y="549" width="0.0556%" height="15" fill="rgb(206,152,27)" fg:x="3135" fg:w="2"/><text x="87.2247%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (6 samples, 0.17%)</title><rect x="87.1075%" y="597" width="0.1667%" height="15" fill="rgb(240,77,30)" fg:x="3135" fg:w="6"/><text x="87.2247%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (6 samples, 0.17%)</title><rect x="87.1075%" y="581" width="0.1667%" height="15" fill="rgb(231,5,3)" fg:x="3135" fg:w="6"/><text x="87.2247%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (6 samples, 0.17%)</title><rect x="87.1075%" y="565" width="0.1667%" height="15" fill="rgb(207,226,32)" fg:x="3135" fg:w="6"/><text x="87.2247%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="549" width="0.1111%" height="15" fill="rgb(222,207,47)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="533" width="0.1111%" height="15" fill="rgb(229,115,45)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="517" width="0.1111%" height="15" fill="rgb(224,191,6)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="501" width="0.1111%" height="15" fill="rgb(230,227,24)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="485" width="0.1111%" height="15" fill="rgb(228,80,19)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="469" width="0.1111%" height="15" fill="rgb(247,229,0)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="453" width="0.1111%" height="15" fill="rgb(237,194,15)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="87.1631%" y="437" width="0.1111%" height="15" fill="rgb(219,203,20)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.11%)</title><rect x="87.1631%" y="421" width="0.1111%" height="15" fill="rgb(234,128,8)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.11%)</title><rect x="87.1631%" y="405" width="0.1111%" height="15" fill="rgb(248,202,8)" fg:x="3137" fg:w="4"/><text x="87.2803%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (292 samples, 8.11%)</title><rect x="79.5499%" y="629" width="8.1134%" height="15" fill="rgb(206,104,37)" fg:x="2863" fg:w="292"/><text x="79.6671%" y="639.50">&lt;alloc::vec::Vec&lt;T,A&gt; as al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (286 samples, 7.95%)</title><rect x="79.7166%" y="613" width="7.9467%" height="15" fill="rgb(223,8,27)" fg:x="2869" fg:w="286"/><text x="79.8338%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::exte..</text></g><g><title>core::ptr::write (14 samples, 0.39%)</title><rect x="87.2742%" y="597" width="0.3890%" height="15" fill="rgb(216,217,28)" fg:x="3141" fg:w="14"/><text x="87.3914%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="87.7466%" y="453" width="0.0278%" height="15" fill="rgb(249,199,1)" fg:x="3158" fg:w="1"/><text x="87.8638%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="87.8022%" y="437" width="0.1667%" height="15" fill="rgb(240,85,17)" fg:x="3160" fg:w="6"/><text x="87.9194%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.17%)</title><rect x="87.8022%" y="421" width="0.1667%" height="15" fill="rgb(206,108,45)" fg:x="3160" fg:w="6"/><text x="87.9194%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="87.9133%" y="405" width="0.0556%" height="15" fill="rgb(245,210,41)" fg:x="3164" fg:w="2"/><text x="88.0305%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.39%)</title><rect x="87.6632%" y="613" width="0.3890%" height="15" fill="rgb(206,13,37)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (14 samples, 0.39%)</title><rect x="87.6632%" y="597" width="0.3890%" height="15" fill="rgb(250,61,18)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="607.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (14 samples, 0.39%)</title><rect x="87.6632%" y="581" width="0.3890%" height="15" fill="rgb(235,172,48)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (14 samples, 0.39%)</title><rect x="87.6632%" y="565" width="0.3890%" height="15" fill="rgb(249,201,17)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.39%)</title><rect x="87.6632%" y="549" width="0.3890%" height="15" fill="rgb(219,208,6)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="87.6632%" y="533" width="0.3890%" height="15" fill="rgb(248,31,23)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="87.6632%" y="517" width="0.3890%" height="15" fill="rgb(245,15,42)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="87.6632%" y="501" width="0.3890%" height="15" fill="rgb(222,217,39)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.39%)</title><rect x="87.6632%" y="485" width="0.3890%" height="15" fill="rgb(210,219,27)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (14 samples, 0.39%)</title><rect x="87.6632%" y="469" width="0.3890%" height="15" fill="rgb(252,166,36)" fg:x="3155" fg:w="14"/><text x="87.7804%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.28%)</title><rect x="87.7744%" y="453" width="0.2779%" height="15" fill="rgb(245,132,34)" fg:x="3159" fg:w="10"/><text x="87.8916%" y="463.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (3 samples, 0.08%)</title><rect x="87.9689%" y="437" width="0.0834%" height="15" fill="rgb(236,54,3)" fg:x="3166" fg:w="3"/><text x="88.0861%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (3 samples, 0.08%)</title><rect x="87.9689%" y="421" width="0.0834%" height="15" fill="rgb(241,173,43)" fg:x="3166" fg:w="3"/><text x="88.0861%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (3 samples, 0.08%)</title><rect x="87.9689%" y="405" width="0.0834%" height="15" fill="rgb(215,190,9)" fg:x="3166" fg:w="3"/><text x="88.0861%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.53%)</title><rect x="87.6632%" y="629" width="0.5279%" height="15" fill="rgb(242,101,16)" fg:x="3155" fg:w="19"/><text x="87.7804%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.14%)</title><rect x="88.0522%" y="613" width="0.1389%" height="15" fill="rgb(223,190,21)" fg:x="3169" fg:w="5"/><text x="88.1694%" y="623.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13 samples, 0.36%)</title><rect x="88.1912%" y="629" width="0.3612%" height="15" fill="rgb(215,228,25)" fg:x="3174" fg:w="13"/><text x="88.3084%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="88.8858%" y="501" width="0.0278%" height="15" fill="rgb(225,36,22)" fg:x="3199" fg:w="1"/><text x="89.0030%" y="511.50"></text></g><g><title>checked_request2size (3 samples, 0.08%)</title><rect x="88.9136%" y="501" width="0.0834%" height="15" fill="rgb(251,106,46)" fg:x="3200" fg:w="3"/><text x="89.0308%" y="511.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.53%)</title><rect x="88.5802%" y="517" width="0.5279%" height="15" fill="rgb(208,90,1)" fg:x="3188" fg:w="19"/><text x="88.6973%" y="527.50"></text></g><g><title>tcache_get (4 samples, 0.11%)</title><rect x="88.9969%" y="501" width="0.1111%" height="15" fill="rgb(243,10,4)" fg:x="3203" fg:w="4"/><text x="89.1141%" y="511.50"></text></g><g><title>__rdl_alloc (4 samples, 0.11%)</title><rect x="89.1081%" y="517" width="0.1111%" height="15" fill="rgb(212,137,27)" fg:x="3207" fg:w="4"/><text x="89.2253%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 0.69%)</title><rect x="88.5524%" y="629" width="0.6946%" height="15" fill="rgb(231,220,49)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.69%)</title><rect x="88.5524%" y="613" width="0.6946%" height="15" fill="rgb(237,96,20)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.69%)</title><rect x="88.5524%" y="597" width="0.6946%" height="15" fill="rgb(239,229,30)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (25 samples, 0.69%)</title><rect x="88.5524%" y="581" width="0.6946%" height="15" fill="rgb(219,65,33)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.69%)</title><rect x="88.5524%" y="565" width="0.6946%" height="15" fill="rgb(243,134,7)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.69%)</title><rect x="88.5524%" y="549" width="0.6946%" height="15" fill="rgb(216,177,54)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="559.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.69%)</title><rect x="88.5524%" y="533" width="0.6946%" height="15" fill="rgb(211,160,20)" fg:x="3187" fg:w="25"/><text x="88.6696%" y="543.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="89.2192%" y="517" width="0.0278%" height="15" fill="rgb(239,85,39)" fg:x="3211" fg:w="1"/><text x="89.3364%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (375 samples, 10.42%)</title><rect x="78.8830%" y="693" width="10.4196%" height="15" fill="rgb(232,125,22)" fg:x="2839" fg:w="375"/><text x="79.0002%" y="703.50">core::iter::traits::iterator::Itera..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (375 samples, 10.42%)</title><rect x="78.8830%" y="677" width="10.4196%" height="15" fill="rgb(244,57,34)" fg:x="2839" fg:w="375"/><text x="79.0002%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (375 samples, 10.42%)</title><rect x="78.8830%" y="661" width="10.4196%" height="15" fill="rgb(214,203,32)" fg:x="2839" fg:w="375"/><text x="79.0002%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (361 samples, 10.03%)</title><rect x="79.2720%" y="645" width="10.0306%" height="15" fill="rgb(207,58,43)" fg:x="2853" fg:w="361"/><text x="79.3892%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec:..</text></g><g><title>core::ptr::write (2 samples, 0.06%)</title><rect x="89.2470%" y="629" width="0.0556%" height="15" fill="rgb(215,193,15)" fg:x="3212" fg:w="2"/><text x="89.3642%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (7 samples, 0.19%)</title><rect x="89.3026%" y="693" width="0.1945%" height="15" fill="rgb(232,15,44)" fg:x="3214" fg:w="7"/><text x="89.4198%" y="703.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (7 samples, 0.19%)</title><rect x="89.3026%" y="677" width="0.1945%" height="15" fill="rgb(212,3,48)" fg:x="3214" fg:w="7"/><text x="89.4198%" y="687.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (7 samples, 0.19%)</title><rect x="89.3026%" y="661" width="0.1945%" height="15" fill="rgb(218,128,7)" fg:x="3214" fg:w="7"/><text x="89.4198%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (7 samples, 0.19%)</title><rect x="89.3026%" y="645" width="0.1945%" height="15" fill="rgb(226,216,39)" fg:x="3214" fg:w="7"/><text x="89.4198%" y="655.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (7 samples, 0.19%)</title><rect x="89.3026%" y="629" width="0.1945%" height="15" fill="rgb(243,47,51)" fg:x="3214" fg:w="7"/><text x="89.4198%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="89.4971%" y="693" width="0.0278%" height="15" fill="rgb(241,183,40)" fg:x="3221" fg:w="1"/><text x="89.6143%" y="703.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.03%)</title><rect x="89.4971%" y="677" width="0.0278%" height="15" fill="rgb(231,217,32)" fg:x="3221" fg:w="1"/><text x="89.6143%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (9 samples, 0.25%)</title><rect x="89.5249%" y="693" width="0.2501%" height="15" fill="rgb(229,61,38)" fg:x="3222" fg:w="9"/><text x="89.6421%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (4 samples, 0.11%)</title><rect x="89.6638%" y="677" width="0.1111%" height="15" fill="rgb(225,210,5)" fg:x="3227" fg:w="4"/><text x="89.7810%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1 samples, 0.03%)</title><rect x="89.7749%" y="661" width="0.0278%" height="15" fill="rgb(231,79,45)" fg:x="3231" fg:w="1"/><text x="89.8921%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (2 samples, 0.06%)</title><rect x="89.7749%" y="677" width="0.0556%" height="15" fill="rgb(224,100,7)" fg:x="3231" fg:w="2"/><text x="89.8921%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="89.8027%" y="661" width="0.0278%" height="15" fill="rgb(241,198,18)" fg:x="3232" fg:w="1"/><text x="89.9199%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="89.8027%" y="645" width="0.0278%" height="15" fill="rgb(252,97,53)" fg:x="3232" fg:w="1"/><text x="89.9199%" y="655.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (1 samples, 0.03%)</title><rect x="89.8027%" y="629" width="0.0278%" height="15" fill="rgb(220,88,7)" fg:x="3232" fg:w="1"/><text x="89.9199%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.11%)</title><rect x="89.7749%" y="693" width="0.1111%" height="15" fill="rgb(213,176,14)" fg:x="3231" fg:w="4"/><text x="89.8921%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (2 samples, 0.06%)</title><rect x="89.8305%" y="677" width="0.0556%" height="15" fill="rgb(246,73,7)" fg:x="3233" fg:w="2"/><text x="89.9477%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.44%)</title><rect x="89.8861%" y="693" width="0.4446%" height="15" fill="rgb(245,64,36)" fg:x="3235" fg:w="16"/><text x="90.0033%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (16 samples, 0.44%)</title><rect x="89.8861%" y="677" width="0.4446%" height="15" fill="rgb(245,80,10)" fg:x="3235" fg:w="16"/><text x="90.0033%" y="687.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (16 samples, 0.44%)</title><rect x="89.8861%" y="661" width="0.4446%" height="15" fill="rgb(232,107,50)" fg:x="3235" fg:w="16"/><text x="90.0033%" y="671.50"></text></g><g><title>_int_free (68 samples, 1.89%)</title><rect x="90.7196%" y="597" width="1.8894%" height="15" fill="rgb(253,3,0)" fg:x="3265" fg:w="68"/><text x="90.8368%" y="607.50">_int..</text></g><g><title>tcache_put (11 samples, 0.31%)</title><rect x="92.3034%" y="581" width="0.3056%" height="15" fill="rgb(212,99,53)" fg:x="3322" fg:w="11"/><text x="92.4206%" y="591.50"></text></g><g><title>__GI___libc_free (82 samples, 2.28%)</title><rect x="90.4140%" y="613" width="2.2784%" height="15" fill="rgb(249,111,54)" fg:x="3254" fg:w="82"/><text x="90.5312%" y="623.50">__GI__..</text></g><g><title>arena_for_chunk (3 samples, 0.08%)</title><rect x="92.6091%" y="597" width="0.0834%" height="15" fill="rgb(249,55,30)" fg:x="3333" fg:w="3"/><text x="92.7262%" y="607.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.28%)</title><rect x="92.6924%" y="613" width="0.2779%" height="15" fill="rgb(237,47,42)" fg:x="3336" fg:w="10"/><text x="92.8096%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99 samples, 2.75%)</title><rect x="90.4140%" y="645" width="2.7508%" height="15" fill="rgb(211,20,18)" fg:x="3254" fg:w="99"/><text x="90.5312%" y="655.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (99 samples, 2.75%)</title><rect x="90.4140%" y="629" width="2.7508%" height="15" fill="rgb(231,203,46)" fg:x="3254" fg:w="99"/><text x="90.5312%" y="639.50">alloc::..</text></g><g><title>__rust_dealloc (7 samples, 0.19%)</title><rect x="92.9703%" y="613" width="0.1945%" height="15" fill="rgb(237,142,3)" fg:x="3346" fg:w="7"/><text x="93.0875%" y="623.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (662 samples, 18.39%)</title><rect x="74.8819%" y="709" width="18.3940%" height="15" fill="rgb(241,107,1)" fg:x="2695" fg:w="662"/><text x="74.9991%" y="719.50">fringe_vs_astar::structures::graph::generate_neighbors</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (106 samples, 2.95%)</title><rect x="90.3306%" y="693" width="2.9453%" height="15" fill="rgb(229,83,13)" fg:x="3251" fg:w="106"/><text x="90.4478%" y="703.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (106 samples, 2.95%)</title><rect x="90.3306%" y="677" width="2.9453%" height="15" fill="rgb(241,91,40)" fg:x="3251" fg:w="106"/><text x="90.4478%" y="687.50">core::pt..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 2.95%)</title><rect x="90.3306%" y="661" width="2.9453%" height="15" fill="rgb(225,3,45)" fg:x="3251" fg:w="106"/><text x="90.4478%" y="671.50">&lt;alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.11%)</title><rect x="93.1648%" y="645" width="0.1111%" height="15" fill="rgb(244,223,14)" fg:x="3353" fg:w="4"/><text x="93.2820%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,451 samples, 40.32%)</title><rect x="53.4315%" y="725" width="40.3168%" height="15" fill="rgb(224,124,37)" fg:x="1923" fg:w="1451"/><text x="53.5487%" y="735.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (17 samples, 0.47%)</title><rect x="93.2759%" y="709" width="0.4724%" height="15" fill="rgb(251,171,30)" fg:x="3357" fg:w="17"/><text x="93.3931%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,454 samples, 40.40%)</title><rect x="53.4315%" y="741" width="40.4001%" height="15" fill="rgb(236,46,54)" fg:x="1923" fg:w="1454"/><text x="53.5487%" y="751.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (3 samples, 0.08%)</title><rect x="93.7483%" y="725" width="0.0834%" height="15" fill="rgb(245,213,5)" fg:x="3374" fg:w="3"/><text x="93.8655%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.39%)</title><rect x="94.0261%" y="597" width="0.3890%" height="15" fill="rgb(230,144,27)" fg:x="3384" fg:w="14"/><text x="94.1433%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="94.4151%" y="565" width="0.0278%" height="15" fill="rgb(220,86,6)" fg:x="3398" fg:w="1"/><text x="94.5323%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.4151%" y="549" width="0.0278%" height="15" fill="rgb(240,20,13)" fg:x="3398" fg:w="1"/><text x="94.5323%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (10 samples, 0.28%)</title><rect x="94.4429%" y="565" width="0.2779%" height="15" fill="rgb(217,89,34)" fg:x="3399" fg:w="10"/><text x="94.5601%" y="575.50"></text></g><g><title>_compound_head (1 samples, 0.03%)</title><rect x="94.7485%" y="133" width="0.0278%" height="15" fill="rgb(229,13,5)" fg:x="3410" fg:w="1"/><text x="94.8657%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.78%)</title><rect x="94.0261%" y="613" width="0.7780%" height="15" fill="rgb(244,67,35)" fg:x="3384" fg:w="28"/><text x="94.1433%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.39%)</title><rect x="94.4151%" y="597" width="0.3890%" height="15" fill="rgb(221,40,2)" fg:x="3398" fg:w="14"/><text x="94.5323%" y="607.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (14 samples, 0.39%)</title><rect x="94.4151%" y="581" width="0.3890%" height="15" fill="rgb(237,157,21)" fg:x="3398" fg:w="14"/><text x="94.5323%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (3 samples, 0.08%)</title><rect x="94.7208%" y="565" width="0.0834%" height="15" fill="rgb(222,94,11)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (3 samples, 0.08%)</title><rect x="94.7208%" y="549" width="0.0834%" height="15" fill="rgb(249,113,6)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="94.7208%" y="533" width="0.0834%" height="15" fill="rgb(238,137,36)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (3 samples, 0.08%)</title><rect x="94.7208%" y="517" width="0.0834%" height="15" fill="rgb(210,102,26)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="94.7208%" y="501" width="0.0834%" height="15" fill="rgb(218,30,30)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3 samples, 0.08%)</title><rect x="94.7208%" y="485" width="0.0834%" height="15" fill="rgb(214,67,26)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.08%)</title><rect x="94.7208%" y="469" width="0.0834%" height="15" fill="rgb(251,9,53)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.08%)</title><rect x="94.7208%" y="453" width="0.0834%" height="15" fill="rgb(228,204,25)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.08%)</title><rect x="94.7208%" y="437" width="0.0834%" height="15" fill="rgb(207,153,8)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="447.50"></text></g><g><title>__GI___libc_free (3 samples, 0.08%)</title><rect x="94.7208%" y="421" width="0.0834%" height="15" fill="rgb(242,9,16)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="431.50"></text></g><g><title>_int_free (3 samples, 0.08%)</title><rect x="94.7208%" y="405" width="0.0834%" height="15" fill="rgb(217,211,10)" fg:x="3409" fg:w="3"/><text x="94.8379%" y="415.50"></text></g><g><title>systrim (2 samples, 0.06%)</title><rect x="94.7485%" y="389" width="0.0556%" height="15" fill="rgb(219,228,52)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="399.50"></text></g><g><title>__glibc_morecore (2 samples, 0.06%)</title><rect x="94.7485%" y="373" width="0.0556%" height="15" fill="rgb(231,92,29)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="383.50"></text></g><g><title>__GI___sbrk (2 samples, 0.06%)</title><rect x="94.7485%" y="357" width="0.0556%" height="15" fill="rgb(232,8,23)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="367.50"></text></g><g><title>__GI___sbrk (2 samples, 0.06%)</title><rect x="94.7485%" y="341" width="0.0556%" height="15" fill="rgb(216,211,34)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="351.50"></text></g><g><title>__brk (2 samples, 0.06%)</title><rect x="94.7485%" y="325" width="0.0556%" height="15" fill="rgb(236,151,0)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="94.7485%" y="309" width="0.0556%" height="15" fill="rgb(209,168,3)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="319.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="94.7485%" y="293" width="0.0556%" height="15" fill="rgb(208,129,28)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="303.50"></text></g><g><title>x64_sys_call (2 samples, 0.06%)</title><rect x="94.7485%" y="277" width="0.0556%" height="15" fill="rgb(229,78,22)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="287.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.06%)</title><rect x="94.7485%" y="261" width="0.0556%" height="15" fill="rgb(228,187,13)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="271.50"></text></g><g><title>__do_sys_brk (2 samples, 0.06%)</title><rect x="94.7485%" y="245" width="0.0556%" height="15" fill="rgb(240,119,24)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="255.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.06%)</title><rect x="94.7485%" y="229" width="0.0556%" height="15" fill="rgb(209,194,42)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="239.50"></text></g><g><title>unmap_region (2 samples, 0.06%)</title><rect x="94.7485%" y="213" width="0.0556%" height="15" fill="rgb(247,200,46)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="223.50"></text></g><g><title>unmap_vmas (2 samples, 0.06%)</title><rect x="94.7485%" y="197" width="0.0556%" height="15" fill="rgb(218,76,16)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="207.50"></text></g><g><title>unmap_single_vma (2 samples, 0.06%)</title><rect x="94.7485%" y="181" width="0.0556%" height="15" fill="rgb(225,21,48)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="191.50"></text></g><g><title>unmap_page_range (2 samples, 0.06%)</title><rect x="94.7485%" y="165" width="0.0556%" height="15" fill="rgb(239,223,50)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="175.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.06%)</title><rect x="94.7485%" y="149" width="0.0556%" height="15" fill="rgb(244,45,21)" fg:x="3410" fg:w="2"/><text x="94.8657%" y="159.50"></text></g><g><title>zap_pte_range (1 samples, 0.03%)</title><rect x="94.7763%" y="133" width="0.0278%" height="15" fill="rgb(232,33,43)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="143.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.03%)</title><rect x="94.7763%" y="117" width="0.0278%" height="15" fill="rgb(209,8,3)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="127.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="94.7763%" y="101" width="0.0278%" height="15" fill="rgb(214,25,53)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="111.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="94.7763%" y="85" width="0.0278%" height="15" fill="rgb(254,186,54)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="95.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="94.7763%" y="69" width="0.0278%" height="15" fill="rgb(208,174,49)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="79.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.03%)</title><rect x="94.7763%" y="53" width="0.0278%" height="15" fill="rgb(233,191,51)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="63.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="94.7763%" y="37" width="0.0278%" height="15" fill="rgb(222,134,10)" fg:x="3411" fg:w="1"/><text x="94.8935%" y="47.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="94.9708%" y="325" width="0.0278%" height="15" fill="rgb(230,226,20)" fg:x="3418" fg:w="1"/><text x="95.0880%" y="335.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="94.9708%" y="309" width="0.0278%" height="15" fill="rgb(251,111,25)" fg:x="3418" fg:w="1"/><text x="95.0880%" y="319.50"></text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="94.9708%" y="293" width="0.0278%" height="15" fill="rgb(224,40,46)" fg:x="3418" fg:w="1"/><text x="95.0880%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.22%)</title><rect x="94.8041%" y="613" width="0.2223%" height="15" fill="rgb(236,108,47)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.22%)</title><rect x="94.8041%" y="597" width="0.2223%" height="15" fill="rgb(234,93,0)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.22%)</title><rect x="94.8041%" y="581" width="0.2223%" height="15" fill="rgb(224,213,32)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.22%)</title><rect x="94.8041%" y="565" width="0.2223%" height="15" fill="rgb(251,11,48)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.22%)</title><rect x="94.8041%" y="549" width="0.2223%" height="15" fill="rgb(236,173,5)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.22%)</title><rect x="94.8041%" y="533" width="0.2223%" height="15" fill="rgb(230,95,12)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.22%)</title><rect x="94.8041%" y="517" width="0.2223%" height="15" fill="rgb(232,209,1)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="527.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.22%)</title><rect x="94.8041%" y="501" width="0.2223%" height="15" fill="rgb(232,6,1)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="511.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.22%)</title><rect x="94.8041%" y="485" width="0.2223%" height="15" fill="rgb(210,224,50)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="495.50"></text></g><g><title>_int_realloc (8 samples, 0.22%)</title><rect x="94.8041%" y="469" width="0.2223%" height="15" fill="rgb(228,127,35)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="479.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.22%)</title><rect x="94.8041%" y="453" width="0.2223%" height="15" fill="rgb(245,102,45)" fg:x="3412" fg:w="8"/><text x="94.9213%" y="463.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="94.9708%" y="437" width="0.0556%" height="15" fill="rgb(214,1,49)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="447.50"></text></g><g><title>exc_page_fault (2 samples, 0.06%)</title><rect x="94.9708%" y="421" width="0.0556%" height="15" fill="rgb(226,163,40)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="431.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.06%)</title><rect x="94.9708%" y="405" width="0.0556%" height="15" fill="rgb(239,212,28)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="415.50"></text></g><g><title>handle_mm_fault (2 samples, 0.06%)</title><rect x="94.9708%" y="389" width="0.0556%" height="15" fill="rgb(220,20,13)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="399.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="94.9708%" y="373" width="0.0556%" height="15" fill="rgb(210,164,35)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="383.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="94.9708%" y="357" width="0.0556%" height="15" fill="rgb(248,109,41)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="367.50"></text></g><g><title>do_anonymous_page (2 samples, 0.06%)</title><rect x="94.9708%" y="341" width="0.0556%" height="15" fill="rgb(238,23,50)" fg:x="3418" fg:w="2"/><text x="95.0880%" y="351.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="94.9986%" y="325" width="0.0278%" height="15" fill="rgb(211,48,49)" fg:x="3419" fg:w="1"/><text x="95.1158%" y="335.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="94.9986%" y="309" width="0.0278%" height="15" fill="rgb(223,36,21)" fg:x="3419" fg:w="1"/><text x="95.1158%" y="319.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="94.9986%" y="293" width="0.0278%" height="15" fill="rgb(207,123,46)" fg:x="3419" fg:w="1"/><text x="95.1158%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="94.9986%" y="277" width="0.0278%" height="15" fill="rgb(240,218,32)" fg:x="3419" fg:w="1"/><text x="95.1158%" y="287.50"></text></g><g><title>clear_page_erms (1 samples, 0.03%)</title><rect x="94.9986%" y="261" width="0.0278%" height="15" fill="rgb(252,5,43)" fg:x="3419" fg:w="1"/><text x="95.1158%" y="271.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="95.0542%" y="485" width="0.0278%" height="15" fill="rgb(252,84,19)" fg:x="3421" fg:w="1"/><text x="95.1714%" y="495.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="95.0542%" y="469" width="0.0278%" height="15" fill="rgb(243,152,39)" fg:x="3421" fg:w="1"/><text x="95.1714%" y="479.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.03%)</title><rect x="95.0820%" y="421" width="0.0278%" height="15" fill="rgb(234,160,15)" fg:x="3422" fg:w="1"/><text x="95.1992%" y="431.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (47 samples, 1.31%)</title><rect x="93.8316%" y="725" width="1.3059%" height="15" fill="rgb(237,34,20)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="735.50">fr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 1.31%)</title><rect x="93.8316%" y="709" width="1.3059%" height="15" fill="rgb(229,97,13)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="719.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 1.31%)</title><rect x="93.8316%" y="693" width="1.3059%" height="15" fill="rgb(234,71,50)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="703.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 1.31%)</title><rect x="93.8316%" y="677" width="1.3059%" height="15" fill="rgb(253,155,4)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="687.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (47 samples, 1.31%)</title><rect x="93.8316%" y="661" width="1.3059%" height="15" fill="rgb(222,185,37)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="671.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 1.31%)</title><rect x="93.8316%" y="645" width="1.3059%" height="15" fill="rgb(251,177,13)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="655.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (47 samples, 1.31%)</title><rect x="93.8316%" y="629" width="1.3059%" height="15" fill="rgb(250,179,40)" fg:x="3377" fg:w="47"/><text x="93.9488%" y="639.50">al..</text></g><g><title>core::ptr::write (4 samples, 0.11%)</title><rect x="95.0264%" y="613" width="0.1111%" height="15" fill="rgb(242,44,2)" fg:x="3420" fg:w="4"/><text x="95.1436%" y="623.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.08%)</title><rect x="95.0542%" y="597" width="0.0834%" height="15" fill="rgb(216,177,13)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="607.50"></text></g><g><title>exc_page_fault (3 samples, 0.08%)</title><rect x="95.0542%" y="581" width="0.0834%" height="15" fill="rgb(216,106,43)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="591.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.08%)</title><rect x="95.0542%" y="565" width="0.0834%" height="15" fill="rgb(216,183,2)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="575.50"></text></g><g><title>handle_mm_fault (3 samples, 0.08%)</title><rect x="95.0542%" y="549" width="0.0834%" height="15" fill="rgb(249,75,3)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="559.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.08%)</title><rect x="95.0542%" y="533" width="0.0834%" height="15" fill="rgb(219,67,39)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="543.50"></text></g><g><title>handle_pte_fault (3 samples, 0.08%)</title><rect x="95.0542%" y="517" width="0.0834%" height="15" fill="rgb(253,228,2)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="527.50"></text></g><g><title>do_anonymous_page (3 samples, 0.08%)</title><rect x="95.0542%" y="501" width="0.0834%" height="15" fill="rgb(235,138,27)" fg:x="3421" fg:w="3"/><text x="95.1714%" y="511.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.06%)</title><rect x="95.0820%" y="485" width="0.0556%" height="15" fill="rgb(236,97,51)" fg:x="3422" fg:w="2"/><text x="95.1992%" y="495.50"></text></g><g><title>__folio_alloc (2 samples, 0.06%)</title><rect x="95.0820%" y="469" width="0.0556%" height="15" fill="rgb(240,80,30)" fg:x="3422" fg:w="2"/><text x="95.1992%" y="479.50"></text></g><g><title>__alloc_pages (2 samples, 0.06%)</title><rect x="95.0820%" y="453" width="0.0556%" height="15" fill="rgb(230,178,19)" fg:x="3422" fg:w="2"/><text x="95.1992%" y="463.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.06%)</title><rect x="95.0820%" y="437" width="0.0556%" height="15" fill="rgb(210,190,27)" fg:x="3422" fg:w="2"/><text x="95.1992%" y="447.50"></text></g><g><title>clear_page_erms (1 samples, 0.03%)</title><rect x="95.1098%" y="421" width="0.0278%" height="15" fill="rgb(222,107,31)" fg:x="3423" fg:w="1"/><text x="95.2269%" y="431.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="95.1653%" y="293" width="0.0278%" height="15" fill="rgb(216,127,34)" fg:x="3425" fg:w="1"/><text x="95.2825%" y="303.50"></text></g><g><title>_copy_to_iter (1 samples, 0.03%)</title><rect x="95.1653%" y="277" width="0.0278%" height="15" fill="rgb(234,116,52)" fg:x="3425" fg:w="1"/><text x="95.2825%" y="287.50"></text></g><g><title>copyout (1 samples, 0.03%)</title><rect x="95.1653%" y="261" width="0.0278%" height="15" fill="rgb(222,124,15)" fg:x="3425" fg:w="1"/><text x="95.2825%" y="271.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.06%)</title><rect x="95.1653%" y="517" width="0.0556%" height="15" fill="rgb(231,179,28)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="527.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (2 samples, 0.06%)</title><rect x="95.1653%" y="501" width="0.0556%" height="15" fill="rgb(226,93,45)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (2 samples, 0.06%)</title><rect x="95.1653%" y="485" width="0.0556%" height="15" fill="rgb(215,8,51)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 0.06%)</title><rect x="95.1653%" y="469" width="0.0556%" height="15" fill="rgb(223,106,5)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="479.50"></text></g><g><title>__GI___libc_read (2 samples, 0.06%)</title><rect x="95.1653%" y="453" width="0.0556%" height="15" fill="rgb(250,191,5)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="95.1653%" y="437" width="0.0556%" height="15" fill="rgb(242,132,44)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="447.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="95.1653%" y="421" width="0.0556%" height="15" fill="rgb(251,152,29)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="431.50"></text></g><g><title>x64_sys_call (2 samples, 0.06%)</title><rect x="95.1653%" y="405" width="0.0556%" height="15" fill="rgb(218,179,5)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="415.50"></text></g><g><title>__x64_sys_read (2 samples, 0.06%)</title><rect x="95.1653%" y="389" width="0.0556%" height="15" fill="rgb(227,67,19)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="399.50"></text></g><g><title>ksys_read (2 samples, 0.06%)</title><rect x="95.1653%" y="373" width="0.0556%" height="15" fill="rgb(233,119,31)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="383.50"></text></g><g><title>vfs_read (2 samples, 0.06%)</title><rect x="95.1653%" y="357" width="0.0556%" height="15" fill="rgb(241,120,22)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="367.50"></text></g><g><title>ext4_file_read_iter (2 samples, 0.06%)</title><rect x="95.1653%" y="341" width="0.0556%" height="15" fill="rgb(224,102,30)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="351.50"></text></g><g><title>generic_file_read_iter (2 samples, 0.06%)</title><rect x="95.1653%" y="325" width="0.0556%" height="15" fill="rgb(210,164,37)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="335.50"></text></g><g><title>filemap_read (2 samples, 0.06%)</title><rect x="95.1653%" y="309" width="0.0556%" height="15" fill="rgb(226,191,16)" fg:x="3425" fg:w="2"/><text x="95.2825%" y="319.50"></text></g><g><title>filemap_get_pages (1 samples, 0.03%)</title><rect x="95.1931%" y="293" width="0.0278%" height="15" fill="rgb(214,40,45)" fg:x="3426" fg:w="1"/><text x="95.3103%" y="303.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.03%)</title><rect x="95.1931%" y="277" width="0.0278%" height="15" fill="rgb(244,29,26)" fg:x="3426" fg:w="1"/><text x="95.3103%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="95.2209%" y="469" width="0.0278%" height="15" fill="rgb(216,16,5)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="95.2209%" y="453" width="0.0278%" height="15" fill="rgb(249,76,35)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="95.2209%" y="437" width="0.0278%" height="15" fill="rgb(207,11,44)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="95.2209%" y="421" width="0.0278%" height="15" fill="rgb(228,190,49)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="95.2209%" y="405" width="0.0278%" height="15" fill="rgb(214,173,12)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="95.2209%" y="389" width="0.0278%" height="15" fill="rgb(218,26,35)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="95.2209%" y="373" width="0.0278%" height="15" fill="rgb(220,200,19)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="95.2209%" y="357" width="0.0278%" height="15" fill="rgb(239,95,49)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.03%)</title><rect x="95.2209%" y="341" width="0.0278%" height="15" fill="rgb(235,85,53)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="351.50"></text></g><g><title>_int_realloc (1 samples, 0.03%)</title><rect x="95.2209%" y="325" width="0.0278%" height="15" fill="rgb(233,133,31)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="335.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="95.2209%" y="309" width="0.0278%" height="15" fill="rgb(218,25,20)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="319.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="95.2209%" y="293" width="0.0278%" height="15" fill="rgb(252,210,38)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="95.2209%" y="277" width="0.0278%" height="15" fill="rgb(242,134,21)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="95.2209%" y="261" width="0.0278%" height="15" fill="rgb(213,28,48)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="95.2209%" y="245" width="0.0278%" height="15" fill="rgb(250,196,2)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="255.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="95.2209%" y="229" width="0.0278%" height="15" fill="rgb(227,5,17)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="239.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="95.2209%" y="213" width="0.0278%" height="15" fill="rgb(221,226,24)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="223.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="95.2209%" y="197" width="0.0278%" height="15" fill="rgb(211,5,48)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="207.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="95.2209%" y="181" width="0.0278%" height="15" fill="rgb(219,150,6)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="191.50"></text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="95.2209%" y="165" width="0.0278%" height="15" fill="rgb(251,46,16)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="175.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="95.2209%" y="149" width="0.0278%" height="15" fill="rgb(220,204,40)" fg:x="3427" fg:w="1"/><text x="95.3381%" y="159.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (5 samples, 0.14%)</title><rect x="95.1375%" y="725" width="0.1389%" height="15" fill="rgb(211,85,2)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.14%)</title><rect x="95.1375%" y="709" width="0.1389%" height="15" fill="rgb(229,17,7)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="95.1375%" y="693" width="0.1389%" height="15" fill="rgb(239,72,28)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="95.1375%" y="677" width="0.1389%" height="15" fill="rgb(230,47,54)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.14%)</title><rect x="95.1375%" y="661" width="0.1389%" height="15" fill="rgb(214,50,8)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.14%)</title><rect x="95.1375%" y="645" width="0.1389%" height="15" fill="rgb(216,198,43)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.14%)</title><rect x="95.1375%" y="629" width="0.1389%" height="15" fill="rgb(234,20,35)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.14%)</title><rect x="95.1375%" y="613" width="0.1389%" height="15" fill="rgb(254,45,19)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="623.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.14%)</title><rect x="95.1375%" y="597" width="0.1389%" height="15" fill="rgb(219,14,44)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="607.50"></text></g><g><title>std::io::BufRead::read_line (5 samples, 0.14%)</title><rect x="95.1375%" y="581" width="0.1389%" height="15" fill="rgb(217,220,26)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="591.50"></text></g><g><title>std::io::append_to_string (5 samples, 0.14%)</title><rect x="95.1375%" y="565" width="0.1389%" height="15" fill="rgb(213,158,28)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="575.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (5 samples, 0.14%)</title><rect x="95.1375%" y="549" width="0.1389%" height="15" fill="rgb(252,51,52)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="559.50"></text></g><g><title>std::io::read_until (5 samples, 0.14%)</title><rect x="95.1375%" y="533" width="0.1389%" height="15" fill="rgb(246,89,16)" fg:x="3424" fg:w="5"/><text x="95.2547%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.06%)</title><rect x="95.2209%" y="517" width="0.0556%" height="15" fill="rgb(216,158,49)" fg:x="3427" fg:w="2"/><text x="95.3381%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="95.2209%" y="501" width="0.0556%" height="15" fill="rgb(236,107,19)" fg:x="3427" fg:w="2"/><text x="95.3381%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="95.2209%" y="485" width="0.0556%" height="15" fill="rgb(228,185,30)" fg:x="3427" fg:w="2"/><text x="95.3381%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="95.2487%" y="469" width="0.0278%" height="15" fill="rgb(246,134,8)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="479.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.03%)</title><rect x="95.2487%" y="453" width="0.0278%" height="15" fill="rgb(214,143,50)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="463.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="95.2487%" y="437" width="0.0278%" height="15" fill="rgb(228,75,8)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="447.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="95.2487%" y="421" width="0.0278%" height="15" fill="rgb(207,175,4)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="95.2487%" y="405" width="0.0278%" height="15" fill="rgb(205,108,24)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="415.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="95.2487%" y="389" width="0.0278%" height="15" fill="rgb(244,120,49)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="399.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="95.2487%" y="373" width="0.0278%" height="15" fill="rgb(223,47,38)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="383.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="95.2487%" y="357" width="0.0278%" height="15" fill="rgb(229,179,11)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="367.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="95.2487%" y="341" width="0.0278%" height="15" fill="rgb(231,122,1)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="351.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="95.2487%" y="325" width="0.0278%" height="15" fill="rgb(245,119,9)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="335.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="95.2487%" y="309" width="0.0278%" height="15" fill="rgb(241,163,25)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="319.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="95.2487%" y="293" width="0.0278%" height="15" fill="rgb(217,214,3)" fg:x="3428" fg:w="1"/><text x="95.3659%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.19%)</title><rect x="95.3043%" y="405" width="0.1945%" height="15" fill="rgb(240,86,28)" fg:x="3430" fg:w="7"/><text x="95.4214%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.22%)</title><rect x="95.3043%" y="421" width="0.2223%" height="15" fill="rgb(215,47,9)" fg:x="3430" fg:w="8"/><text x="95.4214%" y="431.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.03%)</title><rect x="95.4987%" y="405" width="0.0278%" height="15" fill="rgb(252,25,45)" fg:x="3437" fg:w="1"/><text x="95.6159%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.31%)</title><rect x="95.3043%" y="437" width="0.3056%" height="15" fill="rgb(251,164,9)" fg:x="3430" fg:w="11"/><text x="95.4214%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.08%)</title><rect x="95.5265%" y="421" width="0.0834%" height="15" fill="rgb(233,194,0)" fg:x="3438" fg:w="3"/><text x="95.6437%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.08%)</title><rect x="95.5265%" y="405" width="0.0834%" height="15" fill="rgb(249,111,24)" fg:x="3438" fg:w="3"/><text x="95.6437%" y="415.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (3 samples, 0.08%)</title><rect x="95.5265%" y="389" width="0.0834%" height="15" fill="rgb(250,223,3)" fg:x="3438" fg:w="3"/><text x="95.6437%" y="399.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.03%)</title><rect x="95.6099%" y="277" width="0.0278%" height="15" fill="rgb(236,178,37)" fg:x="3441" fg:w="1"/><text x="95.7271%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="95.6377%" y="277" width="0.0278%" height="15" fill="rgb(241,158,50)" fg:x="3442" fg:w="1"/><text x="95.7549%" y="287.50"></text></g><g><title>_int_malloc (2 samples, 0.06%)</title><rect x="95.6655%" y="277" width="0.0556%" height="15" fill="rgb(213,121,41)" fg:x="3443" fg:w="2"/><text x="95.7827%" y="287.50"></text></g><g><title>sysmalloc (1 samples, 0.03%)</title><rect x="95.6932%" y="261" width="0.0278%" height="15" fill="rgb(240,92,3)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="271.50"></text></g><g><title>__glibc_morecore (1 samples, 0.03%)</title><rect x="95.6932%" y="245" width="0.0278%" height="15" fill="rgb(205,123,3)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="255.50"></text></g><g><title>__GI___sbrk (1 samples, 0.03%)</title><rect x="95.6932%" y="229" width="0.0278%" height="15" fill="rgb(205,97,47)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="239.50"></text></g><g><title>__GI___sbrk (1 samples, 0.03%)</title><rect x="95.6932%" y="213" width="0.0278%" height="15" fill="rgb(247,152,14)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="223.50"></text></g><g><title>__brk (1 samples, 0.03%)</title><rect x="95.6932%" y="197" width="0.0278%" height="15" fill="rgb(248,195,53)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="207.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="95.6932%" y="181" width="0.0278%" height="15" fill="rgb(226,201,16)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="191.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="95.6932%" y="165" width="0.0278%" height="15" fill="rgb(205,98,0)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="175.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="95.6932%" y="149" width="0.0278%" height="15" fill="rgb(214,191,48)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="159.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.03%)</title><rect x="95.6932%" y="133" width="0.0278%" height="15" fill="rgb(237,112,39)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="143.50"></text></g><g><title>__do_sys_brk (1 samples, 0.03%)</title><rect x="95.6932%" y="117" width="0.0278%" height="15" fill="rgb(247,203,27)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="127.50"></text></g><g><title>do_brk_flags (1 samples, 0.03%)</title><rect x="95.6932%" y="101" width="0.0278%" height="15" fill="rgb(235,124,28)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="111.50"></text></g><g><title>vma_prepare (1 samples, 0.03%)</title><rect x="95.6932%" y="85" width="0.0278%" height="15" fill="rgb(208,207,46)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="95.50"></text></g><g><title>up_write (1 samples, 0.03%)</title><rect x="95.6932%" y="69" width="0.0278%" height="15" fill="rgb(234,176,4)" fg:x="3444" fg:w="1"/><text x="95.8104%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.17%)</title><rect x="95.6099%" y="437" width="0.1667%" height="15" fill="rgb(230,133,28)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.17%)</title><rect x="95.6099%" y="421" width="0.1667%" height="15" fill="rgb(211,137,40)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.17%)</title><rect x="95.6099%" y="405" width="0.1667%" height="15" fill="rgb(254,35,13)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.17%)</title><rect x="95.6099%" y="389" width="0.1667%" height="15" fill="rgb(225,49,51)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.17%)</title><rect x="95.6099%" y="373" width="0.1667%" height="15" fill="rgb(251,10,15)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.17%)</title><rect x="95.6099%" y="357" width="0.1667%" height="15" fill="rgb(228,207,15)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.17%)</title><rect x="95.6099%" y="341" width="0.1667%" height="15" fill="rgb(241,99,19)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="351.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.17%)</title><rect x="95.6099%" y="325" width="0.1667%" height="15" fill="rgb(207,104,49)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="335.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.17%)</title><rect x="95.6099%" y="309" width="0.1667%" height="15" fill="rgb(234,99,18)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="319.50"></text></g><g><title>_int_realloc (6 samples, 0.17%)</title><rect x="95.6099%" y="293" width="0.1667%" height="15" fill="rgb(213,191,49)" fg:x="3441" fg:w="6"/><text x="95.7271%" y="303.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="95.7210%" y="277" width="0.0556%" height="15" fill="rgb(210,226,19)" fg:x="3445" fg:w="2"/><text x="95.8382%" y="287.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="95.7488%" y="261" width="0.0278%" height="15" fill="rgb(229,97,18)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="271.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="95.7488%" y="245" width="0.0278%" height="15" fill="rgb(211,167,15)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="255.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="95.7488%" y="229" width="0.0278%" height="15" fill="rgb(210,169,34)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="239.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="95.7488%" y="213" width="0.0278%" height="15" fill="rgb(241,121,31)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="223.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="95.7488%" y="197" width="0.0278%" height="15" fill="rgb(232,40,11)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="207.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="95.7488%" y="181" width="0.0278%" height="15" fill="rgb(205,86,26)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="191.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="95.7488%" y="165" width="0.0278%" height="15" fill="rgb(231,126,28)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="175.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="95.7488%" y="149" width="0.0278%" height="15" fill="rgb(219,221,18)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="159.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="95.7488%" y="133" width="0.0278%" height="15" fill="rgb(211,40,0)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="143.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="95.7488%" y="117" width="0.0278%" height="15" fill="rgb(239,85,43)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="127.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="95.7488%" y="101" width="0.0278%" height="15" fill="rgb(231,55,21)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="111.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="95.7488%" y="85" width="0.0278%" height="15" fill="rgb(225,184,43)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="95.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.03%)</title><rect x="95.7488%" y="69" width="0.0278%" height="15" fill="rgb(251,158,41)" fg:x="3446" fg:w="1"/><text x="95.8660%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.81%)</title><rect x="95.2765%" y="709" width="0.8058%" height="15" fill="rgb(234,159,37)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="95.2765%" y="693" width="0.8058%" height="15" fill="rgb(216,204,22)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="95.2765%" y="677" width="0.8058%" height="15" fill="rgb(214,17,3)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="95.2765%" y="661" width="0.8058%" height="15" fill="rgb(212,111,17)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.81%)</title><rect x="95.2765%" y="645" width="0.8058%" height="15" fill="rgb(221,157,24)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (29 samples, 0.81%)</title><rect x="95.2765%" y="629" width="0.8058%" height="15" fill="rgb(252,16,13)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29 samples, 0.81%)</title><rect x="95.2765%" y="613" width="0.8058%" height="15" fill="rgb(221,62,2)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.81%)</title><rect x="95.2765%" y="597" width="0.8058%" height="15" fill="rgb(247,87,22)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 0.81%)</title><rect x="95.2765%" y="581" width="0.8058%" height="15" fill="rgb(215,73,9)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (29 samples, 0.81%)</title><rect x="95.2765%" y="565" width="0.8058%" height="15" fill="rgb(207,175,33)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="575.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (29 samples, 0.81%)</title><rect x="95.2765%" y="549" width="0.8058%" height="15" fill="rgb(243,129,54)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.81%)</title><rect x="95.2765%" y="533" width="0.8058%" height="15" fill="rgb(227,119,45)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="95.2765%" y="517" width="0.8058%" height="15" fill="rgb(205,109,36)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="95.2765%" y="501" width="0.8058%" height="15" fill="rgb(205,6,39)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.81%)</title><rect x="95.2765%" y="485" width="0.8058%" height="15" fill="rgb(221,32,16)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.81%)</title><rect x="95.2765%" y="469" width="0.8058%" height="15" fill="rgb(228,144,50)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (29 samples, 0.81%)</title><rect x="95.2765%" y="453" width="0.8058%" height="15" fill="rgb(229,201,53)" fg:x="3429" fg:w="29"/><text x="95.3937%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (11 samples, 0.31%)</title><rect x="95.7766%" y="437" width="0.3056%" height="15" fill="rgb(249,153,27)" fg:x="3447" fg:w="11"/><text x="95.8938%" y="447.50"></text></g><g><title>_start (3,048 samples, 84.69%)</title><rect x="11.4198%" y="901" width="84.6902%" height="15" fill="rgb(227,106,25)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="911.50">_start</text></g><g><title>__libc_start_main_impl (3,048 samples, 84.69%)</title><rect x="11.4198%" y="885" width="84.6902%" height="15" fill="rgb(230,65,29)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="895.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,048 samples, 84.69%)</title><rect x="11.4198%" y="869" width="84.6902%" height="15" fill="rgb(221,57,46)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="879.50">__libc_start_call_main</text></g><g><title>main (3,048 samples, 84.69%)</title><rect x="11.4198%" y="853" width="84.6902%" height="15" fill="rgb(229,161,17)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (3,048 samples, 84.69%)</title><rect x="11.4198%" y="837" width="84.6902%" height="15" fill="rgb(222,213,11)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (3,048 samples, 84.69%)</title><rect x="11.4198%" y="821" width="84.6902%" height="15" fill="rgb(235,35,13)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="831.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,048 samples, 84.69%)</title><rect x="11.4198%" y="805" width="84.6902%" height="15" fill="rgb(233,158,34)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="815.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (3,048 samples, 84.69%)</title><rect x="11.4198%" y="789" width="84.6902%" height="15" fill="rgb(215,151,48)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="799.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (3,048 samples, 84.69%)</title><rect x="11.4198%" y="773" width="84.6902%" height="15" fill="rgb(229,84,14)" fg:x="411" fg:w="3048"/><text x="11.5370%" y="783.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (3,047 samples, 84.66%)</title><rect x="11.4476%" y="757" width="84.6624%" height="15" fill="rgb(229,68,14)" fg:x="412" fg:w="3047"/><text x="11.5648%" y="767.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (82 samples, 2.28%)</title><rect x="93.8316%" y="741" width="2.2784%" height="15" fill="rgb(243,106,26)" fg:x="3377" fg:w="82"/><text x="93.9488%" y="751.50">fringe..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map (30 samples, 0.83%)</title><rect x="95.2765%" y="725" width="0.8336%" height="15" fill="rgb(206,45,38)" fg:x="3429" fg:w="30"/><text x="95.3937%" y="735.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.03%)</title><rect x="96.0822%" y="709" width="0.0278%" height="15" fill="rgb(226,6,15)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.0822%" y="693" width="0.0278%" height="15" fill="rgb(232,22,54)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.03%)</title><rect x="96.0822%" y="677" width="0.0278%" height="15" fill="rgb(229,222,32)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.03%)</title><rect x="96.0822%" y="661" width="0.0278%" height="15" fill="rgb(228,62,29)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="96.0822%" y="645" width="0.0278%" height="15" fill="rgb(251,103,34)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="96.0822%" y="629" width="0.0278%" height="15" fill="rgb(233,12,30)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.0822%" y="613" width="0.0278%" height="15" fill="rgb(238,52,0)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="96.0822%" y="597" width="0.0278%" height="15" fill="rgb(223,98,5)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="96.0822%" y="581" width="0.0278%" height="15" fill="rgb(228,75,37)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.03%)</title><rect x="96.0822%" y="565" width="0.0278%" height="15" fill="rgb(205,115,49)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="96.0822%" y="549" width="0.0278%" height="15" fill="rgb(250,154,43)" fg:x="3458" fg:w="1"/><text x="96.1994%" y="559.50"></text></g><g><title>asm_exc_page_fault (98 samples, 2.72%)</title><rect x="96.1100%" y="901" width="2.7230%" height="15" fill="rgb(226,43,29)" fg:x="3459" fg:w="98"/><text x="96.2272%" y="911.50">asm_exc..</text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="98.8330%" y="853" width="0.0278%" height="15" fill="rgb(249,228,39)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="863.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="98.8330%" y="837" width="0.0278%" height="15" fill="rgb(216,79,43)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="847.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="98.8330%" y="821" width="0.0278%" height="15" fill="rgb(228,95,12)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="831.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.03%)</title><rect x="98.8330%" y="805" width="0.0278%" height="15" fill="rgb(249,221,15)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="815.50"></text></g><g><title>exec_binprm (1 samples, 0.03%)</title><rect x="98.8330%" y="789" width="0.0278%" height="15" fill="rgb(233,34,13)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="799.50"></text></g><g><title>search_binary_handler (1 samples, 0.03%)</title><rect x="98.8330%" y="773" width="0.0278%" height="15" fill="rgb(214,103,39)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="783.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="98.8330%" y="757" width="0.0278%" height="15" fill="rgb(251,126,39)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="767.50"></text></g><g><title>setup_arg_pages (1 samples, 0.03%)</title><rect x="98.8330%" y="741" width="0.0278%" height="15" fill="rgb(214,216,36)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="751.50"></text></g><g><title>shift_arg_pages (1 samples, 0.03%)</title><rect x="98.8330%" y="725" width="0.0278%" height="15" fill="rgb(220,221,8)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="735.50"></text></g><g><title>vma_expand (1 samples, 0.03%)</title><rect x="98.8330%" y="709" width="0.0278%" height="15" fill="rgb(240,216,3)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="719.50"></text></g><g><title>vma_adjust_trans_huge (1 samples, 0.03%)</title><rect x="98.8330%" y="693" width="0.0278%" height="15" fill="rgb(232,218,17)" fg:x="3557" fg:w="1"/><text x="98.9502%" y="703.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.03%)</title><rect x="98.8608%" y="677" width="0.0278%" height="15" fill="rgb(229,163,45)" fg:x="3558" fg:w="1"/><text x="98.9780%" y="687.50"></text></g><g><title>_compound_head (3 samples, 0.08%)</title><rect x="98.8886%" y="677" width="0.0834%" height="15" fill="rgb(231,110,42)" fg:x="3559" fg:w="3"/><text x="99.0058%" y="687.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.06%)</title><rect x="99.0275%" y="645" width="0.0556%" height="15" fill="rgb(208,170,48)" fg:x="3564" fg:w="2"/><text x="99.1447%" y="655.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="99.0831%" y="645" width="0.0278%" height="15" fill="rgb(239,116,25)" fg:x="3566" fg:w="1"/><text x="99.2003%" y="655.50"></text></g><g><title>page_remove_rmap (4 samples, 0.11%)</title><rect x="99.0275%" y="661" width="0.1111%" height="15" fill="rgb(219,200,50)" fg:x="3564" fg:w="4"/><text x="99.1447%" y="671.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="99.1109%" y="645" width="0.0278%" height="15" fill="rgb(245,200,0)" fg:x="3567" fg:w="1"/><text x="99.2281%" y="655.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="99.1664%" y="597" width="0.0278%" height="15" fill="rgb(245,119,33)" fg:x="3569" fg:w="1"/><text x="99.2836%" y="607.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="99.1664%" y="581" width="0.0278%" height="15" fill="rgb(231,125,12)" fg:x="3569" fg:w="1"/><text x="99.2836%" y="591.50"></text></g><g><title>__mod_zone_page_state (2 samples, 0.06%)</title><rect x="99.1942%" y="597" width="0.0556%" height="15" fill="rgb(216,96,41)" fg:x="3570" fg:w="2"/><text x="99.3114%" y="607.50"></text></g><g><title>__free_one_page (1 samples, 0.03%)</title><rect x="99.3331%" y="565" width="0.0278%" height="15" fill="rgb(248,43,45)" fg:x="3575" fg:w="1"/><text x="99.4503%" y="575.50"></text></g><g><title>free_unref_page_commit (9 samples, 0.25%)</title><rect x="99.3054%" y="581" width="0.2501%" height="15" fill="rgb(217,222,7)" fg:x="3574" fg:w="9"/><text x="99.4226%" y="591.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.19%)</title><rect x="99.3609%" y="565" width="0.1945%" height="15" fill="rgb(233,28,6)" fg:x="3576" fg:w="7"/><text x="99.4781%" y="575.50"></text></g><g><title>__free_one_page (6 samples, 0.17%)</title><rect x="99.3887%" y="549" width="0.1667%" height="15" fill="rgb(231,218,15)" fg:x="3577" fg:w="6"/><text x="99.5059%" y="559.50"></text></g><g><title>free_unref_page_list (14 samples, 0.39%)</title><rect x="99.2498%" y="597" width="0.3890%" height="15" fill="rgb(226,171,48)" fg:x="3572" fg:w="14"/><text x="99.3670%" y="607.50"></text></g><g><title>free_unref_page_prepare (3 samples, 0.08%)</title><rect x="99.5554%" y="581" width="0.0834%" height="15" fill="rgb(235,201,9)" fg:x="3583" fg:w="3"/><text x="99.6726%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.97%)</title><rect x="98.8330%" y="901" width="0.9725%" height="15" fill="rgb(217,80,15)" fg:x="3557" fg:w="35"/><text x="98.9502%" y="911.50">e..</text></g><g><title>do_syscall_64 (35 samples, 0.97%)</title><rect x="98.8330%" y="885" width="0.9725%" height="15" fill="rgb(219,152,8)" fg:x="3557" fg:w="35"/><text x="98.9502%" y="895.50">d..</text></g><g><title>x64_sys_call (35 samples, 0.97%)</title><rect x="98.8330%" y="869" width="0.9725%" height="15" fill="rgb(243,107,38)" fg:x="3557" fg:w="35"/><text x="98.9502%" y="879.50">x..</text></g><g><title>__x64_sys_exit_group (34 samples, 0.94%)</title><rect x="98.8608%" y="853" width="0.9447%" height="15" fill="rgb(231,17,5)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="863.50">_..</text></g><g><title>do_group_exit (34 samples, 0.94%)</title><rect x="98.8608%" y="837" width="0.9447%" height="15" fill="rgb(209,25,54)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="847.50">d..</text></g><g><title>do_exit (34 samples, 0.94%)</title><rect x="98.8608%" y="821" width="0.9447%" height="15" fill="rgb(219,0,2)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="831.50">d..</text></g><g><title>exit_mm (34 samples, 0.94%)</title><rect x="98.8608%" y="805" width="0.9447%" height="15" fill="rgb(246,9,5)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="815.50">e..</text></g><g><title>mmput (34 samples, 0.94%)</title><rect x="98.8608%" y="789" width="0.9447%" height="15" fill="rgb(226,159,4)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="799.50">m..</text></g><g><title>__mmput (34 samples, 0.94%)</title><rect x="98.8608%" y="773" width="0.9447%" height="15" fill="rgb(219,175,34)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="783.50">_..</text></g><g><title>exit_mmap (34 samples, 0.94%)</title><rect x="98.8608%" y="757" width="0.9447%" height="15" fill="rgb(236,10,46)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="767.50">e..</text></g><g><title>unmap_vmas (34 samples, 0.94%)</title><rect x="98.8608%" y="741" width="0.9447%" height="15" fill="rgb(240,211,16)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="751.50">u..</text></g><g><title>unmap_single_vma (34 samples, 0.94%)</title><rect x="98.8608%" y="725" width="0.9447%" height="15" fill="rgb(205,3,43)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="735.50">u..</text></g><g><title>unmap_page_range (34 samples, 0.94%)</title><rect x="98.8608%" y="709" width="0.9447%" height="15" fill="rgb(245,7,22)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="719.50">u..</text></g><g><title>zap_pmd_range.isra.0 (34 samples, 0.94%)</title><rect x="98.8608%" y="693" width="0.9447%" height="15" fill="rgb(239,132,32)" fg:x="3558" fg:w="34"/><text x="98.9780%" y="703.50">z..</text></g><g><title>zap_pte_range (30 samples, 0.83%)</title><rect x="98.9719%" y="677" width="0.8336%" height="15" fill="rgb(228,202,34)" fg:x="3562" fg:w="30"/><text x="99.0891%" y="687.50">z..</text></g><g><title>tlb_flush_mmu (24 samples, 0.67%)</title><rect x="99.1386%" y="661" width="0.6669%" height="15" fill="rgb(254,200,22)" fg:x="3568" fg:w="24"/><text x="99.2558%" y="671.50"></text></g><g><title>tlb_batch_pages_flush (24 samples, 0.67%)</title><rect x="99.1386%" y="645" width="0.6669%" height="15" fill="rgb(219,10,39)" fg:x="3568" fg:w="24"/><text x="99.2558%" y="655.50"></text></g><g><title>free_pages_and_swap_cache (24 samples, 0.67%)</title><rect x="99.1386%" y="629" width="0.6669%" height="15" fill="rgb(226,210,39)" fg:x="3568" fg:w="24"/><text x="99.2558%" y="639.50"></text></g><g><title>release_pages (24 samples, 0.67%)</title><rect x="99.1386%" y="613" width="0.6669%" height="15" fill="rgb(208,219,16)" fg:x="3568" fg:w="24"/><text x="99.2558%" y="623.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.17%)</title><rect x="99.6388%" y="597" width="0.1667%" height="15" fill="rgb(216,158,51)" fg:x="3586" fg:w="6"/><text x="99.7560%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="99.8055%" y="885" width="0.0278%" height="15" fill="rgb(233,14,44)" fg:x="3592" fg:w="1"/><text x="99.9227%" y="895.50"></text></g><g><title>fringe-vs-astar (3,594 samples, 99.86%)</title><rect x="0.0000%" y="917" width="99.8611%" height="15" fill="rgb(237,97,39)" fg:x="0" fg:w="3594"/><text x="0.1172%" y="927.50">fringe-vs-astar</text></g><g><title>main_arena (2 samples, 0.06%)</title><rect x="99.8055%" y="901" width="0.0556%" height="15" fill="rgb(218,198,43)" fg:x="3592" fg:w="2"/><text x="99.9227%" y="911.50"></text></g><g><title>_int_realloc (1 samples, 0.03%)</title><rect x="99.8333%" y="885" width="0.0278%" height="15" fill="rgb(231,104,20)" fg:x="3593" fg:w="1"/><text x="99.9505%" y="895.50"></text></g><g><title>all (3,599 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(254,36,13)" fg:x="0" fg:w="3599"/><text x="0.1172%" y="943.50"></text></g><g><title>perf-exec (5 samples, 0.14%)</title><rect x="99.8611%" y="917" width="0.1389%" height="15" fill="rgb(248,14,50)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="99.8611%" y="901" width="0.1389%" height="15" fill="rgb(217,107,29)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="911.50"></text></g><g><title>do_syscall_64 (5 samples, 0.14%)</title><rect x="99.8611%" y="885" width="0.1389%" height="15" fill="rgb(251,169,33)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="895.50"></text></g><g><title>x64_sys_call (5 samples, 0.14%)</title><rect x="99.8611%" y="869" width="0.1389%" height="15" fill="rgb(217,108,32)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="879.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.14%)</title><rect x="99.8611%" y="853" width="0.1389%" height="15" fill="rgb(219,66,42)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="863.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.14%)</title><rect x="99.8611%" y="837" width="0.1389%" height="15" fill="rgb(206,180,7)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="847.50"></text></g><g><title>bprm_execve (5 samples, 0.14%)</title><rect x="99.8611%" y="821" width="0.1389%" height="15" fill="rgb(208,226,31)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="831.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.14%)</title><rect x="99.8611%" y="805" width="0.1389%" height="15" fill="rgb(218,26,49)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="815.50"></text></g><g><title>exec_binprm (5 samples, 0.14%)</title><rect x="99.8611%" y="789" width="0.1389%" height="15" fill="rgb(233,197,48)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="799.50"></text></g><g><title>search_binary_handler (5 samples, 0.14%)</title><rect x="99.8611%" y="773" width="0.1389%" height="15" fill="rgb(252,181,51)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="783.50"></text></g><g><title>load_elf_binary (5 samples, 0.14%)</title><rect x="99.8611%" y="757" width="0.1389%" height="15" fill="rgb(253,90,19)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="767.50"></text></g><g><title>begin_new_exec (5 samples, 0.14%)</title><rect x="99.8611%" y="741" width="0.1389%" height="15" fill="rgb(215,171,30)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="751.50"></text></g><g><title>perf_event_exec (5 samples, 0.14%)</title><rect x="99.8611%" y="725" width="0.1389%" height="15" fill="rgb(214,222,9)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="735.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.14%)</title><rect x="99.8611%" y="709" width="0.1389%" height="15" fill="rgb(223,3,22)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="719.50"></text></g><g><title>ctx_resched (5 samples, 0.14%)</title><rect x="99.8611%" y="693" width="0.1389%" height="15" fill="rgb(225,196,46)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="703.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.14%)</title><rect x="99.8611%" y="677" width="0.1389%" height="15" fill="rgb(209,110,37)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="687.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.14%)</title><rect x="99.8611%" y="661" width="0.1389%" height="15" fill="rgb(249,89,12)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="671.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.14%)</title><rect x="99.8611%" y="645" width="0.1389%" height="15" fill="rgb(226,27,33)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="655.50"></text></g><g><title>native_write_msr (5 samples, 0.14%)</title><rect x="99.8611%" y="629" width="0.1389%" height="15" fill="rgb(213,82,22)" fg:x="3594" fg:w="5"/><text x="99.9783%" y="639.50"></text></g></svg></svg>