<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="950" onload="init(evt)" viewBox="0 0 2560 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="933.00"> </text><svg id="frames" x="10" width="2540" total_samples="1544"><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="0.0000%" y="853" width="0.0648%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.1172%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="0.0648%" y="853" width="0.0648%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.1820%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.06%)</title><rect x="0.1295%" y="853" width="0.0648%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2467%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="0.1295%" y="837" width="0.0648%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2467%" y="847.50"></text></g><g><title>[[heap]] (4 samples, 0.26%)</title><rect x="0.0000%" y="869" width="0.2591%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.1172%" y="879.50"></text></g><g><title>fringe_vs_astar::pathfinder::heuristic (1 samples, 0.06%)</title><rect x="0.1943%" y="853" width="0.0648%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="0.3115%" y="863.50"></text></g><g><title>__rdl_realloc (1 samples, 0.06%)</title><rect x="0.2591%" y="853" width="0.0648%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.3763%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="0.3238%" y="853" width="0.0648%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="0.4410%" y="863.50"></text></g><g><title>[[stack]] (3 samples, 0.19%)</title><rect x="0.2591%" y="869" width="0.1943%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="3"/><text x="0.3763%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="0.3886%" y="853" width="0.0648%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.5058%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="0.4534%" y="853" width="0.0648%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="0.5706%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="0.4534%" y="837" width="0.0648%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="0.5706%" y="847.50"></text></g><g><title>&lt;fringe_vs_astar::map::GridMap as fringe_vs_astar::map::Map&gt;::get_cell (2 samples, 0.13%)</title><rect x="0.5181%" y="853" width="0.1295%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="2"/><text x="0.6353%" y="863.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="0.6477%" y="853" width="0.0648%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="1"/><text x="0.7649%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="0.7124%" y="853" width="0.0648%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="1"/><text x="0.8296%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="0.7772%" y="853" width="0.0648%" height="15" fill="rgb(231,73,38)" fg:x="12" fg:w="1"/><text x="0.8944%" y="863.50"></text></g><g><title>_int_realloc (1 samples, 0.06%)</title><rect x="0.8420%" y="853" width="0.0648%" height="15" fill="rgb(225,20,46)" fg:x="13" fg:w="1"/><text x="0.9592%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.06%)</title><rect x="1.0363%" y="837" width="0.0648%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="1"/><text x="1.1535%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.06%)</title><rect x="1.0363%" y="821" width="0.0648%" height="15" fill="rgb(221,200,47)" fg:x="16" fg:w="1"/><text x="1.1535%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.06%)</title><rect x="1.0363%" y="805" width="0.0648%" height="15" fill="rgb(226,26,5)" fg:x="16" fg:w="1"/><text x="1.1535%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.06%)</title><rect x="1.0363%" y="789" width="0.0648%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="1"/><text x="1.1535%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.06%)</title><rect x="1.1010%" y="837" width="0.0648%" height="15" fill="rgb(235,183,28)" fg:x="17" fg:w="1"/><text x="1.2182%" y="847.50"></text></g><g><title>fringe_vs_astar::graph::generate_neighbors::_{{closure}} (1 samples, 0.06%)</title><rect x="1.1010%" y="821" width="0.0648%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="1"/><text x="1.2182%" y="831.50"></text></g><g><title>fringe_vs_astar::graph::generate_neighbors (5 samples, 0.32%)</title><rect x="0.9067%" y="853" width="0.3238%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="5"/><text x="1.0239%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="1.1658%" y="837" width="0.0648%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="1"/><text x="1.2830%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="1.1658%" y="821" width="0.0648%" height="15" fill="rgb(249,31,29)" fg:x="18" fg:w="1"/><text x="1.2830%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="1.1658%" y="805" width="0.0648%" height="15" fill="rgb(225,111,53)" fg:x="18" fg:w="1"/><text x="1.2830%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="1.1658%" y="789" width="0.0648%" height="15" fill="rgb(238,160,17)" fg:x="18" fg:w="1"/><text x="1.2830%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="1.1658%" y="773" width="0.0648%" height="15" fill="rgb(214,148,48)" fg:x="18" fg:w="1"/><text x="1.2830%" y="783.50"></text></g><g><title>[unknown] (14 samples, 0.91%)</title><rect x="0.4534%" y="869" width="0.9067%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="14"/><text x="0.5706%" y="879.50">[..</text></g><g><title>fringe_vs_astar::pathfinder::Frontier::push (2 samples, 0.13%)</title><rect x="1.2306%" y="853" width="0.1295%" height="15" fill="rgb(209,103,24)" fg:x="19" fg:w="2"/><text x="1.3478%" y="863.50"></text></g><g><title>fringe_vs_astar::pathfinder::Frontier::replace (1 samples, 0.06%)</title><rect x="1.2953%" y="837" width="0.0648%" height="15" fill="rgb(229,88,8)" fg:x="20" fg:w="1"/><text x="1.4125%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::BinaryHeap&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (1 samples, 0.06%)</title><rect x="1.2953%" y="821" width="0.0648%" height="15" fill="rgb(213,181,19)" fg:x="20" fg:w="1"/><text x="1.4125%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (1 samples, 0.06%)</title><rect x="1.2953%" y="805" width="0.0648%" height="15" fill="rgb(254,191,54)" fg:x="20" fg:w="1"/><text x="1.4125%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (1 samples, 0.06%)</title><rect x="1.2953%" y="789" width="0.0648%" height="15" fill="rgb(241,83,37)" fg:x="20" fg:w="1"/><text x="1.4125%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="1.2953%" y="773" width="0.0648%" height="15" fill="rgb(233,36,39)" fg:x="20" fg:w="1"/><text x="1.4125%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="1.2953%" y="757" width="0.0648%" height="15" fill="rgb(226,3,54)" fg:x="20" fg:w="1"/><text x="1.4125%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="1.2953%" y="741" width="0.0648%" height="15" fill="rgb(245,192,40)" fg:x="20" fg:w="1"/><text x="1.4125%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="1.3601%" y="869" width="0.1295%" height="15" fill="rgb(238,167,29)" fg:x="21" fg:w="2"/><text x="1.4773%" y="879.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="1.4896%" y="869" width="0.0648%" height="15" fill="rgb(232,182,51)" fg:x="23" fg:w="1"/><text x="1.6068%" y="879.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.13%)</title><rect x="1.6192%" y="565" width="0.1295%" height="15" fill="rgb(231,60,39)" fg:x="25" fg:w="2"/><text x="1.7364%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.19%)</title><rect x="1.6192%" y="693" width="0.1943%" height="15" fill="rgb(208,69,12)" fg:x="25" fg:w="3"/><text x="1.7364%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.19%)</title><rect x="1.6192%" y="677" width="0.1943%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="3"/><text x="1.7364%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.19%)</title><rect x="1.6192%" y="661" width="0.1943%" height="15" fill="rgb(213,116,39)" fg:x="25" fg:w="3"/><text x="1.7364%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.19%)</title><rect x="1.6192%" y="645" width="0.1943%" height="15" fill="rgb(222,207,29)" fg:x="25" fg:w="3"/><text x="1.7364%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.19%)</title><rect x="1.6192%" y="629" width="0.1943%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="3"/><text x="1.7364%" y="639.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.19%)</title><rect x="1.6192%" y="613" width="0.1943%" height="15" fill="rgb(218,138,4)" fg:x="25" fg:w="3"/><text x="1.7364%" y="623.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.19%)</title><rect x="1.6192%" y="597" width="0.1943%" height="15" fill="rgb(250,191,14)" fg:x="25" fg:w="3"/><text x="1.7364%" y="607.50"></text></g><g><title>_int_realloc (3 samples, 0.19%)</title><rect x="1.6192%" y="581" width="0.1943%" height="15" fill="rgb(239,60,40)" fg:x="25" fg:w="3"/><text x="1.7364%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="1.7487%" y="565" width="0.0648%" height="15" fill="rgb(206,27,48)" fg:x="27" fg:w="1"/><text x="1.8659%" y="575.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="1.7487%" y="549" width="0.0648%" height="15" fill="rgb(225,35,8)" fg:x="27" fg:w="1"/><text x="1.8659%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="1.7487%" y="533" width="0.0648%" height="15" fill="rgb(250,213,24)" fg:x="27" fg:w="1"/><text x="1.8659%" y="543.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="1.7487%" y="517" width="0.0648%" height="15" fill="rgb(247,123,22)" fg:x="27" fg:w="1"/><text x="1.8659%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1.7487%" y="501" width="0.0648%" height="15" fill="rgb(231,138,38)" fg:x="27" fg:w="1"/><text x="1.8659%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1.7487%" y="485" width="0.0648%" height="15" fill="rgb(231,145,46)" fg:x="27" fg:w="1"/><text x="1.8659%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1.7487%" y="469" width="0.0648%" height="15" fill="rgb(251,118,11)" fg:x="27" fg:w="1"/><text x="1.8659%" y="479.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="1.7487%" y="453" width="0.0648%" height="15" fill="rgb(217,147,25)" fg:x="27" fg:w="1"/><text x="1.8659%" y="463.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="1.7487%" y="437" width="0.0648%" height="15" fill="rgb(247,81,37)" fg:x="27" fg:w="1"/><text x="1.8659%" y="447.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="1.7487%" y="421" width="0.0648%" height="15" fill="rgb(209,12,38)" fg:x="27" fg:w="1"/><text x="1.8659%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.32%)</title><rect x="1.6192%" y="709" width="0.3238%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="5"/><text x="1.7364%" y="719.50"></text></g><g><title>core::ptr::write (2 samples, 0.13%)</title><rect x="1.8135%" y="693" width="0.1295%" height="15" fill="rgb(248,47,43)" fg:x="28" fg:w="2"/><text x="1.9307%" y="703.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="1.8782%" y="677" width="0.0648%" height="15" fill="rgb(221,10,30)" fg:x="29" fg:w="1"/><text x="1.9954%" y="687.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="1.8782%" y="661" width="0.0648%" height="15" fill="rgb(210,229,1)" fg:x="29" fg:w="1"/><text x="1.9954%" y="671.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1.8782%" y="645" width="0.0648%" height="15" fill="rgb(222,148,37)" fg:x="29" fg:w="1"/><text x="1.9954%" y="655.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1.8782%" y="629" width="0.0648%" height="15" fill="rgb(234,67,33)" fg:x="29" fg:w="1"/><text x="1.9954%" y="639.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1.8782%" y="613" width="0.0648%" height="15" fill="rgb(247,98,35)" fg:x="29" fg:w="1"/><text x="1.9954%" y="623.50"></text></g><g><title>&lt;fringe_vs_astar::map::GridMap as fringe_vs_astar::map::Map&gt;::get_cell (2 samples, 0.13%)</title><rect x="2.0078%" y="693" width="0.1295%" height="15" fill="rgb(247,138,52)" fg:x="31" fg:w="2"/><text x="2.1250%" y="703.50"></text></g><g><title>checked_request2size (1 samples, 0.06%)</title><rect x="2.3316%" y="613" width="0.0648%" height="15" fill="rgb(213,79,30)" fg:x="36" fg:w="1"/><text x="2.4488%" y="623.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.39%)</title><rect x="2.1373%" y="629" width="0.3886%" height="15" fill="rgb(246,177,23)" fg:x="33" fg:w="6"/><text x="2.2545%" y="639.50"></text></g><g><title>tcache_get (2 samples, 0.13%)</title><rect x="2.3964%" y="613" width="0.1295%" height="15" fill="rgb(230,62,27)" fg:x="37" fg:w="2"/><text x="2.5136%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.45%)</title><rect x="2.1373%" y="693" width="0.4534%" height="15" fill="rgb(216,154,8)" fg:x="33" fg:w="7"/><text x="2.2545%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.45%)</title><rect x="2.1373%" y="677" width="0.4534%" height="15" fill="rgb(244,35,45)" fg:x="33" fg:w="7"/><text x="2.2545%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.45%)</title><rect x="2.1373%" y="661" width="0.4534%" height="15" fill="rgb(251,115,12)" fg:x="33" fg:w="7"/><text x="2.2545%" y="671.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.45%)</title><rect x="2.1373%" y="645" width="0.4534%" height="15" fill="rgb(240,54,50)" fg:x="33" fg:w="7"/><text x="2.2545%" y="655.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.06%)</title><rect x="2.5259%" y="629" width="0.0648%" height="15" fill="rgb(233,84,52)" fg:x="39" fg:w="1"/><text x="2.6431%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="2.5907%" y="645" width="0.1295%" height="15" fill="rgb(207,117,47)" fg:x="40" fg:w="2"/><text x="2.7079%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="2.7850%" y="613" width="0.0648%" height="15" fill="rgb(249,43,39)" fg:x="43" fg:w="1"/><text x="2.9022%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="2.9145%" y="581" width="0.0648%" height="15" fill="rgb(209,38,44)" fg:x="45" fg:w="1"/><text x="3.0317%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (3 samples, 0.19%)</title><rect x="2.9793%" y="533" width="0.1943%" height="15" fill="rgb(236,212,23)" fg:x="46" fg:w="3"/><text x="3.0965%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.19%)</title><rect x="2.9793%" y="517" width="0.1943%" height="15" fill="rgb(242,79,21)" fg:x="46" fg:w="3"/><text x="3.0965%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.19%)</title><rect x="2.9793%" y="501" width="0.1943%" height="15" fill="rgb(211,96,35)" fg:x="46" fg:w="3"/><text x="3.0965%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.19%)</title><rect x="2.9793%" y="485" width="0.1943%" height="15" fill="rgb(253,215,40)" fg:x="46" fg:w="3"/><text x="3.0965%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.19%)</title><rect x="2.9793%" y="469" width="0.1943%" height="15" fill="rgb(211,81,21)" fg:x="46" fg:w="3"/><text x="3.0965%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.19%)</title><rect x="2.9793%" y="453" width="0.1943%" height="15" fill="rgb(208,190,38)" fg:x="46" fg:w="3"/><text x="3.0965%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 0.19%)</title><rect x="2.9793%" y="437" width="0.1943%" height="15" fill="rgb(235,213,38)" fg:x="46" fg:w="3"/><text x="3.0965%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="2.9793%" y="421" width="0.1943%" height="15" fill="rgb(237,122,38)" fg:x="46" fg:w="3"/><text x="3.0965%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (3 samples, 0.19%)</title><rect x="2.9793%" y="405" width="0.1943%" height="15" fill="rgb(244,218,35)" fg:x="46" fg:w="3"/><text x="3.0965%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="2.9793%" y="389" width="0.1943%" height="15" fill="rgb(240,68,47)" fg:x="46" fg:w="3"/><text x="3.0965%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (3 samples, 0.19%)</title><rect x="2.9793%" y="373" width="0.1943%" height="15" fill="rgb(210,16,53)" fg:x="46" fg:w="3"/><text x="3.0965%" y="383.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4 samples, 0.26%)</title><rect x="2.9793%" y="549" width="0.2591%" height="15" fill="rgb(235,124,12)" fg:x="46" fg:w="4"/><text x="3.0965%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.06%)</title><rect x="3.1736%" y="533" width="0.0648%" height="15" fill="rgb(224,169,11)" fg:x="49" fg:w="1"/><text x="3.2908%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="3.2383%" y="405" width="0.0648%" height="15" fill="rgb(250,166,2)" fg:x="50" fg:w="1"/><text x="3.3555%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.06%)</title><rect x="3.2383%" y="389" width="0.0648%" height="15" fill="rgb(242,216,29)" fg:x="50" fg:w="1"/><text x="3.3555%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="2.9793%" y="581" width="0.3886%" height="15" fill="rgb(230,116,27)" fg:x="46" fg:w="6"/><text x="3.0965%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (6 samples, 0.39%)</title><rect x="2.9793%" y="565" width="0.3886%" height="15" fill="rgb(228,99,48)" fg:x="46" fg:w="6"/><text x="3.0965%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.13%)</title><rect x="3.2383%" y="549" width="0.1295%" height="15" fill="rgb(253,11,6)" fg:x="50" fg:w="2"/><text x="3.3555%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (2 samples, 0.13%)</title><rect x="3.2383%" y="533" width="0.1295%" height="15" fill="rgb(247,143,39)" fg:x="50" fg:w="2"/><text x="3.3555%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.13%)</title><rect x="3.2383%" y="517" width="0.1295%" height="15" fill="rgb(236,97,10)" fg:x="50" fg:w="2"/><text x="3.3555%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.13%)</title><rect x="3.2383%" y="501" width="0.1295%" height="15" fill="rgb(233,208,19)" fg:x="50" fg:w="2"/><text x="3.3555%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.13%)</title><rect x="3.2383%" y="485" width="0.1295%" height="15" fill="rgb(216,164,2)" fg:x="50" fg:w="2"/><text x="3.3555%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.13%)</title><rect x="3.2383%" y="469" width="0.1295%" height="15" fill="rgb(220,129,5)" fg:x="50" fg:w="2"/><text x="3.3555%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.13%)</title><rect x="3.2383%" y="453" width="0.1295%" height="15" fill="rgb(242,17,10)" fg:x="50" fg:w="2"/><text x="3.3555%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.13%)</title><rect x="3.2383%" y="437" width="0.1295%" height="15" fill="rgb(242,107,0)" fg:x="50" fg:w="2"/><text x="3.3555%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="3.2383%" y="421" width="0.1295%" height="15" fill="rgb(251,28,31)" fg:x="50" fg:w="2"/><text x="3.3555%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (1 samples, 0.06%)</title><rect x="3.3031%" y="405" width="0.0648%" height="15" fill="rgb(233,223,10)" fg:x="51" fg:w="1"/><text x="3.4203%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.06%)</title><rect x="3.3031%" y="389" width="0.0648%" height="15" fill="rgb(215,21,27)" fg:x="51" fg:w="1"/><text x="3.4203%" y="399.50"></text></g><g><title>fringe_vs_astar::graph::generate_neighbors::_{{closure}} (1 samples, 0.06%)</title><rect x="3.3031%" y="373" width="0.0648%" height="15" fill="rgb(232,23,21)" fg:x="51" fg:w="1"/><text x="3.4203%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.65%)</title><rect x="2.9145%" y="597" width="0.6477%" height="15" fill="rgb(244,5,23)" fg:x="45" fg:w="10"/><text x="3.0317%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.19%)</title><rect x="3.3679%" y="581" width="0.1943%" height="15" fill="rgb(226,81,46)" fg:x="52" fg:w="3"/><text x="3.4851%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.06%)</title><rect x="3.5622%" y="597" width="0.0648%" height="15" fill="rgb(247,70,30)" fg:x="55" fg:w="1"/><text x="3.6794%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.06%)</title><rect x="3.5622%" y="581" width="0.0648%" height="15" fill="rgb(212,68,19)" fg:x="55" fg:w="1"/><text x="3.6794%" y="591.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.13%)</title><rect x="3.8860%" y="437" width="0.1295%" height="15" fill="rgb(240,187,13)" fg:x="60" fg:w="2"/><text x="4.0032%" y="447.50"></text></g><g><title>_int_free (3 samples, 0.19%)</title><rect x="4.0155%" y="437" width="0.1943%" height="15" fill="rgb(223,113,26)" fg:x="62" fg:w="3"/><text x="4.1327%" y="447.50"></text></g><g><title>down_read_trylock (1 samples, 0.06%)</title><rect x="4.5337%" y="373" width="0.0648%" height="15" fill="rgb(206,192,2)" fg:x="70" fg:w="1"/><text x="4.6509%" y="383.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="4.6632%" y="309" width="0.0648%" height="15" fill="rgb(241,108,4)" fg:x="72" fg:w="1"/><text x="4.7804%" y="319.50"></text></g><g><title>folio_add_lru_vma (3 samples, 0.19%)</title><rect x="4.7280%" y="309" width="0.1943%" height="15" fill="rgb(247,173,49)" fg:x="73" fg:w="3"/><text x="4.8452%" y="319.50"></text></g><g><title>folio_add_lru (3 samples, 0.19%)</title><rect x="4.7280%" y="293" width="0.1943%" height="15" fill="rgb(224,114,35)" fg:x="73" fg:w="3"/><text x="4.8452%" y="303.50"></text></g><g><title>folio_batch_move_lru (2 samples, 0.13%)</title><rect x="4.7927%" y="277" width="0.1295%" height="15" fill="rgb(245,159,27)" fg:x="74" fg:w="2"/><text x="4.9099%" y="287.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.45%)</title><rect x="4.5337%" y="421" width="0.4534%" height="15" fill="rgb(245,172,44)" fg:x="70" fg:w="7"/><text x="4.6509%" y="431.50"></text></g><g><title>exc_page_fault (7 samples, 0.45%)</title><rect x="4.5337%" y="405" width="0.4534%" height="15" fill="rgb(236,23,11)" fg:x="70" fg:w="7"/><text x="4.6509%" y="415.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.45%)</title><rect x="4.5337%" y="389" width="0.4534%" height="15" fill="rgb(205,117,38)" fg:x="70" fg:w="7"/><text x="4.6509%" y="399.50"></text></g><g><title>handle_mm_fault (6 samples, 0.39%)</title><rect x="4.5984%" y="373" width="0.3886%" height="15" fill="rgb(237,72,25)" fg:x="71" fg:w="6"/><text x="4.7156%" y="383.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.39%)</title><rect x="4.5984%" y="357" width="0.3886%" height="15" fill="rgb(244,70,9)" fg:x="71" fg:w="6"/><text x="4.7156%" y="367.50"></text></g><g><title>handle_pte_fault (5 samples, 0.32%)</title><rect x="4.6632%" y="341" width="0.3238%" height="15" fill="rgb(217,125,39)" fg:x="72" fg:w="5"/><text x="4.7804%" y="351.50"></text></g><g><title>do_anonymous_page (5 samples, 0.32%)</title><rect x="4.6632%" y="325" width="0.3238%" height="15" fill="rgb(235,36,10)" fg:x="72" fg:w="5"/><text x="4.7804%" y="335.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="4.9223%" y="309" width="0.0648%" height="15" fill="rgb(251,123,47)" fg:x="76" fg:w="1"/><text x="5.0395%" y="319.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="4.9223%" y="293" width="0.0648%" height="15" fill="rgb(221,13,13)" fg:x="76" fg:w="1"/><text x="5.0395%" y="303.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="4.9223%" y="277" width="0.0648%" height="15" fill="rgb(238,131,9)" fg:x="76" fg:w="1"/><text x="5.0395%" y="287.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="4.9223%" y="261" width="0.0648%" height="15" fill="rgb(211,50,8)" fg:x="76" fg:w="1"/><text x="5.0395%" y="271.50"></text></g><g><title>sync_regs (1 samples, 0.06%)</title><rect x="4.9870%" y="421" width="0.0648%" height="15" fill="rgb(245,182,24)" fg:x="77" fg:w="1"/><text x="5.1042%" y="431.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="5.0518%" y="341" width="0.0648%" height="15" fill="rgb(242,14,37)" fg:x="78" fg:w="1"/><text x="5.1690%" y="351.50"></text></g><g><title>_int_malloc (15 samples, 0.97%)</title><rect x="4.2098%" y="437" width="0.9715%" height="15" fill="rgb(246,228,12)" fg:x="65" fg:w="15"/><text x="4.3270%" y="447.50">_..</text></g><g><title>sysmalloc (2 samples, 0.13%)</title><rect x="5.0518%" y="421" width="0.1295%" height="15" fill="rgb(213,55,15)" fg:x="78" fg:w="2"/><text x="5.1690%" y="431.50"></text></g><g><title>__glibc_morecore (2 samples, 0.13%)</title><rect x="5.0518%" y="405" width="0.1295%" height="15" fill="rgb(209,9,3)" fg:x="78" fg:w="2"/><text x="5.1690%" y="415.50"></text></g><g><title>__GI___sbrk (2 samples, 0.13%)</title><rect x="5.0518%" y="389" width="0.1295%" height="15" fill="rgb(230,59,30)" fg:x="78" fg:w="2"/><text x="5.1690%" y="399.50"></text></g><g><title>__GI___sbrk (2 samples, 0.13%)</title><rect x="5.0518%" y="373" width="0.1295%" height="15" fill="rgb(209,121,21)" fg:x="78" fg:w="2"/><text x="5.1690%" y="383.50"></text></g><g><title>__brk (2 samples, 0.13%)</title><rect x="5.0518%" y="357" width="0.1295%" height="15" fill="rgb(220,109,13)" fg:x="78" fg:w="2"/><text x="5.1690%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="5.1166%" y="341" width="0.0648%" height="15" fill="rgb(232,18,1)" fg:x="79" fg:w="1"/><text x="5.2338%" y="351.50"></text></g><g><title>do_syscall_64 (1 samples, 0.06%)</title><rect x="5.1166%" y="325" width="0.0648%" height="15" fill="rgb(215,41,42)" fg:x="79" fg:w="1"/><text x="5.2338%" y="335.50"></text></g><g><title>x64_sys_call (1 samples, 0.06%)</title><rect x="5.1166%" y="309" width="0.0648%" height="15" fill="rgb(224,123,36)" fg:x="79" fg:w="1"/><text x="5.2338%" y="319.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.06%)</title><rect x="5.1166%" y="293" width="0.0648%" height="15" fill="rgb(240,125,3)" fg:x="79" fg:w="1"/><text x="5.2338%" y="303.50"></text></g><g><title>__do_sys_brk (1 samples, 0.06%)</title><rect x="5.1166%" y="277" width="0.0648%" height="15" fill="rgb(205,98,50)" fg:x="79" fg:w="1"/><text x="5.2338%" y="287.50"></text></g><g><title>do_brk_flags (1 samples, 0.06%)</title><rect x="5.1166%" y="261" width="0.0648%" height="15" fill="rgb(205,185,37)" fg:x="79" fg:w="1"/><text x="5.2338%" y="271.50"></text></g><g><title>mas_preallocate (1 samples, 0.06%)</title><rect x="5.1166%" y="245" width="0.0648%" height="15" fill="rgb(238,207,15)" fg:x="79" fg:w="1"/><text x="5.2338%" y="255.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.06%)</title><rect x="5.1166%" y="229" width="0.0648%" height="15" fill="rgb(213,199,42)" fg:x="79" fg:w="1"/><text x="5.2338%" y="239.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.06%)</title><rect x="5.1166%" y="213" width="0.0648%" height="15" fill="rgb(235,201,11)" fg:x="79" fg:w="1"/><text x="5.2338%" y="223.50"></text></g><g><title>handle_mm_fault (2 samples, 0.13%)</title><rect x="5.2461%" y="389" width="0.1295%" height="15" fill="rgb(207,46,11)" fg:x="81" fg:w="2"/><text x="5.3633%" y="399.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="5.2461%" y="373" width="0.1295%" height="15" fill="rgb(241,35,35)" fg:x="81" fg:w="2"/><text x="5.3633%" y="383.50"></text></g><g><title>handle_pte_fault (2 samples, 0.13%)</title><rect x="5.2461%" y="357" width="0.1295%" height="15" fill="rgb(243,32,47)" fg:x="81" fg:w="2"/><text x="5.3633%" y="367.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.06%)</title><rect x="5.3109%" y="341" width="0.0648%" height="15" fill="rgb(247,202,23)" fg:x="82" fg:w="1"/><text x="5.4281%" y="351.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.26%)</title><rect x="5.1813%" y="437" width="0.2591%" height="15" fill="rgb(219,102,11)" fg:x="80" fg:w="4"/><text x="5.2985%" y="447.50"></text></g><g><title>exc_page_fault (3 samples, 0.19%)</title><rect x="5.2461%" y="421" width="0.1943%" height="15" fill="rgb(243,110,44)" fg:x="81" fg:w="3"/><text x="5.3633%" y="431.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.19%)</title><rect x="5.2461%" y="405" width="0.1943%" height="15" fill="rgb(222,74,54)" fg:x="81" fg:w="3"/><text x="5.3633%" y="415.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.06%)</title><rect x="5.3756%" y="389" width="0.0648%" height="15" fill="rgb(216,99,12)" fg:x="83" fg:w="1"/><text x="5.4928%" y="399.50"></text></g><g><title>mas_walk (1 samples, 0.06%)</title><rect x="5.3756%" y="373" width="0.0648%" height="15" fill="rgb(226,22,26)" fg:x="83" fg:w="1"/><text x="5.4928%" y="383.50"></text></g><g><title>mtree_range_walk (1 samples, 0.06%)</title><rect x="5.3756%" y="357" width="0.0648%" height="15" fill="rgb(217,163,10)" fg:x="83" fg:w="1"/><text x="5.4928%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 1.88%)</title><rect x="3.6269%" y="597" width="1.8782%" height="15" fill="rgb(213,25,53)" fg:x="56" fg:w="29"/><text x="3.7441%" y="607.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 1.88%)</title><rect x="3.6269%" y="581" width="1.8782%" height="15" fill="rgb(252,105,26)" fg:x="56" fg:w="29"/><text x="3.7441%" y="591.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 1.88%)</title><rect x="3.6269%" y="565" width="1.8782%" height="15" fill="rgb(220,39,43)" fg:x="56" fg:w="29"/><text x="3.7441%" y="575.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 1.88%)</title><rect x="3.6269%" y="549" width="1.8782%" height="15" fill="rgb(229,68,48)" fg:x="56" fg:w="29"/><text x="3.7441%" y="559.50">allo..</text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 1.88%)</title><rect x="3.6269%" y="533" width="1.8782%" height="15" fill="rgb(252,8,32)" fg:x="56" fg:w="29"/><text x="3.7441%" y="543.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 1.81%)</title><rect x="3.6917%" y="517" width="1.8135%" height="15" fill="rgb(223,20,43)" fg:x="57" fg:w="28"/><text x="3.8089%" y="527.50">&lt;all..</text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 1.81%)</title><rect x="3.6917%" y="501" width="1.8135%" height="15" fill="rgb(229,81,49)" fg:x="57" fg:w="28"/><text x="3.8089%" y="511.50">allo..</text></g><g><title>alloc::alloc::realloc (28 samples, 1.81%)</title><rect x="3.6917%" y="485" width="1.8135%" height="15" fill="rgb(236,28,36)" fg:x="57" fg:w="28"/><text x="3.8089%" y="495.50">allo..</text></g><g><title>__GI___libc_realloc (28 samples, 1.81%)</title><rect x="3.6917%" y="469" width="1.8135%" height="15" fill="rgb(249,185,26)" fg:x="57" fg:w="28"/><text x="3.8089%" y="479.50">__GI..</text></g><g><title>_int_realloc (25 samples, 1.62%)</title><rect x="3.8860%" y="453" width="1.6192%" height="15" fill="rgb(249,174,33)" fg:x="60" fg:w="25"/><text x="4.0032%" y="463.50">_in..</text></g><g><title>memcpy@@GLIBC_2.14@plt (1 samples, 0.06%)</title><rect x="5.4404%" y="437" width="0.0648%" height="15" fill="rgb(233,201,37)" fg:x="84" fg:w="1"/><text x="5.5576%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.13%)</title><rect x="5.5052%" y="597" width="0.1295%" height="15" fill="rgb(221,78,26)" fg:x="85" fg:w="2"/><text x="5.6224%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (46 samples, 2.98%)</title><rect x="2.7850%" y="629" width="2.9793%" height="15" fill="rgb(250,127,30)" fg:x="43" fg:w="46"/><text x="2.9022%" y="639.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (45 samples, 2.91%)</title><rect x="2.8497%" y="613" width="2.9145%" height="15" fill="rgb(230,49,44)" fg:x="44" fg:w="45"/><text x="2.9669%" y="623.50">alloc::v..</text></g><g><title>core::ptr::write (2 samples, 0.13%)</title><rect x="5.6347%" y="597" width="0.1295%" height="15" fill="rgb(229,67,23)" fg:x="87" fg:w="2"/><text x="5.7519%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="5.7642%" y="629" width="0.0648%" height="15" fill="rgb(249,83,47)" fg:x="89" fg:w="1"/><text x="5.8814%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="5.7642%" y="613" width="0.0648%" height="15" fill="rgb(215,43,3)" fg:x="89" fg:w="1"/><text x="5.8814%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.06%)</title><rect x="5.7642%" y="597" width="0.0648%" height="15" fill="rgb(238,154,13)" fg:x="89" fg:w="1"/><text x="5.8814%" y="607.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1 samples, 0.06%)</title><rect x="5.7642%" y="581" width="0.0648%" height="15" fill="rgb(219,56,2)" fg:x="89" fg:w="1"/><text x="5.8814%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (1 samples, 0.06%)</title><rect x="5.7642%" y="565" width="0.0648%" height="15" fill="rgb(233,0,4)" fg:x="89" fg:w="1"/><text x="5.8814%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.06%)</title><rect x="5.7642%" y="549" width="0.0648%" height="15" fill="rgb(235,30,7)" fg:x="89" fg:w="1"/><text x="5.8814%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="5.7642%" y="533" width="0.0648%" height="15" fill="rgb(250,79,13)" fg:x="89" fg:w="1"/><text x="5.8814%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="5.7642%" y="517" width="0.0648%" height="15" fill="rgb(211,146,34)" fg:x="89" fg:w="1"/><text x="5.8814%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="5.7642%" y="501" width="0.0648%" height="15" fill="rgb(228,22,38)" fg:x="89" fg:w="1"/><text x="5.8814%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.06%)</title><rect x="5.7642%" y="485" width="0.0648%" height="15" fill="rgb(235,168,5)" fg:x="89" fg:w="1"/><text x="5.8814%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (1 samples, 0.06%)</title><rect x="5.7642%" y="469" width="0.0648%" height="15" fill="rgb(221,155,16)" fg:x="89" fg:w="1"/><text x="5.8814%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.06%)</title><rect x="5.7642%" y="453" width="0.0648%" height="15" fill="rgb(215,215,53)" fg:x="89" fg:w="1"/><text x="5.8814%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="5.7642%" y="437" width="0.0648%" height="15" fill="rgb(223,4,10)" fg:x="89" fg:w="1"/><text x="5.8814%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="5.7642%" y="421" width="0.0648%" height="15" fill="rgb(234,103,6)" fg:x="89" fg:w="1"/><text x="5.8814%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.06%)</title><rect x="5.7642%" y="405" width="0.0648%" height="15" fill="rgb(227,97,0)" fg:x="89" fg:w="1"/><text x="5.8814%" y="415.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.06%)</title><rect x="5.8290%" y="629" width="0.0648%" height="15" fill="rgb(234,150,53)" fg:x="90" fg:w="1"/><text x="5.9462%" y="639.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="6.4119%" y="373" width="0.0648%" height="15" fill="rgb(228,201,54)" fg:x="99" fg:w="1"/><text x="6.5291%" y="383.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.06%)</title><rect x="6.4119%" y="357" width="0.0648%" height="15" fill="rgb(222,22,37)" fg:x="99" fg:w="1"/><text x="6.5291%" y="367.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.06%)</title><rect x="6.4767%" y="373" width="0.0648%" height="15" fill="rgb(237,53,32)" fg:x="100" fg:w="1"/><text x="6.5939%" y="383.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.06%)</title><rect x="6.5415%" y="373" width="0.0648%" height="15" fill="rgb(233,25,53)" fg:x="101" fg:w="1"/><text x="6.6586%" y="383.50"></text></g><g><title>folio_add_lru (1 samples, 0.06%)</title><rect x="6.5415%" y="357" width="0.0648%" height="15" fill="rgb(210,40,34)" fg:x="101" fg:w="1"/><text x="6.6586%" y="367.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.06%)</title><rect x="6.5415%" y="341" width="0.0648%" height="15" fill="rgb(241,220,44)" fg:x="101" fg:w="1"/><text x="6.6586%" y="351.50"></text></g><g><title>lru_add_fn (1 samples, 0.06%)</title><rect x="6.5415%" y="325" width="0.0648%" height="15" fill="rgb(235,28,35)" fg:x="101" fg:w="1"/><text x="6.6586%" y="335.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.06%)</title><rect x="6.5415%" y="309" width="0.0648%" height="15" fill="rgb(210,56,17)" fg:x="101" fg:w="1"/><text x="6.6586%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="6.5415%" y="293" width="0.0648%" height="15" fill="rgb(224,130,29)" fg:x="101" fg:w="1"/><text x="6.6586%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="6.5415%" y="277" width="0.0648%" height="15" fill="rgb(235,212,8)" fg:x="101" fg:w="1"/><text x="6.6586%" y="287.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.06%)</title><rect x="6.6710%" y="309" width="0.0648%" height="15" fill="rgb(223,33,50)" fg:x="103" fg:w="1"/><text x="6.7882%" y="319.50"></text></g><g><title>_int_malloc (11 samples, 0.71%)</title><rect x="6.0881%" y="501" width="0.7124%" height="15" fill="rgb(219,149,13)" fg:x="94" fg:w="11"/><text x="6.2053%" y="511.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.39%)</title><rect x="6.4119%" y="485" width="0.3886%" height="15" fill="rgb(250,156,29)" fg:x="99" fg:w="6"/><text x="6.5291%" y="495.50"></text></g><g><title>exc_page_fault (6 samples, 0.39%)</title><rect x="6.4119%" y="469" width="0.3886%" height="15" fill="rgb(216,193,19)" fg:x="99" fg:w="6"/><text x="6.5291%" y="479.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.39%)</title><rect x="6.4119%" y="453" width="0.3886%" height="15" fill="rgb(216,135,14)" fg:x="99" fg:w="6"/><text x="6.5291%" y="463.50"></text></g><g><title>handle_mm_fault (6 samples, 0.39%)</title><rect x="6.4119%" y="437" width="0.3886%" height="15" fill="rgb(241,47,5)" fg:x="99" fg:w="6"/><text x="6.5291%" y="447.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.39%)</title><rect x="6.4119%" y="421" width="0.3886%" height="15" fill="rgb(233,42,35)" fg:x="99" fg:w="6"/><text x="6.5291%" y="431.50"></text></g><g><title>handle_pte_fault (6 samples, 0.39%)</title><rect x="6.4119%" y="405" width="0.3886%" height="15" fill="rgb(231,13,6)" fg:x="99" fg:w="6"/><text x="6.5291%" y="415.50"></text></g><g><title>do_anonymous_page (6 samples, 0.39%)</title><rect x="6.4119%" y="389" width="0.3886%" height="15" fill="rgb(207,181,40)" fg:x="99" fg:w="6"/><text x="6.5291%" y="399.50"></text></g><g><title>vma_alloc_folio (3 samples, 0.19%)</title><rect x="6.6062%" y="373" width="0.1943%" height="15" fill="rgb(254,173,49)" fg:x="102" fg:w="3"/><text x="6.7234%" y="383.50"></text></g><g><title>__folio_alloc (3 samples, 0.19%)</title><rect x="6.6062%" y="357" width="0.1943%" height="15" fill="rgb(221,1,38)" fg:x="102" fg:w="3"/><text x="6.7234%" y="367.50"></text></g><g><title>__alloc_pages (3 samples, 0.19%)</title><rect x="6.6062%" y="341" width="0.1943%" height="15" fill="rgb(206,124,46)" fg:x="102" fg:w="3"/><text x="6.7234%" y="351.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.13%)</title><rect x="6.6710%" y="325" width="0.1295%" height="15" fill="rgb(249,21,11)" fg:x="103" fg:w="2"/><text x="6.7882%" y="335.50"></text></g><g><title>rmqueue (1 samples, 0.06%)</title><rect x="6.7358%" y="309" width="0.0648%" height="15" fill="rgb(222,201,40)" fg:x="104" fg:w="1"/><text x="6.8529%" y="319.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.06%)</title><rect x="6.7358%" y="293" width="0.0648%" height="15" fill="rgb(235,61,29)" fg:x="104" fg:w="1"/><text x="6.8529%" y="303.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.06%)</title><rect x="6.7358%" y="277" width="0.0648%" height="15" fill="rgb(219,207,3)" fg:x="104" fg:w="1"/><text x="6.8529%" y="287.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.97%)</title><rect x="5.8938%" y="517" width="0.9715%" height="15" fill="rgb(222,56,46)" fg:x="91" fg:w="15"/><text x="6.0110%" y="527.50">_..</text></g><g><title>tcache_get (1 samples, 0.06%)</title><rect x="6.8005%" y="501" width="0.0648%" height="15" fill="rgb(239,76,54)" fg:x="105" fg:w="1"/><text x="6.9177%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (67 samples, 4.34%)</title><rect x="2.5907%" y="693" width="4.3394%" height="15" fill="rgb(231,124,27)" fg:x="40" fg:w="67"/><text x="2.7079%" y="703.50">core::iter::t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (67 samples, 4.34%)</title><rect x="2.5907%" y="677" width="4.3394%" height="15" fill="rgb(249,195,6)" fg:x="40" fg:w="67"/><text x="2.7079%" y="687.50">&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67 samples, 4.34%)</title><rect x="2.5907%" y="661" width="4.3394%" height="15" fill="rgb(237,174,47)" fg:x="40" fg:w="67"/><text x="2.7079%" y="671.50">&lt;alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (65 samples, 4.21%)</title><rect x="2.7202%" y="645" width="4.2098%" height="15" fill="rgb(206,201,31)" fg:x="42" fg:w="65"/><text x="2.8374%" y="655.50">&lt;alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 1.04%)</title><rect x="5.8938%" y="629" width="1.0363%" height="15" fill="rgb(231,57,52)" fg:x="91" fg:w="16"/><text x="6.0110%" y="639.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 1.04%)</title><rect x="5.8938%" y="613" width="1.0363%" height="15" fill="rgb(248,177,22)" fg:x="91" fg:w="16"/><text x="6.0110%" y="623.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 1.04%)</title><rect x="5.8938%" y="597" width="1.0363%" height="15" fill="rgb(215,211,37)" fg:x="91" fg:w="16"/><text x="6.0110%" y="607.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (16 samples, 1.04%)</title><rect x="5.8938%" y="581" width="1.0363%" height="15" fill="rgb(241,128,51)" fg:x="91" fg:w="16"/><text x="6.0110%" y="591.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 1.04%)</title><rect x="5.8938%" y="565" width="1.0363%" height="15" fill="rgb(227,165,31)" fg:x="91" fg:w="16"/><text x="6.0110%" y="575.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 1.04%)</title><rect x="5.8938%" y="549" width="1.0363%" height="15" fill="rgb(228,167,24)" fg:x="91" fg:w="16"/><text x="6.0110%" y="559.50">a..</text></g><g><title>alloc::alloc::alloc (16 samples, 1.04%)</title><rect x="5.8938%" y="533" width="1.0363%" height="15" fill="rgb(228,143,12)" fg:x="91" fg:w="16"/><text x="6.0110%" y="543.50">a..</text></g><g><title>__rust_alloc (1 samples, 0.06%)</title><rect x="6.8653%" y="517" width="0.0648%" height="15" fill="rgb(249,149,8)" fg:x="106" fg:w="1"/><text x="6.9825%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.19%)</title><rect x="6.9301%" y="693" width="0.1943%" height="15" fill="rgb(243,35,44)" fg:x="107" fg:w="3"/><text x="7.0472%" y="703.50"></text></g><g><title>fringe_vs_astar::graph::generate_neighbors::_{{closure}} (3 samples, 0.19%)</title><rect x="6.9301%" y="677" width="0.1943%" height="15" fill="rgb(246,89,9)" fg:x="107" fg:w="3"/><text x="7.0472%" y="687.50"></text></g><g><title>&lt;fringe_vs_astar::map::GridMap as fringe_vs_astar::map::Map&gt;::get_cell (2 samples, 0.13%)</title><rect x="6.9948%" y="661" width="0.1295%" height="15" fill="rgb(233,213,13)" fg:x="108" fg:w="2"/><text x="7.1120%" y="671.50"></text></g><g><title>__GI___libc_free (4 samples, 0.26%)</title><rect x="7.1891%" y="613" width="0.2591%" height="15" fill="rgb(233,141,41)" fg:x="111" fg:w="4"/><text x="7.3063%" y="623.50"></text></g><g><title>_int_free (4 samples, 0.26%)</title><rect x="7.1891%" y="597" width="0.2591%" height="15" fill="rgb(239,167,4)" fg:x="111" fg:w="4"/><text x="7.3063%" y="607.50"></text></g><g><title>&lt;fringe_vs_astar::graph::AdjacencyGridGraph as fringe_vs_astar::graph::Graph&gt;::new (92 samples, 5.96%)</title><rect x="1.5544%" y="725" width="5.9585%" height="15" fill="rgb(209,217,16)" fg:x="24" fg:w="92"/><text x="1.6716%" y="735.50">&lt;fringe_vs_astar::g..</text></g><g><title>fringe_vs_astar::graph::generate_neighbors (86 samples, 5.57%)</title><rect x="1.9430%" y="709" width="5.5699%" height="15" fill="rgb(219,88,35)" fg:x="30" fg:w="86"/><text x="2.0602%" y="719.50">fringe_vs_astar::g..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (6 samples, 0.39%)</title><rect x="7.1244%" y="693" width="0.3886%" height="15" fill="rgb(220,193,23)" fg:x="110" fg:w="6"/><text x="7.2415%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (6 samples, 0.39%)</title><rect x="7.1244%" y="677" width="0.3886%" height="15" fill="rgb(230,90,52)" fg:x="110" fg:w="6"/><text x="7.2415%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.39%)</title><rect x="7.1244%" y="661" width="0.3886%" height="15" fill="rgb(252,106,19)" fg:x="110" fg:w="6"/><text x="7.2415%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.32%)</title><rect x="7.1891%" y="645" width="0.3238%" height="15" fill="rgb(206,74,20)" fg:x="111" fg:w="5"/><text x="7.3063%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.32%)</title><rect x="7.1891%" y="629" width="0.3238%" height="15" fill="rgb(230,138,44)" fg:x="111" fg:w="5"/><text x="7.3063%" y="639.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.06%)</title><rect x="7.4482%" y="613" width="0.0648%" height="15" fill="rgb(235,182,43)" fg:x="115" fg:w="1"/><text x="7.5654%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::map::Map&gt;&gt; (1 samples, 0.06%)</title><rect x="7.5130%" y="725" width="0.0648%" height="15" fill="rgb(242,16,51)" fg:x="116" fg:w="1"/><text x="7.6301%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::map::GridMap&gt; (1 samples, 0.06%)</title><rect x="7.5130%" y="709" width="0.0648%" height="15" fill="rgb(248,9,4)" fg:x="116" fg:w="1"/><text x="7.6301%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;bool&gt;&gt;&gt; (1 samples, 0.06%)</title><rect x="7.5130%" y="693" width="0.0648%" height="15" fill="rgb(210,31,22)" fg:x="116" fg:w="1"/><text x="7.6301%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="7.5130%" y="677" width="0.0648%" height="15" fill="rgb(239,54,39)" fg:x="116" fg:w="1"/><text x="7.6301%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;bool&gt;]&gt; (1 samples, 0.06%)</title><rect x="7.5130%" y="661" width="0.0648%" height="15" fill="rgb(230,99,41)" fg:x="116" fg:w="1"/><text x="7.6301%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (1 samples, 0.06%)</title><rect x="7.5130%" y="645" width="0.0648%" height="15" fill="rgb(253,106,12)" fg:x="116" fg:w="1"/><text x="7.6301%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (1 samples, 0.06%)</title><rect x="7.5130%" y="629" width="0.0648%" height="15" fill="rgb(213,46,41)" fg:x="116" fg:w="1"/><text x="7.6301%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="7.5130%" y="613" width="0.0648%" height="15" fill="rgb(215,133,35)" fg:x="116" fg:w="1"/><text x="7.6301%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="7.5130%" y="597" width="0.0648%" height="15" fill="rgb(213,28,5)" fg:x="116" fg:w="1"/><text x="7.6301%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="7.5130%" y="581" width="0.0648%" height="15" fill="rgb(215,77,49)" fg:x="116" fg:w="1"/><text x="7.6301%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="7.5130%" y="565" width="0.0648%" height="15" fill="rgb(248,100,22)" fg:x="116" fg:w="1"/><text x="7.6301%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="7.5130%" y="549" width="0.0648%" height="15" fill="rgb(208,67,9)" fg:x="116" fg:w="1"/><text x="7.6301%" y="559.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.06%)</title><rect x="7.5777%" y="421" width="0.0648%" height="15" fill="rgb(219,133,21)" fg:x="117" fg:w="1"/><text x="7.6949%" y="431.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.06%)</title><rect x="7.5777%" y="405" width="0.0648%" height="15" fill="rgb(246,46,29)" fg:x="117" fg:w="1"/><text x="7.6949%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.06%)</title><rect x="7.5777%" y="389" width="0.0648%" height="15" fill="rgb(246,185,52)" fg:x="117" fg:w="1"/><text x="7.6949%" y="399.50"></text></g><g><title>release_pages (1 samples, 0.06%)</title><rect x="7.5777%" y="373" width="0.0648%" height="15" fill="rgb(252,136,11)" fg:x="117" fg:w="1"/><text x="7.6949%" y="383.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.06%)</title><rect x="7.5777%" y="357" width="0.0648%" height="15" fill="rgb(219,138,53)" fg:x="117" fg:w="1"/><text x="7.6949%" y="367.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.06%)</title><rect x="7.5777%" y="341" width="0.0648%" height="15" fill="rgb(211,51,23)" fg:x="117" fg:w="1"/><text x="7.6949%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.06%)</title><rect x="7.5777%" y="325" width="0.0648%" height="15" fill="rgb(247,221,28)" fg:x="117" fg:w="1"/><text x="7.6949%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,usize)&gt;&gt; (2 samples, 0.13%)</title><rect x="7.5777%" y="725" width="0.1295%" height="15" fill="rgb(251,222,45)" fg:x="117" fg:w="2"/><text x="7.6949%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (2 samples, 0.13%)</title><rect x="7.5777%" y="709" width="0.1295%" height="15" fill="rgb(217,162,53)" fg:x="117" fg:w="2"/><text x="7.6949%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="7.5777%" y="693" width="0.1295%" height="15" fill="rgb(229,93,14)" fg:x="117" fg:w="2"/><text x="7.6949%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.13%)</title><rect x="7.5777%" y="677" width="0.1295%" height="15" fill="rgb(209,67,49)" fg:x="117" fg:w="2"/><text x="7.6949%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.13%)</title><rect x="7.5777%" y="661" width="0.1295%" height="15" fill="rgb(213,87,29)" fg:x="117" fg:w="2"/><text x="7.6949%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.13%)</title><rect x="7.5777%" y="645" width="0.1295%" height="15" fill="rgb(205,151,52)" fg:x="117" fg:w="2"/><text x="7.6949%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.13%)</title><rect x="7.5777%" y="629" width="0.1295%" height="15" fill="rgb(253,215,39)" fg:x="117" fg:w="2"/><text x="7.6949%" y="639.50"></text></g><g><title>systrim (2 samples, 0.13%)</title><rect x="7.5777%" y="613" width="0.1295%" height="15" fill="rgb(221,220,41)" fg:x="117" fg:w="2"/><text x="7.6949%" y="623.50"></text></g><g><title>__glibc_morecore (2 samples, 0.13%)</title><rect x="7.5777%" y="597" width="0.1295%" height="15" fill="rgb(218,133,21)" fg:x="117" fg:w="2"/><text x="7.6949%" y="607.50"></text></g><g><title>__GI___sbrk (2 samples, 0.13%)</title><rect x="7.5777%" y="581" width="0.1295%" height="15" fill="rgb(221,193,43)" fg:x="117" fg:w="2"/><text x="7.6949%" y="591.50"></text></g><g><title>__GI___sbrk (2 samples, 0.13%)</title><rect x="7.5777%" y="565" width="0.1295%" height="15" fill="rgb(240,128,52)" fg:x="117" fg:w="2"/><text x="7.6949%" y="575.50"></text></g><g><title>__brk (2 samples, 0.13%)</title><rect x="7.5777%" y="549" width="0.1295%" height="15" fill="rgb(253,114,12)" fg:x="117" fg:w="2"/><text x="7.6949%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="7.5777%" y="533" width="0.1295%" height="15" fill="rgb(215,223,47)" fg:x="117" fg:w="2"/><text x="7.6949%" y="543.50"></text></g><g><title>do_syscall_64 (2 samples, 0.13%)</title><rect x="7.5777%" y="517" width="0.1295%" height="15" fill="rgb(248,225,23)" fg:x="117" fg:w="2"/><text x="7.6949%" y="527.50"></text></g><g><title>x64_sys_call (2 samples, 0.13%)</title><rect x="7.5777%" y="501" width="0.1295%" height="15" fill="rgb(250,108,0)" fg:x="117" fg:w="2"/><text x="7.6949%" y="511.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.13%)</title><rect x="7.5777%" y="485" width="0.1295%" height="15" fill="rgb(228,208,7)" fg:x="117" fg:w="2"/><text x="7.6949%" y="495.50"></text></g><g><title>__do_sys_brk (2 samples, 0.13%)</title><rect x="7.5777%" y="469" width="0.1295%" height="15" fill="rgb(244,45,10)" fg:x="117" fg:w="2"/><text x="7.6949%" y="479.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.13%)</title><rect x="7.5777%" y="453" width="0.1295%" height="15" fill="rgb(207,125,25)" fg:x="117" fg:w="2"/><text x="7.6949%" y="463.50"></text></g><g><title>unmap_region (2 samples, 0.13%)</title><rect x="7.5777%" y="437" width="0.1295%" height="15" fill="rgb(210,195,18)" fg:x="117" fg:w="2"/><text x="7.6949%" y="447.50"></text></g><g><title>unmap_vmas (1 samples, 0.06%)</title><rect x="7.6425%" y="421" width="0.0648%" height="15" fill="rgb(249,80,12)" fg:x="118" fg:w="1"/><text x="7.7597%" y="431.50"></text></g><g><title>unmap_single_vma (1 samples, 0.06%)</title><rect x="7.6425%" y="405" width="0.0648%" height="15" fill="rgb(221,65,9)" fg:x="118" fg:w="1"/><text x="7.7597%" y="415.50"></text></g><g><title>unmap_page_range (1 samples, 0.06%)</title><rect x="7.6425%" y="389" width="0.0648%" height="15" fill="rgb(235,49,36)" fg:x="118" fg:w="1"/><text x="7.7597%" y="399.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.06%)</title><rect x="7.6425%" y="373" width="0.0648%" height="15" fill="rgb(225,32,20)" fg:x="118" fg:w="1"/><text x="7.7597%" y="383.50"></text></g><g><title>zap_pte_range (1 samples, 0.06%)</title><rect x="7.6425%" y="357" width="0.0648%" height="15" fill="rgb(215,141,46)" fg:x="118" fg:w="1"/><text x="7.7597%" y="367.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.06%)</title><rect x="7.6425%" y="341" width="0.0648%" height="15" fill="rgb(250,160,47)" fg:x="118" fg:w="1"/><text x="7.7597%" y="351.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.06%)</title><rect x="7.6425%" y="325" width="0.0648%" height="15" fill="rgb(216,222,40)" fg:x="118" fg:w="1"/><text x="7.7597%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.06%)</title><rect x="7.6425%" y="309" width="0.0648%" height="15" fill="rgb(234,217,39)" fg:x="118" fg:w="1"/><text x="7.7597%" y="319.50"></text></g><g><title>release_pages (1 samples, 0.06%)</title><rect x="7.6425%" y="293" width="0.0648%" height="15" fill="rgb(207,178,40)" fg:x="118" fg:w="1"/><text x="7.7597%" y="303.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.06%)</title><rect x="7.6425%" y="277" width="0.0648%" height="15" fill="rgb(221,136,13)" fg:x="118" fg:w="1"/><text x="7.7597%" y="287.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.13%)</title><rect x="7.7720%" y="533" width="0.1295%" height="15" fill="rgb(249,199,10)" fg:x="120" fg:w="2"/><text x="7.8892%" y="543.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.13%)</title><rect x="7.7720%" y="517" width="0.1295%" height="15" fill="rgb(249,222,13)" fg:x="120" fg:w="2"/><text x="7.8892%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.06%)</title><rect x="7.9016%" y="389" width="0.0648%" height="15" fill="rgb(244,185,38)" fg:x="122" fg:w="1"/><text x="8.0187%" y="399.50"></text></g><g><title>copy_page_to_iter (3 samples, 0.19%)</title><rect x="8.0311%" y="277" width="0.1943%" height="15" fill="rgb(236,202,9)" fg:x="124" fg:w="3"/><text x="8.1483%" y="287.50"></text></g><g><title>_copy_to_iter (3 samples, 0.19%)</title><rect x="8.0311%" y="261" width="0.1943%" height="15" fill="rgb(250,229,37)" fg:x="124" fg:w="3"/><text x="8.1483%" y="271.50"></text></g><g><title>copyout (3 samples, 0.19%)</title><rect x="8.0311%" y="245" width="0.1943%" height="15" fill="rgb(206,174,23)" fg:x="124" fg:w="3"/><text x="8.1483%" y="255.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.06%)</title><rect x="8.2254%" y="261" width="0.0648%" height="15" fill="rgb(211,33,43)" fg:x="127" fg:w="1"/><text x="8.3426%" y="271.50"></text></g><g><title>xas_load (1 samples, 0.06%)</title><rect x="8.2254%" y="245" width="0.0648%" height="15" fill="rgb(245,58,50)" fg:x="127" fg:w="1"/><text x="8.3426%" y="255.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.06%)</title><rect x="8.2902%" y="101" width="0.0648%" height="15" fill="rgb(244,68,36)" fg:x="128" fg:w="1"/><text x="8.4073%" y="111.50"></text></g><g><title>filemap_update_page (20 samples, 1.30%)</title><rect x="8.2902%" y="261" width="1.2953%" height="15" fill="rgb(232,229,15)" fg:x="128" fg:w="20"/><text x="8.4073%" y="271.50">fi..</text></g><g><title>folio_wait_bit_common (20 samples, 1.30%)</title><rect x="8.2902%" y="245" width="1.2953%" height="15" fill="rgb(254,30,23)" fg:x="128" fg:w="20"/><text x="8.4073%" y="255.50">fo..</text></g><g><title>io_schedule (20 samples, 1.30%)</title><rect x="8.2902%" y="229" width="1.2953%" height="15" fill="rgb(235,160,14)" fg:x="128" fg:w="20"/><text x="8.4073%" y="239.50">io..</text></g><g><title>schedule (20 samples, 1.30%)</title><rect x="8.2902%" y="213" width="1.2953%" height="15" fill="rgb(212,155,44)" fg:x="128" fg:w="20"/><text x="8.4073%" y="223.50">sc..</text></g><g><title>__schedule (20 samples, 1.30%)</title><rect x="8.2902%" y="197" width="1.2953%" height="15" fill="rgb(226,2,50)" fg:x="128" fg:w="20"/><text x="8.4073%" y="207.50">__..</text></g><g><title>finish_task_switch.isra.0 (20 samples, 1.30%)</title><rect x="8.2902%" y="181" width="1.2953%" height="15" fill="rgb(234,177,6)" fg:x="128" fg:w="20"/><text x="8.4073%" y="191.50">fi..</text></g><g><title>__perf_event_task_sched_in (20 samples, 1.30%)</title><rect x="8.2902%" y="165" width="1.2953%" height="15" fill="rgb(217,24,9)" fg:x="128" fg:w="20"/><text x="8.4073%" y="175.50">__..</text></g><g><title>perf_ctx_enable (20 samples, 1.30%)</title><rect x="8.2902%" y="149" width="1.2953%" height="15" fill="rgb(220,13,46)" fg:x="128" fg:w="20"/><text x="8.4073%" y="159.50">pe..</text></g><g><title>x86_pmu_enable (20 samples, 1.30%)</title><rect x="8.2902%" y="133" width="1.2953%" height="15" fill="rgb(239,221,27)" fg:x="128" fg:w="20"/><text x="8.4073%" y="143.50">x8..</text></g><g><title>intel_pmu_enable_all (20 samples, 1.30%)</title><rect x="8.2902%" y="117" width="1.2953%" height="15" fill="rgb(222,198,25)" fg:x="128" fg:w="20"/><text x="8.4073%" y="127.50">in..</text></g><g><title>native_write_msr (19 samples, 1.23%)</title><rect x="8.3549%" y="101" width="1.2306%" height="15" fill="rgb(211,99,13)" fg:x="129" fg:w="19"/><text x="8.4721%" y="111.50">na..</text></g><g><title>filemap_add_folio (1 samples, 0.06%)</title><rect x="9.6503%" y="197" width="0.0648%" height="15" fill="rgb(232,111,31)" fg:x="149" fg:w="1"/><text x="9.7674%" y="207.50"></text></g><g><title>__filemap_add_folio (1 samples, 0.06%)</title><rect x="9.6503%" y="181" width="0.0648%" height="15" fill="rgb(245,82,37)" fg:x="149" fg:w="1"/><text x="9.7674%" y="191.50"></text></g><g><title>filemap_alloc_folio (1 samples, 0.06%)</title><rect x="9.7150%" y="197" width="0.0648%" height="15" fill="rgb(227,149,46)" fg:x="150" fg:w="1"/><text x="9.8322%" y="207.50"></text></g><g><title>folio_alloc (1 samples, 0.06%)</title><rect x="9.7150%" y="181" width="0.0648%" height="15" fill="rgb(218,36,50)" fg:x="150" fg:w="1"/><text x="9.8322%" y="191.50"></text></g><g><title>alloc_pages (1 samples, 0.06%)</title><rect x="9.7150%" y="165" width="0.0648%" height="15" fill="rgb(226,80,48)" fg:x="150" fg:w="1"/><text x="9.8322%" y="175.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="9.7150%" y="149" width="0.0648%" height="15" fill="rgb(238,224,15)" fg:x="150" fg:w="1"/><text x="9.8322%" y="159.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="9.7150%" y="133" width="0.0648%" height="15" fill="rgb(241,136,10)" fg:x="150" fg:w="1"/><text x="9.8322%" y="143.50"></text></g><g><title>clear_page_erms (1 samples, 0.06%)</title><rect x="9.7150%" y="117" width="0.0648%" height="15" fill="rgb(208,32,45)" fg:x="150" fg:w="1"/><text x="9.8322%" y="127.50"></text></g><g><title>page_cache_async_ra (5 samples, 0.32%)</title><rect x="9.5855%" y="261" width="0.3238%" height="15" fill="rgb(207,135,9)" fg:x="148" fg:w="5"/><text x="9.7027%" y="271.50"></text></g><g><title>ondemand_readahead (5 samples, 0.32%)</title><rect x="9.5855%" y="245" width="0.3238%" height="15" fill="rgb(206,86,44)" fg:x="148" fg:w="5"/><text x="9.7027%" y="255.50"></text></g><g><title>page_cache_ra_order (4 samples, 0.26%)</title><rect x="9.6503%" y="229" width="0.2591%" height="15" fill="rgb(245,177,15)" fg:x="149" fg:w="4"/><text x="9.7674%" y="239.50"></text></g><g><title>page_cache_ra_unbounded (4 samples, 0.26%)</title><rect x="9.6503%" y="213" width="0.2591%" height="15" fill="rgb(206,64,50)" fg:x="149" fg:w="4"/><text x="9.7674%" y="223.50"></text></g><g><title>read_pages (2 samples, 0.13%)</title><rect x="9.7798%" y="197" width="0.1295%" height="15" fill="rgb(234,36,40)" fg:x="151" fg:w="2"/><text x="9.8970%" y="207.50"></text></g><g><title>ext4_readahead (2 samples, 0.13%)</title><rect x="9.7798%" y="181" width="0.1295%" height="15" fill="rgb(213,64,8)" fg:x="151" fg:w="2"/><text x="9.8970%" y="191.50"></text></g><g><title>ext4_mpage_readpages (2 samples, 0.13%)</title><rect x="9.7798%" y="165" width="0.1295%" height="15" fill="rgb(210,75,36)" fg:x="151" fg:w="2"/><text x="9.8970%" y="175.50"></text></g><g><title>xa_load (2 samples, 0.13%)</title><rect x="9.7798%" y="149" width="0.1295%" height="15" fill="rgb(229,88,21)" fg:x="151" fg:w="2"/><text x="9.8970%" y="159.50"></text></g><g><title>xas_descend (2 samples, 0.13%)</title><rect x="9.7798%" y="133" width="0.1295%" height="15" fill="rgb(252,204,47)" fg:x="151" fg:w="2"/><text x="9.8970%" y="143.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (32 samples, 2.07%)</title><rect x="7.9016%" y="501" width="2.0725%" height="15" fill="rgb(208,77,27)" fg:x="122" fg:w="32"/><text x="8.0187%" y="511.50">&lt;std:..</text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (32 samples, 2.07%)</title><rect x="7.9016%" y="485" width="2.0725%" height="15" fill="rgb(221,76,26)" fg:x="122" fg:w="32"/><text x="8.0187%" y="495.50">std::..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (32 samples, 2.07%)</title><rect x="7.9016%" y="469" width="2.0725%" height="15" fill="rgb(225,139,18)" fg:x="122" fg:w="32"/><text x="8.0187%" y="479.50">std::..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (32 samples, 2.07%)</title><rect x="7.9016%" y="453" width="2.0725%" height="15" fill="rgb(230,137,11)" fg:x="122" fg:w="32"/><text x="8.0187%" y="463.50">&lt;std:..</text></g><g><title>__GI___libc_read (32 samples, 2.07%)</title><rect x="7.9016%" y="437" width="2.0725%" height="15" fill="rgb(212,28,1)" fg:x="122" fg:w="32"/><text x="8.0187%" y="447.50">__GI_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (32 samples, 2.07%)</title><rect x="7.9016%" y="421" width="2.0725%" height="15" fill="rgb(248,164,17)" fg:x="122" fg:w="32"/><text x="8.0187%" y="431.50">entry..</text></g><g><title>do_syscall_64 (32 samples, 2.07%)</title><rect x="7.9016%" y="405" width="2.0725%" height="15" fill="rgb(222,171,42)" fg:x="122" fg:w="32"/><text x="8.0187%" y="415.50">do_sy..</text></g><g><title>x64_sys_call (31 samples, 2.01%)</title><rect x="7.9663%" y="389" width="2.0078%" height="15" fill="rgb(243,84,45)" fg:x="123" fg:w="31"/><text x="8.0835%" y="399.50">x64_s..</text></g><g><title>__x64_sys_read (31 samples, 2.01%)</title><rect x="7.9663%" y="373" width="2.0078%" height="15" fill="rgb(252,49,23)" fg:x="123" fg:w="31"/><text x="8.0835%" y="383.50">__x64..</text></g><g><title>ksys_read (31 samples, 2.01%)</title><rect x="7.9663%" y="357" width="2.0078%" height="15" fill="rgb(215,19,7)" fg:x="123" fg:w="31"/><text x="8.0835%" y="367.50">ksys_..</text></g><g><title>vfs_read (31 samples, 2.01%)</title><rect x="7.9663%" y="341" width="2.0078%" height="15" fill="rgb(238,81,41)" fg:x="123" fg:w="31"/><text x="8.0835%" y="351.50">vfs_r..</text></g><g><title>ext4_file_read_iter (30 samples, 1.94%)</title><rect x="8.0311%" y="325" width="1.9430%" height="15" fill="rgb(210,199,37)" fg:x="124" fg:w="30"/><text x="8.1483%" y="335.50">ext4_..</text></g><g><title>generic_file_read_iter (30 samples, 1.94%)</title><rect x="8.0311%" y="309" width="1.9430%" height="15" fill="rgb(244,192,49)" fg:x="124" fg:w="30"/><text x="8.1483%" y="319.50">gener..</text></g><g><title>filemap_read (30 samples, 1.94%)</title><rect x="8.0311%" y="293" width="1.9430%" height="15" fill="rgb(226,211,11)" fg:x="124" fg:w="30"/><text x="8.1483%" y="303.50">filem..</text></g><g><title>filemap_get_pages (27 samples, 1.75%)</title><rect x="8.2254%" y="277" width="1.7487%" height="15" fill="rgb(236,162,54)" fg:x="127" fg:w="27"/><text x="8.3426%" y="287.50">file..</text></g><g><title>page_cache_sync_ra (1 samples, 0.06%)</title><rect x="9.9093%" y="261" width="0.0648%" height="15" fill="rgb(220,229,9)" fg:x="153" fg:w="1"/><text x="10.0265%" y="271.50"></text></g><g><title>ondemand_readahead (1 samples, 0.06%)</title><rect x="9.9093%" y="245" width="0.0648%" height="15" fill="rgb(250,87,22)" fg:x="153" fg:w="1"/><text x="10.0265%" y="255.50"></text></g><g><title>page_cache_ra_order (1 samples, 0.06%)</title><rect x="9.9093%" y="229" width="0.0648%" height="15" fill="rgb(239,43,17)" fg:x="153" fg:w="1"/><text x="10.0265%" y="239.50"></text></g><g><title>page_cache_ra_unbounded (1 samples, 0.06%)</title><rect x="9.9093%" y="213" width="0.0648%" height="15" fill="rgb(231,177,25)" fg:x="153" fg:w="1"/><text x="10.0265%" y="223.50"></text></g><g><title>filemap_add_folio (1 samples, 0.06%)</title><rect x="9.9093%" y="197" width="0.0648%" height="15" fill="rgb(219,179,1)" fg:x="153" fg:w="1"/><text x="10.0265%" y="207.50"></text></g><g><title>__filemap_add_folio (1 samples, 0.06%)</title><rect x="9.9093%" y="181" width="0.0648%" height="15" fill="rgb(238,219,53)" fg:x="153" fg:w="1"/><text x="10.0265%" y="191.50"></text></g><g><title>xas_store (1 samples, 0.06%)</title><rect x="9.9093%" y="165" width="0.0648%" height="15" fill="rgb(232,167,36)" fg:x="153" fg:w="1"/><text x="10.0265%" y="175.50"></text></g><g><title>workingset_update_node (1 samples, 0.06%)</title><rect x="9.9093%" y="149" width="0.0648%" height="15" fill="rgb(244,19,51)" fg:x="153" fg:w="1"/><text x="10.0265%" y="159.50"></text></g><g><title>list_lru_del (1 samples, 0.06%)</title><rect x="9.9093%" y="133" width="0.0648%" height="15" fill="rgb(224,6,22)" fg:x="153" fg:w="1"/><text x="10.0265%" y="143.50"></text></g><g><title>xa_load (1 samples, 0.06%)</title><rect x="9.9093%" y="117" width="0.0648%" height="15" fill="rgb(224,145,5)" fg:x="153" fg:w="1"/><text x="10.0265%" y="127.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.06%)</title><rect x="10.0389%" y="293" width="0.0648%" height="15" fill="rgb(234,130,49)" fg:x="155" fg:w="1"/><text x="10.1560%" y="303.50"></text></g><g><title>common_interrupt (1 samples, 0.06%)</title><rect x="10.0389%" y="277" width="0.0648%" height="15" fill="rgb(254,6,2)" fg:x="155" fg:w="1"/><text x="10.1560%" y="287.50"></text></g><g><title>__common_interrupt (1 samples, 0.06%)</title><rect x="10.0389%" y="261" width="0.0648%" height="15" fill="rgb(208,96,46)" fg:x="155" fg:w="1"/><text x="10.1560%" y="271.50"></text></g><g><title>handle_edge_irq (1 samples, 0.06%)</title><rect x="10.0389%" y="245" width="0.0648%" height="15" fill="rgb(239,3,39)" fg:x="155" fg:w="1"/><text x="10.1560%" y="255.50"></text></g><g><title>handle_irq_event (1 samples, 0.06%)</title><rect x="10.0389%" y="229" width="0.0648%" height="15" fill="rgb(233,210,1)" fg:x="155" fg:w="1"/><text x="10.1560%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.06%)</title><rect x="10.0389%" y="213" width="0.0648%" height="15" fill="rgb(244,137,37)" fg:x="155" fg:w="1"/><text x="10.1560%" y="223.50"></text></g><g><title>nvme_irq (1 samples, 0.06%)</title><rect x="10.0389%" y="197" width="0.0648%" height="15" fill="rgb(240,136,2)" fg:x="155" fg:w="1"/><text x="10.1560%" y="207.50"></text></g><g><title>nvme_pci_complete_batch (1 samples, 0.06%)</title><rect x="10.0389%" y="181" width="0.0648%" height="15" fill="rgb(239,18,37)" fg:x="155" fg:w="1"/><text x="10.1560%" y="191.50"></text></g><g><title>blk_mq_end_request_batch (1 samples, 0.06%)</title><rect x="10.0389%" y="165" width="0.0648%" height="15" fill="rgb(218,185,22)" fg:x="155" fg:w="1"/><text x="10.1560%" y="175.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.13%)</title><rect x="10.0389%" y="341" width="0.1295%" height="15" fill="rgb(225,218,4)" fg:x="155" fg:w="2"/><text x="10.1560%" y="351.50"></text></g><g><title>exc_page_fault (2 samples, 0.13%)</title><rect x="10.0389%" y="325" width="0.1295%" height="15" fill="rgb(230,182,32)" fg:x="155" fg:w="2"/><text x="10.1560%" y="335.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="10.0389%" y="309" width="0.1295%" height="15" fill="rgb(242,56,43)" fg:x="155" fg:w="2"/><text x="10.1560%" y="319.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="10.1036%" y="293" width="0.0648%" height="15" fill="rgb(233,99,24)" fg:x="156" fg:w="1"/><text x="10.2208%" y="303.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="10.1036%" y="277" width="0.0648%" height="15" fill="rgb(234,209,42)" fg:x="156" fg:w="1"/><text x="10.2208%" y="287.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="10.1036%" y="261" width="0.0648%" height="15" fill="rgb(227,7,12)" fg:x="156" fg:w="1"/><text x="10.2208%" y="271.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="10.1036%" y="245" width="0.0648%" height="15" fill="rgb(245,203,43)" fg:x="156" fg:w="1"/><text x="10.2208%" y="255.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.06%)</title><rect x="10.1036%" y="229" width="0.0648%" height="15" fill="rgb(238,205,33)" fg:x="156" fg:w="1"/><text x="10.2208%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h030f5c5a0d744980E.llvm.1354045420795072050 (4 samples, 0.26%)</title><rect x="9.9741%" y="389" width="0.2591%" height="15" fill="rgb(231,56,7)" fg:x="154" fg:w="4"/><text x="10.0913%" y="399.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.26%)</title><rect x="9.9741%" y="373" width="0.2591%" height="15" fill="rgb(244,186,29)" fg:x="154" fg:w="4"/><text x="10.0913%" y="383.50"></text></g><g><title>_int_malloc (4 samples, 0.26%)</title><rect x="9.9741%" y="357" width="0.2591%" height="15" fill="rgb(234,111,31)" fg:x="154" fg:w="4"/><text x="10.0913%" y="367.50"></text></g><g><title>sync_regs (1 samples, 0.06%)</title><rect x="10.1684%" y="341" width="0.0648%" height="15" fill="rgb(241,149,10)" fg:x="157" fg:w="1"/><text x="10.2856%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="10.2332%" y="293" width="0.0648%" height="15" fill="rgb(249,206,44)" fg:x="158" fg:w="1"/><text x="10.3503%" y="303.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="10.2332%" y="277" width="0.0648%" height="15" fill="rgb(251,153,30)" fg:x="158" fg:w="1"/><text x="10.3503%" y="287.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="10.2332%" y="261" width="0.0648%" height="15" fill="rgb(239,152,38)" fg:x="158" fg:w="1"/><text x="10.3503%" y="271.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="10.2332%" y="245" width="0.0648%" height="15" fill="rgb(249,139,47)" fg:x="158" fg:w="1"/><text x="10.3503%" y="255.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="10.2332%" y="229" width="0.0648%" height="15" fill="rgb(244,64,35)" fg:x="158" fg:w="1"/><text x="10.3503%" y="239.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="10.2332%" y="213" width="0.0648%" height="15" fill="rgb(216,46,15)" fg:x="158" fg:w="1"/><text x="10.3503%" y="223.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="10.2332%" y="197" width="0.0648%" height="15" fill="rgb(250,74,19)" fg:x="158" fg:w="1"/><text x="10.3503%" y="207.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="10.2332%" y="181" width="0.0648%" height="15" fill="rgb(249,42,33)" fg:x="158" fg:w="1"/><text x="10.3503%" y="191.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="10.2332%" y="165" width="0.0648%" height="15" fill="rgb(242,149,17)" fg:x="158" fg:w="1"/><text x="10.3503%" y="175.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.06%)</title><rect x="10.2332%" y="149" width="0.0648%" height="15" fill="rgb(244,29,21)" fg:x="158" fg:w="1"/><text x="10.3503%" y="159.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.06%)</title><rect x="10.2332%" y="133" width="0.0648%" height="15" fill="rgb(220,130,37)" fg:x="158" fg:w="1"/><text x="10.3503%" y="143.50"></text></g><g><title>charge_memcg (1 samples, 0.06%)</title><rect x="10.2979%" y="165" width="0.0648%" height="15" fill="rgb(211,67,2)" fg:x="159" fg:w="1"/><text x="10.4151%" y="175.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.13%)</title><rect x="10.2979%" y="181" width="0.1295%" height="15" fill="rgb(235,68,52)" fg:x="159" fg:w="2"/><text x="10.4151%" y="191.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.06%)</title><rect x="10.3627%" y="165" width="0.0648%" height="15" fill="rgb(246,142,3)" fg:x="160" fg:w="1"/><text x="10.4799%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.52%)</title><rect x="9.9741%" y="501" width="0.5181%" height="15" fill="rgb(241,25,7)" fg:x="154" fg:w="8"/><text x="10.0913%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.52%)</title><rect x="9.9741%" y="485" width="0.5181%" height="15" fill="rgb(242,119,39)" fg:x="154" fg:w="8"/><text x="10.0913%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.52%)</title><rect x="9.9741%" y="469" width="0.5181%" height="15" fill="rgb(241,98,45)" fg:x="154" fg:w="8"/><text x="10.0913%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.52%)</title><rect x="9.9741%" y="453" width="0.5181%" height="15" fill="rgb(254,28,30)" fg:x="154" fg:w="8"/><text x="10.0913%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.52%)</title><rect x="9.9741%" y="437" width="0.5181%" height="15" fill="rgb(241,142,54)" fg:x="154" fg:w="8"/><text x="10.0913%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.52%)</title><rect x="9.9741%" y="421" width="0.5181%" height="15" fill="rgb(222,85,15)" fg:x="154" fg:w="8"/><text x="10.0913%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.52%)</title><rect x="9.9741%" y="405" width="0.5181%" height="15" fill="rgb(210,85,47)" fg:x="154" fg:w="8"/><text x="10.0913%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.26%)</title><rect x="10.2332%" y="389" width="0.2591%" height="15" fill="rgb(224,206,25)" fg:x="158" fg:w="4"/><text x="10.3503%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.26%)</title><rect x="10.2332%" y="373" width="0.2591%" height="15" fill="rgb(243,201,19)" fg:x="158" fg:w="4"/><text x="10.3503%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.26%)</title><rect x="10.2332%" y="357" width="0.2591%" height="15" fill="rgb(236,59,4)" fg:x="158" fg:w="4"/><text x="10.3503%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.26%)</title><rect x="10.2332%" y="341" width="0.2591%" height="15" fill="rgb(254,179,45)" fg:x="158" fg:w="4"/><text x="10.3503%" y="351.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.26%)</title><rect x="10.2332%" y="325" width="0.2591%" height="15" fill="rgb(226,14,10)" fg:x="158" fg:w="4"/><text x="10.3503%" y="335.50"></text></g><g><title>_int_realloc (4 samples, 0.26%)</title><rect x="10.2332%" y="309" width="0.2591%" height="15" fill="rgb(244,27,41)" fg:x="158" fg:w="4"/><text x="10.3503%" y="319.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.19%)</title><rect x="10.2979%" y="293" width="0.1943%" height="15" fill="rgb(235,35,32)" fg:x="159" fg:w="3"/><text x="10.4151%" y="303.50"></text></g><g><title>exc_page_fault (3 samples, 0.19%)</title><rect x="10.2979%" y="277" width="0.1943%" height="15" fill="rgb(218,68,31)" fg:x="159" fg:w="3"/><text x="10.4151%" y="287.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.19%)</title><rect x="10.2979%" y="261" width="0.1943%" height="15" fill="rgb(207,120,37)" fg:x="159" fg:w="3"/><text x="10.4151%" y="271.50"></text></g><g><title>handle_mm_fault (3 samples, 0.19%)</title><rect x="10.2979%" y="245" width="0.1943%" height="15" fill="rgb(227,98,0)" fg:x="159" fg:w="3"/><text x="10.4151%" y="255.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.19%)</title><rect x="10.2979%" y="229" width="0.1943%" height="15" fill="rgb(207,7,3)" fg:x="159" fg:w="3"/><text x="10.4151%" y="239.50"></text></g><g><title>handle_pte_fault (3 samples, 0.19%)</title><rect x="10.2979%" y="213" width="0.1943%" height="15" fill="rgb(206,98,19)" fg:x="159" fg:w="3"/><text x="10.4151%" y="223.50"></text></g><g><title>do_anonymous_page (3 samples, 0.19%)</title><rect x="10.2979%" y="197" width="0.1943%" height="15" fill="rgb(217,5,26)" fg:x="159" fg:w="3"/><text x="10.4151%" y="207.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="10.4275%" y="181" width="0.0648%" height="15" fill="rgb(235,190,38)" fg:x="161" fg:w="1"/><text x="10.5446%" y="191.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="10.4275%" y="165" width="0.0648%" height="15" fill="rgb(247,86,24)" fg:x="161" fg:w="1"/><text x="10.5446%" y="175.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="10.4275%" y="149" width="0.0648%" height="15" fill="rgb(205,101,16)" fg:x="161" fg:w="1"/><text x="10.5446%" y="159.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="10.4275%" y="133" width="0.0648%" height="15" fill="rgb(246,168,33)" fg:x="161" fg:w="1"/><text x="10.5446%" y="143.50"></text></g><g><title>rmqueue (1 samples, 0.06%)</title><rect x="10.4275%" y="117" width="0.0648%" height="15" fill="rgb(231,114,1)" fg:x="161" fg:w="1"/><text x="10.5446%" y="127.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.06%)</title><rect x="10.4275%" y="101" width="0.0648%" height="15" fill="rgb(207,184,53)" fg:x="161" fg:w="1"/><text x="10.5446%" y="111.50"></text></g><g><title>fringe_vs_astar::map::read_map (49 samples, 3.17%)</title><rect x="7.7073%" y="709" width="3.1736%" height="15" fill="rgb(224,95,51)" fg:x="119" fg:w="49"/><text x="7.8244%" y="719.50">fringe_vs..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 3.17%)</title><rect x="7.7073%" y="693" width="3.1736%" height="15" fill="rgb(212,188,45)" fg:x="119" fg:w="49"/><text x="7.8244%" y="703.50">core::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (49 samples, 3.17%)</title><rect x="7.7073%" y="677" width="3.1736%" height="15" fill="rgb(223,154,38)" fg:x="119" fg:w="49"/><text x="7.8244%" y="687.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 3.17%)</title><rect x="7.7073%" y="661" width="3.1736%" height="15" fill="rgb(251,22,52)" fg:x="119" fg:w="49"/><text x="7.8244%" y="671.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (49 samples, 3.17%)</title><rect x="7.7073%" y="645" width="3.1736%" height="15" fill="rgb(229,209,22)" fg:x="119" fg:w="49"/><text x="7.8244%" y="655.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (49 samples, 3.17%)</title><rect x="7.7073%" y="629" width="3.1736%" height="15" fill="rgb(234,138,34)" fg:x="119" fg:w="49"/><text x="7.8244%" y="639.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (49 samples, 3.17%)</title><rect x="7.7073%" y="613" width="3.1736%" height="15" fill="rgb(212,95,11)" fg:x="119" fg:w="49"/><text x="7.8244%" y="623.50">alloc::ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 3.17%)</title><rect x="7.7073%" y="597" width="3.1736%" height="15" fill="rgb(240,179,47)" fg:x="119" fg:w="49"/><text x="7.8244%" y="607.50">&lt;core::it..</text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 3.17%)</title><rect x="7.7073%" y="581" width="3.1736%" height="15" fill="rgb(240,163,11)" fg:x="119" fg:w="49"/><text x="7.8244%" y="591.50">&lt;std::io:..</text></g><g><title>std::io::BufRead::read_line (48 samples, 3.11%)</title><rect x="7.7720%" y="565" width="3.1088%" height="15" fill="rgb(236,37,12)" fg:x="120" fg:w="48"/><text x="7.8892%" y="575.50">std::io::..</text></g><g><title>std::io::append_to_string (48 samples, 3.11%)</title><rect x="7.7720%" y="549" width="3.1088%" height="15" fill="rgb(232,164,16)" fg:x="120" fg:w="48"/><text x="7.8892%" y="559.50">std::io::..</text></g><g><title>std::io::BufRead::read_line::_{{closure}} (46 samples, 2.98%)</title><rect x="7.9016%" y="533" width="2.9793%" height="15" fill="rgb(244,205,15)" fg:x="122" fg:w="46"/><text x="8.0187%" y="543.50">std::io:..</text></g><g><title>std::io::read_until (46 samples, 2.98%)</title><rect x="7.9016%" y="517" width="2.9793%" height="15" fill="rgb(223,117,47)" fg:x="122" fg:w="46"/><text x="8.0187%" y="527.50">std::io:..</text></g><g><title>core::slice::memchr::memchr (6 samples, 0.39%)</title><rect x="10.4922%" y="501" width="0.3886%" height="15" fill="rgb(244,107,35)" fg:x="162" fg:w="6"/><text x="10.6094%" y="511.50"></text></g><g><title>core::slice::memchr::memchr_aligned (6 samples, 0.39%)</title><rect x="10.4922%" y="485" width="0.3886%" height="15" fill="rgb(205,140,8)" fg:x="162" fg:w="6"/><text x="10.6094%" y="495.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (3 samples, 0.19%)</title><rect x="10.6865%" y="469" width="0.1943%" height="15" fill="rgb(228,84,46)" fg:x="165" fg:w="3"/><text x="10.8037%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.06%)</title><rect x="10.8161%" y="453" width="0.0648%" height="15" fill="rgb(254,188,9)" fg:x="167" fg:w="1"/><text x="10.9332%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 1.81%)</title><rect x="11.2694%" y="389" width="1.8135%" height="15" fill="rgb(206,112,54)" fg:x="174" fg:w="28"/><text x="11.3866%" y="399.50">&lt;all..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 1.88%)</title><rect x="11.2694%" y="405" width="1.8782%" height="15" fill="rgb(216,84,49)" fg:x="174" fg:w="29"/><text x="11.3866%" y="415.50">&lt;cor..</text></g><g><title>core::str::validations::next_code_point (1 samples, 0.06%)</title><rect x="13.0829%" y="389" width="0.0648%" height="15" fill="rgb(214,194,35)" fg:x="202" fg:w="1"/><text x="13.2001%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 2.14%)</title><rect x="11.2694%" y="421" width="2.1373%" height="15" fill="rgb(249,28,3)" fg:x="174" fg:w="33"/><text x="11.3866%" y="431.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.26%)</title><rect x="13.1477%" y="405" width="0.2591%" height="15" fill="rgb(222,56,52)" fg:x="203" fg:w="4"/><text x="13.2649%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.26%)</title><rect x="13.1477%" y="389" width="0.2591%" height="15" fill="rgb(245,217,50)" fg:x="203" fg:w="4"/><text x="13.2649%" y="399.50"></text></g><g><title>fringe_vs_astar::map::simplify_map::_{{closure}}::_{{closure}} (4 samples, 0.26%)</title><rect x="13.1477%" y="373" width="0.2591%" height="15" fill="rgb(213,201,24)" fg:x="203" fg:w="4"/><text x="13.2649%" y="383.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="13.5363%" y="133" width="0.0648%" height="15" fill="rgb(248,116,28)" fg:x="209" fg:w="1"/><text x="13.6535%" y="143.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.06%)</title><rect x="13.5363%" y="117" width="0.0648%" height="15" fill="rgb(219,72,43)" fg:x="209" fg:w="1"/><text x="13.6535%" y="127.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.06%)</title><rect x="13.6010%" y="133" width="0.0648%" height="15" fill="rgb(209,138,14)" fg:x="210" fg:w="1"/><text x="13.7182%" y="143.50"></text></g><g><title>folio_add_lru (1 samples, 0.06%)</title><rect x="13.6010%" y="117" width="0.0648%" height="15" fill="rgb(222,18,33)" fg:x="210" fg:w="1"/><text x="13.7182%" y="127.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.06%)</title><rect x="13.6010%" y="101" width="0.0648%" height="15" fill="rgb(213,199,7)" fg:x="210" fg:w="1"/><text x="13.7182%" y="111.50"></text></g><g><title>release_pages (1 samples, 0.06%)</title><rect x="13.6010%" y="85" width="0.0648%" height="15" fill="rgb(250,110,10)" fg:x="210" fg:w="1"/><text x="13.7182%" y="95.50"></text></g><g><title>handle_mm_fault (3 samples, 0.19%)</title><rect x="13.5363%" y="197" width="0.1943%" height="15" fill="rgb(248,123,6)" fg:x="209" fg:w="3"/><text x="13.6535%" y="207.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.19%)</title><rect x="13.5363%" y="181" width="0.1943%" height="15" fill="rgb(206,91,31)" fg:x="209" fg:w="3"/><text x="13.6535%" y="191.50"></text></g><g><title>handle_pte_fault (3 samples, 0.19%)</title><rect x="13.5363%" y="165" width="0.1943%" height="15" fill="rgb(211,154,13)" fg:x="209" fg:w="3"/><text x="13.6535%" y="175.50"></text></g><g><title>do_anonymous_page (3 samples, 0.19%)</title><rect x="13.5363%" y="149" width="0.1943%" height="15" fill="rgb(225,148,7)" fg:x="209" fg:w="3"/><text x="13.6535%" y="159.50"></text></g><g><title>inc_mm_counter (1 samples, 0.06%)</title><rect x="13.6658%" y="133" width="0.0648%" height="15" fill="rgb(220,160,43)" fg:x="211" fg:w="1"/><text x="13.7830%" y="143.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.06%)</title><rect x="13.6658%" y="117" width="0.0648%" height="15" fill="rgb(213,52,39)" fg:x="211" fg:w="1"/><text x="13.7830%" y="127.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.26%)</title><rect x="13.5363%" y="245" width="0.2591%" height="15" fill="rgb(243,137,7)" fg:x="209" fg:w="4"/><text x="13.6535%" y="255.50"></text></g><g><title>exc_page_fault (4 samples, 0.26%)</title><rect x="13.5363%" y="229" width="0.2591%" height="15" fill="rgb(230,79,13)" fg:x="209" fg:w="4"/><text x="13.6535%" y="239.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.26%)</title><rect x="13.5363%" y="213" width="0.2591%" height="15" fill="rgb(247,105,23)" fg:x="209" fg:w="4"/><text x="13.6535%" y="223.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.06%)</title><rect x="13.7306%" y="197" width="0.0648%" height="15" fill="rgb(223,179,41)" fg:x="212" fg:w="1"/><text x="13.8478%" y="207.50"></text></g><g><title>mas_walk (1 samples, 0.06%)</title><rect x="13.7306%" y="181" width="0.0648%" height="15" fill="rgb(218,9,34)" fg:x="212" fg:w="1"/><text x="13.8478%" y="191.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.32%)</title><rect x="13.5363%" y="261" width="0.3238%" height="15" fill="rgb(222,106,8)" fg:x="209" fg:w="5"/><text x="13.6535%" y="271.50"></text></g><g><title>sync_regs (1 samples, 0.06%)</title><rect x="13.7953%" y="245" width="0.0648%" height="15" fill="rgb(211,220,0)" fg:x="213" fg:w="1"/><text x="13.9125%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="13.8601%" y="261" width="0.0648%" height="15" fill="rgb(229,52,16)" fg:x="214" fg:w="1"/><text x="13.9773%" y="271.50"></text></g><g><title>systrim (1 samples, 0.06%)</title><rect x="13.8601%" y="245" width="0.0648%" height="15" fill="rgb(212,155,18)" fg:x="214" fg:w="1"/><text x="13.9773%" y="255.50"></text></g><g><title>__glibc_morecore (1 samples, 0.06%)</title><rect x="13.8601%" y="229" width="0.0648%" height="15" fill="rgb(242,21,14)" fg:x="214" fg:w="1"/><text x="13.9773%" y="239.50"></text></g><g><title>__GI___sbrk (1 samples, 0.06%)</title><rect x="13.8601%" y="213" width="0.0648%" height="15" fill="rgb(222,19,48)" fg:x="214" fg:w="1"/><text x="13.9773%" y="223.50"></text></g><g><title>__GI___sbrk (1 samples, 0.06%)</title><rect x="13.8601%" y="197" width="0.0648%" height="15" fill="rgb(232,45,27)" fg:x="214" fg:w="1"/><text x="13.9773%" y="207.50"></text></g><g><title>__brk (1 samples, 0.06%)</title><rect x="13.8601%" y="181" width="0.0648%" height="15" fill="rgb(249,103,42)" fg:x="214" fg:w="1"/><text x="13.9773%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="13.8601%" y="165" width="0.0648%" height="15" fill="rgb(246,81,33)" fg:x="214" fg:w="1"/><text x="13.9773%" y="175.50"></text></g><g><title>do_syscall_64 (1 samples, 0.06%)</title><rect x="13.8601%" y="149" width="0.0648%" height="15" fill="rgb(252,33,42)" fg:x="214" fg:w="1"/><text x="13.9773%" y="159.50"></text></g><g><title>x64_sys_call (1 samples, 0.06%)</title><rect x="13.8601%" y="133" width="0.0648%" height="15" fill="rgb(209,212,41)" fg:x="214" fg:w="1"/><text x="13.9773%" y="143.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.06%)</title><rect x="13.8601%" y="117" width="0.0648%" height="15" fill="rgb(207,154,6)" fg:x="214" fg:w="1"/><text x="13.9773%" y="127.50"></text></g><g><title>__do_sys_brk (1 samples, 0.06%)</title><rect x="13.8601%" y="101" width="0.0648%" height="15" fill="rgb(223,64,47)" fg:x="214" fg:w="1"/><text x="13.9773%" y="111.50"></text></g><g><title>up_write (1 samples, 0.06%)</title><rect x="13.8601%" y="85" width="0.0648%" height="15" fill="rgb(211,161,38)" fg:x="214" fg:w="1"/><text x="13.9773%" y="95.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.13%)</title><rect x="13.9896%" y="117" width="0.1295%" height="15" fill="rgb(219,138,40)" fg:x="216" fg:w="2"/><text x="14.1068%" y="127.50"></text></g><g><title>__mem_cgroup_charge (4 samples, 0.26%)</title><rect x="13.9896%" y="133" width="0.2591%" height="15" fill="rgb(241,228,46)" fg:x="216" fg:w="4"/><text x="14.1068%" y="143.50"></text></g><g><title>get_mem_cgroup_from_mm (2 samples, 0.13%)</title><rect x="14.1192%" y="117" width="0.1295%" height="15" fill="rgb(223,209,38)" fg:x="218" fg:w="2"/><text x="14.2364%" y="127.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.32%)</title><rect x="13.9896%" y="245" width="0.3238%" height="15" fill="rgb(236,164,45)" fg:x="216" fg:w="5"/><text x="14.1068%" y="255.50"></text></g><g><title>exc_page_fault (5 samples, 0.32%)</title><rect x="13.9896%" y="229" width="0.3238%" height="15" fill="rgb(231,15,5)" fg:x="216" fg:w="5"/><text x="14.1068%" y="239.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.32%)</title><rect x="13.9896%" y="213" width="0.3238%" height="15" fill="rgb(252,35,15)" fg:x="216" fg:w="5"/><text x="14.1068%" y="223.50"></text></g><g><title>handle_mm_fault (5 samples, 0.32%)</title><rect x="13.9896%" y="197" width="0.3238%" height="15" fill="rgb(248,181,18)" fg:x="216" fg:w="5"/><text x="14.1068%" y="207.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.32%)</title><rect x="13.9896%" y="181" width="0.3238%" height="15" fill="rgb(233,39,42)" fg:x="216" fg:w="5"/><text x="14.1068%" y="191.50"></text></g><g><title>handle_pte_fault (5 samples, 0.32%)</title><rect x="13.9896%" y="165" width="0.3238%" height="15" fill="rgb(238,110,33)" fg:x="216" fg:w="5"/><text x="14.1068%" y="175.50"></text></g><g><title>do_anonymous_page (5 samples, 0.32%)</title><rect x="13.9896%" y="149" width="0.3238%" height="15" fill="rgb(233,195,10)" fg:x="216" fg:w="5"/><text x="14.1068%" y="159.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="14.2487%" y="133" width="0.0648%" height="15" fill="rgb(254,105,3)" fg:x="220" fg:w="1"/><text x="14.3659%" y="143.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="14.2487%" y="117" width="0.0648%" height="15" fill="rgb(221,225,9)" fg:x="220" fg:w="1"/><text x="14.3659%" y="127.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="14.2487%" y="101" width="0.0648%" height="15" fill="rgb(224,227,45)" fg:x="220" fg:w="1"/><text x="14.3659%" y="111.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="14.2487%" y="85" width="0.0648%" height="15" fill="rgb(229,198,43)" fg:x="220" fg:w="1"/><text x="14.3659%" y="95.50"></text></g><g><title>rmqueue (1 samples, 0.06%)</title><rect x="14.2487%" y="69" width="0.0648%" height="15" fill="rgb(206,209,35)" fg:x="220" fg:w="1"/><text x="14.3659%" y="79.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.06%)</title><rect x="14.2487%" y="53" width="0.0648%" height="15" fill="rgb(245,195,53)" fg:x="220" fg:w="1"/><text x="14.3659%" y="63.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.06%)</title><rect x="14.2487%" y="37" width="0.0648%" height="15" fill="rgb(240,92,26)" fg:x="220" fg:w="1"/><text x="14.3659%" y="47.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.06%)</title><rect x="14.3135%" y="245" width="0.0648%" height="15" fill="rgb(207,40,23)" fg:x="221" fg:w="1"/><text x="14.4307%" y="255.50"></text></g><g><title>_int_malloc (8 samples, 0.52%)</title><rect x="13.9249%" y="261" width="0.5181%" height="15" fill="rgb(223,111,35)" fg:x="215" fg:w="8"/><text x="14.0421%" y="271.50"></text></g><g><title>sync_regs (1 samples, 0.06%)</title><rect x="14.3782%" y="245" width="0.0648%" height="15" fill="rgb(229,147,28)" fg:x="222" fg:w="1"/><text x="14.4954%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 1.17%)</title><rect x="13.4067%" y="421" width="1.1658%" height="15" fill="rgb(211,29,28)" fg:x="207" fg:w="18"/><text x="13.5239%" y="431.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 1.17%)</title><rect x="13.4067%" y="405" width="1.1658%" height="15" fill="rgb(228,72,33)" fg:x="207" fg:w="18"/><text x="13.5239%" y="415.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 1.17%)</title><rect x="13.4067%" y="389" width="1.1658%" height="15" fill="rgb(205,214,31)" fg:x="207" fg:w="18"/><text x="13.5239%" y="399.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 1.17%)</title><rect x="13.4067%" y="373" width="1.1658%" height="15" fill="rgb(224,111,15)" fg:x="207" fg:w="18"/><text x="13.5239%" y="383.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 1.17%)</title><rect x="13.4067%" y="357" width="1.1658%" height="15" fill="rgb(253,21,26)" fg:x="207" fg:w="18"/><text x="13.5239%" y="367.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 1.17%)</title><rect x="13.4067%" y="341" width="1.1658%" height="15" fill="rgb(245,139,43)" fg:x="207" fg:w="18"/><text x="13.5239%" y="351.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 1.17%)</title><rect x="13.4067%" y="325" width="1.1658%" height="15" fill="rgb(252,170,7)" fg:x="207" fg:w="18"/><text x="13.5239%" y="335.50">al..</text></g><g><title>alloc::alloc::realloc (18 samples, 1.17%)</title><rect x="13.4067%" y="309" width="1.1658%" height="15" fill="rgb(231,118,14)" fg:x="207" fg:w="18"/><text x="13.5239%" y="319.50">al..</text></g><g><title>__GI___libc_realloc (18 samples, 1.17%)</title><rect x="13.4067%" y="293" width="1.1658%" height="15" fill="rgb(238,83,0)" fg:x="207" fg:w="18"/><text x="13.5239%" y="303.50">__..</text></g><g><title>_int_realloc (18 samples, 1.17%)</title><rect x="13.4067%" y="277" width="1.1658%" height="15" fill="rgb(221,39,39)" fg:x="207" fg:w="18"/><text x="13.5239%" y="287.50">_i..</text></g><g><title>asm_exc_page_fault (2 samples, 0.13%)</title><rect x="14.4430%" y="261" width="0.1295%" height="15" fill="rgb(222,119,46)" fg:x="223" fg:w="2"/><text x="14.5602%" y="271.50"></text></g><g><title>exc_page_fault (2 samples, 0.13%)</title><rect x="14.4430%" y="245" width="0.1295%" height="15" fill="rgb(222,165,49)" fg:x="223" fg:w="2"/><text x="14.5602%" y="255.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="14.4430%" y="229" width="0.1295%" height="15" fill="rgb(219,113,52)" fg:x="223" fg:w="2"/><text x="14.5602%" y="239.50"></text></g><g><title>handle_mm_fault (2 samples, 0.13%)</title><rect x="14.4430%" y="213" width="0.1295%" height="15" fill="rgb(214,7,15)" fg:x="223" fg:w="2"/><text x="14.5602%" y="223.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="14.4430%" y="197" width="0.1295%" height="15" fill="rgb(235,32,4)" fg:x="223" fg:w="2"/><text x="14.5602%" y="207.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="14.5078%" y="181" width="0.0648%" height="15" fill="rgb(238,90,54)" fg:x="224" fg:w="1"/><text x="14.6250%" y="191.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="14.5078%" y="165" width="0.0648%" height="15" fill="rgb(213,208,19)" fg:x="224" fg:w="1"/><text x="14.6250%" y="175.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="14.5078%" y="149" width="0.0648%" height="15" fill="rgb(233,156,4)" fg:x="224" fg:w="1"/><text x="14.6250%" y="159.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.06%)</title><rect x="14.5078%" y="133" width="0.0648%" height="15" fill="rgb(207,194,5)" fg:x="224" fg:w="1"/><text x="14.6250%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (75 samples, 4.86%)</title><rect x="10.8808%" y="693" width="4.8575%" height="15" fill="rgb(206,111,30)" fg:x="168" fg:w="75"/><text x="10.9980%" y="703.50">core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (75 samples, 4.86%)</title><rect x="10.8808%" y="677" width="4.8575%" height="15" fill="rgb(243,70,54)" fg:x="168" fg:w="75"/><text x="10.9980%" y="687.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (75 samples, 4.86%)</title><rect x="10.8808%" y="661" width="4.8575%" height="15" fill="rgb(242,28,8)" fg:x="168" fg:w="75"/><text x="10.9980%" y="671.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (75 samples, 4.86%)</title><rect x="10.8808%" y="645" width="4.8575%" height="15" fill="rgb(219,106,18)" fg:x="168" fg:w="75"/><text x="10.9980%" y="655.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (75 samples, 4.86%)</title><rect x="10.8808%" y="629" width="4.8575%" height="15" fill="rgb(244,222,10)" fg:x="168" fg:w="75"/><text x="10.9980%" y="639.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (75 samples, 4.86%)</title><rect x="10.8808%" y="613" width="4.8575%" height="15" fill="rgb(236,179,52)" fg:x="168" fg:w="75"/><text x="10.9980%" y="623.50">alloc::vec::Vec..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (75 samples, 4.86%)</title><rect x="10.8808%" y="597" width="4.8575%" height="15" fill="rgb(213,23,39)" fg:x="168" fg:w="75"/><text x="10.9980%" y="607.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 4.86%)</title><rect x="10.8808%" y="581" width="4.8575%" height="15" fill="rgb(238,48,10)" fg:x="168" fg:w="75"/><text x="10.9980%" y="591.50">&lt;core::iter::ad..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75 samples, 4.86%)</title><rect x="10.8808%" y="565" width="4.8575%" height="15" fill="rgb(251,196,23)" fg:x="168" fg:w="75"/><text x="10.9980%" y="575.50">&lt;core::slice::i..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (75 samples, 4.86%)</title><rect x="10.8808%" y="549" width="4.8575%" height="15" fill="rgb(250,152,24)" fg:x="168" fg:w="75"/><text x="10.9980%" y="559.50">core::iter::ada..</text></g><g><title>fringe_vs_astar::map::simplify_map::_{{closure}} (75 samples, 4.86%)</title><rect x="10.8808%" y="533" width="4.8575%" height="15" fill="rgb(209,150,17)" fg:x="168" fg:w="75"/><text x="10.9980%" y="543.50">fringe_vs_astar..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (75 samples, 4.86%)</title><rect x="10.8808%" y="517" width="4.8575%" height="15" fill="rgb(234,202,34)" fg:x="168" fg:w="75"/><text x="10.9980%" y="527.50">core::iter::tra..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (75 samples, 4.86%)</title><rect x="10.8808%" y="501" width="4.8575%" height="15" fill="rgb(253,148,53)" fg:x="168" fg:w="75"/><text x="10.9980%" y="511.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (75 samples, 4.86%)</title><rect x="10.8808%" y="485" width="4.8575%" height="15" fill="rgb(218,129,16)" fg:x="168" fg:w="75"/><text x="10.9980%" y="495.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (75 samples, 4.86%)</title><rect x="10.8808%" y="469" width="4.8575%" height="15" fill="rgb(216,85,19)" fg:x="168" fg:w="75"/><text x="10.9980%" y="479.50">&lt;alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (75 samples, 4.86%)</title><rect x="10.8808%" y="453" width="4.8575%" height="15" fill="rgb(235,228,7)" fg:x="168" fg:w="75"/><text x="10.9980%" y="463.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (75 samples, 4.86%)</title><rect x="10.8808%" y="437" width="4.8575%" height="15" fill="rgb(245,175,0)" fg:x="168" fg:w="75"/><text x="10.9980%" y="447.50">alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (18 samples, 1.17%)</title><rect x="14.5725%" y="421" width="1.1658%" height="15" fill="rgb(208,168,36)" fg:x="225" fg:w="18"/><text x="14.6897%" y="431.50">al..</text></g><g><title>fringe_vs_astar::map::map_builder (125 samples, 8.10%)</title><rect x="7.7073%" y="725" width="8.0959%" height="15" fill="rgb(246,171,24)" fg:x="119" fg:w="125"/><text x="7.8244%" y="735.50">fringe_vs_astar::map::map_b..</text></g><g><title>fringe_vs_astar::map::simplify_map (76 samples, 4.92%)</title><rect x="10.8808%" y="709" width="4.9223%" height="15" fill="rgb(215,142,24)" fg:x="168" fg:w="76"/><text x="10.9980%" y="719.50">fringe_vs_astar..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.06%)</title><rect x="15.7383%" y="693" width="0.0648%" height="15" fill="rgb(250,187,7)" fg:x="243" fg:w="1"/><text x="15.8555%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="15.7383%" y="677" width="0.0648%" height="15" fill="rgb(228,66,33)" fg:x="243" fg:w="1"/><text x="15.8555%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.06%)</title><rect x="15.7383%" y="661" width="0.0648%" height="15" fill="rgb(234,215,21)" fg:x="243" fg:w="1"/><text x="15.8555%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.06%)</title><rect x="15.7383%" y="645" width="0.0648%" height="15" fill="rgb(222,191,20)" fg:x="243" fg:w="1"/><text x="15.8555%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.06%)</title><rect x="15.7383%" y="629" width="0.0648%" height="15" fill="rgb(245,79,54)" fg:x="243" fg:w="1"/><text x="15.8555%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.06%)</title><rect x="15.7383%" y="613" width="0.0648%" height="15" fill="rgb(240,10,37)" fg:x="243" fg:w="1"/><text x="15.8555%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="15.7383%" y="597" width="0.0648%" height="15" fill="rgb(214,192,32)" fg:x="243" fg:w="1"/><text x="15.8555%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.06%)</title><rect x="15.7383%" y="581" width="0.0648%" height="15" fill="rgb(209,36,54)" fg:x="243" fg:w="1"/><text x="15.8555%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.06%)</title><rect x="15.7383%" y="565" width="0.0648%" height="15" fill="rgb(220,10,11)" fg:x="243" fg:w="1"/><text x="15.8555%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.06%)</title><rect x="15.7383%" y="549" width="0.0648%" height="15" fill="rgb(221,106,17)" fg:x="243" fg:w="1"/><text x="15.8555%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.06%)</title><rect x="15.7383%" y="533" width="0.0648%" height="15" fill="rgb(251,142,44)" fg:x="243" fg:w="1"/><text x="15.8555%" y="543.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="15.9974%" y="549" width="0.0648%" height="15" fill="rgb(238,13,15)" fg:x="247" fg:w="1"/><text x="16.1146%" y="559.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="15.9974%" y="533" width="0.0648%" height="15" fill="rgb(208,107,27)" fg:x="247" fg:w="1"/><text x="16.1146%" y="543.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="15.9974%" y="517" width="0.0648%" height="15" fill="rgb(205,136,37)" fg:x="247" fg:w="1"/><text x="16.1146%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="15.9974%" y="501" width="0.0648%" height="15" fill="rgb(250,205,27)" fg:x="247" fg:w="1"/><text x="16.1146%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="15.9974%" y="485" width="0.0648%" height="15" fill="rgb(210,80,43)" fg:x="247" fg:w="1"/><text x="16.1146%" y="495.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="15.9974%" y="469" width="0.0648%" height="15" fill="rgb(247,160,36)" fg:x="247" fg:w="1"/><text x="16.1146%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="15.9974%" y="453" width="0.0648%" height="15" fill="rgb(234,13,49)" fg:x="247" fg:w="1"/><text x="16.1146%" y="463.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.06%)</title><rect x="15.9974%" y="437" width="0.0648%" height="15" fill="rgb(234,122,0)" fg:x="247" fg:w="1"/><text x="16.1146%" y="447.50"></text></g><g><title>__folio_alloc (1 samples, 0.06%)</title><rect x="15.9974%" y="421" width="0.0648%" height="15" fill="rgb(207,146,38)" fg:x="247" fg:w="1"/><text x="16.1146%" y="431.50"></text></g><g><title>__alloc_pages (1 samples, 0.06%)</title><rect x="15.9974%" y="405" width="0.0648%" height="15" fill="rgb(207,177,25)" fg:x="247" fg:w="1"/><text x="16.1146%" y="415.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.06%)</title><rect x="15.9974%" y="389" width="0.0648%" height="15" fill="rgb(211,178,42)" fg:x="247" fg:w="1"/><text x="16.1146%" y="399.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.19%)</title><rect x="15.9326%" y="565" width="0.1943%" height="15" fill="rgb(230,69,54)" fg:x="246" fg:w="3"/><text x="16.0498%" y="575.50"></text></g><g><title>sync_regs (1 samples, 0.06%)</title><rect x="16.0622%" y="549" width="0.0648%" height="15" fill="rgb(214,135,41)" fg:x="248" fg:w="1"/><text x="16.1794%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.26%)</title><rect x="15.9326%" y="693" width="0.2591%" height="15" fill="rgb(237,67,25)" fg:x="246" fg:w="4"/><text x="16.0498%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.26%)</title><rect x="15.9326%" y="677" width="0.2591%" height="15" fill="rgb(222,189,50)" fg:x="246" fg:w="4"/><text x="16.0498%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.26%)</title><rect x="15.9326%" y="661" width="0.2591%" height="15" fill="rgb(245,148,34)" fg:x="246" fg:w="4"/><text x="16.0498%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.26%)</title><rect x="15.9326%" y="645" width="0.2591%" height="15" fill="rgb(222,29,6)" fg:x="246" fg:w="4"/><text x="16.0498%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.26%)</title><rect x="15.9326%" y="629" width="0.2591%" height="15" fill="rgb(221,189,43)" fg:x="246" fg:w="4"/><text x="16.0498%" y="639.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.26%)</title><rect x="15.9326%" y="613" width="0.2591%" height="15" fill="rgb(207,36,27)" fg:x="246" fg:w="4"/><text x="16.0498%" y="623.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.26%)</title><rect x="15.9326%" y="597" width="0.2591%" height="15" fill="rgb(217,90,24)" fg:x="246" fg:w="4"/><text x="16.0498%" y="607.50"></text></g><g><title>_int_realloc (4 samples, 0.26%)</title><rect x="15.9326%" y="581" width="0.2591%" height="15" fill="rgb(224,66,35)" fg:x="246" fg:w="4"/><text x="16.0498%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="16.1269%" y="565" width="0.0648%" height="15" fill="rgb(221,13,50)" fg:x="249" fg:w="1"/><text x="16.2441%" y="575.50"></text></g><g><title>sysmalloc (1 samples, 0.06%)</title><rect x="16.1269%" y="549" width="0.0648%" height="15" fill="rgb(236,68,49)" fg:x="249" fg:w="1"/><text x="16.2441%" y="559.50"></text></g><g><title>__glibc_morecore (1 samples, 0.06%)</title><rect x="16.1269%" y="533" width="0.0648%" height="15" fill="rgb(229,146,28)" fg:x="249" fg:w="1"/><text x="16.2441%" y="543.50"></text></g><g><title>__GI___sbrk (1 samples, 0.06%)</title><rect x="16.1269%" y="517" width="0.0648%" height="15" fill="rgb(225,31,38)" fg:x="249" fg:w="1"/><text x="16.2441%" y="527.50"></text></g><g><title>__GI___sbrk (1 samples, 0.06%)</title><rect x="16.1269%" y="501" width="0.0648%" height="15" fill="rgb(250,208,3)" fg:x="249" fg:w="1"/><text x="16.2441%" y="511.50"></text></g><g><title>__brk (1 samples, 0.06%)</title><rect x="16.1269%" y="485" width="0.0648%" height="15" fill="rgb(246,54,23)" fg:x="249" fg:w="1"/><text x="16.2441%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="16.1269%" y="469" width="0.0648%" height="15" fill="rgb(243,76,11)" fg:x="249" fg:w="1"/><text x="16.2441%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.06%)</title><rect x="16.1269%" y="453" width="0.0648%" height="15" fill="rgb(245,21,50)" fg:x="249" fg:w="1"/><text x="16.2441%" y="463.50"></text></g><g><title>x64_sys_call (1 samples, 0.06%)</title><rect x="16.1269%" y="437" width="0.0648%" height="15" fill="rgb(228,9,43)" fg:x="249" fg:w="1"/><text x="16.2441%" y="447.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.06%)</title><rect x="16.1269%" y="421" width="0.0648%" height="15" fill="rgb(208,100,47)" fg:x="249" fg:w="1"/><text x="16.2441%" y="431.50"></text></g><g><title>__do_sys_brk (1 samples, 0.06%)</title><rect x="16.1269%" y="405" width="0.0648%" height="15" fill="rgb(232,26,8)" fg:x="249" fg:w="1"/><text x="16.2441%" y="415.50"></text></g><g><title>do_brk_flags (1 samples, 0.06%)</title><rect x="16.1269%" y="389" width="0.0648%" height="15" fill="rgb(216,166,38)" fg:x="249" fg:w="1"/><text x="16.2441%" y="399.50"></text></g><g><title>perf_event_mmap (1 samples, 0.06%)</title><rect x="16.1269%" y="373" width="0.0648%" height="15" fill="rgb(251,202,51)" fg:x="249" fg:w="1"/><text x="16.2441%" y="383.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.06%)</title><rect x="16.1269%" y="357" width="0.0648%" height="15" fill="rgb(254,216,34)" fg:x="249" fg:w="1"/><text x="16.2441%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.06%)</title><rect x="16.1269%" y="341" width="0.0648%" height="15" fill="rgb(251,32,27)" fg:x="249" fg:w="1"/><text x="16.2441%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.65%)</title><rect x="15.8031%" y="709" width="0.6477%" height="15" fill="rgb(208,127,28)" fg:x="244" fg:w="10"/><text x="15.9203%" y="719.50"></text></g><g><title>core::ptr::write (4 samples, 0.26%)</title><rect x="16.1917%" y="693" width="0.2591%" height="15" fill="rgb(224,137,22)" fg:x="250" fg:w="4"/><text x="16.3089%" y="703.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.13%)</title><rect x="16.3212%" y="677" width="0.1295%" height="15" fill="rgb(254,70,32)" fg:x="252" fg:w="2"/><text x="16.4384%" y="687.50"></text></g><g><title>exc_page_fault (2 samples, 0.13%)</title><rect x="16.3212%" y="661" width="0.1295%" height="15" fill="rgb(229,75,37)" fg:x="252" fg:w="2"/><text x="16.4384%" y="671.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.13%)</title><rect x="16.3212%" y="645" width="0.1295%" height="15" fill="rgb(252,64,23)" fg:x="252" fg:w="2"/><text x="16.4384%" y="655.50"></text></g><g><title>handle_mm_fault (2 samples, 0.13%)</title><rect x="16.3212%" y="629" width="0.1295%" height="15" fill="rgb(232,162,48)" fg:x="252" fg:w="2"/><text x="16.4384%" y="639.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.13%)</title><rect x="16.3212%" y="613" width="0.1295%" height="15" fill="rgb(246,160,12)" fg:x="252" fg:w="2"/><text x="16.4384%" y="623.50"></text></g><g><title>handle_pte_fault (2 samples, 0.13%)</title><rect x="16.3212%" y="597" width="0.1295%" height="15" fill="rgb(247,166,0)" fg:x="252" fg:w="2"/><text x="16.4384%" y="607.50"></text></g><g><title>do_anonymous_page (2 samples, 0.13%)</title><rect x="16.3212%" y="581" width="0.1295%" height="15" fill="rgb(249,219,21)" fg:x="252" fg:w="2"/><text x="16.4384%" y="591.50"></text></g><g><title>__pte_offset_map_lock (2 samples, 0.13%)</title><rect x="16.3212%" y="565" width="0.1295%" height="15" fill="rgb(205,209,3)" fg:x="252" fg:w="2"/><text x="16.4384%" y="575.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h030f5c5a0d744980E.llvm.1354045420795072050 (1 samples, 0.06%)</title><rect x="16.4508%" y="645" width="0.0648%" height="15" fill="rgb(243,44,1)" fg:x="254" fg:w="1"/><text x="16.5680%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.06%)</title><rect x="16.4508%" y="629" width="0.0648%" height="15" fill="rgb(206,159,16)" fg:x="254" fg:w="1"/><text x="16.5680%" y="639.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.06%)</title><rect x="16.5155%" y="549" width="0.0648%" height="15" fill="rgb(244,77,30)" fg:x="255" fg:w="1"/><text x="16.6327%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="16.5155%" y="533" width="0.0648%" height="15" fill="rgb(218,69,12)" fg:x="255" fg:w="1"/><text x="16.6327%" y="543.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="16.5155%" y="517" width="0.0648%" height="15" fill="rgb(212,87,7)" fg:x="255" fg:w="1"/><text x="16.6327%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="16.5155%" y="501" width="0.0648%" height="15" fill="rgb(245,114,25)" fg:x="255" fg:w="1"/><text x="16.6327%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="16.5155%" y="485" width="0.0648%" height="15" fill="rgb(210,61,42)" fg:x="255" fg:w="1"/><text x="16.6327%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="16.5155%" y="469" width="0.0648%" height="15" fill="rgb(211,52,33)" fg:x="255" fg:w="1"/><text x="16.6327%" y="479.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="16.5155%" y="453" width="0.0648%" height="15" fill="rgb(234,58,33)" fg:x="255" fg:w="1"/><text x="16.6327%" y="463.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="16.5155%" y="437" width="0.0648%" height="15" fill="rgb(220,115,36)" fg:x="255" fg:w="1"/><text x="16.6327%" y="447.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.06%)</title><rect x="16.5155%" y="421" width="0.0648%" height="15" fill="rgb(243,153,54)" fg:x="255" fg:w="1"/><text x="16.6327%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.19%)</title><rect x="16.4508%" y="677" width="0.1943%" height="15" fill="rgb(251,47,18)" fg:x="254" fg:w="3"/><text x="16.5680%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.19%)</title><rect x="16.4508%" y="661" width="0.1943%" height="15" fill="rgb(242,102,42)" fg:x="254" fg:w="3"/><text x="16.5680%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.13%)</title><rect x="16.5155%" y="645" width="0.1295%" height="15" fill="rgb(234,31,38)" fg:x="255" fg:w="2"/><text x="16.6327%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.13%)</title><rect x="16.5155%" y="629" width="0.1295%" height="15" fill="rgb(221,117,51)" fg:x="255" fg:w="2"/><text x="16.6327%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.13%)</title><rect x="16.5155%" y="613" width="0.1295%" height="15" fill="rgb(212,20,18)" fg:x="255" fg:w="2"/><text x="16.6327%" y="623.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.13%)</title><rect x="16.5155%" y="597" width="0.1295%" height="15" fill="rgb(245,133,36)" fg:x="255" fg:w="2"/><text x="16.6327%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.13%)</title><rect x="16.5155%" y="581" width="0.1295%" height="15" fill="rgb(212,6,19)" fg:x="255" fg:w="2"/><text x="16.6327%" y="591.50"></text></g><g><title>_int_realloc (2 samples, 0.13%)</title><rect x="16.5155%" y="565" width="0.1295%" height="15" fill="rgb(218,1,36)" fg:x="255" fg:w="2"/><text x="16.6327%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.06%)</title><rect x="16.5803%" y="549" width="0.0648%" height="15" fill="rgb(246,84,54)" fg:x="256" fg:w="1"/><text x="16.6975%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="16.5803%" y="533" width="0.0648%" height="15" fill="rgb(242,110,6)" fg:x="256" fg:w="1"/><text x="16.6975%" y="543.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="16.5803%" y="517" width="0.0648%" height="15" fill="rgb(214,47,5)" fg:x="256" fg:w="1"/><text x="16.6975%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="16.5803%" y="501" width="0.0648%" height="15" fill="rgb(218,159,25)" fg:x="256" fg:w="1"/><text x="16.6975%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="16.5803%" y="485" width="0.0648%" height="15" fill="rgb(215,211,28)" fg:x="256" fg:w="1"/><text x="16.6975%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="16.5803%" y="469" width="0.0648%" height="15" fill="rgb(238,59,32)" fg:x="256" fg:w="1"/><text x="16.6975%" y="479.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="16.5803%" y="453" width="0.0648%" height="15" fill="rgb(226,82,3)" fg:x="256" fg:w="1"/><text x="16.6975%" y="463.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="16.5803%" y="437" width="0.0648%" height="15" fill="rgb(240,164,32)" fg:x="256" fg:w="1"/><text x="16.6975%" y="447.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="16.5803%" y="421" width="0.0648%" height="15" fill="rgb(232,46,7)" fg:x="256" fg:w="1"/><text x="16.6975%" y="431.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.06%)</title><rect x="16.5803%" y="405" width="0.0648%" height="15" fill="rgb(229,129,53)" fg:x="256" fg:w="1"/><text x="16.6975%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.06%)</title><rect x="16.7098%" y="661" width="0.0648%" height="15" fill="rgb(234,188,29)" fg:x="258" fg:w="1"/><text x="16.8270%" y="671.50"></text></g><g><title>exc_page_fault (1 samples, 0.06%)</title><rect x="16.7098%" y="645" width="0.0648%" height="15" fill="rgb(246,141,4)" fg:x="258" fg:w="1"/><text x="16.8270%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="16.7098%" y="629" width="0.0648%" height="15" fill="rgb(229,23,39)" fg:x="258" fg:w="1"/><text x="16.8270%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.06%)</title><rect x="16.7098%" y="613" width="0.0648%" height="15" fill="rgb(206,12,3)" fg:x="258" fg:w="1"/><text x="16.8270%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="16.7098%" y="597" width="0.0648%" height="15" fill="rgb(252,226,20)" fg:x="258" fg:w="1"/><text x="16.8270%" y="607.50"></text></g><g><title>handle_pte_fault (1 samples, 0.06%)</title><rect x="16.7098%" y="581" width="0.0648%" height="15" fill="rgb(216,123,35)" fg:x="258" fg:w="1"/><text x="16.8270%" y="591.50"></text></g><g><title>do_anonymous_page (1 samples, 0.06%)</title><rect x="16.7098%" y="565" width="0.0648%" height="15" fill="rgb(212,68,40)" fg:x="258" fg:w="1"/><text x="16.8270%" y="575.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.06%)</title><rect x="16.7098%" y="549" width="0.0648%" height="15" fill="rgb(254,125,32)" fg:x="258" fg:w="1"/><text x="16.8270%" y="559.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.06%)</title><rect x="16.7098%" y="533" width="0.0648%" height="15" fill="rgb(253,97,22)" fg:x="258" fg:w="1"/><text x="16.8270%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.39%)</title><rect x="16.4508%" y="693" width="0.3886%" height="15" fill="rgb(241,101,14)" fg:x="254" fg:w="6"/><text x="16.5680%" y="703.50"></text></g><g><title>core::ptr::write (3 samples, 0.19%)</title><rect x="16.6451%" y="677" width="0.1943%" height="15" fill="rgb(238,103,29)" fg:x="257" fg:w="3"/><text x="16.7623%" y="687.50"></text></g><g><title>sync_regs (1 samples, 0.06%)</title><rect x="16.7746%" y="661" width="0.0648%" height="15" fill="rgb(233,195,47)" fg:x="259" fg:w="1"/><text x="16.8918%" y="671.50"></text></g><g><title>fringe_vs_astar::pathfinder::AStar&lt;G&gt;::new (17 samples, 1.10%)</title><rect x="15.8031%" y="725" width="1.1010%" height="15" fill="rgb(246,218,30)" fg:x="244" fg:w="17"/><text x="15.9203%" y="735.50">f..</text></g><g><title>fringe_vs_astar::pathfinder::Frontier::new (7 samples, 0.45%)</title><rect x="16.4508%" y="709" width="0.4534%" height="15" fill="rgb(219,145,47)" fg:x="254" fg:w="7"/><text x="16.5680%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.06%)</title><rect x="16.8394%" y="693" width="0.0648%" height="15" fill="rgb(243,12,26)" fg:x="260" fg:w="1"/><text x="16.9566%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.06%)</title><rect x="16.8394%" y="677" width="0.0648%" height="15" fill="rgb(214,87,16)" fg:x="260" fg:w="1"/><text x="16.9566%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.06%)</title><rect x="16.8394%" y="661" width="0.0648%" height="15" fill="rgb(208,99,42)" fg:x="260" fg:w="1"/><text x="16.9566%" y="671.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.26%)</title><rect x="17.6166%" y="709" width="0.2591%" height="15" fill="rgb(253,99,2)" fg:x="272" fg:w="4"/><text x="17.7338%" y="719.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&lt;&amp;f64&gt;&gt;::add (1 samples, 0.06%)</title><rect x="17.8756%" y="709" width="0.0648%" height="15" fill="rgb(220,168,23)" fg:x="276" fg:w="1"/><text x="17.9928%" y="719.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.06%)</title><rect x="17.8756%" y="693" width="0.0648%" height="15" fill="rgb(242,38,24)" fg:x="276" fg:w="1"/><text x="17.9928%" y="703.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.06%)</title><rect x="18.9767%" y="405" width="0.0648%" height="15" fill="rgb(225,182,9)" fg:x="293" fg:w="1"/><text x="19.0939%" y="415.50"></text></g><g><title>tick_sched_timer (1 samples, 0.06%)</title><rect x="18.9767%" y="389" width="0.0648%" height="15" fill="rgb(243,178,37)" fg:x="293" fg:w="1"/><text x="19.0939%" y="399.50"></text></g><g><title>tick_sched_handle (1 samples, 0.06%)</title><rect x="18.9767%" y="373" width="0.0648%" height="15" fill="rgb(232,139,19)" fg:x="293" fg:w="1"/><text x="19.0939%" y="383.50"></text></g><g><title>update_process_times (1 samples, 0.06%)</title><rect x="18.9767%" y="357" width="0.0648%" height="15" fill="rgb(225,201,24)" fg:x="293" fg:w="1"/><text x="19.0939%" y="367.50"></text></g><g><title>scheduler_tick (1 samples, 0.06%)</title><rect x="18.9767%" y="341" width="0.0648%" height="15" fill="rgb(221,47,46)" fg:x="293" fg:w="1"/><text x="19.0939%" y="351.50"></text></g><g><title>task_tick_fair (1 samples, 0.06%)</title><rect x="18.9767%" y="325" width="0.0648%" height="15" fill="rgb(249,23,13)" fg:x="293" fg:w="1"/><text x="19.0939%" y="335.50"></text></g><g><title>hrtimer_active (1 samples, 0.06%)</title><rect x="18.9767%" y="309" width="0.0648%" height="15" fill="rgb(219,9,5)" fg:x="293" fg:w="1"/><text x="19.0939%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="18.9767%" y="469" width="0.1295%" height="15" fill="rgb(254,171,16)" fg:x="293" fg:w="2"/><text x="19.0939%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="18.9767%" y="453" width="0.1295%" height="15" fill="rgb(230,171,20)" fg:x="293" fg:w="2"/><text x="19.0939%" y="463.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.13%)</title><rect x="18.9767%" y="437" width="0.1295%" height="15" fill="rgb(210,71,41)" fg:x="293" fg:w="2"/><text x="19.0939%" y="447.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.13%)</title><rect x="18.9767%" y="421" width="0.1295%" height="15" fill="rgb(206,173,20)" fg:x="293" fg:w="2"/><text x="19.0939%" y="431.50"></text></g><g><title>tick_program_event (1 samples, 0.06%)</title><rect x="19.0415%" y="405" width="0.0648%" height="15" fill="rgb(233,88,34)" fg:x="294" fg:w="1"/><text x="19.1586%" y="415.50"></text></g><g><title>clockevents_program_event (1 samples, 0.06%)</title><rect x="19.0415%" y="389" width="0.0648%" height="15" fill="rgb(223,209,46)" fg:x="294" fg:w="1"/><text x="19.1586%" y="399.50"></text></g><g><title>ktime_get (1 samples, 0.06%)</title><rect x="19.0415%" y="373" width="0.0648%" height="15" fill="rgb(250,43,18)" fg:x="294" fg:w="1"/><text x="19.1586%" y="383.50"></text></g><g><title>_int_free (17 samples, 1.10%)</title><rect x="18.0699%" y="485" width="1.1010%" height="15" fill="rgb(208,13,10)" fg:x="279" fg:w="17"/><text x="18.1871%" y="495.50">_..</text></g><g><title>unlink_chunk (1 samples, 0.06%)</title><rect x="19.1062%" y="469" width="0.0648%" height="15" fill="rgb(212,200,36)" fg:x="295" fg:w="1"/><text x="19.2234%" y="479.50"></text></g><g><title>__GI___libc_free (19 samples, 1.23%)</title><rect x="18.0052%" y="501" width="1.2306%" height="15" fill="rgb(225,90,30)" fg:x="278" fg:w="19"/><text x="18.1224%" y="511.50">__..</text></g><g><title>arena_for_chunk (1 samples, 0.06%)</title><rect x="19.1710%" y="485" width="0.0648%" height="15" fill="rgb(236,182,39)" fg:x="296" fg:w="1"/><text x="19.2882%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::pathfinder::AStar&lt;fringe_vs_astar::graph::AdjacencyGridGraph&gt;&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="709" width="1.3601%" height="15" fill="rgb(212,144,35)" fg:x="277" fg:w="21"/><text x="18.0576%" y="719.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::graph::AdjacencyGridGraph&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="693" width="1.3601%" height="15" fill="rgb(228,63,44)" fg:x="277" fg:w="21"/><text x="18.0576%" y="703.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt;&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="677" width="1.3601%" height="15" fill="rgb(228,109,6)" fg:x="277" fg:w="21"/><text x="18.0576%" y="687.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.36%)</title><rect x="17.9404%" y="661" width="1.3601%" height="15" fill="rgb(238,117,24)" fg:x="277" fg:w="21"/><text x="18.0576%" y="671.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;]&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="645" width="1.3601%" height="15" fill="rgb(242,26,26)" fg:x="277" fg:w="21"/><text x="18.0576%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="629" width="1.3601%" height="15" fill="rgb(221,92,48)" fg:x="277" fg:w="21"/><text x="18.0576%" y="639.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.36%)</title><rect x="17.9404%" y="613" width="1.3601%" height="15" fill="rgb(209,209,32)" fg:x="277" fg:w="21"/><text x="18.0576%" y="623.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;((usize,usize),f64)&gt;]&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="597" width="1.3601%" height="15" fill="rgb(221,70,22)" fg:x="277" fg:w="21"/><text x="18.0576%" y="607.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="581" width="1.3601%" height="15" fill="rgb(248,145,5)" fg:x="277" fg:w="21"/><text x="18.0576%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (21 samples, 1.36%)</title><rect x="17.9404%" y="565" width="1.3601%" height="15" fill="rgb(226,116,26)" fg:x="277" fg:w="21"/><text x="18.0576%" y="575.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.36%)</title><rect x="17.9404%" y="549" width="1.3601%" height="15" fill="rgb(244,5,17)" fg:x="277" fg:w="21"/><text x="18.0576%" y="559.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 1.30%)</title><rect x="18.0052%" y="533" width="1.2953%" height="15" fill="rgb(252,159,33)" fg:x="278" fg:w="20"/><text x="18.1224%" y="543.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (20 samples, 1.30%)</title><rect x="18.0052%" y="517" width="1.2953%" height="15" fill="rgb(206,71,0)" fg:x="278" fg:w="20"/><text x="18.1224%" y="527.50">al..</text></g><g><title>__rdl_dealloc (1 samples, 0.06%)</title><rect x="19.2358%" y="501" width="0.0648%" height="15" fill="rgb(233,118,54)" fg:x="297" fg:w="1"/><text x="19.3529%" y="511.50"></text></g><g><title>fringe_vs_astar::pathfinder::AStar&lt;G&gt;::solve::_{{closure}} (8 samples, 0.52%)</title><rect x="19.3005%" y="709" width="0.5181%" height="15" fill="rgb(234,83,48)" fg:x="298" fg:w="8"/><text x="19.4177%" y="719.50"></text></g><g><title>fringe_vs_astar::pathfinder::heuristic (7 samples, 0.45%)</title><rect x="19.3653%" y="693" width="0.4534%" height="15" fill="rgb(228,3,54)" fg:x="299" fg:w="7"/><text x="19.4825%" y="703.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (1 samples, 0.06%)</title><rect x="19.8834%" y="629" width="0.0648%" height="15" fill="rgb(226,155,13)" fg:x="307" fg:w="1"/><text x="20.0006%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.06%)</title><rect x="19.8834%" y="613" width="0.0648%" height="15" fill="rgb(241,28,37)" fg:x="307" fg:w="1"/><text x="20.0006%" y="623.50"></text></g><g><title>fringe_vs_astar::pathfinder::Frontier::pop (3 samples, 0.19%)</title><rect x="19.8187%" y="709" width="0.1943%" height="15" fill="rgb(233,93,10)" fg:x="306" fg:w="3"/><text x="19.9358%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (2 samples, 0.13%)</title><rect x="19.8834%" y="693" width="0.1295%" height="15" fill="rgb(225,113,19)" fg:x="307" fg:w="2"/><text x="20.0006%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.13%)</title><rect x="19.8834%" y="677" width="0.1295%" height="15" fill="rgb(241,2,18)" fg:x="307" fg:w="2"/><text x="20.0006%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (2 samples, 0.13%)</title><rect x="19.8834%" y="661" width="0.1295%" height="15" fill="rgb(228,207,21)" fg:x="307" fg:w="2"/><text x="20.0006%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (2 samples, 0.13%)</title><rect x="19.8834%" y="645" width="0.1295%" height="15" fill="rgb(213,211,35)" fg:x="307" fg:w="2"/><text x="20.0006%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.06%)</title><rect x="19.9482%" y="629" width="0.0648%" height="15" fill="rgb(209,83,10)" fg:x="308" fg:w="1"/><text x="20.0654%" y="639.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.06%)</title><rect x="19.9482%" y="613" width="0.0648%" height="15" fill="rgb(209,164,1)" fg:x="308" fg:w="1"/><text x="20.0654%" y="623.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="20.4663%" y="693" width="0.0648%" height="15" fill="rgb(213,184,43)" fg:x="316" fg:w="1"/><text x="20.5835%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.06%)</title><rect x="20.4663%" y="677" width="0.0648%" height="15" fill="rgb(231,61,34)" fg:x="316" fg:w="1"/><text x="20.5835%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.06%)</title><rect x="20.4663%" y="661" width="0.0648%" height="15" fill="rgb(235,75,3)" fg:x="316" fg:w="1"/><text x="20.5835%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.06%)</title><rect x="20.4663%" y="645" width="0.0648%" height="15" fill="rgb(220,106,47)" fg:x="316" fg:w="1"/><text x="20.5835%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.06%)</title><rect x="20.4663%" y="629" width="0.0648%" height="15" fill="rgb(210,196,33)" fg:x="316" fg:w="1"/><text x="20.5835%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.06%)</title><rect x="20.4663%" y="613" width="0.0648%" height="15" fill="rgb(229,154,42)" fg:x="316" fg:w="1"/><text x="20.5835%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.06%)</title><rect x="20.4663%" y="597" width="0.0648%" height="15" fill="rgb(228,114,26)" fg:x="316" fg:w="1"/><text x="20.5835%" y="607.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.06%)</title><rect x="20.4663%" y="581" width="0.0648%" height="15" fill="rgb(208,144,1)" fg:x="316" fg:w="1"/><text x="20.5835%" y="591.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.06%)</title><rect x="20.4663%" y="565" width="0.0648%" height="15" fill="rgb(239,112,37)" fg:x="316" fg:w="1"/><text x="20.5835%" y="575.50"></text></g><g><title>checked_request2size (1 samples, 0.06%)</title><rect x="20.4663%" y="549" width="0.0648%" height="15" fill="rgb(210,96,50)" fg:x="316" fg:w="1"/><text x="20.5835%" y="559.50"></text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (57 samples, 3.69%)</title><rect x="26.6839%" y="581" width="3.6917%" height="15" fill="rgb(222,178,2)" fg:x="412" fg:w="57"/><text x="26.8011%" y="591.50">&lt;alloc::col..</text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (45 samples, 2.91%)</title><rect x="30.3756%" y="581" width="2.9145%" height="15" fill="rgb(226,74,18)" fg:x="469" fg:w="45"/><text x="30.4928%" y="591.50">alloc::c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (45 samples, 2.91%)</title><rect x="30.3756%" y="565" width="2.9145%" height="15" fill="rgb(225,67,54)" fg:x="469" fg:w="45"/><text x="30.4928%" y="575.50">core::sl..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (45 samples, 2.91%)</title><rect x="30.3756%" y="549" width="2.9145%" height="15" fill="rgb(251,92,32)" fg:x="469" fg:w="45"/><text x="30.4928%" y="559.50">&lt;usize a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (45 samples, 2.91%)</title><rect x="30.3756%" y="533" width="2.9145%" height="15" fill="rgb(228,149,22)" fg:x="469" fg:w="45"/><text x="30.4928%" y="543.50">core::pt..</text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (30 samples, 1.94%)</title><rect x="33.2902%" y="581" width="1.9430%" height="15" fill="rgb(243,54,13)" fg:x="514" fg:w="30"/><text x="33.4073%" y="591.50">alloc..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (29 samples, 1.88%)</title><rect x="33.3549%" y="565" width="1.8782%" height="15" fill="rgb(243,180,28)" fg:x="515" fg:w="29"/><text x="33.4721%" y="575.50">core..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (29 samples, 1.88%)</title><rect x="33.3549%" y="549" width="1.8782%" height="15" fill="rgb(208,167,24)" fg:x="515" fg:w="29"/><text x="33.4721%" y="559.50">&lt;usi..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (29 samples, 1.88%)</title><rect x="33.3549%" y="533" width="1.8782%" height="15" fill="rgb(245,73,45)" fg:x="515" fg:w="29"/><text x="33.4721%" y="543.50">core..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (7 samples, 0.45%)</title><rect x="35.2332%" y="581" width="0.4534%" height="15" fill="rgb(237,203,48)" fg:x="544" fg:w="7"/><text x="35.3503%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (7 samples, 0.45%)</title><rect x="35.2332%" y="565" width="0.4534%" height="15" fill="rgb(211,197,16)" fg:x="544" fg:w="7"/><text x="35.3503%" y="575.50"></text></g><g><title>&lt;fringe_vs_astar::pathfinder::WeightedCell as core::cmp::PartialOrd&gt;::partial_cmp (7 samples, 0.45%)</title><rect x="35.2332%" y="549" width="0.4534%" height="15" fill="rgb(243,99,51)" fg:x="544" fg:w="7"/><text x="35.3503%" y="559.50"></text></g><g><title>&lt;fringe_vs_astar::pathfinder::WeightedCell as core::cmp::Ord&gt;::cmp (7 samples, 0.45%)</title><rect x="35.2332%" y="533" width="0.4534%" height="15" fill="rgb(215,123,29)" fg:x="544" fg:w="7"/><text x="35.3503%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (88 samples, 5.70%)</title><rect x="35.6865%" y="581" width="5.6995%" height="15" fill="rgb(239,186,37)" fg:x="551" fg:w="88"/><text x="35.8037%" y="591.50">core::cmp::impls::..</text></g><g><title>core::cmp::PartialOrd::le (42 samples, 2.72%)</title><rect x="38.6658%" y="565" width="2.7202%" height="15" fill="rgb(252,136,39)" fg:x="597" fg:w="42"/><text x="38.7830%" y="575.50">core::c..</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt;&gt;::from (324 samples, 20.98%)</title><rect x="20.5959%" y="645" width="20.9845%" height="15" fill="rgb(223,213,32)" fg:x="318" fg:w="324"/><text x="20.7130%" y="655.50">&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::convert::From&lt;..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::rebuild (323 samples, 20.92%)</title><rect x="20.6606%" y="629" width="20.9197%" height="15" fill="rgb(233,115,5)" fg:x="319" fg:w="323"/><text x="20.7778%" y="639.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::rebuild</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down (281 samples, 18.20%)</title><rect x="23.3808%" y="613" width="18.1995%" height="15" fill="rgb(207,226,44)" fg:x="361" fg:w="281"/><text x="23.4980%" y="623.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_range (281 samples, 18.20%)</title><rect x="23.3808%" y="597" width="18.1995%" height="15" fill="rgb(208,126,0)" fg:x="361" fg:w="281"/><text x="23.4980%" y="607.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_ran..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (3 samples, 0.19%)</title><rect x="41.3860%" y="581" width="0.1943%" height="15" fill="rgb(244,66,21)" fg:x="639" fg:w="3"/><text x="41.5032%" y="591.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.19%)</title><rect x="41.3860%" y="565" width="0.1943%" height="15" fill="rgb(222,97,12)" fg:x="639" fg:w="3"/><text x="41.5032%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.19%)</title><rect x="41.3860%" y="549" width="0.1943%" height="15" fill="rgb(219,213,19)" fg:x="639" fg:w="3"/><text x="41.5032%" y="559.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.13%)</title><rect x="41.5803%" y="613" width="0.1295%" height="15" fill="rgb(252,169,30)" fg:x="642" fg:w="2"/><text x="41.6975%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="41.7098%" y="565" width="0.1943%" height="15" fill="rgb(206,32,51)" fg:x="644" fg:w="3"/><text x="41.8270%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 7.45%)</title><rect x="50.8420%" y="501" width="7.4482%" height="15" fill="rgb(250,172,42)" fg:x="785" fg:w="115"/><text x="50.9592%" y="511.50">&lt;core::slice::iter::Iter..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (114 samples, 7.38%)</title><rect x="50.9067%" y="485" width="7.3834%" height="15" fill="rgb(209,34,43)" fg:x="786" fg:w="114"/><text x="51.0239%" y="495.50">&lt;core::ptr::non_null::No..</text></g><g><title>&lt;alloc::collections::binary_heap::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (267 samples, 17.29%)</title><rect x="50.8420%" y="533" width="17.2927%" height="15" fill="rgb(223,11,35)" fg:x="785" fg:w="267"/><text x="50.9592%" y="543.50">&lt;alloc::collections::binary_heap::Drain&lt;T,A&gt; as core::iter::..</text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (267 samples, 17.29%)</title><rect x="50.8420%" y="517" width="17.2927%" height="15" fill="rgb(251,219,26)" fg:x="785" fg:w="267"/><text x="50.9592%" y="527.50">&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterat..</text></g><g><title>core::option::Option&lt;T&gt;::map (152 samples, 9.84%)</title><rect x="58.2902%" y="501" width="9.8446%" height="15" fill="rgb(231,119,3)" fg:x="900" fg:w="152"/><text x="58.4073%" y="511.50">core::option::Option&lt;T&gt;::map</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (422 samples, 27.33%)</title><rect x="50.8420%" y="549" width="27.3316%" height="15" fill="rgb(216,97,11)" fg:x="785" fg:w="422"/><text x="50.9592%" y="559.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>core::option::Option&lt;T&gt;::map (155 samples, 10.04%)</title><rect x="68.1347%" y="533" width="10.0389%" height="15" fill="rgb(223,59,9)" fg:x="1052" fg:w="155"/><text x="68.2519%" y="543.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (155 samples, 10.04%)</title><rect x="68.1347%" y="517" width="10.0389%" height="15" fill="rgb(233,93,31)" fg:x="1052" fg:w="155"/><text x="68.2519%" y="527.50">core::ops::function::impls::&lt;impl ..</text></g><g><title>fringe_vs_astar::pathfinder::Frontier::replace::_{{closure}} (155 samples, 10.04%)</title><rect x="68.1347%" y="501" width="10.0389%" height="15" fill="rgb(239,81,33)" fg:x="1052" fg:w="155"/><text x="68.2519%" y="511.50">fringe_vs_astar::pathfinder::Front..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (154 samples, 9.97%)</title><rect x="68.1995%" y="485" width="9.9741%" height="15" fill="rgb(213,120,34)" fg:x="1053" fg:w="154"/><text x="68.3167%" y="495.50">core::tuple::&lt;impl core::cmp::Part..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (3 samples, 0.19%)</title><rect x="77.9793%" y="469" width="0.1943%" height="15" fill="rgb(243,49,53)" fg:x="1204" fg:w="3"/><text x="78.0965%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (51 samples, 3.30%)</title><rect x="78.1736%" y="549" width="3.3031%" height="15" fill="rgb(247,216,33)" fg:x="1207" fg:w="51"/><text x="78.2908%" y="559.50">alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::binary_heap::Drain&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;,fringe_vs_astar::pathfinder::Frontier::replace::{{closure}}&gt;&gt; (1 samples, 0.06%)</title><rect x="81.4767%" y="549" width="0.0648%" height="15" fill="rgb(226,26,14)" fg:x="1258" fg:w="1"/><text x="81.5939%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Drain&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (1 samples, 0.06%)</title><rect x="81.4767%" y="533" width="0.0648%" height="15" fill="rgb(215,49,53)" fg:x="1258" fg:w="1"/><text x="81.5939%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (1 samples, 0.06%)</title><rect x="81.4767%" y="517" width="0.0648%" height="15" fill="rgb(245,162,40)" fg:x="1258" fg:w="1"/><text x="81.5939%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="81.4767%" y="501" width="0.0648%" height="15" fill="rgb(229,68,17)" fg:x="1258" fg:w="1"/><text x="81.5939%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;fringe_vs_astar::pathfinder::WeightedCell,alloc::alloc::Global&gt;&gt; (1 samples, 0.06%)</title><rect x="81.4767%" y="485" width="0.0648%" height="15" fill="rgb(213,182,10)" fg:x="1258" fg:w="1"/><text x="81.5939%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.06%)</title><rect x="81.4767%" y="469" width="0.0648%" height="15" fill="rgb(245,125,30)" fg:x="1258" fg:w="1"/><text x="81.5939%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (855 samples, 55.38%)</title><rect x="41.7098%" y="581" width="55.3756%" height="15" fill="rgb(232,202,2)" fg:x="644" fg:w="855"/><text x="41.8270%" y="591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (852 samples, 55.18%)</title><rect x="41.9041%" y="565" width="55.1813%" height="15" fill="rgb(237,140,51)" fg:x="647" fg:w="852"/><text x="42.0213%" y="575.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (240 samples, 15.54%)</title><rect x="81.5415%" y="549" width="15.5440%" height="15" fill="rgb(236,157,25)" fg:x="1259" fg:w="240"/><text x="81.6586%" y="559.50">core::ptr::write</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.06%)</title><rect x="97.0855%" y="581" width="0.0648%" height="15" fill="rgb(219,209,0)" fg:x="1499" fg:w="1"/><text x="97.2027%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.06%)</title><rect x="97.0855%" y="565" width="0.0648%" height="15" fill="rgb(240,116,54)" fg:x="1499" fg:w="1"/><text x="97.2027%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.06%)</title><rect x="97.0855%" y="549" width="0.0648%" height="15" fill="rgb(216,10,36)" fg:x="1499" fg:w="1"/><text x="97.2027%" y="559.50"></text></g><g><title>fringe_vs_astar::pathfinder::Frontier::replace::_{{closure}} (1 samples, 0.06%)</title><rect x="97.0855%" y="533" width="0.0648%" height="15" fill="rgb(222,72,44)" fg:x="1499" fg:w="1"/><text x="97.2027%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (1 samples, 0.06%)</title><rect x="97.0855%" y="517" width="0.0648%" height="15" fill="rgb(232,159,9)" fg:x="1499" fg:w="1"/><text x="97.2027%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,188 samples, 76.94%)</title><rect x="20.5959%" y="677" width="76.9430%" height="15" fill="rgb(210,39,32)" fg:x="318" fg:w="1188"/><text x="20.7130%" y="687.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,188 samples, 76.94%)</title><rect x="20.5959%" y="661" width="76.9430%" height="15" fill="rgb(216,194,45)" fg:x="318" fg:w="1188"/><text x="20.7130%" y="671.50">&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>core::iter::traits::iterator::Iterator::collect (864 samples, 55.96%)</title><rect x="41.5803%" y="645" width="55.9585%" height="15" fill="rgb(218,18,35)" fg:x="642" fg:w="864"/><text x="41.6975%" y="655.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (864 samples, 55.96%)</title><rect x="41.5803%" y="629" width="55.9585%" height="15" fill="rgb(207,83,51)" fg:x="642" fg:w="864"/><text x="41.6975%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (862 samples, 55.83%)</title><rect x="41.7098%" y="613" width="55.8290%" height="15" fill="rgb(225,63,43)" fg:x="644" fg:w="862"/><text x="41.8270%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (862 samples, 55.83%)</title><rect x="41.7098%" y="597" width="55.8290%" height="15" fill="rgb(207,57,36)" fg:x="644" fg:w="862"/><text x="41.8270%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.39%)</title><rect x="97.1503%" y="581" width="0.3886%" height="15" fill="rgb(216,99,33)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="97.1503%" y="565" width="0.3886%" height="15" fill="rgb(225,42,16)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="97.1503%" y="549" width="0.3886%" height="15" fill="rgb(220,201,45)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.39%)</title><rect x="97.1503%" y="533" width="0.3886%" height="15" fill="rgb(225,33,4)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.39%)</title><rect x="97.1503%" y="517" width="0.3886%" height="15" fill="rgb(224,33,50)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.39%)</title><rect x="97.1503%" y="501" width="0.3886%" height="15" fill="rgb(246,198,51)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="511.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.39%)</title><rect x="97.1503%" y="485" width="0.3886%" height="15" fill="rgb(205,22,4)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="495.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.39%)</title><rect x="97.1503%" y="469" width="0.3886%" height="15" fill="rgb(206,3,8)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="479.50"></text></g><g><title>_int_malloc (6 samples, 0.39%)</title><rect x="97.1503%" y="453" width="0.3886%" height="15" fill="rgb(251,23,15)" fg:x="1500" fg:w="6"/><text x="97.2674%" y="463.50"></text></g><g><title>unlink_chunk (1 samples, 0.06%)</title><rect x="97.4741%" y="437" width="0.0648%" height="15" fill="rgb(252,88,28)" fg:x="1505" fg:w="1"/><text x="97.5913%" y="447.50"></text></g><g><title>fringe_vs_astar::pathfinder::AStar&lt;G&gt;::solve (1,249 samples, 80.89%)</title><rect x="16.9041%" y="725" width="80.8938%" height="15" fill="rgb(212,127,14)" fg:x="261" fg:w="1249"/><text x="17.0213%" y="735.50">fringe_vs_astar::pathfinder::AStar&lt;G&gt;::solve</text></g><g><title>fringe_vs_astar::pathfinder::Frontier::push (1,201 samples, 77.78%)</title><rect x="20.0130%" y="709" width="77.7850%" height="15" fill="rgb(247,145,37)" fg:x="309" fg:w="1201"/><text x="20.1301%" y="719.50">fringe_vs_astar::pathfinder::Frontier::push</text></g><g><title>fringe_vs_astar::pathfinder::Frontier::replace (1,193 samples, 77.27%)</title><rect x="20.5311%" y="693" width="77.2668%" height="15" fill="rgb(209,117,53)" fg:x="317" fg:w="1193"/><text x="20.6483%" y="703.50">fringe_vs_astar::pathfinder::Frontier::replace</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::BinaryHeap&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (4 samples, 0.26%)</title><rect x="97.5389%" y="677" width="0.2591%" height="15" fill="rgb(212,90,42)" fg:x="1506" fg:w="4"/><text x="97.6560%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (4 samples, 0.26%)</title><rect x="97.5389%" y="661" width="0.2591%" height="15" fill="rgb(218,164,37)" fg:x="1506" fg:w="4"/><text x="97.6560%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::pathfinder::WeightedCell&gt;&gt; (4 samples, 0.26%)</title><rect x="97.5389%" y="645" width="0.2591%" height="15" fill="rgb(246,65,34)" fg:x="1506" fg:w="4"/><text x="97.6560%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.26%)</title><rect x="97.5389%" y="629" width="0.2591%" height="15" fill="rgb(231,100,33)" fg:x="1506" fg:w="4"/><text x="97.6560%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.19%)</title><rect x="97.6036%" y="613" width="0.1943%" height="15" fill="rgb(228,126,14)" fg:x="1507" fg:w="3"/><text x="97.7208%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.19%)</title><rect x="97.6036%" y="597" width="0.1943%" height="15" fill="rgb(215,173,21)" fg:x="1507" fg:w="3"/><text x="97.7208%" y="607.50"></text></g><g><title>__GI___libc_free (3 samples, 0.19%)</title><rect x="97.6036%" y="581" width="0.1943%" height="15" fill="rgb(210,6,40)" fg:x="1507" fg:w="3"/><text x="97.7208%" y="591.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="98.1218%" y="293" width="0.0648%" height="15" fill="rgb(212,48,18)" fg:x="1515" fg:w="1"/><text x="98.2389%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.06%)</title><rect x="98.1218%" y="277" width="0.0648%" height="15" fill="rgb(230,214,11)" fg:x="1515" fg:w="1"/><text x="98.2389%" y="287.50"></text></g><g><title>process_output_block (6 samples, 0.39%)</title><rect x="97.8627%" y="373" width="0.3886%" height="15" fill="rgb(254,105,39)" fg:x="1511" fg:w="6"/><text x="97.9799%" y="383.50"></text></g><g><title>pty_write (3 samples, 0.19%)</title><rect x="98.0570%" y="357" width="0.1943%" height="15" fill="rgb(245,158,5)" fg:x="1514" fg:w="3"/><text x="98.1742%" y="367.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (3 samples, 0.19%)</title><rect x="98.0570%" y="341" width="0.1943%" height="15" fill="rgb(249,208,11)" fg:x="1514" fg:w="3"/><text x="98.1742%" y="351.50"></text></g><g><title>queue_work_on (3 samples, 0.19%)</title><rect x="98.0570%" y="325" width="0.1943%" height="15" fill="rgb(210,39,28)" fg:x="1514" fg:w="3"/><text x="98.1742%" y="335.50"></text></g><g><title>__queue_work (3 samples, 0.19%)</title><rect x="98.0570%" y="309" width="0.1943%" height="15" fill="rgb(211,56,53)" fg:x="1514" fg:w="3"/><text x="98.1742%" y="319.50"></text></g><g><title>wake_up_process (1 samples, 0.06%)</title><rect x="98.1865%" y="293" width="0.0648%" height="15" fill="rgb(226,201,30)" fg:x="1516" fg:w="1"/><text x="98.3037%" y="303.50"></text></g><g><title>try_to_wake_up (1 samples, 0.06%)</title><rect x="98.1865%" y="277" width="0.0648%" height="15" fill="rgb(239,101,34)" fg:x="1516" fg:w="1"/><text x="98.3037%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.06%)</title><rect x="98.1865%" y="261" width="0.0648%" height="15" fill="rgb(226,209,5)" fg:x="1516" fg:w="1"/><text x="98.3037%" y="271.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.06%)</title><rect x="98.1865%" y="245" width="0.0648%" height="15" fill="rgb(250,105,47)" fg:x="1516" fg:w="1"/><text x="98.3037%" y="255.50"></text></g><g><title>_start (1,494 samples, 96.76%)</title><rect x="1.5544%" y="869" width="96.7617%" height="15" fill="rgb(230,72,3)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="879.50">_start</text></g><g><title>__libc_start_main_impl (1,494 samples, 96.76%)</title><rect x="1.5544%" y="853" width="96.7617%" height="15" fill="rgb(232,218,39)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="863.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (1,494 samples, 96.76%)</title><rect x="1.5544%" y="837" width="96.7617%" height="15" fill="rgb(248,166,6)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="847.50">__libc_start_call_main</text></g><g><title>main (1,494 samples, 96.76%)</title><rect x="1.5544%" y="821" width="96.7617%" height="15" fill="rgb(247,89,20)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (1,494 samples, 96.76%)</title><rect x="1.5544%" y="805" width="96.7617%" height="15" fill="rgb(248,130,54)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (1,494 samples, 96.76%)</title><rect x="1.5544%" y="789" width="96.7617%" height="15" fill="rgb(234,196,4)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="799.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,494 samples, 96.76%)</title><rect x="1.5544%" y="773" width="96.7617%" height="15" fill="rgb(250,143,31)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,494 samples, 96.76%)</title><rect x="1.5544%" y="757" width="96.7617%" height="15" fill="rgb(211,110,34)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="767.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (1,494 samples, 96.76%)</title><rect x="1.5544%" y="741" width="96.7617%" height="15" fill="rgb(215,124,48)" fg:x="24" fg:w="1494"/><text x="1.6716%" y="751.50">fringe_vs_astar::main</text></g><g><title>std::io::stdio::_print (8 samples, 0.52%)</title><rect x="97.7979%" y="725" width="0.5181%" height="15" fill="rgb(216,46,13)" fg:x="1510" fg:w="8"/><text x="97.9151%" y="735.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (8 samples, 0.52%)</title><rect x="97.7979%" y="709" width="0.5181%" height="15" fill="rgb(205,184,25)" fg:x="1510" fg:w="8"/><text x="97.9151%" y="719.50"></text></g><g><title>core::fmt::write (8 samples, 0.52%)</title><rect x="97.7979%" y="693" width="0.5181%" height="15" fill="rgb(228,1,10)" fg:x="1510" fg:w="8"/><text x="97.9151%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (8 samples, 0.52%)</title><rect x="97.7979%" y="677" width="0.5181%" height="15" fill="rgb(213,116,27)" fg:x="1510" fg:w="8"/><text x="97.9151%" y="687.50"></text></g><g><title>&lt;fringe_vs_astar::map::GridMap as core::fmt::Display&gt;::fmt (8 samples, 0.52%)</title><rect x="97.7979%" y="661" width="0.5181%" height="15" fill="rgb(241,95,50)" fg:x="1510" fg:w="8"/><text x="97.9151%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.45%)</title><rect x="97.8627%" y="645" width="0.4534%" height="15" fill="rgb(238,48,32)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="655.50"></text></g><g><title>core::fmt::write (7 samples, 0.45%)</title><rect x="97.8627%" y="629" width="0.4534%" height="15" fill="rgb(235,113,49)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.45%)</title><rect x="97.8627%" y="613" width="0.4534%" height="15" fill="rgb(205,127,43)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="623.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.45%)</title><rect x="97.8627%" y="597" width="0.4534%" height="15" fill="rgb(250,162,2)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="607.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.45%)</title><rect x="97.8627%" y="581" width="0.4534%" height="15" fill="rgb(220,13,41)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="591.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (7 samples, 0.45%)</title><rect x="97.8627%" y="565" width="0.4534%" height="15" fill="rgb(249,221,25)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="575.50"></text></g><g><title>__GI___libc_write (7 samples, 0.45%)</title><rect x="97.8627%" y="549" width="0.4534%" height="15" fill="rgb(215,208,19)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.45%)</title><rect x="97.8627%" y="533" width="0.4534%" height="15" fill="rgb(236,175,2)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="543.50"></text></g><g><title>do_syscall_64 (7 samples, 0.45%)</title><rect x="97.8627%" y="517" width="0.4534%" height="15" fill="rgb(241,52,2)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="527.50"></text></g><g><title>x64_sys_call (7 samples, 0.45%)</title><rect x="97.8627%" y="501" width="0.4534%" height="15" fill="rgb(248,140,14)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="511.50"></text></g><g><title>__x64_sys_write (7 samples, 0.45%)</title><rect x="97.8627%" y="485" width="0.4534%" height="15" fill="rgb(253,22,42)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="495.50"></text></g><g><title>ksys_write (7 samples, 0.45%)</title><rect x="97.8627%" y="469" width="0.4534%" height="15" fill="rgb(234,61,47)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="479.50"></text></g><g><title>vfs_write (7 samples, 0.45%)</title><rect x="97.8627%" y="453" width="0.4534%" height="15" fill="rgb(208,226,15)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="463.50"></text></g><g><title>tty_write (7 samples, 0.45%)</title><rect x="97.8627%" y="437" width="0.4534%" height="15" fill="rgb(217,221,4)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="447.50"></text></g><g><title>file_tty_write.constprop.0 (7 samples, 0.45%)</title><rect x="97.8627%" y="421" width="0.4534%" height="15" fill="rgb(212,174,34)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="431.50"></text></g><g><title>do_tty_write (7 samples, 0.45%)</title><rect x="97.8627%" y="405" width="0.4534%" height="15" fill="rgb(253,83,4)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="415.50"></text></g><g><title>n_tty_write (7 samples, 0.45%)</title><rect x="97.8627%" y="389" width="0.4534%" height="15" fill="rgb(250,195,49)" fg:x="1511" fg:w="7"/><text x="97.9799%" y="399.50"></text></g><g><title>wait_woken (1 samples, 0.06%)</title><rect x="98.2513%" y="373" width="0.0648%" height="15" fill="rgb(241,192,25)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="383.50"></text></g><g><title>schedule_timeout (1 samples, 0.06%)</title><rect x="98.2513%" y="357" width="0.0648%" height="15" fill="rgb(208,124,10)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="367.50"></text></g><g><title>schedule (1 samples, 0.06%)</title><rect x="98.2513%" y="341" width="0.0648%" height="15" fill="rgb(222,33,0)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="351.50"></text></g><g><title>__schedule (1 samples, 0.06%)</title><rect x="98.2513%" y="325" width="0.0648%" height="15" fill="rgb(234,209,28)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="335.50"></text></g><g><title>pick_next_task (1 samples, 0.06%)</title><rect x="98.2513%" y="309" width="0.0648%" height="15" fill="rgb(224,11,23)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="319.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.06%)</title><rect x="98.2513%" y="293" width="0.0648%" height="15" fill="rgb(232,99,1)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="303.50"></text></g><g><title>newidle_balance (1 samples, 0.06%)</title><rect x="98.2513%" y="277" width="0.0648%" height="15" fill="rgb(237,95,45)" fg:x="1517" fg:w="1"/><text x="98.3685%" y="287.50"></text></g><g><title>asm_exc_page_fault (10 samples, 0.65%)</title><rect x="98.3161%" y="869" width="0.6477%" height="15" fill="rgb(208,109,11)" fg:x="1518" fg:w="10"/><text x="98.4332%" y="879.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.06%)</title><rect x="98.9637%" y="821" width="0.0648%" height="15" fill="rgb(216,190,48)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="831.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.06%)</title><rect x="98.9637%" y="805" width="0.0648%" height="15" fill="rgb(251,171,36)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="815.50"></text></g><g><title>bprm_execve (1 samples, 0.06%)</title><rect x="98.9637%" y="789" width="0.0648%" height="15" fill="rgb(230,62,22)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="799.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.06%)</title><rect x="98.9637%" y="773" width="0.0648%" height="15" fill="rgb(225,114,35)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="783.50"></text></g><g><title>exec_binprm (1 samples, 0.06%)</title><rect x="98.9637%" y="757" width="0.0648%" height="15" fill="rgb(215,118,42)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="767.50"></text></g><g><title>search_binary_handler (1 samples, 0.06%)</title><rect x="98.9637%" y="741" width="0.0648%" height="15" fill="rgb(243,119,21)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="751.50"></text></g><g><title>load_elf_binary (1 samples, 0.06%)</title><rect x="98.9637%" y="725" width="0.0648%" height="15" fill="rgb(252,177,53)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="735.50"></text></g><g><title>setup_arg_pages (1 samples, 0.06%)</title><rect x="98.9637%" y="709" width="0.0648%" height="15" fill="rgb(237,209,29)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="719.50"></text></g><g><title>expand_stack_locked (1 samples, 0.06%)</title><rect x="98.9637%" y="693" width="0.0648%" height="15" fill="rgb(212,65,23)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="703.50"></text></g><g><title>expand_downwards (1 samples, 0.06%)</title><rect x="98.9637%" y="677" width="0.0648%" height="15" fill="rgb(230,222,46)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="687.50"></text></g><g><title>perf_event_mmap (1 samples, 0.06%)</title><rect x="98.9637%" y="661" width="0.0648%" height="15" fill="rgb(215,135,32)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="671.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.06%)</title><rect x="98.9637%" y="645" width="0.0648%" height="15" fill="rgb(246,101,22)" fg:x="1528" fg:w="1"/><text x="99.0809%" y="655.50"></text></g><g><title>_compound_head (1 samples, 0.06%)</title><rect x="99.0285%" y="645" width="0.0648%" height="15" fill="rgb(206,107,13)" fg:x="1529" fg:w="1"/><text x="99.1457%" y="655.50"></text></g><g><title>page_remove_rmap (1 samples, 0.06%)</title><rect x="99.1580%" y="629" width="0.0648%" height="15" fill="rgb(250,100,44)" fg:x="1531" fg:w="1"/><text x="99.2752%" y="639.50"></text></g><g><title>uncharge_batch (1 samples, 0.06%)</title><rect x="99.2228%" y="549" width="0.0648%" height="15" fill="rgb(231,147,38)" fg:x="1532" fg:w="1"/><text x="99.3400%" y="559.50"></text></g><g><title>memcg_check_events (1 samples, 0.06%)</title><rect x="99.2228%" y="533" width="0.0648%" height="15" fill="rgb(229,8,40)" fg:x="1532" fg:w="1"/><text x="99.3400%" y="543.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.13%)</title><rect x="99.2228%" y="565" width="0.1295%" height="15" fill="rgb(221,135,30)" fg:x="1532" fg:w="2"/><text x="99.3400%" y="575.50"></text></g><g><title>uncharge_folio (1 samples, 0.06%)</title><rect x="99.2876%" y="549" width="0.0648%" height="15" fill="rgb(249,193,18)" fg:x="1533" fg:w="1"/><text x="99.4048%" y="559.50"></text></g><g><title>free_unref_page_list (2 samples, 0.13%)</title><rect x="99.3523%" y="565" width="0.1295%" height="15" fill="rgb(209,133,39)" fg:x="1534" fg:w="2"/><text x="99.4695%" y="575.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.13%)</title><rect x="99.3523%" y="549" width="0.1295%" height="15" fill="rgb(232,100,14)" fg:x="1534" fg:w="2"/><text x="99.4695%" y="559.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.13%)</title><rect x="99.3523%" y="533" width="0.1295%" height="15" fill="rgb(224,185,1)" fg:x="1534" fg:w="2"/><text x="99.4695%" y="543.50"></text></g><g><title>__free_one_page (2 samples, 0.13%)</title><rect x="99.3523%" y="517" width="0.1295%" height="15" fill="rgb(223,139,8)" fg:x="1534" fg:w="2"/><text x="99.4695%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.58%)</title><rect x="98.9637%" y="869" width="0.5829%" height="15" fill="rgb(232,213,38)" fg:x="1528" fg:w="9"/><text x="99.0809%" y="879.50"></text></g><g><title>do_syscall_64 (9 samples, 0.58%)</title><rect x="98.9637%" y="853" width="0.5829%" height="15" fill="rgb(207,94,22)" fg:x="1528" fg:w="9"/><text x="99.0809%" y="863.50"></text></g><g><title>x64_sys_call (9 samples, 0.58%)</title><rect x="98.9637%" y="837" width="0.5829%" height="15" fill="rgb(219,183,54)" fg:x="1528" fg:w="9"/><text x="99.0809%" y="847.50"></text></g><g><title>__x64_sys_exit_group (8 samples, 0.52%)</title><rect x="99.0285%" y="821" width="0.5181%" height="15" fill="rgb(216,185,54)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="831.50"></text></g><g><title>do_group_exit (8 samples, 0.52%)</title><rect x="99.0285%" y="805" width="0.5181%" height="15" fill="rgb(254,217,39)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="815.50"></text></g><g><title>do_exit (8 samples, 0.52%)</title><rect x="99.0285%" y="789" width="0.5181%" height="15" fill="rgb(240,178,23)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="799.50"></text></g><g><title>exit_mm (8 samples, 0.52%)</title><rect x="99.0285%" y="773" width="0.5181%" height="15" fill="rgb(218,11,47)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="783.50"></text></g><g><title>mmput (8 samples, 0.52%)</title><rect x="99.0285%" y="757" width="0.5181%" height="15" fill="rgb(218,51,51)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="767.50"></text></g><g><title>__mmput (8 samples, 0.52%)</title><rect x="99.0285%" y="741" width="0.5181%" height="15" fill="rgb(238,126,27)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="751.50"></text></g><g><title>exit_mmap (8 samples, 0.52%)</title><rect x="99.0285%" y="725" width="0.5181%" height="15" fill="rgb(249,202,22)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="735.50"></text></g><g><title>unmap_vmas (8 samples, 0.52%)</title><rect x="99.0285%" y="709" width="0.5181%" height="15" fill="rgb(254,195,49)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="719.50"></text></g><g><title>unmap_single_vma (8 samples, 0.52%)</title><rect x="99.0285%" y="693" width="0.5181%" height="15" fill="rgb(208,123,14)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="703.50"></text></g><g><title>unmap_page_range (8 samples, 0.52%)</title><rect x="99.0285%" y="677" width="0.5181%" height="15" fill="rgb(224,200,8)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="687.50"></text></g><g><title>zap_pmd_range.isra.0 (8 samples, 0.52%)</title><rect x="99.0285%" y="661" width="0.5181%" height="15" fill="rgb(217,61,36)" fg:x="1529" fg:w="8"/><text x="99.1457%" y="671.50"></text></g><g><title>zap_pte_range (7 samples, 0.45%)</title><rect x="99.0933%" y="645" width="0.4534%" height="15" fill="rgb(206,35,45)" fg:x="1530" fg:w="7"/><text x="99.2105%" y="655.50"></text></g><g><title>tlb_flush_mmu (5 samples, 0.32%)</title><rect x="99.2228%" y="629" width="0.3238%" height="15" fill="rgb(217,65,33)" fg:x="1532" fg:w="5"/><text x="99.3400%" y="639.50"></text></g><g><title>tlb_batch_pages_flush (5 samples, 0.32%)</title><rect x="99.2228%" y="613" width="0.3238%" height="15" fill="rgb(222,158,48)" fg:x="1532" fg:w="5"/><text x="99.3400%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (5 samples, 0.32%)</title><rect x="99.2228%" y="597" width="0.3238%" height="15" fill="rgb(254,2,54)" fg:x="1532" fg:w="5"/><text x="99.3400%" y="607.50"></text></g><g><title>release_pages (5 samples, 0.32%)</title><rect x="99.2228%" y="581" width="0.3238%" height="15" fill="rgb(250,143,38)" fg:x="1532" fg:w="5"/><text x="99.3400%" y="591.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.06%)</title><rect x="99.4819%" y="565" width="0.0648%" height="15" fill="rgb(248,25,0)" fg:x="1536" fg:w="1"/><text x="99.5991%" y="575.50"></text></g><g><title>fringe-vs-astar (1,539 samples, 99.68%)</title><rect x="0.0000%" y="885" width="99.6762%" height="15" fill="rgb(206,152,27)" fg:x="0" fg:w="1539"/><text x="0.1172%" y="895.50">fringe-vs-astar</text></g><g><title>main_arena (2 samples, 0.13%)</title><rect x="99.5466%" y="869" width="0.1295%" height="15" fill="rgb(240,77,30)" fg:x="1537" fg:w="2"/><text x="99.6638%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="99.5466%" y="853" width="0.1295%" height="15" fill="rgb(231,5,3)" fg:x="1537" fg:w="2"/><text x="99.6638%" y="863.50"></text></g><g><title>all (1,544 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(207,226,32)" fg:x="0" fg:w="1544"/><text x="0.1172%" y="911.50"></text></g><g><title>perf-exec (5 samples, 0.32%)</title><rect x="99.6762%" y="885" width="0.3238%" height="15" fill="rgb(222,207,47)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.32%)</title><rect x="99.6762%" y="869" width="0.3238%" height="15" fill="rgb(229,115,45)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="879.50"></text></g><g><title>do_syscall_64 (5 samples, 0.32%)</title><rect x="99.6762%" y="853" width="0.3238%" height="15" fill="rgb(224,191,6)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="863.50"></text></g><g><title>x64_sys_call (5 samples, 0.32%)</title><rect x="99.6762%" y="837" width="0.3238%" height="15" fill="rgb(230,227,24)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="847.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.32%)</title><rect x="99.6762%" y="821" width="0.3238%" height="15" fill="rgb(228,80,19)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="831.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.32%)</title><rect x="99.6762%" y="805" width="0.3238%" height="15" fill="rgb(247,229,0)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="815.50"></text></g><g><title>bprm_execve (5 samples, 0.32%)</title><rect x="99.6762%" y="789" width="0.3238%" height="15" fill="rgb(237,194,15)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="799.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.32%)</title><rect x="99.6762%" y="773" width="0.3238%" height="15" fill="rgb(219,203,20)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="783.50"></text></g><g><title>exec_binprm (5 samples, 0.32%)</title><rect x="99.6762%" y="757" width="0.3238%" height="15" fill="rgb(234,128,8)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="767.50"></text></g><g><title>search_binary_handler (5 samples, 0.32%)</title><rect x="99.6762%" y="741" width="0.3238%" height="15" fill="rgb(248,202,8)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="751.50"></text></g><g><title>load_elf_binary (5 samples, 0.32%)</title><rect x="99.6762%" y="725" width="0.3238%" height="15" fill="rgb(206,104,37)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="735.50"></text></g><g><title>begin_new_exec (5 samples, 0.32%)</title><rect x="99.6762%" y="709" width="0.3238%" height="15" fill="rgb(223,8,27)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="719.50"></text></g><g><title>perf_event_exec (5 samples, 0.32%)</title><rect x="99.6762%" y="693" width="0.3238%" height="15" fill="rgb(216,217,28)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="703.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.32%)</title><rect x="99.6762%" y="677" width="0.3238%" height="15" fill="rgb(249,199,1)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="687.50"></text></g><g><title>ctx_resched (5 samples, 0.32%)</title><rect x="99.6762%" y="661" width="0.3238%" height="15" fill="rgb(240,85,17)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="671.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.32%)</title><rect x="99.6762%" y="645" width="0.3238%" height="15" fill="rgb(206,108,45)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="655.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.32%)</title><rect x="99.6762%" y="629" width="0.3238%" height="15" fill="rgb(245,210,41)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="639.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.32%)</title><rect x="99.6762%" y="613" width="0.3238%" height="15" fill="rgb(206,13,37)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="623.50"></text></g><g><title>native_write_msr (5 samples, 0.32%)</title><rect x="99.6762%" y="597" width="0.3238%" height="15" fill="rgb(250,61,18)" fg:x="1539" fg:w="5"/><text x="99.7934%" y="607.50"></text></g></svg></svg>