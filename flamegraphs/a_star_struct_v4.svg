<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="1206" onload="init(evt)" viewBox="0 0 2560 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="1189.00"> </text><svg id="frames" x="10" width="2540" total_samples="5906"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="0.1016%" y="1093" width="0.0339%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="2"/><text x="0.2188%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.03%)</title><rect x="0.1016%" y="1077" width="0.0339%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="2"/><text x="0.2188%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="0.1016%" y="1061" width="0.0339%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="2"/><text x="0.2188%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="0.1016%" y="1045" width="0.0339%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="2"/><text x="0.2188%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="0.0000%" y="1125" width="0.1863%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="11"/><text x="0.1172%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.15%)</title><rect x="0.0339%" y="1109" width="0.1524%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="9"/><text x="0.1511%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.05%)</title><rect x="0.1355%" y="1093" width="0.0508%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="0.1355%" y="1077" width="0.0508%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="0.1355%" y="1061" width="0.0508%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.05%)</title><rect x="0.1355%" y="1045" width="0.0508%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="0.1355%" y="1029" width="0.0508%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="0.1355%" y="1013" width="0.0508%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="0.1355%" y="997" width="0.0508%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="3"/><text x="0.2526%" y="1007.50"></text></g><g><title>[fringe-vs-astar] (4 samples, 0.07%)</title><rect x="0.1863%" y="1109" width="0.0677%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="4"/><text x="0.3034%" y="1119.50"></text></g><g><title>_int_free (4 samples, 0.07%)</title><rect x="0.1863%" y="1093" width="0.0677%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="4"/><text x="0.3034%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="0.2540%" y="1109" width="0.0508%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="3"/><text x="0.3712%" y="1119.50"></text></g><g><title>_int_free (9 samples, 0.15%)</title><rect x="0.3048%" y="1109" width="0.1524%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="9"/><text x="0.4220%" y="1119.50"></text></g><g><title>_int_malloc (12 samples, 0.20%)</title><rect x="0.4572%" y="1109" width="0.2032%" height="15" fill="rgb(210,31,41)" fg:x="27" fg:w="12"/><text x="0.5743%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.14%)</title><rect x="0.6603%" y="1109" width="0.1355%" height="15" fill="rgb(221,200,47)" fg:x="39" fg:w="8"/><text x="0.7775%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.08%)</title><rect x="0.7111%" y="1093" width="0.0847%" height="15" fill="rgb(226,26,5)" fg:x="42" fg:w="5"/><text x="0.8283%" y="1103.50"></text></g><g><title>[[heap]] (39 samples, 0.66%)</title><rect x="0.1863%" y="1125" width="0.6603%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="39"/><text x="0.3034%" y="1135.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (3 samples, 0.05%)</title><rect x="0.7958%" y="1109" width="0.0508%" height="15" fill="rgb(235,183,28)" fg:x="47" fg:w="3"/><text x="0.9130%" y="1119.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::replace (1 samples, 0.02%)</title><rect x="0.8297%" y="1093" width="0.0169%" height="15" fill="rgb(221,5,38)" fg:x="49" fg:w="1"/><text x="0.9469%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="0.8297%" y="1077" width="0.0169%" height="15" fill="rgb(247,18,42)" fg:x="49" fg:w="1"/><text x="0.9469%" y="1087.50"></text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.8297%" y="1061" width="0.0169%" height="15" fill="rgb(241,131,45)" fg:x="49" fg:w="1"/><text x="0.9469%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="0.8297%" y="1045" width="0.0169%" height="15" fill="rgb(249,31,29)" fg:x="49" fg:w="1"/><text x="0.9469%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.8297%" y="1029" width="0.0169%" height="15" fill="rgb(225,111,53)" fg:x="49" fg:w="1"/><text x="0.9469%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="0.8466%" y="1109" width="0.0847%" height="15" fill="rgb(238,160,17)" fg:x="50" fg:w="5"/><text x="0.9638%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="0.8466%" y="1093" width="0.0847%" height="15" fill="rgb(214,148,48)" fg:x="50" fg:w="5"/><text x="0.9638%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (5 samples, 0.08%)</title><rect x="0.8466%" y="1077" width="0.0847%" height="15" fill="rgb(232,36,49)" fg:x="50" fg:w="5"/><text x="0.9638%" y="1087.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (5 samples, 0.08%)</title><rect x="0.8466%" y="1061" width="0.0847%" height="15" fill="rgb(209,103,24)" fg:x="50" fg:w="5"/><text x="0.9638%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (5 samples, 0.08%)</title><rect x="0.8466%" y="1045" width="0.0847%" height="15" fill="rgb(229,88,8)" fg:x="50" fg:w="5"/><text x="0.9638%" y="1055.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="0.9313%" y="1109" width="0.0677%" height="15" fill="rgb(213,181,19)" fg:x="55" fg:w="4"/><text x="1.0484%" y="1119.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="0.9990%" y="1109" width="0.0169%" height="15" fill="rgb(254,191,54)" fg:x="59" fg:w="1"/><text x="1.1162%" y="1119.50"></text></g><g><title>__rdl_realloc (7 samples, 0.12%)</title><rect x="1.0159%" y="1109" width="0.1185%" height="15" fill="rgb(241,83,37)" fg:x="60" fg:w="7"/><text x="1.1331%" y="1119.50"></text></g><g><title>_int_free (13 samples, 0.22%)</title><rect x="1.1344%" y="1109" width="0.2201%" height="15" fill="rgb(233,36,39)" fg:x="67" fg:w="13"/><text x="1.2516%" y="1119.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (5 samples, 0.08%)</title><rect x="1.3546%" y="1109" width="0.0847%" height="15" fill="rgb(226,3,54)" fg:x="80" fg:w="5"/><text x="1.4717%" y="1119.50"></text></g><g><title>[[stack]] (40 samples, 0.68%)</title><rect x="0.8466%" y="1125" width="0.6773%" height="15" fill="rgb(245,192,40)" fg:x="50" fg:w="40"/><text x="0.9638%" y="1135.50"></text></g><g><title>unlink_chunk (5 samples, 0.08%)</title><rect x="1.4392%" y="1109" width="0.0847%" height="15" fill="rgb(238,167,29)" fg:x="85" fg:w="5"/><text x="1.5564%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.10%)</title><rect x="1.5239%" y="1109" width="0.1016%" height="15" fill="rgb(232,182,51)" fg:x="90" fg:w="6"/><text x="1.6411%" y="1119.50"></text></g><g><title>__GI___libc_free (9 samples, 0.15%)</title><rect x="1.6255%" y="1109" width="0.1524%" height="15" fill="rgb(231,60,39)" fg:x="96" fg:w="9"/><text x="1.7427%" y="1119.50"></text></g><g><title>[anon] (24 samples, 0.41%)</title><rect x="1.5239%" y="1125" width="0.4064%" height="15" fill="rgb(208,69,12)" fg:x="90" fg:w="24"/><text x="1.6411%" y="1135.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.15%)</title><rect x="1.7779%" y="1109" width="0.1524%" height="15" fill="rgb(235,93,37)" fg:x="105" fg:w="9"/><text x="1.8950%" y="1119.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.08%)</title><rect x="1.9302%" y="1109" width="0.0847%" height="15" fill="rgb(213,116,39)" fg:x="114" fg:w="5"/><text x="2.0474%" y="1119.50"></text></g><g><title>[fringe-vs-astar] (7 samples, 0.12%)</title><rect x="1.9302%" y="1125" width="0.1185%" height="15" fill="rgb(222,207,29)" fg:x="114" fg:w="7"/><text x="2.0474%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="2.0149%" y="1109" width="0.0339%" height="15" fill="rgb(206,96,30)" fg:x="119" fg:w="2"/><text x="2.1321%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.03%)</title><rect x="2.0149%" y="1093" width="0.0339%" height="15" fill="rgb(218,138,4)" fg:x="119" fg:w="2"/><text x="2.1321%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.03%)</title><rect x="2.0149%" y="1077" width="0.0339%" height="15" fill="rgb(250,191,14)" fg:x="119" fg:w="2"/><text x="2.1321%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.03%)</title><rect x="2.0149%" y="1061" width="0.0339%" height="15" fill="rgb(239,60,40)" fg:x="119" fg:w="2"/><text x="2.1321%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.08%)</title><rect x="2.0488%" y="1109" width="0.0847%" height="15" fill="rgb(206,27,48)" fg:x="121" fg:w="5"/><text x="2.1660%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="2.0657%" y="1093" width="0.0677%" height="15" fill="rgb(225,35,8)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.07%)</title><rect x="2.0657%" y="1077" width="0.0677%" height="15" fill="rgb(250,213,24)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="2.0657%" y="1061" width="0.0677%" height="15" fill="rgb(247,123,22)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.07%)</title><rect x="2.0657%" y="1045" width="0.0677%" height="15" fill="rgb(231,138,38)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.07%)</title><rect x="2.0657%" y="1029" width="0.0677%" height="15" fill="rgb(231,145,46)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.07%)</title><rect x="2.0657%" y="1013" width="0.0677%" height="15" fill="rgb(251,118,11)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.07%)</title><rect x="2.0657%" y="997" width="0.0677%" height="15" fill="rgb(217,147,25)" fg:x="122" fg:w="4"/><text x="2.1829%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.07%)</title><rect x="2.0657%" y="981" width="0.0677%" height="15" fill="rgb(247,81,37)" fg:x="122" fg:w="4"/><text x="2.1829%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="2.1334%" y="1109" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="126" fg:w="1"/><text x="2.2506%" y="1119.50"></text></g><g><title>__GI___libc_free (9 samples, 0.15%)</title><rect x="2.1504%" y="1109" width="0.1524%" height="15" fill="rgb(227,1,9)" fg:x="127" fg:w="9"/><text x="2.2675%" y="1119.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.19%)</title><rect x="2.3027%" y="1109" width="0.1863%" height="15" fill="rgb(248,47,43)" fg:x="136" fg:w="11"/><text x="2.4199%" y="1119.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.08%)</title><rect x="2.4890%" y="1109" width="0.0847%" height="15" fill="rgb(221,10,30)" fg:x="147" fg:w="5"/><text x="2.6062%" y="1119.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="2.5737%" y="1109" width="0.0169%" height="15" fill="rgb(210,229,1)" fg:x="152" fg:w="1"/><text x="2.6908%" y="1119.50"></text></g><g><title>_int_malloc (4 samples, 0.07%)</title><rect x="2.5906%" y="1109" width="0.0677%" height="15" fill="rgb(222,148,37)" fg:x="153" fg:w="4"/><text x="2.7078%" y="1119.50"></text></g><g><title>_int_realloc (19 samples, 0.32%)</title><rect x="2.6583%" y="1109" width="0.3217%" height="15" fill="rgb(234,67,33)" fg:x="157" fg:w="19"/><text x="2.7755%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.05%)</title><rect x="2.9800%" y="1109" width="0.0508%" height="15" fill="rgb(247,98,35)" fg:x="176" fg:w="3"/><text x="3.0972%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="3.0308%" y="1109" width="0.0169%" height="15" fill="rgb(247,138,52)" fg:x="179" fg:w="1"/><text x="3.1480%" y="1119.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (1 samples, 0.02%)</title><rect x="3.0477%" y="1109" width="0.0169%" height="15" fill="rgb(213,79,30)" fg:x="180" fg:w="1"/><text x="3.1649%" y="1119.50"></text></g><g><title>fringe_vs_astar::context::Context::run (1 samples, 0.02%)</title><rect x="3.0647%" y="1109" width="0.0169%" height="15" fill="rgb(246,177,23)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1119.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (1 samples, 0.02%)</title><rect x="3.0647%" y="1093" width="0.0169%" height="15" fill="rgb(230,62,27)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (1 samples, 0.02%)</title><rect x="3.0647%" y="1077" width="0.0169%" height="15" fill="rgb(216,154,8)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (1 samples, 0.02%)</title><rect x="3.0647%" y="1061" width="0.0169%" height="15" fill="rgb(244,35,45)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="3.0647%" y="1045" width="0.0169%" height="15" fill="rgb(251,115,12)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.0647%" y="1029" width="0.0169%" height="15" fill="rgb(240,54,50)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (1 samples, 0.02%)</title><rect x="3.0647%" y="1013" width="0.0169%" height="15" fill="rgb(233,84,52)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (1 samples, 0.02%)</title><rect x="3.0647%" y="997" width="0.0169%" height="15" fill="rgb(207,117,47)" fg:x="181" fg:w="1"/><text x="3.1819%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (1 samples, 0.02%)</title><rect x="3.0647%" y="981" width="0.0169%" height="15" fill="rgb(249,43,39)" fg:x="181" fg:w="1"/><text x="3.1819%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.0647%" y="965" width="0.0169%" height="15" fill="rgb(209,38,44)" fg:x="181" fg:w="1"/><text x="3.1819%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="3.0647%" y="949" width="0.0169%" height="15" fill="rgb(236,212,23)" fg:x="181" fg:w="1"/><text x="3.1819%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="3.0647%" y="933" width="0.0169%" height="15" fill="rgb(242,79,21)" fg:x="181" fg:w="1"/><text x="3.1819%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.07%)</title><rect x="3.0816%" y="1077" width="0.0677%" height="15" fill="rgb(211,96,35)" fg:x="182" fg:w="4"/><text x="3.1988%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="3.0816%" y="1061" width="0.0677%" height="15" fill="rgb(253,215,40)" fg:x="182" fg:w="4"/><text x="3.1988%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.10%)</title><rect x="3.1493%" y="1077" width="0.1016%" height="15" fill="rgb(211,81,21)" fg:x="186" fg:w="6"/><text x="3.2665%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.10%)</title><rect x="3.1493%" y="1061" width="0.1016%" height="15" fill="rgb(208,190,38)" fg:x="186" fg:w="6"/><text x="3.2665%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.10%)</title><rect x="3.1493%" y="1045" width="0.1016%" height="15" fill="rgb(235,213,38)" fg:x="186" fg:w="6"/><text x="3.2665%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.10%)</title><rect x="3.1493%" y="1029" width="0.1016%" height="15" fill="rgb(237,122,38)" fg:x="186" fg:w="6"/><text x="3.2665%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.10%)</title><rect x="3.1493%" y="1013" width="0.1016%" height="15" fill="rgb(244,218,35)" fg:x="186" fg:w="6"/><text x="3.2665%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.12%)</title><rect x="3.2509%" y="1061" width="0.1185%" height="15" fill="rgb(240,68,47)" fg:x="192" fg:w="7"/><text x="3.3681%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.12%)</title><rect x="3.2509%" y="1045" width="0.1185%" height="15" fill="rgb(210,16,53)" fg:x="192" fg:w="7"/><text x="3.3681%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.12%)</title><rect x="3.2509%" y="1029" width="0.1185%" height="15" fill="rgb(235,124,12)" fg:x="192" fg:w="7"/><text x="3.3681%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.12%)</title><rect x="3.2509%" y="1013" width="0.1185%" height="15" fill="rgb(224,169,11)" fg:x="192" fg:w="7"/><text x="3.3681%" y="1023.50"></text></g><g><title>[unknown] (82 samples, 1.39%)</title><rect x="2.0488%" y="1125" width="1.3884%" height="15" fill="rgb(250,166,2)" fg:x="121" fg:w="82"/><text x="2.1660%" y="1135.50">[un..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (21 samples, 0.36%)</title><rect x="3.0816%" y="1109" width="0.3556%" height="15" fill="rgb(242,216,29)" fg:x="182" fg:w="21"/><text x="3.1988%" y="1119.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (21 samples, 0.36%)</title><rect x="3.0816%" y="1093" width="0.3556%" height="15" fill="rgb(230,116,27)" fg:x="182" fg:w="21"/><text x="3.1988%" y="1103.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (11 samples, 0.19%)</title><rect x="3.2509%" y="1077" width="0.1863%" height="15" fill="rgb(228,99,48)" fg:x="192" fg:w="11"/><text x="3.3681%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.3695%" y="1061" width="0.0677%" height="15" fill="rgb(253,11,6)" fg:x="199" fg:w="4"/><text x="3.4866%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="3.3695%" y="1045" width="0.0677%" height="15" fill="rgb(247,143,39)" fg:x="199" fg:w="4"/><text x="3.4866%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="3.3695%" y="1029" width="0.0677%" height="15" fill="rgb(236,97,10)" fg:x="199" fg:w="4"/><text x="3.4866%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.07%)</title><rect x="3.3695%" y="1013" width="0.0677%" height="15" fill="rgb(233,208,19)" fg:x="199" fg:w="4"/><text x="3.4866%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.07%)</title><rect x="3.3695%" y="997" width="0.0677%" height="15" fill="rgb(216,164,2)" fg:x="199" fg:w="4"/><text x="3.4866%" y="1007.50"></text></g><g><title>_IO_wide_data_0 (5 samples, 0.08%)</title><rect x="3.4372%" y="1125" width="0.0847%" height="15" fill="rgb(220,129,5)" fg:x="203" fg:w="5"/><text x="3.5544%" y="1135.50"></text></g><g><title>_int_malloc (5 samples, 0.08%)</title><rect x="3.4372%" y="1109" width="0.0847%" height="15" fill="rgb(242,17,10)" fg:x="203" fg:w="5"/><text x="3.5544%" y="1119.50"></text></g><g><title>_int_free (12 samples, 0.20%)</title><rect x="3.5218%" y="1125" width="0.2032%" height="15" fill="rgb(242,107,0)" fg:x="208" fg:w="12"/><text x="3.6390%" y="1135.50"></text></g><g><title>__GI___cxa_atexit (1 samples, 0.02%)</title><rect x="3.7250%" y="1093" width="0.0169%" height="15" fill="rgb(251,28,31)" fg:x="220" fg:w="1"/><text x="3.8422%" y="1103.50"></text></g><g><title>__internal_atexit (1 samples, 0.02%)</title><rect x="3.7250%" y="1077" width="0.0169%" height="15" fill="rgb(233,223,10)" fg:x="220" fg:w="1"/><text x="3.8422%" y="1087.50"></text></g><g><title>__new_exitfn (1 samples, 0.02%)</title><rect x="3.7250%" y="1061" width="0.0169%" height="15" fill="rgb(215,21,27)" fg:x="220" fg:w="1"/><text x="3.8422%" y="1071.50"></text></g><g><title>malloc_consolidate (11 samples, 0.19%)</title><rect x="7.4839%" y="757" width="0.1863%" height="15" fill="rgb(232,23,21)" fg:x="442" fg:w="11"/><text x="7.6011%" y="767.50"></text></g><g><title>unlink_chunk (4 samples, 0.07%)</title><rect x="7.6024%" y="741" width="0.0677%" height="15" fill="rgb(244,5,23)" fg:x="449" fg:w="4"/><text x="7.7196%" y="751.50"></text></g><g><title>_int_free (163 samples, 2.76%)</title><rect x="5.0288%" y="773" width="2.7599%" height="15" fill="rgb(226,81,46)" fg:x="297" fg:w="163"/><text x="5.1460%" y="783.50">_int_fr..</text></g><g><title>unlink_chunk (7 samples, 0.12%)</title><rect x="7.6702%" y="757" width="0.1185%" height="15" fill="rgb(247,70,30)" fg:x="453" fg:w="7"/><text x="7.7874%" y="767.50"></text></g><g><title>__GI___libc_free (176 samples, 2.98%)</title><rect x="4.8933%" y="789" width="2.9800%" height="15" fill="rgb(212,68,19)" fg:x="289" fg:w="176"/><text x="5.0105%" y="799.50">__GI___l..</text></g><g><title>arena_for_chunk (5 samples, 0.08%)</title><rect x="7.7887%" y="773" width="0.0847%" height="15" fill="rgb(240,187,13)" fg:x="460" fg:w="5"/><text x="7.9059%" y="783.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="7.8733%" y="789" width="0.0339%" height="15" fill="rgb(223,113,26)" fg:x="465" fg:w="2"/><text x="7.9905%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (179 samples, 3.03%)</title><rect x="4.8933%" y="805" width="3.0308%" height="15" fill="rgb(206,192,2)" fg:x="289" fg:w="179"/><text x="5.0105%" y="815.50">alloc::a..</text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="7.9072%" y="789" width="0.0169%" height="15" fill="rgb(241,108,4)" fg:x="467" fg:w="1"/><text x="8.0244%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (184 samples, 3.12%)</title><rect x="4.8933%" y="821" width="3.1155%" height="15" fill="rgb(247,173,49)" fg:x="289" fg:w="184"/><text x="5.0105%" y="831.50">&lt;alloc::a..</text></g><g><title>fringe_vs_astar::context::Context::run (5 samples, 0.08%)</title><rect x="7.9241%" y="805" width="0.0847%" height="15" fill="rgb(224,114,35)" fg:x="468" fg:w="5"/><text x="8.0413%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 samples, 4.57%)</title><rect x="3.7420%" y="901" width="4.5716%" height="15" fill="rgb(245,159,27)" fg:x="221" fg:w="270"/><text x="3.8591%" y="911.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (270 samples, 4.57%)</title><rect x="3.7420%" y="885" width="4.5716%" height="15" fill="rgb(245,172,44)" fg:x="221" fg:w="270"/><text x="3.8591%" y="895.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (270 samples, 4.57%)</title><rect x="3.7420%" y="869" width="4.5716%" height="15" fill="rgb(236,23,11)" fg:x="221" fg:w="270"/><text x="3.8591%" y="879.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (270 samples, 4.57%)</title><rect x="3.7420%" y="853" width="4.5716%" height="15" fill="rgb(205,117,38)" fg:x="221" fg:w="270"/><text x="3.8591%" y="863.50">core::ptr::dro..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 samples, 4.57%)</title><rect x="3.7420%" y="837" width="4.5716%" height="15" fill="rgb(237,72,25)" fg:x="221" fg:w="270"/><text x="3.8591%" y="847.50">&lt;alloc::raw_ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.30%)</title><rect x="8.0088%" y="821" width="0.3048%" height="15" fill="rgb(244,70,9)" fg:x="473" fg:w="18"/><text x="8.1260%" y="831.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="8.3136%" y="677" width="0.0169%" height="15" fill="rgb(217,125,39)" fg:x="491" fg:w="1"/><text x="8.4308%" y="687.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="8.3136%" y="661" width="0.0169%" height="15" fill="rgb(235,36,10)" fg:x="491" fg:w="1"/><text x="8.4308%" y="671.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="8.3136%" y="645" width="0.0169%" height="15" fill="rgb(251,123,47)" fg:x="491" fg:w="1"/><text x="8.4308%" y="655.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="8.3136%" y="629" width="0.0169%" height="15" fill="rgb(221,13,13)" fg:x="491" fg:w="1"/><text x="8.4308%" y="639.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.02%)</title><rect x="8.3136%" y="613" width="0.0169%" height="15" fill="rgb(238,131,9)" fg:x="491" fg:w="1"/><text x="8.4308%" y="623.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="8.3305%" y="613" width="0.0169%" height="15" fill="rgb(211,50,8)" fg:x="492" fg:w="1"/><text x="8.4477%" y="623.50"></text></g><g><title>_compound_head (5 samples, 0.08%)</title><rect x="8.3474%" y="613" width="0.0847%" height="15" fill="rgb(245,182,24)" fg:x="493" fg:w="5"/><text x="8.4646%" y="623.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="8.4490%" y="597" width="0.0169%" height="15" fill="rgb(242,14,37)" fg:x="499" fg:w="1"/><text x="8.5662%" y="607.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="8.4490%" y="581" width="0.0169%" height="15" fill="rgb(246,228,12)" fg:x="499" fg:w="1"/><text x="8.5662%" y="591.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="8.5168%" y="517" width="0.0169%" height="15" fill="rgb(213,55,15)" fg:x="503" fg:w="1"/><text x="8.6340%" y="527.50"></text></g><g><title>__mem_cgroup_uncharge_list (3 samples, 0.05%)</title><rect x="8.5168%" y="533" width="0.0508%" height="15" fill="rgb(209,9,3)" fg:x="503" fg:w="3"/><text x="8.6340%" y="543.50"></text></g><g><title>uncharge_folio (2 samples, 0.03%)</title><rect x="8.5337%" y="517" width="0.0339%" height="15" fill="rgb(230,59,30)" fg:x="504" fg:w="2"/><text x="8.6509%" y="527.50"></text></g><g><title>__free_one_page (1 samples, 0.02%)</title><rect x="8.6184%" y="501" width="0.0169%" height="15" fill="rgb(209,121,21)" fg:x="509" fg:w="1"/><text x="8.7355%" y="511.50"></text></g><g><title>free_unref_page_commit (5 samples, 0.08%)</title><rect x="8.5845%" y="517" width="0.0847%" height="15" fill="rgb(220,109,13)" fg:x="507" fg:w="5"/><text x="8.7017%" y="527.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.03%)</title><rect x="8.6353%" y="501" width="0.0339%" height="15" fill="rgb(232,18,1)" fg:x="510" fg:w="2"/><text x="8.7525%" y="511.50"></text></g><g><title>__free_one_page (2 samples, 0.03%)</title><rect x="8.6353%" y="485" width="0.0339%" height="15" fill="rgb(215,41,42)" fg:x="510" fg:w="2"/><text x="8.7525%" y="495.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="8.6522%" y="469" width="0.0169%" height="15" fill="rgb(224,123,36)" fg:x="511" fg:w="1"/><text x="8.7694%" y="479.50"></text></g><g><title>free_unref_page_list (8 samples, 0.14%)</title><rect x="8.5676%" y="533" width="0.1355%" height="15" fill="rgb(240,125,3)" fg:x="506" fg:w="8"/><text x="8.6847%" y="543.50"></text></g><g><title>free_unref_page_prepare (2 samples, 0.03%)</title><rect x="8.6692%" y="517" width="0.0339%" height="15" fill="rgb(205,98,50)" fg:x="512" fg:w="2"/><text x="8.7863%" y="527.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="8.7369%" y="517" width="0.0169%" height="15" fill="rgb(205,185,37)" fg:x="516" fg:w="1"/><text x="8.8541%" y="527.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="8.7369%" y="501" width="0.0169%" height="15" fill="rgb(238,207,15)" fg:x="516" fg:w="1"/><text x="8.8541%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (18 samples, 0.30%)</title><rect x="8.4660%" y="565" width="0.3048%" height="15" fill="rgb(213,199,42)" fg:x="500" fg:w="18"/><text x="8.5832%" y="575.50"></text></g><g><title>release_pages (18 samples, 0.30%)</title><rect x="8.4660%" y="549" width="0.3048%" height="15" fill="rgb(235,201,11)" fg:x="500" fg:w="18"/><text x="8.5832%" y="559.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (4 samples, 0.07%)</title><rect x="8.7030%" y="533" width="0.0677%" height="15" fill="rgb(207,46,11)" fg:x="514" fg:w="4"/><text x="8.8202%" y="543.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="8.7538%" y="517" width="0.0169%" height="15" fill="rgb(241,35,35)" fg:x="517" fg:w="1"/><text x="8.8710%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (300 samples, 5.08%)</title><rect x="3.7420%" y="933" width="5.0796%" height="15" fill="rgb(243,32,47)" fg:x="221" fg:w="300"/><text x="3.8591%" y="943.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (300 samples, 5.08%)</title><rect x="3.7420%" y="917" width="5.0796%" height="15" fill="rgb(247,202,23)" fg:x="221" fg:w="300"/><text x="3.8591%" y="927.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (30 samples, 0.51%)</title><rect x="8.3136%" y="901" width="0.5080%" height="15" fill="rgb(219,102,11)" fg:x="491" fg:w="30"/><text x="8.4308%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.51%)</title><rect x="8.3136%" y="885" width="0.5080%" height="15" fill="rgb(243,110,44)" fg:x="491" fg:w="30"/><text x="8.4308%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.51%)</title><rect x="8.3136%" y="869" width="0.5080%" height="15" fill="rgb(222,74,54)" fg:x="491" fg:w="30"/><text x="8.4308%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.51%)</title><rect x="8.3136%" y="853" width="0.5080%" height="15" fill="rgb(216,99,12)" fg:x="491" fg:w="30"/><text x="8.4308%" y="863.50"></text></g><g><title>__GI___libc_free (30 samples, 0.51%)</title><rect x="8.3136%" y="837" width="0.5080%" height="15" fill="rgb(226,22,26)" fg:x="491" fg:w="30"/><text x="8.4308%" y="847.50"></text></g><g><title>__GI___munmap (30 samples, 0.51%)</title><rect x="8.3136%" y="821" width="0.5080%" height="15" fill="rgb(217,163,10)" fg:x="491" fg:w="30"/><text x="8.4308%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.51%)</title><rect x="8.3136%" y="805" width="0.5080%" height="15" fill="rgb(213,25,53)" fg:x="491" fg:w="30"/><text x="8.4308%" y="815.50"></text></g><g><title>do_syscall_64 (30 samples, 0.51%)</title><rect x="8.3136%" y="789" width="0.5080%" height="15" fill="rgb(252,105,26)" fg:x="491" fg:w="30"/><text x="8.4308%" y="799.50"></text></g><g><title>x64_sys_call (30 samples, 0.51%)</title><rect x="8.3136%" y="773" width="0.5080%" height="15" fill="rgb(220,39,43)" fg:x="491" fg:w="30"/><text x="8.4308%" y="783.50"></text></g><g><title>__x64_sys_munmap (30 samples, 0.51%)</title><rect x="8.3136%" y="757" width="0.5080%" height="15" fill="rgb(229,68,48)" fg:x="491" fg:w="30"/><text x="8.4308%" y="767.50"></text></g><g><title>__vm_munmap (30 samples, 0.51%)</title><rect x="8.3136%" y="741" width="0.5080%" height="15" fill="rgb(252,8,32)" fg:x="491" fg:w="30"/><text x="8.4308%" y="751.50"></text></g><g><title>do_vmi_munmap (30 samples, 0.51%)</title><rect x="8.3136%" y="725" width="0.5080%" height="15" fill="rgb(223,20,43)" fg:x="491" fg:w="30"/><text x="8.4308%" y="735.50"></text></g><g><title>do_vmi_align_munmap (30 samples, 0.51%)</title><rect x="8.3136%" y="709" width="0.5080%" height="15" fill="rgb(229,81,49)" fg:x="491" fg:w="30"/><text x="8.4308%" y="719.50"></text></g><g><title>unmap_region (30 samples, 0.51%)</title><rect x="8.3136%" y="693" width="0.5080%" height="15" fill="rgb(236,28,36)" fg:x="491" fg:w="30"/><text x="8.4308%" y="703.50"></text></g><g><title>unmap_vmas (29 samples, 0.49%)</title><rect x="8.3305%" y="677" width="0.4910%" height="15" fill="rgb(249,185,26)" fg:x="492" fg:w="29"/><text x="8.4477%" y="687.50"></text></g><g><title>unmap_single_vma (29 samples, 0.49%)</title><rect x="8.3305%" y="661" width="0.4910%" height="15" fill="rgb(249,174,33)" fg:x="492" fg:w="29"/><text x="8.4477%" y="671.50"></text></g><g><title>unmap_page_range (29 samples, 0.49%)</title><rect x="8.3305%" y="645" width="0.4910%" height="15" fill="rgb(233,201,37)" fg:x="492" fg:w="29"/><text x="8.4477%" y="655.50"></text></g><g><title>zap_pmd_range.isra.0 (29 samples, 0.49%)</title><rect x="8.3305%" y="629" width="0.4910%" height="15" fill="rgb(221,78,26)" fg:x="492" fg:w="29"/><text x="8.4477%" y="639.50"></text></g><g><title>zap_pte_range (23 samples, 0.39%)</title><rect x="8.4321%" y="613" width="0.3894%" height="15" fill="rgb(250,127,30)" fg:x="498" fg:w="23"/><text x="8.5493%" y="623.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.36%)</title><rect x="8.4660%" y="597" width="0.3556%" height="15" fill="rgb(230,49,44)" fg:x="500" fg:w="21"/><text x="8.5832%" y="607.50"></text></g><g><title>tlb_batch_pages_flush (21 samples, 0.36%)</title><rect x="8.4660%" y="581" width="0.3556%" height="15" fill="rgb(229,67,23)" fg:x="500" fg:w="21"/><text x="8.5832%" y="591.50"></text></g><g><title>free_swap_cache (3 samples, 0.05%)</title><rect x="8.7707%" y="565" width="0.0508%" height="15" fill="rgb(249,83,47)" fg:x="518" fg:w="3"/><text x="8.8879%" y="575.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="8.8215%" y="677" width="0.0169%" height="15" fill="rgb(215,43,3)" fg:x="521" fg:w="1"/><text x="8.9387%" y="687.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="8.8215%" y="661" width="0.0169%" height="15" fill="rgb(238,154,13)" fg:x="521" fg:w="1"/><text x="8.9387%" y="671.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="8.8215%" y="645" width="0.0169%" height="15" fill="rgb(219,56,2)" fg:x="521" fg:w="1"/><text x="8.9387%" y="655.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="8.8215%" y="629" width="0.0169%" height="15" fill="rgb(233,0,4)" fg:x="521" fg:w="1"/><text x="8.9387%" y="639.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.02%)</title><rect x="8.8215%" y="613" width="0.0169%" height="15" fill="rgb(235,30,7)" fg:x="521" fg:w="1"/><text x="8.9387%" y="623.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="8.8215%" y="597" width="0.0169%" height="15" fill="rgb(250,79,13)" fg:x="521" fg:w="1"/><text x="8.9387%" y="607.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="8.8215%" y="581" width="0.0169%" height="15" fill="rgb(211,146,34)" fg:x="521" fg:w="1"/><text x="8.9387%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (302 samples, 5.11%)</title><rect x="3.7420%" y="949" width="5.1134%" height="15" fill="rgb(228,22,38)" fg:x="221" fg:w="302"/><text x="3.8591%" y="959.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::ArrayMap&gt; (2 samples, 0.03%)</title><rect x="8.8215%" y="933" width="0.0339%" height="15" fill="rgb(235,168,5)" fg:x="521" fg:w="2"/><text x="8.9387%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.03%)</title><rect x="8.8215%" y="917" width="0.0339%" height="15" fill="rgb(221,155,16)" fg:x="521" fg:w="2"/><text x="8.9387%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.03%)</title><rect x="8.8215%" y="901" width="0.0339%" height="15" fill="rgb(215,215,53)" fg:x="521" fg:w="2"/><text x="8.9387%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="8.8215%" y="885" width="0.0339%" height="15" fill="rgb(223,4,10)" fg:x="521" fg:w="2"/><text x="8.9387%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="8.8215%" y="869" width="0.0339%" height="15" fill="rgb(234,103,6)" fg:x="521" fg:w="2"/><text x="8.9387%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="8.8215%" y="853" width="0.0339%" height="15" fill="rgb(227,97,0)" fg:x="521" fg:w="2"/><text x="8.9387%" y="863.50"></text></g><g><title>__GI___libc_free (2 samples, 0.03%)</title><rect x="8.8215%" y="837" width="0.0339%" height="15" fill="rgb(234,150,53)" fg:x="521" fg:w="2"/><text x="8.9387%" y="847.50"></text></g><g><title>__GI___munmap (2 samples, 0.03%)</title><rect x="8.8215%" y="821" width="0.0339%" height="15" fill="rgb(228,201,54)" fg:x="521" fg:w="2"/><text x="8.9387%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="8.8215%" y="805" width="0.0339%" height="15" fill="rgb(222,22,37)" fg:x="521" fg:w="2"/><text x="8.9387%" y="815.50"></text></g><g><title>do_syscall_64 (2 samples, 0.03%)</title><rect x="8.8215%" y="789" width="0.0339%" height="15" fill="rgb(237,53,32)" fg:x="521" fg:w="2"/><text x="8.9387%" y="799.50"></text></g><g><title>x64_sys_call (2 samples, 0.03%)</title><rect x="8.8215%" y="773" width="0.0339%" height="15" fill="rgb(233,25,53)" fg:x="521" fg:w="2"/><text x="8.9387%" y="783.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="8.8215%" y="757" width="0.0339%" height="15" fill="rgb(210,40,34)" fg:x="521" fg:w="2"/><text x="8.9387%" y="767.50"></text></g><g><title>__vm_munmap (2 samples, 0.03%)</title><rect x="8.8215%" y="741" width="0.0339%" height="15" fill="rgb(241,220,44)" fg:x="521" fg:w="2"/><text x="8.9387%" y="751.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.03%)</title><rect x="8.8215%" y="725" width="0.0339%" height="15" fill="rgb(235,28,35)" fg:x="521" fg:w="2"/><text x="8.9387%" y="735.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.03%)</title><rect x="8.8215%" y="709" width="0.0339%" height="15" fill="rgb(210,56,17)" fg:x="521" fg:w="2"/><text x="8.9387%" y="719.50"></text></g><g><title>unmap_region (2 samples, 0.03%)</title><rect x="8.8215%" y="693" width="0.0339%" height="15" fill="rgb(224,130,29)" fg:x="521" fg:w="2"/><text x="8.9387%" y="703.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="8.8385%" y="677" width="0.0169%" height="15" fill="rgb(235,212,8)" fg:x="522" fg:w="1"/><text x="8.9557%" y="687.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="8.8385%" y="661" width="0.0169%" height="15" fill="rgb(223,33,50)" fg:x="522" fg:w="1"/><text x="8.9557%" y="671.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="8.8385%" y="645" width="0.0169%" height="15" fill="rgb(219,149,13)" fg:x="522" fg:w="1"/><text x="8.9557%" y="655.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="8.8385%" y="629" width="0.0169%" height="15" fill="rgb(250,156,29)" fg:x="522" fg:w="1"/><text x="8.9557%" y="639.50"></text></g><g><title>zap_pte_range (1 samples, 0.02%)</title><rect x="8.8385%" y="613" width="0.0169%" height="15" fill="rgb(216,193,19)" fg:x="522" fg:w="1"/><text x="8.9557%" y="623.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.02%)</title><rect x="8.9401%" y="741" width="0.0169%" height="15" fill="rgb(216,135,14)" fg:x="528" fg:w="1"/><text x="9.0572%" y="751.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="8.9401%" y="725" width="0.0169%" height="15" fill="rgb(241,47,5)" fg:x="528" fg:w="1"/><text x="9.0572%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="8.9401%" y="709" width="0.0169%" height="15" fill="rgb(233,42,35)" fg:x="528" fg:w="1"/><text x="9.0572%" y="719.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="8.9401%" y="693" width="0.0169%" height="15" fill="rgb(231,13,6)" fg:x="528" fg:w="1"/><text x="9.0572%" y="703.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="8.9401%" y="677" width="0.0169%" height="15" fill="rgb(207,181,40)" fg:x="528" fg:w="1"/><text x="9.0572%" y="687.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="8.9401%" y="661" width="0.0169%" height="15" fill="rgb(254,173,49)" fg:x="528" fg:w="1"/><text x="9.0572%" y="671.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="8.9401%" y="645" width="0.0169%" height="15" fill="rgb(221,1,38)" fg:x="528" fg:w="1"/><text x="9.0572%" y="655.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="8.9401%" y="629" width="0.0169%" height="15" fill="rgb(206,124,46)" fg:x="528" fg:w="1"/><text x="9.0572%" y="639.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="8.9401%" y="613" width="0.0169%" height="15" fill="rgb(249,21,11)" fg:x="528" fg:w="1"/><text x="9.0572%" y="623.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="8.9401%" y="597" width="0.0169%" height="15" fill="rgb(222,201,40)" fg:x="528" fg:w="1"/><text x="9.0572%" y="607.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="8.9401%" y="581" width="0.0169%" height="15" fill="rgb(235,61,29)" fg:x="528" fg:w="1"/><text x="9.0572%" y="591.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="8.9401%" y="565" width="0.0169%" height="15" fill="rgb(219,207,3)" fg:x="528" fg:w="1"/><text x="9.0572%" y="575.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="9.7359%" y="725" width="0.0169%" height="15" fill="rgb(222,56,46)" fg:x="575" fg:w="1"/><text x="9.8530%" y="735.50"></text></g><g><title>access_error (1 samples, 0.02%)</title><rect x="9.8205%" y="693" width="0.0169%" height="15" fill="rgb(239,76,54)" fg:x="580" fg:w="1"/><text x="9.9377%" y="703.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="9.8713%" y="677" width="0.0169%" height="15" fill="rgb(231,124,27)" fg:x="583" fg:w="1"/><text x="9.9885%" y="687.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="9.8882%" y="677" width="0.0169%" height="15" fill="rgb(249,195,6)" fg:x="584" fg:w="1"/><text x="10.0054%" y="687.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="10.0237%" y="645" width="0.0169%" height="15" fill="rgb(237,174,47)" fg:x="592" fg:w="1"/><text x="10.1409%" y="655.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="10.1084%" y="613" width="0.0169%" height="15" fill="rgb(206,201,31)" fg:x="597" fg:w="1"/><text x="10.2256%" y="623.50"></text></g><g><title>__folio_throttle_swaprate (2 samples, 0.03%)</title><rect x="10.1253%" y="613" width="0.0339%" height="15" fill="rgb(231,57,52)" fg:x="598" fg:w="2"/><text x="10.2425%" y="623.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.02%)</title><rect x="10.1422%" y="597" width="0.0169%" height="15" fill="rgb(248,177,22)" fg:x="599" fg:w="1"/><text x="10.2594%" y="607.50"></text></g><g><title>__rcu_read_unlock (11 samples, 0.19%)</title><rect x="10.2608%" y="597" width="0.1863%" height="15" fill="rgb(215,211,37)" fg:x="606" fg:w="11"/><text x="10.3779%" y="607.50"></text></g><g><title>__count_memcg_events (6 samples, 0.10%)</title><rect x="10.6333%" y="581" width="0.1016%" height="15" fill="rgb(241,128,51)" fg:x="628" fg:w="6"/><text x="10.7504%" y="591.50"></text></g><g><title>cgroup_rstat_updated (5 samples, 0.08%)</title><rect x="10.6502%" y="565" width="0.0847%" height="15" fill="rgb(227,165,31)" fg:x="629" fg:w="5"/><text x="10.7674%" y="575.50"></text></g><g><title>charge_memcg (33 samples, 0.56%)</title><rect x="10.4470%" y="597" width="0.5588%" height="15" fill="rgb(228,167,24)" fg:x="617" fg:w="33"/><text x="10.5642%" y="607.50"></text></g><g><title>try_charge_memcg (16 samples, 0.27%)</title><rect x="10.7348%" y="581" width="0.2709%" height="15" fill="rgb(228,143,12)" fg:x="634" fg:w="16"/><text x="10.8520%" y="591.50"></text></g><g><title>get_mem_cgroup_from_mm (4 samples, 0.07%)</title><rect x="11.0058%" y="597" width="0.0677%" height="15" fill="rgb(249,149,8)" fg:x="650" fg:w="4"/><text x="11.1229%" y="607.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="11.0566%" y="581" width="0.0169%" height="15" fill="rgb(243,35,44)" fg:x="653" fg:w="1"/><text x="11.1737%" y="591.50"></text></g><g><title>memcg_check_events (1 samples, 0.02%)</title><rect x="11.0735%" y="597" width="0.0169%" height="15" fill="rgb(246,89,9)" fg:x="654" fg:w="1"/><text x="11.1907%" y="607.50"></text></g><g><title>__mem_cgroup_charge (56 samples, 0.95%)</title><rect x="10.1592%" y="613" width="0.9482%" height="15" fill="rgb(233,213,13)" fg:x="600" fg:w="56"/><text x="10.2763%" y="623.50">_..</text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="11.0904%" y="597" width="0.0169%" height="15" fill="rgb(233,141,41)" fg:x="655" fg:w="1"/><text x="11.2076%" y="607.50"></text></g><g><title>__pte_offset_map_lock (4 samples, 0.07%)</title><rect x="11.1073%" y="613" width="0.0677%" height="15" fill="rgb(239,167,4)" fg:x="656" fg:w="4"/><text x="11.2245%" y="623.50"></text></g><g><title>__pte_offset_map (2 samples, 0.03%)</title><rect x="11.1412%" y="597" width="0.0339%" height="15" fill="rgb(209,217,16)" fg:x="658" fg:w="2"/><text x="11.2584%" y="607.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.07%)</title><rect x="11.1751%" y="613" width="0.0677%" height="15" fill="rgb(219,88,35)" fg:x="660" fg:w="4"/><text x="11.2923%" y="623.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="11.2428%" y="613" width="0.0169%" height="15" fill="rgb(220,193,23)" fg:x="664" fg:w="1"/><text x="11.3600%" y="623.50"></text></g><g><title>charge_memcg (3 samples, 0.05%)</title><rect x="11.2597%" y="613" width="0.0508%" height="15" fill="rgb(230,90,52)" fg:x="665" fg:w="3"/><text x="11.3769%" y="623.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="11.4799%" y="565" width="0.0169%" height="15" fill="rgb(252,106,19)" fg:x="678" fg:w="1"/><text x="11.5970%" y="575.50"></text></g><g><title>folio_lruvec_lock_irqsave (6 samples, 0.10%)</title><rect x="11.4968%" y="565" width="0.1016%" height="15" fill="rgb(206,74,20)" fg:x="679" fg:w="6"/><text x="11.6140%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="11.4968%" y="549" width="0.1016%" height="15" fill="rgb(230,138,44)" fg:x="679" fg:w="6"/><text x="11.6140%" y="559.50"></text></g><g><title>__raw_spin_lock_irqsave (6 samples, 0.10%)</title><rect x="11.4968%" y="533" width="0.1016%" height="15" fill="rgb(235,182,43)" fg:x="679" fg:w="6"/><text x="11.6140%" y="543.50"></text></g><g><title>native_queued_spin_lock_slowpath (4 samples, 0.07%)</title><rect x="11.5306%" y="517" width="0.0677%" height="15" fill="rgb(242,16,51)" fg:x="681" fg:w="4"/><text x="11.6478%" y="527.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="11.7338%" y="533" width="0.0169%" height="15" fill="rgb(248,9,4)" fg:x="693" fg:w="1"/><text x="11.8510%" y="543.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="11.7338%" y="517" width="0.0169%" height="15" fill="rgb(210,31,22)" fg:x="693" fg:w="1"/><text x="11.8510%" y="527.50"></text></g><g><title>folio_add_lru_vma (28 samples, 0.47%)</title><rect x="11.3105%" y="613" width="0.4741%" height="15" fill="rgb(239,54,39)" fg:x="668" fg:w="28"/><text x="11.4277%" y="623.50"></text></g><g><title>folio_add_lru (28 samples, 0.47%)</title><rect x="11.3105%" y="597" width="0.4741%" height="15" fill="rgb(230,99,41)" fg:x="668" fg:w="28"/><text x="11.4277%" y="607.50"></text></g><g><title>folio_batch_move_lru (23 samples, 0.39%)</title><rect x="11.3952%" y="581" width="0.3894%" height="15" fill="rgb(253,106,12)" fg:x="673" fg:w="23"/><text x="11.5124%" y="591.50"></text></g><g><title>lru_add_fn (11 samples, 0.19%)</title><rect x="11.5984%" y="565" width="0.1863%" height="15" fill="rgb(213,46,41)" fg:x="685" fg:w="11"/><text x="11.7156%" y="575.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.10%)</title><rect x="11.6830%" y="549" width="0.1016%" height="15" fill="rgb(215,133,35)" fg:x="690" fg:w="6"/><text x="11.8002%" y="559.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.03%)</title><rect x="11.7508%" y="533" width="0.0339%" height="15" fill="rgb(213,28,5)" fg:x="694" fg:w="2"/><text x="11.8679%" y="543.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="11.7846%" y="565" width="0.0339%" height="15" fill="rgb(215,77,49)" fg:x="696" fg:w="2"/><text x="11.9018%" y="575.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.05%)</title><rect x="11.7846%" y="581" width="0.0508%" height="15" fill="rgb(248,100,22)" fg:x="696" fg:w="3"/><text x="11.9018%" y="591.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="11.8185%" y="565" width="0.0169%" height="15" fill="rgb(208,67,9)" fg:x="698" fg:w="1"/><text x="11.9357%" y="575.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.07%)</title><rect x="11.7846%" y="597" width="0.0677%" height="15" fill="rgb(219,133,21)" fg:x="696" fg:w="4"/><text x="11.9018%" y="607.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="11.8354%" y="581" width="0.0169%" height="15" fill="rgb(246,46,29)" fg:x="699" fg:w="1"/><text x="11.9526%" y="591.50"></text></g><g><title>folio_add_new_anon_rmap (5 samples, 0.08%)</title><rect x="11.7846%" y="613" width="0.0847%" height="15" fill="rgb(246,185,52)" fg:x="696" fg:w="5"/><text x="11.9018%" y="623.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="11.8524%" y="597" width="0.0169%" height="15" fill="rgb(252,136,11)" fg:x="700" fg:w="1"/><text x="11.9695%" y="607.50"></text></g><g><title>inc_mm_counter (3 samples, 0.05%)</title><rect x="11.8693%" y="613" width="0.0508%" height="15" fill="rgb(219,138,53)" fg:x="701" fg:w="3"/><text x="11.9865%" y="623.50"></text></g><g><title>percpu_counter_add_batch (3 samples, 0.05%)</title><rect x="11.8693%" y="597" width="0.0508%" height="15" fill="rgb(211,51,23)" fg:x="701" fg:w="3"/><text x="11.9865%" y="607.50"></text></g><g><title>policy_node (1 samples, 0.02%)</title><rect x="11.9201%" y="613" width="0.0169%" height="15" fill="rgb(247,221,28)" fg:x="704" fg:w="1"/><text x="12.0373%" y="623.50"></text></g><g><title>__drain_all_pages (13 samples, 0.22%)</title><rect x="12.0725%" y="549" width="0.2201%" height="15" fill="rgb(251,222,45)" fg:x="713" fg:w="13"/><text x="12.1897%" y="559.50"></text></g><g><title>drain_pages_zone (13 samples, 0.22%)</title><rect x="12.0725%" y="533" width="0.2201%" height="15" fill="rgb(217,162,53)" fg:x="713" fg:w="13"/><text x="12.1897%" y="543.50"></text></g><g><title>free_pcppages_bulk (13 samples, 0.22%)</title><rect x="12.0725%" y="517" width="0.2201%" height="15" fill="rgb(229,93,14)" fg:x="713" fg:w="13"/><text x="12.1897%" y="527.50"></text></g><g><title>__free_one_page (10 samples, 0.17%)</title><rect x="12.1233%" y="501" width="0.1693%" height="15" fill="rgb(209,67,49)" fg:x="716" fg:w="10"/><text x="12.2405%" y="511.50"></text></g><g><title>clear_page_erms (9 samples, 0.15%)</title><rect x="12.3772%" y="533" width="0.1524%" height="15" fill="rgb(213,87,29)" fg:x="731" fg:w="9"/><text x="12.4944%" y="543.50"></text></g><g><title>post_alloc_hook (2 samples, 0.03%)</title><rect x="12.5296%" y="533" width="0.0339%" height="15" fill="rgb(205,151,52)" fg:x="740" fg:w="2"/><text x="12.6468%" y="543.50"></text></g><g><title>get_page_from_freelist (23 samples, 0.39%)</title><rect x="12.2926%" y="549" width="0.3894%" height="15" fill="rgb(253,215,39)" fg:x="726" fg:w="23"/><text x="12.4098%" y="559.50"></text></g><g><title>rmqueue (7 samples, 0.12%)</title><rect x="12.5635%" y="533" width="0.1185%" height="15" fill="rgb(221,220,41)" fg:x="742" fg:w="7"/><text x="12.6807%" y="543.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.08%)</title><rect x="12.5974%" y="517" width="0.0847%" height="15" fill="rgb(218,133,21)" fg:x="744" fg:w="5"/><text x="12.7145%" y="527.50"></text></g><g><title>rmqueue_bulk (5 samples, 0.08%)</title><rect x="12.5974%" y="501" width="0.0847%" height="15" fill="rgb(221,193,43)" fg:x="744" fg:w="5"/><text x="12.7145%" y="511.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="12.6651%" y="485" width="0.0169%" height="15" fill="rgb(240,128,52)" fg:x="748" fg:w="1"/><text x="12.7823%" y="495.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="12.6651%" y="469" width="0.0169%" height="15" fill="rgb(253,114,12)" fg:x="748" fg:w="1"/><text x="12.7823%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="12.6651%" y="453" width="0.0169%" height="15" fill="rgb(215,223,47)" fg:x="748" fg:w="1"/><text x="12.7823%" y="463.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="12.6651%" y="437" width="0.0169%" height="15" fill="rgb(248,225,23)" fg:x="748" fg:w="1"/><text x="12.7823%" y="447.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="12.6651%" y="421" width="0.0169%" height="15" fill="rgb(250,108,0)" fg:x="748" fg:w="1"/><text x="12.7823%" y="431.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="12.6651%" y="405" width="0.0169%" height="15" fill="rgb(228,208,7)" fg:x="748" fg:w="1"/><text x="12.7823%" y="415.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="12.6651%" y="389" width="0.0169%" height="15" fill="rgb(244,45,10)" fg:x="748" fg:w="1"/><text x="12.7823%" y="399.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="12.6651%" y="373" width="0.0169%" height="15" fill="rgb(207,125,25)" fg:x="748" fg:w="1"/><text x="12.7823%" y="383.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="12.6651%" y="357" width="0.0169%" height="15" fill="rgb(210,195,18)" fg:x="748" fg:w="1"/><text x="12.7823%" y="367.50"></text></g><g><title>i_callback (1 samples, 0.02%)</title><rect x="12.6651%" y="341" width="0.0169%" height="15" fill="rgb(249,80,12)" fg:x="748" fg:w="1"/><text x="12.7823%" y="351.50"></text></g><g><title>proc_free_inode (1 samples, 0.02%)</title><rect x="12.6651%" y="325" width="0.0169%" height="15" fill="rgb(221,65,9)" fg:x="748" fg:w="1"/><text x="12.7823%" y="335.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="12.6651%" y="309" width="0.0169%" height="15" fill="rgb(235,49,36)" fg:x="748" fg:w="1"/><text x="12.7823%" y="319.50"></text></g><g><title>cache_from_obj (1 samples, 0.02%)</title><rect x="12.6651%" y="293" width="0.0169%" height="15" fill="rgb(225,32,20)" fg:x="748" fg:w="1"/><text x="12.7823%" y="303.50"></text></g><g><title>psi_memstall_leave (1 samples, 0.02%)</title><rect x="12.6820%" y="549" width="0.0169%" height="15" fill="rgb(215,141,46)" fg:x="749" fg:w="1"/><text x="12.7992%" y="559.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="12.6820%" y="533" width="0.0169%" height="15" fill="rgb(250,160,47)" fg:x="749" fg:w="1"/><text x="12.7992%" y="543.50"></text></g><g><title>psi_group_change (1 samples, 0.02%)</title><rect x="12.6820%" y="517" width="0.0169%" height="15" fill="rgb(216,222,40)" fg:x="749" fg:w="1"/><text x="12.7992%" y="527.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="12.6990%" y="549" width="0.0169%" height="15" fill="rgb(234,217,39)" fg:x="750" fg:w="1"/><text x="12.8161%" y="559.50"></text></g><g><title>should_reclaim_retry.constprop.0 (1 samples, 0.02%)</title><rect x="12.7159%" y="549" width="0.0169%" height="15" fill="rgb(207,178,40)" fg:x="751" fg:w="1"/><text x="12.8331%" y="559.50"></text></g><g><title>zone_reclaimable_pages (1 samples, 0.02%)</title><rect x="12.7159%" y="533" width="0.0169%" height="15" fill="rgb(221,136,13)" fg:x="751" fg:w="1"/><text x="12.8331%" y="543.50"></text></g><g><title>css_release (1 samples, 0.02%)</title><rect x="12.7497%" y="469" width="0.0169%" height="15" fill="rgb(249,199,10)" fg:x="753" fg:w="1"/><text x="12.8669%" y="479.50"></text></g><g><title>queue_work_on (1 samples, 0.02%)</title><rect x="12.7497%" y="453" width="0.0169%" height="15" fill="rgb(249,222,13)" fg:x="753" fg:w="1"/><text x="12.8669%" y="463.50"></text></g><g><title>__queue_work (1 samples, 0.02%)</title><rect x="12.7497%" y="437" width="0.0169%" height="15" fill="rgb(244,185,38)" fg:x="753" fg:w="1"/><text x="12.8669%" y="447.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="12.7497%" y="421" width="0.0169%" height="15" fill="rgb(236,202,9)" fg:x="753" fg:w="1"/><text x="12.8669%" y="431.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="12.7497%" y="405" width="0.0169%" height="15" fill="rgb(250,229,37)" fg:x="753" fg:w="1"/><text x="12.8669%" y="415.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="12.7497%" y="389" width="0.0169%" height="15" fill="rgb(206,174,23)" fg:x="753" fg:w="1"/><text x="12.8669%" y="399.50"></text></g><g><title>enqueue_task (1 samples, 0.02%)</title><rect x="12.7497%" y="373" width="0.0169%" height="15" fill="rgb(211,33,43)" fg:x="753" fg:w="1"/><text x="12.8669%" y="383.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="12.7497%" y="357" width="0.0169%" height="15" fill="rgb(245,58,50)" fg:x="753" fg:w="1"/><text x="12.8669%" y="367.50"></text></g><g><title>backend_shrink_memory_count (1 samples, 0.02%)</title><rect x="12.7667%" y="421" width="0.0169%" height="15" fill="rgb(244,68,36)" fg:x="754" fg:w="1"/><text x="12.8839%" y="431.50"></text></g><g><title>bus_for_each_dev (1 samples, 0.02%)</title><rect x="12.7667%" y="405" width="0.0169%" height="15" fill="rgb(232,229,15)" fg:x="754" fg:w="1"/><text x="12.8839%" y="415.50"></text></g><g><title>bus_to_subsys (1 samples, 0.02%)</title><rect x="12.7667%" y="389" width="0.0169%" height="15" fill="rgb(254,30,23)" fg:x="754" fg:w="1"/><text x="12.8839%" y="399.50"></text></g><g><title>i915_gem_shrinker_scan (2 samples, 0.03%)</title><rect x="12.7836%" y="421" width="0.0339%" height="15" fill="rgb(235,160,14)" fg:x="755" fg:w="2"/><text x="12.9008%" y="431.50"></text></g><g><title>i915_gem_shrink (2 samples, 0.03%)</title><rect x="12.7836%" y="405" width="0.0339%" height="15" fill="rgb(212,155,44)" fg:x="755" fg:w="2"/><text x="12.9008%" y="415.50"></text></g><g><title>__i915_gem_object_put_pages (2 samples, 0.03%)</title><rect x="12.7836%" y="389" width="0.0339%" height="15" fill="rgb(226,2,50)" fg:x="755" fg:w="2"/><text x="12.9008%" y="399.50"></text></g><g><title>shmem_put_pages (2 samples, 0.03%)</title><rect x="12.7836%" y="373" width="0.0339%" height="15" fill="rgb(234,177,6)" fg:x="755" fg:w="2"/><text x="12.9008%" y="383.50"></text></g><g><title>i915_gem_object_put_pages_shmem (2 samples, 0.03%)</title><rect x="12.7836%" y="357" width="0.0339%" height="15" fill="rgb(217,24,9)" fg:x="755" fg:w="2"/><text x="12.9008%" y="367.50"></text></g><g><title>shmem_sg_free_table (2 samples, 0.03%)</title><rect x="12.7836%" y="341" width="0.0339%" height="15" fill="rgb(220,13,46)" fg:x="755" fg:w="2"/><text x="12.9008%" y="351.50"></text></g><g><title>check_move_unevictable_folios (1 samples, 0.02%)</title><rect x="12.8005%" y="325" width="0.0169%" height="15" fill="rgb(239,221,27)" fg:x="756" fg:w="1"/><text x="12.9177%" y="335.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.02%)</title><rect x="12.8005%" y="309" width="0.0169%" height="15" fill="rgb(222,198,25)" fg:x="756" fg:w="1"/><text x="12.9177%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="12.8005%" y="293" width="0.0169%" height="15" fill="rgb(211,99,13)" fg:x="756" fg:w="1"/><text x="12.9177%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="12.8005%" y="277" width="0.0169%" height="15" fill="rgb(232,111,31)" fg:x="756" fg:w="1"/><text x="12.9177%" y="287.50"></text></g><g><title>do_shrink_slab (4 samples, 0.07%)</title><rect x="12.7667%" y="437" width="0.0677%" height="15" fill="rgb(245,82,37)" fg:x="754" fg:w="4"/><text x="12.8839%" y="447.50"></text></g><g><title>shmem_unused_huge_count (1 samples, 0.02%)</title><rect x="12.8175%" y="421" width="0.0169%" height="15" fill="rgb(227,149,46)" fg:x="757" fg:w="1"/><text x="12.9347%" y="431.50"></text></g><g><title>scan_shadow_nodes (1 samples, 0.02%)</title><rect x="12.8344%" y="405" width="0.0169%" height="15" fill="rgb(218,36,50)" fg:x="758" fg:w="1"/><text x="12.9516%" y="415.50"></text></g><g><title>list_lru_walk_one_irq (1 samples, 0.02%)</title><rect x="12.8344%" y="389" width="0.0169%" height="15" fill="rgb(226,80,48)" fg:x="758" fg:w="1"/><text x="12.9516%" y="399.50"></text></g><g><title>__list_lru_walk_one (1 samples, 0.02%)</title><rect x="12.8344%" y="373" width="0.0169%" height="15" fill="rgb(238,224,15)" fg:x="758" fg:w="1"/><text x="12.9516%" y="383.50"></text></g><g><title>super_cache_count (1 samples, 0.02%)</title><rect x="12.8513%" y="405" width="0.0169%" height="15" fill="rgb(241,136,10)" fg:x="759" fg:w="1"/><text x="12.9685%" y="415.50"></text></g><g><title>list_lru_count_one (1 samples, 0.02%)</title><rect x="12.8513%" y="389" width="0.0169%" height="15" fill="rgb(208,32,45)" fg:x="759" fg:w="1"/><text x="12.9685%" y="399.50"></text></g><g><title>xa_load (1 samples, 0.02%)</title><rect x="12.8513%" y="373" width="0.0169%" height="15" fill="rgb(207,135,9)" fg:x="759" fg:w="1"/><text x="12.9685%" y="383.50"></text></g><g><title>___d_drop (1 samples, 0.02%)</title><rect x="12.8683%" y="341" width="0.0169%" height="15" fill="rgb(206,86,44)" fg:x="760" fg:w="1"/><text x="12.9855%" y="351.50"></text></g><g><title>shrink_slab (9 samples, 0.15%)</title><rect x="12.7667%" y="453" width="0.1524%" height="15" fill="rgb(245,177,15)" fg:x="754" fg:w="9"/><text x="12.8839%" y="463.50"></text></g><g><title>shrink_slab_memcg (5 samples, 0.08%)</title><rect x="12.8344%" y="437" width="0.0847%" height="15" fill="rgb(206,64,50)" fg:x="758" fg:w="5"/><text x="12.9516%" y="447.50"></text></g><g><title>do_shrink_slab (5 samples, 0.08%)</title><rect x="12.8344%" y="421" width="0.0847%" height="15" fill="rgb(234,36,40)" fg:x="758" fg:w="5"/><text x="12.9516%" y="431.50"></text></g><g><title>super_cache_scan (3 samples, 0.05%)</title><rect x="12.8683%" y="405" width="0.0508%" height="15" fill="rgb(213,64,8)" fg:x="760" fg:w="3"/><text x="12.9855%" y="415.50"></text></g><g><title>prune_dcache_sb (3 samples, 0.05%)</title><rect x="12.8683%" y="389" width="0.0508%" height="15" fill="rgb(210,75,36)" fg:x="760" fg:w="3"/><text x="12.9855%" y="399.50"></text></g><g><title>shrink_dentry_list (3 samples, 0.05%)</title><rect x="12.8683%" y="373" width="0.0508%" height="15" fill="rgb(229,88,21)" fg:x="760" fg:w="3"/><text x="12.9855%" y="383.50"></text></g><g><title>__dentry_kill (3 samples, 0.05%)</title><rect x="12.8683%" y="357" width="0.0508%" height="15" fill="rgb(252,204,47)" fg:x="760" fg:w="3"/><text x="12.9855%" y="367.50"></text></g><g><title>dentry_unlink_inode (2 samples, 0.03%)</title><rect x="12.8852%" y="341" width="0.0339%" height="15" fill="rgb(208,77,27)" fg:x="761" fg:w="2"/><text x="13.0024%" y="351.50"></text></g><g><title>iput (1 samples, 0.02%)</title><rect x="12.9021%" y="325" width="0.0169%" height="15" fill="rgb(221,76,26)" fg:x="762" fg:w="1"/><text x="13.0193%" y="335.50"></text></g><g><title>evict (1 samples, 0.02%)</title><rect x="12.9021%" y="309" width="0.0169%" height="15" fill="rgb(225,139,18)" fg:x="762" fg:w="1"/><text x="13.0193%" y="319.50"></text></g><g><title>destroy_inode (1 samples, 0.02%)</title><rect x="12.9021%" y="293" width="0.0169%" height="15" fill="rgb(230,137,11)" fg:x="762" fg:w="1"/><text x="13.0193%" y="303.50"></text></g><g><title>__destroy_inode (1 samples, 0.02%)</title><rect x="12.9021%" y="277" width="0.0169%" height="15" fill="rgb(212,28,1)" fg:x="762" fg:w="1"/><text x="13.0193%" y="287.50"></text></g><g><title>hook_inode_free_security (1 samples, 0.02%)</title><rect x="12.9021%" y="261" width="0.0169%" height="15" fill="rgb(248,164,17)" fg:x="762" fg:w="1"/><text x="13.0193%" y="271.50"></text></g><g><title>buffer_check_dirty_writeback (1 samples, 0.02%)</title><rect x="12.9191%" y="421" width="0.0169%" height="15" fill="rgb(222,171,42)" fg:x="763" fg:w="1"/><text x="13.0363%" y="431.50"></text></g><g><title>folio_unlock (1 samples, 0.02%)</title><rect x="12.9360%" y="421" width="0.0169%" height="15" fill="rgb(243,84,45)" fg:x="764" fg:w="1"/><text x="13.0532%" y="431.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="13.2069%" y="373" width="0.0169%" height="15" fill="rgb(252,49,23)" fg:x="780" fg:w="1"/><text x="13.3241%" y="383.50"></text></g><g><title>isolate_folio.isra.0 (6 samples, 0.10%)</title><rect x="13.1730%" y="389" width="0.1016%" height="15" fill="rgb(215,19,7)" fg:x="778" fg:w="6"/><text x="13.2902%" y="399.50"></text></g><g><title>lru_gen_del_folio (3 samples, 0.05%)</title><rect x="13.2238%" y="373" width="0.0508%" height="15" fill="rgb(238,81,41)" fg:x="781" fg:w="3"/><text x="13.3410%" y="383.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="13.2577%" y="357" width="0.0169%" height="15" fill="rgb(210,199,37)" fg:x="783" fg:w="1"/><text x="13.3749%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="13.2577%" y="341" width="0.0169%" height="15" fill="rgb(244,192,49)" fg:x="783" fg:w="1"/><text x="13.3749%" y="351.50"></text></g><g><title>isolate_folios (21 samples, 0.36%)</title><rect x="12.9529%" y="421" width="0.3556%" height="15" fill="rgb(226,211,11)" fg:x="765" fg:w="21"/><text x="13.0701%" y="431.50"></text></g><g><title>scan_folios (21 samples, 0.36%)</title><rect x="12.9529%" y="405" width="0.3556%" height="15" fill="rgb(236,162,54)" fg:x="765" fg:w="21"/><text x="13.0701%" y="415.50"></text></g><g><title>sort_folio (2 samples, 0.03%)</title><rect x="13.2746%" y="389" width="0.0339%" height="15" fill="rgb(220,229,9)" fg:x="784" fg:w="2"/><text x="13.3918%" y="399.50"></text></g><g><title>folio_inc_gen (1 samples, 0.02%)</title><rect x="13.2916%" y="373" width="0.0169%" height="15" fill="rgb(250,87,22)" fg:x="785" fg:w="1"/><text x="13.4088%" y="383.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="13.2916%" y="357" width="0.0169%" height="15" fill="rgb(239,43,17)" fg:x="785" fg:w="1"/><text x="13.4088%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="13.2916%" y="341" width="0.0169%" height="15" fill="rgb(231,177,25)" fg:x="785" fg:w="1"/><text x="13.4088%" y="351.50"></text></g><g><title>move_folios_to_lru (2 samples, 0.03%)</title><rect x="13.3085%" y="421" width="0.0339%" height="15" fill="rgb(219,179,1)" fg:x="786" fg:w="2"/><text x="13.4257%" y="431.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="13.4270%" y="389" width="0.0169%" height="15" fill="rgb(238,219,53)" fg:x="793" fg:w="1"/><text x="13.5442%" y="399.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.03%)</title><rect x="13.4270%" y="405" width="0.0339%" height="15" fill="rgb(232,167,36)" fg:x="793" fg:w="2"/><text x="13.5442%" y="415.50"></text></g><g><title>uncharge_folio (1 samples, 0.02%)</title><rect x="13.4440%" y="389" width="0.0169%" height="15" fill="rgb(244,19,51)" fg:x="794" fg:w="1"/><text x="13.5611%" y="399.50"></text></g><g><title>workingset_update_node (1 samples, 0.02%)</title><rect x="13.4948%" y="357" width="0.0169%" height="15" fill="rgb(224,6,22)" fg:x="797" fg:w="1"/><text x="13.6119%" y="367.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="13.4948%" y="341" width="0.0169%" height="15" fill="rgb(224,145,5)" fg:x="797" fg:w="1"/><text x="13.6119%" y="351.50"></text></g><g><title>xas_create (2 samples, 0.03%)</title><rect x="13.5117%" y="357" width="0.0339%" height="15" fill="rgb(234,130,49)" fg:x="798" fg:w="2"/><text x="13.6289%" y="367.50"></text></g><g><title>xas_descend (2 samples, 0.03%)</title><rect x="13.5117%" y="341" width="0.0339%" height="15" fill="rgb(254,6,2)" fg:x="798" fg:w="2"/><text x="13.6289%" y="351.50"></text></g><g><title>__delete_from_swap_cache (5 samples, 0.08%)</title><rect x="13.4778%" y="389" width="0.0847%" height="15" fill="rgb(208,96,46)" fg:x="796" fg:w="5"/><text x="13.5950%" y="399.50"></text></g><g><title>xas_store (5 samples, 0.08%)</title><rect x="13.4778%" y="373" width="0.0847%" height="15" fill="rgb(239,3,39)" fg:x="796" fg:w="5"/><text x="13.5950%" y="383.50"></text></g><g><title>xas_descend (1 samples, 0.02%)</title><rect x="13.5455%" y="357" width="0.0169%" height="15" fill="rgb(233,210,1)" fg:x="800" fg:w="1"/><text x="13.6627%" y="367.50"></text></g><g><title>xas_clear_mark (1 samples, 0.02%)</title><rect x="13.5625%" y="373" width="0.0169%" height="15" fill="rgb(244,137,37)" fg:x="801" fg:w="1"/><text x="13.6797%" y="383.50"></text></g><g><title>workingset_update_node (1 samples, 0.02%)</title><rect x="13.5963%" y="357" width="0.0169%" height="15" fill="rgb(240,136,2)" fg:x="803" fg:w="1"/><text x="13.7135%" y="367.50"></text></g><g><title>list_lru_add (1 samples, 0.02%)</title><rect x="13.5963%" y="341" width="0.0169%" height="15" fill="rgb(239,18,37)" fg:x="803" fg:w="1"/><text x="13.7135%" y="351.50"></text></g><g><title>mem_cgroup_from_slab_obj (1 samples, 0.02%)</title><rect x="13.5963%" y="325" width="0.0169%" height="15" fill="rgb(218,185,22)" fg:x="803" fg:w="1"/><text x="13.7135%" y="335.50"></text></g><g><title>xas_descend (2 samples, 0.03%)</title><rect x="13.6133%" y="341" width="0.0339%" height="15" fill="rgb(225,218,4)" fg:x="804" fg:w="2"/><text x="13.7305%" y="351.50"></text></g><g><title>__filemap_remove_folio (7 samples, 0.12%)</title><rect x="13.5625%" y="389" width="0.1185%" height="15" fill="rgb(230,182,32)" fg:x="801" fg:w="7"/><text x="13.6797%" y="399.50"></text></g><g><title>xas_store (6 samples, 0.10%)</title><rect x="13.5794%" y="373" width="0.1016%" height="15" fill="rgb(242,56,43)" fg:x="802" fg:w="6"/><text x="13.6966%" y="383.50"></text></g><g><title>xas_create (4 samples, 0.07%)</title><rect x="13.6133%" y="357" width="0.0677%" height="15" fill="rgb(233,99,24)" fg:x="804" fg:w="4"/><text x="13.7305%" y="367.50"></text></g><g><title>xas_expand.constprop.0 (2 samples, 0.03%)</title><rect x="13.6471%" y="341" width="0.0339%" height="15" fill="rgb(234,209,42)" fg:x="806" fg:w="2"/><text x="13.7643%" y="351.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="13.6810%" y="389" width="0.0169%" height="15" fill="rgb(227,7,12)" fg:x="808" fg:w="1"/><text x="13.7982%" y="399.50"></text></g><g><title>__remove_mapping (15 samples, 0.25%)</title><rect x="13.4609%" y="405" width="0.2540%" height="15" fill="rgb(245,203,43)" fg:x="795" fg:w="15"/><text x="13.5781%" y="415.50"></text></g><g><title>workingset_eviction (1 samples, 0.02%)</title><rect x="13.6979%" y="389" width="0.0169%" height="15" fill="rgb(238,205,33)" fg:x="809" fg:w="1"/><text x="13.8151%" y="399.50"></text></g><g><title>lru_gen_eviction (1 samples, 0.02%)</title><rect x="13.6979%" y="373" width="0.0169%" height="15" fill="rgb(231,56,7)" fg:x="809" fg:w="1"/><text x="13.8151%" y="383.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="13.7149%" y="373" width="0.0169%" height="15" fill="rgb(244,186,29)" fg:x="810" fg:w="1"/><text x="13.8321%" y="383.50"></text></g><g><title>add_to_swap_cache (2 samples, 0.03%)</title><rect x="13.7149%" y="389" width="0.0339%" height="15" fill="rgb(234,111,31)" fg:x="810" fg:w="2"/><text x="13.8321%" y="399.50"></text></g><g><title>xas_create_range (1 samples, 0.02%)</title><rect x="13.7318%" y="373" width="0.0169%" height="15" fill="rgb(241,149,10)" fg:x="811" fg:w="1"/><text x="13.8490%" y="383.50"></text></g><g><title>xas_descend (1 samples, 0.02%)</title><rect x="13.7318%" y="357" width="0.0169%" height="15" fill="rgb(249,206,44)" fg:x="811" fg:w="1"/><text x="13.8490%" y="367.50"></text></g><g><title>__mem_cgroup_try_charge_swap (1 samples, 0.02%)</title><rect x="13.7487%" y="373" width="0.0169%" height="15" fill="rgb(251,153,30)" fg:x="812" fg:w="1"/><text x="13.8659%" y="383.50"></text></g><g><title>swap_cgroup_record (1 samples, 0.02%)</title><rect x="13.7487%" y="357" width="0.0169%" height="15" fill="rgb(239,152,38)" fg:x="812" fg:w="1"/><text x="13.8659%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="13.7487%" y="341" width="0.0169%" height="15" fill="rgb(249,139,47)" fg:x="812" fg:w="1"/><text x="13.8659%" y="351.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="13.7487%" y="325" width="0.0169%" height="15" fill="rgb(244,64,35)" fg:x="812" fg:w="1"/><text x="13.8659%" y="335.50"></text></g><g><title>add_to_swap (4 samples, 0.07%)</title><rect x="13.7149%" y="405" width="0.0677%" height="15" fill="rgb(216,46,15)" fg:x="810" fg:w="4"/><text x="13.8321%" y="415.50"></text></g><g><title>folio_alloc_swap (2 samples, 0.03%)</title><rect x="13.7487%" y="389" width="0.0339%" height="15" fill="rgb(250,74,19)" fg:x="812" fg:w="2"/><text x="13.8659%" y="399.50"></text></g><g><title>get_swap_pages (1 samples, 0.02%)</title><rect x="13.7657%" y="373" width="0.0169%" height="15" fill="rgb(249,42,33)" fg:x="813" fg:w="1"/><text x="13.8828%" y="383.50"></text></g><g><title>buffer_check_dirty_writeback (1 samples, 0.02%)</title><rect x="13.7826%" y="405" width="0.0169%" height="15" fill="rgb(242,149,17)" fg:x="814" fg:w="1"/><text x="13.8998%" y="415.50"></text></g><g><title>drop_buffers.constprop.0 (1 samples, 0.02%)</title><rect x="13.8165%" y="357" width="0.0169%" height="15" fill="rgb(244,29,21)" fg:x="816" fg:w="1"/><text x="13.9336%" y="367.50"></text></g><g><title>filemap_release_folio (5 samples, 0.08%)</title><rect x="13.7995%" y="405" width="0.0847%" height="15" fill="rgb(220,130,37)" fg:x="815" fg:w="5"/><text x="13.9167%" y="415.50"></text></g><g><title>ext4_release_folio (5 samples, 0.08%)</title><rect x="13.7995%" y="389" width="0.0847%" height="15" fill="rgb(211,67,2)" fg:x="815" fg:w="5"/><text x="13.9167%" y="399.50"></text></g><g><title>jbd2_journal_try_to_free_buffers (5 samples, 0.08%)</title><rect x="13.7995%" y="373" width="0.0847%" height="15" fill="rgb(235,68,52)" fg:x="815" fg:w="5"/><text x="13.9167%" y="383.50"></text></g><g><title>jbd2_journal_grab_journal_head (3 samples, 0.05%)</title><rect x="13.8334%" y="357" width="0.0508%" height="15" fill="rgb(246,142,3)" fg:x="817" fg:w="3"/><text x="13.9506%" y="367.50"></text></g><g><title>anon_vma_interval_tree_iter_first (2 samples, 0.03%)</title><rect x="13.8842%" y="389" width="0.0339%" height="15" fill="rgb(241,25,7)" fg:x="820" fg:w="2"/><text x="14.0014%" y="399.50"></text></g><g><title>invalid_folio_referenced_vma (3 samples, 0.05%)</title><rect x="13.9180%" y="389" width="0.0508%" height="15" fill="rgb(242,119,39)" fg:x="822" fg:w="3"/><text x="14.0352%" y="399.50"></text></g><g><title>folio_activate (3 samples, 0.05%)</title><rect x="13.9688%" y="341" width="0.0508%" height="15" fill="rgb(241,98,45)" fg:x="825" fg:w="3"/><text x="14.0860%" y="351.50"></text></g><g><title>folio_batch_move_lru (2 samples, 0.03%)</title><rect x="13.9858%" y="325" width="0.0339%" height="15" fill="rgb(254,28,30)" fg:x="826" fg:w="2"/><text x="14.1030%" y="335.50"></text></g><g><title>folio_activate_fn (2 samples, 0.03%)</title><rect x="13.9858%" y="309" width="0.0339%" height="15" fill="rgb(241,142,54)" fg:x="826" fg:w="2"/><text x="14.1030%" y="319.50"></text></g><g><title>folio_activate_fn.part.0 (2 samples, 0.03%)</title><rect x="13.9858%" y="293" width="0.0339%" height="15" fill="rgb(222,85,15)" fg:x="826" fg:w="2"/><text x="14.1030%" y="303.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.02%)</title><rect x="14.0027%" y="277" width="0.0169%" height="15" fill="rgb(210,85,47)" fg:x="827" fg:w="1"/><text x="14.1199%" y="287.50"></text></g><g><title>rmap_walk_anon (5 samples, 0.08%)</title><rect x="13.9688%" y="389" width="0.0847%" height="15" fill="rgb(224,206,25)" fg:x="825" fg:w="5"/><text x="14.0860%" y="399.50"></text></g><g><title>folio_referenced_one (5 samples, 0.08%)</title><rect x="13.9688%" y="373" width="0.0847%" height="15" fill="rgb(243,201,19)" fg:x="825" fg:w="5"/><text x="14.0860%" y="383.50"></text></g><g><title>lru_gen_look_around (5 samples, 0.08%)</title><rect x="13.9688%" y="357" width="0.0847%" height="15" fill="rgb(236,59,4)" fg:x="825" fg:w="5"/><text x="14.0860%" y="367.50"></text></g><g><title>get_pfn_folio (2 samples, 0.03%)</title><rect x="14.0196%" y="341" width="0.0339%" height="15" fill="rgb(254,179,45)" fg:x="828" fg:w="2"/><text x="14.1368%" y="351.50"></text></g><g><title>get_pte_pfn.constprop.0 (1 samples, 0.02%)</title><rect x="14.0874%" y="357" width="0.0169%" height="15" fill="rgb(226,14,10)" fg:x="832" fg:w="1"/><text x="14.2046%" y="367.50"></text></g><g><title>folio_activate (2 samples, 0.03%)</title><rect x="14.1212%" y="341" width="0.0339%" height="15" fill="rgb(244,27,41)" fg:x="834" fg:w="2"/><text x="14.2384%" y="351.50"></text></g><g><title>folio_batch_move_lru (2 samples, 0.03%)</title><rect x="14.1212%" y="325" width="0.0339%" height="15" fill="rgb(235,35,32)" fg:x="834" fg:w="2"/><text x="14.2384%" y="335.50"></text></g><g><title>folio_activate_fn (2 samples, 0.03%)</title><rect x="14.1212%" y="309" width="0.0339%" height="15" fill="rgb(218,68,31)" fg:x="834" fg:w="2"/><text x="14.2384%" y="319.50"></text></g><g><title>folio_activate_fn.part.0 (2 samples, 0.03%)</title><rect x="14.1212%" y="293" width="0.0339%" height="15" fill="rgb(207,120,37)" fg:x="834" fg:w="2"/><text x="14.2384%" y="303.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.02%)</title><rect x="14.1382%" y="277" width="0.0169%" height="15" fill="rgb(227,98,0)" fg:x="835" fg:w="1"/><text x="14.2554%" y="287.50"></text></g><g><title>get_pfn_folio (1 samples, 0.02%)</title><rect x="14.1551%" y="341" width="0.0169%" height="15" fill="rgb(207,7,3)" fg:x="836" fg:w="1"/><text x="14.2723%" y="351.50"></text></g><g><title>get_pte_pfn.constprop.0 (4 samples, 0.07%)</title><rect x="14.1720%" y="341" width="0.0677%" height="15" fill="rgb(206,98,19)" fg:x="837" fg:w="4"/><text x="14.2892%" y="351.50"></text></g><g><title>lru_gen_look_around (9 samples, 0.15%)</title><rect x="14.1043%" y="357" width="0.1524%" height="15" fill="rgb(217,5,26)" fg:x="833" fg:w="9"/><text x="14.2215%" y="367.50"></text></g><g><title>ptep_test_and_clear_young (1 samples, 0.02%)</title><rect x="14.2398%" y="341" width="0.0169%" height="15" fill="rgb(235,190,38)" fg:x="841" fg:w="1"/><text x="14.3569%" y="351.50"></text></g><g><title>map_pte (9 samples, 0.15%)</title><rect x="14.3075%" y="341" width="0.1524%" height="15" fill="rgb(247,86,24)" fg:x="845" fg:w="9"/><text x="14.4247%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.4429%" y="325" width="0.0169%" height="15" fill="rgb(205,101,16)" fg:x="853" fg:w="1"/><text x="14.5601%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.4429%" y="309" width="0.0169%" height="15" fill="rgb(246,168,33)" fg:x="853" fg:w="1"/><text x="14.5601%" y="319.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="14.4429%" y="293" width="0.0169%" height="15" fill="rgb(231,114,1)" fg:x="853" fg:w="1"/><text x="14.5601%" y="303.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="14.4429%" y="277" width="0.0169%" height="15" fill="rgb(207,184,53)" fg:x="853" fg:w="1"/><text x="14.5601%" y="287.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="14.4429%" y="261" width="0.0169%" height="15" fill="rgb(224,95,51)" fg:x="853" fg:w="1"/><text x="14.5601%" y="271.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="14.4429%" y="245" width="0.0169%" height="15" fill="rgb(212,188,45)" fg:x="853" fg:w="1"/><text x="14.5601%" y="255.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="14.4429%" y="229" width="0.0169%" height="15" fill="rgb(223,154,38)" fg:x="853" fg:w="1"/><text x="14.5601%" y="239.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="14.4429%" y="213" width="0.0169%" height="15" fill="rgb(251,22,52)" fg:x="853" fg:w="1"/><text x="14.5601%" y="223.50"></text></g><g><title>__i915_gem_free_object_rcu (1 samples, 0.02%)</title><rect x="14.4429%" y="197" width="0.0169%" height="15" fill="rgb(229,209,22)" fg:x="853" fg:w="1"/><text x="14.5601%" y="207.50"></text></g><g><title>folio_referenced_one (24 samples, 0.41%)</title><rect x="14.0704%" y="373" width="0.4064%" height="15" fill="rgb(234,138,34)" fg:x="831" fg:w="24"/><text x="14.1876%" y="383.50"></text></g><g><title>page_vma_mapped_walk (13 samples, 0.22%)</title><rect x="14.2567%" y="357" width="0.2201%" height="15" fill="rgb(212,95,11)" fg:x="842" fg:w="13"/><text x="14.3739%" y="367.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="14.4599%" y="341" width="0.0169%" height="15" fill="rgb(240,179,47)" fg:x="854" fg:w="1"/><text x="14.5771%" y="351.50"></text></g><g><title>invalid_folio_referenced_vma (1 samples, 0.02%)</title><rect x="14.4768%" y="373" width="0.0169%" height="15" fill="rgb(240,163,11)" fg:x="855" fg:w="1"/><text x="14.5940%" y="383.50"></text></g><g><title>vma_interval_tree_iter_first (1 samples, 0.02%)</title><rect x="14.4937%" y="373" width="0.0169%" height="15" fill="rgb(236,37,12)" fg:x="856" fg:w="1"/><text x="14.6109%" y="383.50"></text></g><g><title>vma_interval_tree_subtree_search (1 samples, 0.02%)</title><rect x="14.4937%" y="357" width="0.0169%" height="15" fill="rgb(232,164,16)" fg:x="856" fg:w="1"/><text x="14.6109%" y="367.50"></text></g><g><title>folio_referenced (40 samples, 0.68%)</title><rect x="13.8842%" y="405" width="0.6773%" height="15" fill="rgb(244,205,15)" fg:x="820" fg:w="40"/><text x="14.0014%" y="415.50"></text></g><g><title>rmap_walk_file (30 samples, 0.51%)</title><rect x="14.0535%" y="389" width="0.5080%" height="15" fill="rgb(223,117,47)" fg:x="830" fg:w="30"/><text x="14.1707%" y="399.50"></text></g><g><title>vma_interval_tree_iter_next (3 samples, 0.05%)</title><rect x="14.5107%" y="373" width="0.0508%" height="15" fill="rgb(244,107,35)" fg:x="857" fg:w="3"/><text x="14.6279%" y="383.50"></text></g><g><title>vma_interval_tree_subtree_search (3 samples, 0.05%)</title><rect x="14.5107%" y="357" width="0.0508%" height="15" fill="rgb(205,140,8)" fg:x="857" fg:w="3"/><text x="14.6279%" y="367.50"></text></g><g><title>free_unref_page_list (2 samples, 0.03%)</title><rect x="14.5615%" y="405" width="0.0339%" height="15" fill="rgb(228,84,46)" fg:x="860" fg:w="2"/><text x="14.6787%" y="415.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="14.5784%" y="389" width="0.0169%" height="15" fill="rgb(254,188,9)" fg:x="861" fg:w="1"/><text x="14.6956%" y="399.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="14.5953%" y="405" width="0.0169%" height="15" fill="rgb(206,112,54)" fg:x="862" fg:w="1"/><text x="14.7125%" y="415.50"></text></g><g><title>folio_clear_dirty_for_io (1 samples, 0.02%)</title><rect x="14.6292%" y="389" width="0.0169%" height="15" fill="rgb(216,84,49)" fg:x="864" fg:w="1"/><text x="14.7464%" y="399.50"></text></g><g><title>inode_to_bdi (1 samples, 0.02%)</title><rect x="14.6461%" y="389" width="0.0169%" height="15" fill="rgb(214,194,35)" fg:x="865" fg:w="1"/><text x="14.7633%" y="399.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="14.6800%" y="357" width="0.0169%" height="15" fill="rgb(249,28,3)" fg:x="867" fg:w="1"/><text x="14.7972%" y="367.50"></text></g><g><title>xas_create_range (1 samples, 0.02%)</title><rect x="14.6969%" y="357" width="0.0169%" height="15" fill="rgb(222,56,52)" fg:x="868" fg:w="1"/><text x="14.8141%" y="367.50"></text></g><g><title>xas_create (1 samples, 0.02%)</title><rect x="14.6969%" y="341" width="0.0169%" height="15" fill="rgb(245,217,50)" fg:x="868" fg:w="1"/><text x="14.8141%" y="351.50"></text></g><g><title>xas_descend (1 samples, 0.02%)</title><rect x="14.6969%" y="325" width="0.0169%" height="15" fill="rgb(213,201,24)" fg:x="868" fg:w="1"/><text x="14.8141%" y="335.50"></text></g><g><title>add_to_swap_cache (4 samples, 0.07%)</title><rect x="14.6631%" y="373" width="0.0677%" height="15" fill="rgb(248,116,28)" fg:x="866" fg:w="4"/><text x="14.7802%" y="383.50"></text></g><g><title>xas_store (1 samples, 0.02%)</title><rect x="14.7139%" y="357" width="0.0169%" height="15" fill="rgb(219,72,43)" fg:x="869" fg:w="1"/><text x="14.8310%" y="367.50"></text></g><g><title>workingset_update_node (1 samples, 0.02%)</title><rect x="14.7139%" y="341" width="0.0169%" height="15" fill="rgb(209,138,14)" fg:x="869" fg:w="1"/><text x="14.8310%" y="351.50"></text></g><g><title>folio_alloc_swap (1 samples, 0.02%)</title><rect x="14.7308%" y="373" width="0.0169%" height="15" fill="rgb(222,18,33)" fg:x="870" fg:w="1"/><text x="14.8480%" y="383.50"></text></g><g><title>__mem_cgroup_try_charge_swap (1 samples, 0.02%)</title><rect x="14.7308%" y="357" width="0.0169%" height="15" fill="rgb(213,199,7)" fg:x="870" fg:w="1"/><text x="14.8480%" y="367.50"></text></g><g><title>mutex_lock (1 samples, 0.02%)</title><rect x="14.7477%" y="373" width="0.0169%" height="15" fill="rgb(250,110,10)" fg:x="871" fg:w="1"/><text x="14.8649%" y="383.50"></text></g><g><title>__mutex_lock_slowpath (1 samples, 0.02%)</title><rect x="14.7477%" y="357" width="0.0169%" height="15" fill="rgb(248,123,6)" fg:x="871" fg:w="1"/><text x="14.8649%" y="367.50"></text></g><g><title>__mutex_lock.constprop.0 (1 samples, 0.02%)</title><rect x="14.7477%" y="341" width="0.0169%" height="15" fill="rgb(206,91,31)" fg:x="871" fg:w="1"/><text x="14.8649%" y="351.50"></text></g><g><title>bio_alloc_bioset (1 samples, 0.02%)</title><rect x="14.7646%" y="341" width="0.0169%" height="15" fill="rgb(211,154,13)" fg:x="872" fg:w="1"/><text x="14.8818%" y="351.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="14.7646%" y="325" width="0.0169%" height="15" fill="rgb(225,148,7)" fg:x="872" fg:w="1"/><text x="14.8818%" y="335.50"></text></g><g><title>bio_associate_blkg (1 samples, 0.02%)</title><rect x="14.7816%" y="341" width="0.0169%" height="15" fill="rgb(220,160,43)" fg:x="873" fg:w="1"/><text x="14.8988%" y="351.50"></text></g><g><title>set_page_writeback (1 samples, 0.02%)</title><rect x="14.7985%" y="341" width="0.0169%" height="15" fill="rgb(213,52,39)" fg:x="874" fg:w="1"/><text x="14.9157%" y="351.50"></text></g><g><title>__folio_start_writeback (1 samples, 0.02%)</title><rect x="14.7985%" y="325" width="0.0169%" height="15" fill="rgb(243,137,7)" fg:x="874" fg:w="1"/><text x="14.9157%" y="335.50"></text></g><g><title>mod_zone_page_state (1 samples, 0.02%)</title><rect x="14.7985%" y="309" width="0.0169%" height="15" fill="rgb(230,79,13)" fg:x="874" fg:w="1"/><text x="14.9157%" y="319.50"></text></g><g><title>__map_bio (4 samples, 0.07%)</title><rect x="14.8154%" y="229" width="0.0677%" height="15" fill="rgb(247,105,23)" fg:x="875" fg:w="4"/><text x="14.9326%" y="239.50"></text></g><g><title>crypt_map (3 samples, 0.05%)</title><rect x="14.8324%" y="213" width="0.0508%" height="15" fill="rgb(223,179,41)" fg:x="876" fg:w="3"/><text x="14.9496%" y="223.50"></text></g><g><title>kcryptd_queue_crypt (3 samples, 0.05%)</title><rect x="14.8324%" y="197" width="0.0508%" height="15" fill="rgb(218,9,34)" fg:x="876" fg:w="3"/><text x="14.9496%" y="207.50"></text></g><g><title>queue_work_on (3 samples, 0.05%)</title><rect x="14.8324%" y="181" width="0.0508%" height="15" fill="rgb(222,106,8)" fg:x="876" fg:w="3"/><text x="14.9496%" y="191.50"></text></g><g><title>__queue_work (3 samples, 0.05%)</title><rect x="14.8324%" y="165" width="0.0508%" height="15" fill="rgb(211,220,0)" fg:x="876" fg:w="3"/><text x="14.9496%" y="175.50"></text></g><g><title>wake_up_process (2 samples, 0.03%)</title><rect x="14.8493%" y="149" width="0.0339%" height="15" fill="rgb(229,52,16)" fg:x="877" fg:w="2"/><text x="14.9665%" y="159.50"></text></g><g><title>try_to_wake_up (2 samples, 0.03%)</title><rect x="14.8493%" y="133" width="0.0339%" height="15" fill="rgb(212,155,18)" fg:x="877" fg:w="2"/><text x="14.9665%" y="143.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.02%)</title><rect x="14.8662%" y="117" width="0.0169%" height="15" fill="rgb(242,21,14)" fg:x="878" fg:w="1"/><text x="14.9834%" y="127.50"></text></g><g><title>shmem_writepage (18 samples, 0.30%)</title><rect x="14.6631%" y="389" width="0.3048%" height="15" fill="rgb(222,19,48)" fg:x="866" fg:w="18"/><text x="14.7802%" y="399.50"></text></g><g><title>swap_writepage (12 samples, 0.20%)</title><rect x="14.7646%" y="373" width="0.2032%" height="15" fill="rgb(232,45,27)" fg:x="872" fg:w="12"/><text x="14.8818%" y="383.50"></text></g><g><title>__swap_writepage (12 samples, 0.20%)</title><rect x="14.7646%" y="357" width="0.2032%" height="15" fill="rgb(249,103,42)" fg:x="872" fg:w="12"/><text x="14.8818%" y="367.50"></text></g><g><title>submit_bio (9 samples, 0.15%)</title><rect x="14.8154%" y="341" width="0.1524%" height="15" fill="rgb(246,81,33)" fg:x="875" fg:w="9"/><text x="14.9326%" y="351.50"></text></g><g><title>submit_bio_noacct (9 samples, 0.15%)</title><rect x="14.8154%" y="325" width="0.1524%" height="15" fill="rgb(252,33,42)" fg:x="875" fg:w="9"/><text x="14.9326%" y="335.50"></text></g><g><title>submit_bio_noacct_nocheck (9 samples, 0.15%)</title><rect x="14.8154%" y="309" width="0.1524%" height="15" fill="rgb(209,212,41)" fg:x="875" fg:w="9"/><text x="14.9326%" y="319.50"></text></g><g><title>__submit_bio_noacct (9 samples, 0.15%)</title><rect x="14.8154%" y="293" width="0.1524%" height="15" fill="rgb(207,154,6)" fg:x="875" fg:w="9"/><text x="14.9326%" y="303.50"></text></g><g><title>__submit_bio (9 samples, 0.15%)</title><rect x="14.8154%" y="277" width="0.1524%" height="15" fill="rgb(223,64,47)" fg:x="875" fg:w="9"/><text x="14.9326%" y="287.50"></text></g><g><title>dm_submit_bio (9 samples, 0.15%)</title><rect x="14.8154%" y="261" width="0.1524%" height="15" fill="rgb(211,161,38)" fg:x="875" fg:w="9"/><text x="14.9326%" y="271.50"></text></g><g><title>dm_split_and_process_bio (9 samples, 0.15%)</title><rect x="14.8154%" y="245" width="0.1524%" height="15" fill="rgb(219,138,40)" fg:x="875" fg:w="9"/><text x="14.9326%" y="255.50"></text></g><g><title>bio_alloc_clone (5 samples, 0.08%)</title><rect x="14.8832%" y="229" width="0.0847%" height="15" fill="rgb(241,228,46)" fg:x="879" fg:w="5"/><text x="15.0004%" y="239.50"></text></g><g><title>bio_alloc_bioset (5 samples, 0.08%)</title><rect x="14.8832%" y="213" width="0.0847%" height="15" fill="rgb(223,209,38)" fg:x="879" fg:w="5"/><text x="15.0004%" y="223.50"></text></g><g><title>mempool_alloc (5 samples, 0.08%)</title><rect x="14.8832%" y="197" width="0.0847%" height="15" fill="rgb(236,164,45)" fg:x="879" fg:w="5"/><text x="15.0004%" y="207.50"></text></g><g><title>io_schedule_timeout (5 samples, 0.08%)</title><rect x="14.8832%" y="181" width="0.0847%" height="15" fill="rgb(231,15,5)" fg:x="879" fg:w="5"/><text x="15.0004%" y="191.50"></text></g><g><title>schedule_timeout (5 samples, 0.08%)</title><rect x="14.8832%" y="165" width="0.0847%" height="15" fill="rgb(252,35,15)" fg:x="879" fg:w="5"/><text x="15.0004%" y="175.50"></text></g><g><title>schedule (5 samples, 0.08%)</title><rect x="14.8832%" y="149" width="0.0847%" height="15" fill="rgb(248,181,18)" fg:x="879" fg:w="5"/><text x="15.0004%" y="159.50"></text></g><g><title>__schedule (5 samples, 0.08%)</title><rect x="14.8832%" y="133" width="0.0847%" height="15" fill="rgb(233,39,42)" fg:x="879" fg:w="5"/><text x="15.0004%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.08%)</title><rect x="14.8832%" y="117" width="0.0847%" height="15" fill="rgb(238,110,33)" fg:x="879" fg:w="5"/><text x="15.0004%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="14.8832%" y="101" width="0.0847%" height="15" fill="rgb(233,195,10)" fg:x="879" fg:w="5"/><text x="15.0004%" y="111.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.08%)</title><rect x="14.8832%" y="85" width="0.0847%" height="15" fill="rgb(254,105,3)" fg:x="879" fg:w="5"/><text x="15.0004%" y="95.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="14.8832%" y="69" width="0.0847%" height="15" fill="rgb(221,225,9)" fg:x="879" fg:w="5"/><text x="15.0004%" y="79.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="14.8832%" y="53" width="0.0847%" height="15" fill="rgb(224,227,45)" fg:x="879" fg:w="5"/><text x="15.0004%" y="63.50"></text></g><g><title>native_write_msr (5 samples, 0.08%)</title><rect x="14.8832%" y="37" width="0.0847%" height="15" fill="rgb(229,198,43)" fg:x="879" fg:w="5"/><text x="15.0004%" y="47.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="14.9678%" y="357" width="0.0169%" height="15" fill="rgb(206,209,35)" fg:x="884" fg:w="1"/><text x="15.0850%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="14.9848%" y="341" width="0.0169%" height="15" fill="rgb(245,195,53)" fg:x="885" fg:w="1"/><text x="15.1019%" y="351.50"></text></g><g><title>bio_associate_blkg (1 samples, 0.02%)</title><rect x="15.0017%" y="341" width="0.0169%" height="15" fill="rgb(240,92,26)" fg:x="886" fg:w="1"/><text x="15.1189%" y="351.50"></text></g><g><title>bio_associate_blkg_from_css (1 samples, 0.02%)</title><rect x="15.0017%" y="325" width="0.0169%" height="15" fill="rgb(207,40,23)" fg:x="886" fg:w="1"/><text x="15.1189%" y="335.50"></text></g><g><title>radix_tree_lookup (1 samples, 0.02%)</title><rect x="15.0017%" y="309" width="0.0169%" height="15" fill="rgb(223,111,35)" fg:x="886" fg:w="1"/><text x="15.1189%" y="319.50"></text></g><g><title>__radix_tree_lookup (1 samples, 0.02%)</title><rect x="15.0017%" y="293" width="0.0169%" height="15" fill="rgb(229,147,28)" fg:x="886" fg:w="1"/><text x="15.1189%" y="303.50"></text></g><g><title>bio_alloc_bioset (3 samples, 0.05%)</title><rect x="14.9848%" y="357" width="0.0508%" height="15" fill="rgb(211,29,28)" fg:x="885" fg:w="3"/><text x="15.1019%" y="367.50"></text></g><g><title>mempool_alloc (1 samples, 0.02%)</title><rect x="15.0186%" y="341" width="0.0169%" height="15" fill="rgb(228,72,33)" fg:x="887" fg:w="1"/><text x="15.1358%" y="351.50"></text></g><g><title>mempool_alloc_slab (1 samples, 0.02%)</title><rect x="15.0186%" y="325" width="0.0169%" height="15" fill="rgb(205,214,31)" fg:x="887" fg:w="1"/><text x="15.1358%" y="335.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="15.0186%" y="309" width="0.0169%" height="15" fill="rgb(224,111,15)" fg:x="887" fg:w="1"/><text x="15.1358%" y="319.50"></text></g><g><title>bio_associate_blkg_from_page (1 samples, 0.02%)</title><rect x="15.0356%" y="357" width="0.0169%" height="15" fill="rgb(253,21,26)" fg:x="888" fg:w="1"/><text x="15.1527%" y="367.50"></text></g><g><title>bio_associate_blkg_from_css (1 samples, 0.02%)</title><rect x="15.0356%" y="341" width="0.0169%" height="15" fill="rgb(245,139,43)" fg:x="888" fg:w="1"/><text x="15.1527%" y="351.50"></text></g><g><title>set_page_writeback (1 samples, 0.02%)</title><rect x="15.0525%" y="357" width="0.0169%" height="15" fill="rgb(252,170,7)" fg:x="889" fg:w="1"/><text x="15.1697%" y="367.50"></text></g><g><title>__folio_start_writeback (1 samples, 0.02%)</title><rect x="15.0525%" y="341" width="0.0169%" height="15" fill="rgb(231,118,14)" fg:x="889" fg:w="1"/><text x="15.1697%" y="351.50"></text></g><g><title>mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="15.0525%" y="325" width="0.0169%" height="15" fill="rgb(238,83,0)" fg:x="889" fg:w="1"/><text x="15.1697%" y="335.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="15.1202%" y="165" width="0.0169%" height="15" fill="rgb(221,39,39)" fg:x="893" fg:w="1"/><text x="15.2374%" y="175.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="15.1202%" y="149" width="0.0169%" height="15" fill="rgb(222,119,46)" fg:x="893" fg:w="1"/><text x="15.2374%" y="159.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="15.1710%" y="133" width="0.0169%" height="15" fill="rgb(222,165,49)" fg:x="896" fg:w="1"/><text x="15.2882%" y="143.50"></text></g><g><title>wake_affine (1 samples, 0.02%)</title><rect x="15.1710%" y="117" width="0.0169%" height="15" fill="rgb(219,113,52)" fg:x="896" fg:w="1"/><text x="15.2882%" y="127.50"></text></g><g><title>available_idle_cpu (1 samples, 0.02%)</title><rect x="15.1710%" y="101" width="0.0169%" height="15" fill="rgb(214,7,15)" fg:x="896" fg:w="1"/><text x="15.2882%" y="111.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.02%)</title><rect x="15.1879%" y="117" width="0.0169%" height="15" fill="rgb(235,32,4)" fg:x="897" fg:w="1"/><text x="15.3051%" y="127.50"></text></g><g><title>call_function_single_prep_ipi (1 samples, 0.02%)</title><rect x="15.1879%" y="101" width="0.0169%" height="15" fill="rgb(238,90,54)" fg:x="897" fg:w="1"/><text x="15.3051%" y="111.50"></text></g><g><title>__map_bio (6 samples, 0.10%)</title><rect x="15.1202%" y="245" width="0.1016%" height="15" fill="rgb(213,208,19)" fg:x="893" fg:w="6"/><text x="15.2374%" y="255.50"></text></g><g><title>crypt_map (6 samples, 0.10%)</title><rect x="15.1202%" y="229" width="0.1016%" height="15" fill="rgb(233,156,4)" fg:x="893" fg:w="6"/><text x="15.2374%" y="239.50"></text></g><g><title>kcryptd_queue_crypt (6 samples, 0.10%)</title><rect x="15.1202%" y="213" width="0.1016%" height="15" fill="rgb(207,194,5)" fg:x="893" fg:w="6"/><text x="15.2374%" y="223.50"></text></g><g><title>queue_work_on (6 samples, 0.10%)</title><rect x="15.1202%" y="197" width="0.1016%" height="15" fill="rgb(206,111,30)" fg:x="893" fg:w="6"/><text x="15.2374%" y="207.50"></text></g><g><title>__queue_work (6 samples, 0.10%)</title><rect x="15.1202%" y="181" width="0.1016%" height="15" fill="rgb(243,70,54)" fg:x="893" fg:w="6"/><text x="15.2374%" y="191.50"></text></g><g><title>wake_up_process (5 samples, 0.08%)</title><rect x="15.1371%" y="165" width="0.0847%" height="15" fill="rgb(242,28,8)" fg:x="894" fg:w="5"/><text x="15.2543%" y="175.50"></text></g><g><title>try_to_wake_up (5 samples, 0.08%)</title><rect x="15.1371%" y="149" width="0.0847%" height="15" fill="rgb(219,106,18)" fg:x="894" fg:w="5"/><text x="15.2543%" y="159.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.03%)</title><rect x="15.1879%" y="133" width="0.0339%" height="15" fill="rgb(244,222,10)" fg:x="897" fg:w="2"/><text x="15.3051%" y="143.50"></text></g><g><title>llist_add_batch (1 samples, 0.02%)</title><rect x="15.2049%" y="117" width="0.0169%" height="15" fill="rgb(236,179,52)" fg:x="898" fg:w="1"/><text x="15.3221%" y="127.50"></text></g><g><title>alloc_tio (2 samples, 0.03%)</title><rect x="15.2218%" y="245" width="0.0339%" height="15" fill="rgb(213,23,39)" fg:x="899" fg:w="2"/><text x="15.3390%" y="255.50"></text></g><g><title>get_any_partial (1 samples, 0.02%)</title><rect x="15.2726%" y="149" width="0.0169%" height="15" fill="rgb(238,48,10)" fg:x="902" fg:w="1"/><text x="15.3898%" y="159.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (4 samples, 0.07%)</title><rect x="15.2895%" y="85" width="0.0677%" height="15" fill="rgb(251,196,23)" fg:x="903" fg:w="4"/><text x="15.4067%" y="95.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.07%)</title><rect x="15.2895%" y="69" width="0.0677%" height="15" fill="rgb(250,152,24)" fg:x="903" fg:w="4"/><text x="15.4067%" y="79.50"></text></g><g><title>cpuset_node_allowed (1 samples, 0.02%)</title><rect x="15.3403%" y="53" width="0.0169%" height="15" fill="rgb(209,150,17)" fg:x="906" fg:w="1"/><text x="15.4575%" y="63.50"></text></g><g><title>bio_alloc_bioset (9 samples, 0.15%)</title><rect x="15.2557%" y="229" width="0.1524%" height="15" fill="rgb(234,202,34)" fg:x="901" fg:w="9"/><text x="15.3729%" y="239.50"></text></g><g><title>mempool_alloc (9 samples, 0.15%)</title><rect x="15.2557%" y="213" width="0.1524%" height="15" fill="rgb(253,148,53)" fg:x="901" fg:w="9"/><text x="15.3729%" y="223.50"></text></g><g><title>mempool_alloc_slab (9 samples, 0.15%)</title><rect x="15.2557%" y="197" width="0.1524%" height="15" fill="rgb(218,129,16)" fg:x="901" fg:w="9"/><text x="15.3729%" y="207.50"></text></g><g><title>kmem_cache_alloc (9 samples, 0.15%)</title><rect x="15.2557%" y="181" width="0.1524%" height="15" fill="rgb(216,85,19)" fg:x="901" fg:w="9"/><text x="15.3729%" y="191.50"></text></g><g><title>___slab_alloc (8 samples, 0.14%)</title><rect x="15.2726%" y="165" width="0.1355%" height="15" fill="rgb(235,228,7)" fg:x="902" fg:w="8"/><text x="15.3898%" y="175.50"></text></g><g><title>new_slab (7 samples, 0.12%)</title><rect x="15.2895%" y="149" width="0.1185%" height="15" fill="rgb(245,175,0)" fg:x="903" fg:w="7"/><text x="15.4067%" y="159.50"></text></g><g><title>allocate_slab (7 samples, 0.12%)</title><rect x="15.2895%" y="133" width="0.1185%" height="15" fill="rgb(208,168,36)" fg:x="903" fg:w="7"/><text x="15.4067%" y="143.50"></text></g><g><title>alloc_pages (7 samples, 0.12%)</title><rect x="15.2895%" y="117" width="0.1185%" height="15" fill="rgb(246,171,24)" fg:x="903" fg:w="7"/><text x="15.4067%" y="127.50"></text></g><g><title>__alloc_pages (7 samples, 0.12%)</title><rect x="15.2895%" y="101" width="0.1185%" height="15" fill="rgb(215,142,24)" fg:x="903" fg:w="7"/><text x="15.4067%" y="111.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.05%)</title><rect x="15.3573%" y="85" width="0.0508%" height="15" fill="rgb(250,187,7)" fg:x="907" fg:w="3"/><text x="15.4745%" y="95.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="15.3911%" y="69" width="0.0169%" height="15" fill="rgb(228,66,33)" fg:x="909" fg:w="1"/><text x="15.5083%" y="79.50"></text></g><g><title>bio_alloc_clone (10 samples, 0.17%)</title><rect x="15.2557%" y="245" width="0.1693%" height="15" fill="rgb(234,215,21)" fg:x="901" fg:w="10"/><text x="15.3729%" y="255.50"></text></g><g><title>mempool_alloc (1 samples, 0.02%)</title><rect x="15.4081%" y="229" width="0.0169%" height="15" fill="rgb(222,191,20)" fg:x="910" fg:w="1"/><text x="15.5252%" y="239.50"></text></g><g><title>__submit_bio_noacct (20 samples, 0.34%)</title><rect x="15.1033%" y="309" width="0.3386%" height="15" fill="rgb(245,79,54)" fg:x="892" fg:w="20"/><text x="15.2205%" y="319.50"></text></g><g><title>__submit_bio (20 samples, 0.34%)</title><rect x="15.1033%" y="293" width="0.3386%" height="15" fill="rgb(240,10,37)" fg:x="892" fg:w="20"/><text x="15.2205%" y="303.50"></text></g><g><title>dm_submit_bio (20 samples, 0.34%)</title><rect x="15.1033%" y="277" width="0.3386%" height="15" fill="rgb(214,192,32)" fg:x="892" fg:w="20"/><text x="15.2205%" y="287.50"></text></g><g><title>dm_split_and_process_bio (20 samples, 0.34%)</title><rect x="15.1033%" y="261" width="0.3386%" height="15" fill="rgb(209,36,54)" fg:x="892" fg:w="20"/><text x="15.2205%" y="271.50"></text></g><g><title>dm_table_find_target (1 samples, 0.02%)</title><rect x="15.4250%" y="245" width="0.0169%" height="15" fill="rgb(220,10,11)" fg:x="911" fg:w="1"/><text x="15.5422%" y="255.50"></text></g><g><title>pageout (50 samples, 0.85%)</title><rect x="14.6123%" y="405" width="0.8466%" height="15" fill="rgb(221,106,17)" fg:x="863" fg:w="50"/><text x="14.7294%" y="415.50">p..</text></g><g><title>swap_writepage (29 samples, 0.49%)</title><rect x="14.9678%" y="389" width="0.4910%" height="15" fill="rgb(251,142,44)" fg:x="884" fg:w="29"/><text x="15.0850%" y="399.50"></text></g><g><title>__swap_writepage (29 samples, 0.49%)</title><rect x="14.9678%" y="373" width="0.4910%" height="15" fill="rgb(238,13,15)" fg:x="884" fg:w="29"/><text x="15.0850%" y="383.50"></text></g><g><title>submit_bio (23 samples, 0.39%)</title><rect x="15.0694%" y="357" width="0.3894%" height="15" fill="rgb(208,107,27)" fg:x="890" fg:w="23"/><text x="15.1866%" y="367.50"></text></g><g><title>submit_bio_noacct (23 samples, 0.39%)</title><rect x="15.0694%" y="341" width="0.3894%" height="15" fill="rgb(205,136,37)" fg:x="890" fg:w="23"/><text x="15.1866%" y="351.50"></text></g><g><title>submit_bio_noacct_nocheck (21 samples, 0.36%)</title><rect x="15.1033%" y="325" width="0.3556%" height="15" fill="rgb(250,205,27)" fg:x="892" fg:w="21"/><text x="15.2205%" y="335.50"></text></g><g><title>read_tsc (1 samples, 0.02%)</title><rect x="15.4419%" y="309" width="0.0169%" height="15" fill="rgb(210,80,43)" fg:x="912" fg:w="1"/><text x="15.5591%" y="319.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="15.4589%" y="357" width="0.0169%" height="15" fill="rgb(247,160,36)" fg:x="913" fg:w="1"/><text x="15.5760%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="15.4589%" y="341" width="0.0169%" height="15" fill="rgb(234,13,49)" fg:x="913" fg:w="1"/><text x="15.5760%" y="351.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="15.4589%" y="325" width="0.0169%" height="15" fill="rgb(234,122,0)" fg:x="913" fg:w="1"/><text x="15.5760%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="15.4589%" y="309" width="0.0169%" height="15" fill="rgb(207,146,38)" fg:x="913" fg:w="1"/><text x="15.5760%" y="319.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="15.4758%" y="341" width="0.0169%" height="15" fill="rgb(207,177,25)" fg:x="914" fg:w="1"/><text x="15.5930%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="15.4758%" y="325" width="0.0169%" height="15" fill="rgb(211,178,42)" fg:x="914" fg:w="1"/><text x="15.5930%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="15.4758%" y="309" width="0.0169%" height="15" fill="rgb(230,69,54)" fg:x="914" fg:w="1"/><text x="15.5930%" y="319.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="15.4758%" y="293" width="0.0169%" height="15" fill="rgb(214,135,41)" fg:x="914" fg:w="1"/><text x="15.5930%" y="303.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="15.4758%" y="277" width="0.0169%" height="15" fill="rgb(237,67,25)" fg:x="914" fg:w="1"/><text x="15.5930%" y="287.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="15.4758%" y="261" width="0.0169%" height="15" fill="rgb(222,189,50)" fg:x="914" fg:w="1"/><text x="15.5930%" y="271.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="15.4758%" y="245" width="0.0169%" height="15" fill="rgb(245,148,34)" fg:x="914" fg:w="1"/><text x="15.5930%" y="255.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="15.4758%" y="229" width="0.0169%" height="15" fill="rgb(222,29,6)" fg:x="914" fg:w="1"/><text x="15.5930%" y="239.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="15.4758%" y="213" width="0.0169%" height="15" fill="rgb(221,189,43)" fg:x="914" fg:w="1"/><text x="15.5930%" y="223.50"></text></g><g><title>radix_tree_node_rcu_free (1 samples, 0.02%)</title><rect x="15.4758%" y="197" width="0.0169%" height="15" fill="rgb(207,36,27)" fg:x="914" fg:w="1"/><text x="15.5930%" y="207.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="15.4758%" y="181" width="0.0169%" height="15" fill="rgb(217,90,24)" fg:x="914" fg:w="1"/><text x="15.5930%" y="191.50"></text></g><g><title>cache_from_obj (1 samples, 0.02%)</title><rect x="15.4758%" y="165" width="0.0169%" height="15" fill="rgb(224,66,35)" fg:x="914" fg:w="1"/><text x="15.5930%" y="175.50"></text></g><g><title>page_vma_mapped_walk (2 samples, 0.03%)</title><rect x="15.4758%" y="357" width="0.0339%" height="15" fill="rgb(221,13,50)" fg:x="914" fg:w="2"/><text x="15.5930%" y="367.50"></text></g><g><title>check_pte (1 samples, 0.02%)</title><rect x="15.4927%" y="341" width="0.0169%" height="15" fill="rgb(236,68,49)" fg:x="915" fg:w="1"/><text x="15.6099%" y="351.50"></text></g><g><title>rmap_walk_anon (5 samples, 0.08%)</title><rect x="15.4589%" y="389" width="0.0847%" height="15" fill="rgb(229,146,28)" fg:x="913" fg:w="5"/><text x="15.5760%" y="399.50"></text></g><g><title>try_to_unmap_one (5 samples, 0.08%)</title><rect x="15.4589%" y="373" width="0.0847%" height="15" fill="rgb(225,31,38)" fg:x="913" fg:w="5"/><text x="15.5760%" y="383.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="15.5097%" y="357" width="0.0339%" height="15" fill="rgb(250,208,3)" fg:x="916" fg:w="2"/><text x="15.6268%" y="367.50"></text></g><g><title>p4d_offset (1 samples, 0.02%)</title><rect x="15.5435%" y="357" width="0.0169%" height="15" fill="rgb(246,54,23)" fg:x="918" fg:w="1"/><text x="15.6607%" y="367.50"></text></g><g><title>try_to_unmap (7 samples, 0.12%)</title><rect x="15.4589%" y="405" width="0.1185%" height="15" fill="rgb(243,76,11)" fg:x="913" fg:w="7"/><text x="15.5760%" y="415.50"></text></g><g><title>rmap_walk_file (2 samples, 0.03%)</title><rect x="15.5435%" y="389" width="0.0339%" height="15" fill="rgb(245,21,50)" fg:x="918" fg:w="2"/><text x="15.6607%" y="399.50"></text></g><g><title>try_to_unmap_one (2 samples, 0.03%)</title><rect x="15.5435%" y="373" width="0.0339%" height="15" fill="rgb(228,9,43)" fg:x="918" fg:w="2"/><text x="15.6607%" y="383.50"></text></g><g><title>page_vma_mapped_walk (1 samples, 0.02%)</title><rect x="15.5604%" y="357" width="0.0169%" height="15" fill="rgb(208,100,47)" fg:x="919" fg:w="1"/><text x="15.6776%" y="367.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (209 samples, 3.54%)</title><rect x="12.0555%" y="565" width="3.5388%" height="15" fill="rgb(232,26,8)" fg:x="712" fg:w="209"/><text x="12.1727%" y="575.50">__alloc_pa..</text></g><g><title>try_to_free_pages (169 samples, 2.86%)</title><rect x="12.7328%" y="549" width="2.8615%" height="15" fill="rgb(216,166,38)" fg:x="752" fg:w="169"/><text x="12.8500%" y="559.50">try_to_f..</text></g><g><title>do_try_to_free_pages (169 samples, 2.86%)</title><rect x="12.7328%" y="533" width="2.8615%" height="15" fill="rgb(251,202,51)" fg:x="752" fg:w="169"/><text x="12.8500%" y="543.50">do_try_t..</text></g><g><title>shrink_zones.constprop.0 (169 samples, 2.86%)</title><rect x="12.7328%" y="517" width="2.8615%" height="15" fill="rgb(254,216,34)" fg:x="752" fg:w="169"/><text x="12.8500%" y="527.50">shrink_z..</text></g><g><title>shrink_node (169 samples, 2.86%)</title><rect x="12.7328%" y="501" width="2.8615%" height="15" fill="rgb(251,32,27)" fg:x="752" fg:w="169"/><text x="12.8500%" y="511.50">shrink_n..</text></g><g><title>shrink_many (169 samples, 2.86%)</title><rect x="12.7328%" y="485" width="2.8615%" height="15" fill="rgb(208,127,28)" fg:x="752" fg:w="169"/><text x="12.8500%" y="495.50">shrink_m..</text></g><g><title>shrink_one (167 samples, 2.83%)</title><rect x="12.7667%" y="469" width="2.8276%" height="15" fill="rgb(224,137,22)" fg:x="754" fg:w="167"/><text x="12.8839%" y="479.50">shrink_o..</text></g><g><title>try_to_shrink_lruvec (158 samples, 2.68%)</title><rect x="12.9191%" y="453" width="2.6752%" height="15" fill="rgb(254,70,32)" fg:x="763" fg:w="158"/><text x="13.0363%" y="463.50">try_to_..</text></g><g><title>evict_folios (158 samples, 2.68%)</title><rect x="12.9191%" y="437" width="2.6752%" height="15" fill="rgb(229,75,37)" fg:x="763" fg:w="158"/><text x="13.0363%" y="447.50">evict_f..</text></g><g><title>shrink_folio_list (133 samples, 2.25%)</title><rect x="13.3424%" y="421" width="2.2519%" height="15" fill="rgb(252,64,23)" fg:x="788" fg:w="133"/><text x="13.4596%" y="431.50">shrink..</text></g><g><title>try_to_unmap_flush_dirty (1 samples, 0.02%)</title><rect x="15.5774%" y="405" width="0.0169%" height="15" fill="rgb(232,162,48)" fg:x="920" fg:w="1"/><text x="15.6946%" y="415.50"></text></g><g><title>arch_tlbbatch_flush (1 samples, 0.02%)</title><rect x="15.5774%" y="389" width="0.0169%" height="15" fill="rgb(246,160,12)" fg:x="920" fg:w="1"/><text x="15.6946%" y="399.50"></text></g><g><title>native_flush_tlb_multi (1 samples, 0.02%)</title><rect x="15.5774%" y="373" width="0.0169%" height="15" fill="rgb(247,166,0)" fg:x="920" fg:w="1"/><text x="15.6946%" y="383.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.02%)</title><rect x="15.5774%" y="357" width="0.0169%" height="15" fill="rgb(249,219,21)" fg:x="920" fg:w="1"/><text x="15.6946%" y="367.50"></text></g><g><title>smp_call_function_many_cond (1 samples, 0.02%)</title><rect x="15.5774%" y="341" width="0.0169%" height="15" fill="rgb(205,209,3)" fg:x="920" fg:w="1"/><text x="15.6946%" y="351.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.03%)</title><rect x="15.5943%" y="565" width="0.0339%" height="15" fill="rgb(243,44,1)" fg:x="921" fg:w="2"/><text x="15.7115%" y="575.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.02%)</title><rect x="15.6282%" y="565" width="0.0169%" height="15" fill="rgb(206,159,16)" fg:x="923" fg:w="1"/><text x="15.7454%" y="575.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="15.8314%" y="549" width="0.0169%" height="15" fill="rgb(244,77,30)" fg:x="935" fg:w="1"/><text x="15.9485%" y="559.50"></text></g><g><title>__zone_watermark_ok (4 samples, 0.07%)</title><rect x="15.8483%" y="549" width="0.0677%" height="15" fill="rgb(218,69,12)" fg:x="936" fg:w="4"/><text x="15.9655%" y="559.50"></text></g><g><title>post_alloc_hook (1 samples, 0.02%)</title><rect x="15.9160%" y="549" width="0.0169%" height="15" fill="rgb(212,87,7)" fg:x="940" fg:w="1"/><text x="16.0332%" y="559.50"></text></g><g><title>__alloc_pages (234 samples, 3.96%)</title><rect x="12.0217%" y="581" width="3.9621%" height="15" fill="rgb(245,114,25)" fg:x="710" fg:w="234"/><text x="12.1389%" y="591.50">__alloc_pages</text></g><g><title>get_page_from_freelist (20 samples, 0.34%)</title><rect x="15.6451%" y="565" width="0.3386%" height="15" fill="rgb(210,61,42)" fg:x="924" fg:w="20"/><text x="15.7623%" y="575.50"></text></g><g><title>rmqueue (3 samples, 0.05%)</title><rect x="15.9329%" y="549" width="0.0508%" height="15" fill="rgb(211,52,33)" fg:x="941" fg:w="3"/><text x="16.0501%" y="559.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="15.9668%" y="533" width="0.0169%" height="15" fill="rgb(234,58,33)" fg:x="943" fg:w="1"/><text x="16.0840%" y="543.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="15.9668%" y="517" width="0.0169%" height="15" fill="rgb(220,115,36)" fg:x="943" fg:w="1"/><text x="16.0840%" y="527.50"></text></g><g><title>__folio_alloc (235 samples, 3.98%)</title><rect x="12.0217%" y="597" width="3.9790%" height="15" fill="rgb(243,153,54)" fg:x="710" fg:w="235"/><text x="12.1389%" y="607.50">__folio_alloc</text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="15.9837%" y="581" width="0.0169%" height="15" fill="rgb(251,47,18)" fg:x="944" fg:w="1"/><text x="16.1009%" y="591.50"></text></g><g><title>do_anonymous_page (352 samples, 5.96%)</title><rect x="10.0576%" y="629" width="5.9600%" height="15" fill="rgb(242,102,42)" fg:x="594" fg:w="352"/><text x="10.1748%" y="639.50">do_anonymous_page</text></g><g><title>vma_alloc_folio (241 samples, 4.08%)</title><rect x="11.9370%" y="613" width="4.0806%" height="15" fill="rgb(234,31,38)" fg:x="705" fg:w="241"/><text x="12.0542%" y="623.50">vma_alloc_fo..</text></g><g><title>_find_first_bit (1 samples, 0.02%)</title><rect x="16.0007%" y="597" width="0.0169%" height="15" fill="rgb(221,117,51)" fg:x="945" fg:w="1"/><text x="16.1179%" y="607.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.02%)</title><rect x="16.0176%" y="629" width="0.0169%" height="15" fill="rgb(212,20,18)" fg:x="946" fg:w="1"/><text x="16.1348%" y="639.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="16.0345%" y="629" width="0.0169%" height="15" fill="rgb(245,133,36)" fg:x="947" fg:w="1"/><text x="16.1517%" y="639.50"></text></g><g><title>__handle_mm_fault (363 samples, 6.15%)</title><rect x="9.9221%" y="661" width="6.1463%" height="15" fill="rgb(212,6,19)" fg:x="586" fg:w="363"/><text x="10.0393%" y="671.50">__handle_mm_fault</text></g><g><title>handle_pte_fault (356 samples, 6.03%)</title><rect x="10.0406%" y="645" width="6.0278%" height="15" fill="rgb(218,1,36)" fg:x="593" fg:w="356"/><text x="10.1578%" y="655.50">handle_pte_fault</text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="16.0515%" y="629" width="0.0169%" height="15" fill="rgb(246,84,54)" fg:x="948" fg:w="1"/><text x="16.1687%" y="639.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="16.0515%" y="613" width="0.0169%" height="15" fill="rgb(242,110,6)" fg:x="948" fg:w="1"/><text x="16.1687%" y="623.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="16.0684%" y="661" width="0.0169%" height="15" fill="rgb(214,47,5)" fg:x="949" fg:w="1"/><text x="16.1856%" y="671.50"></text></g><g><title>count_memcg_events.constprop.0 (4 samples, 0.07%)</title><rect x="16.0853%" y="661" width="0.0677%" height="15" fill="rgb(218,159,25)" fg:x="950" fg:w="4"/><text x="16.2025%" y="671.50"></text></g><g><title>__count_memcg_events (2 samples, 0.03%)</title><rect x="16.1192%" y="645" width="0.0339%" height="15" fill="rgb(215,211,28)" fg:x="952" fg:w="2"/><text x="16.2364%" y="655.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="16.1192%" y="629" width="0.0339%" height="15" fill="rgb(238,59,32)" fg:x="952" fg:w="2"/><text x="16.2364%" y="639.50"></text></g><g><title>pmd_val (1 samples, 0.02%)</title><rect x="16.1531%" y="661" width="0.0169%" height="15" fill="rgb(226,82,3)" fg:x="954" fg:w="1"/><text x="16.2703%" y="671.50"></text></g><g><title>handle_mm_fault (372 samples, 6.30%)</title><rect x="9.9052%" y="677" width="6.2987%" height="15" fill="rgb(240,164,32)" fg:x="585" fg:w="372"/><text x="10.0224%" y="687.50">handle_mm_fault</text></g><g><title>pud_val (2 samples, 0.03%)</title><rect x="16.1700%" y="661" width="0.0339%" height="15" fill="rgb(232,46,7)" fg:x="955" fg:w="2"/><text x="16.2872%" y="671.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="16.2208%" y="661" width="0.0169%" height="15" fill="rgb(229,129,53)" fg:x="958" fg:w="1"/><text x="16.3380%" y="671.50"></text></g><g><title>__d_free (1 samples, 0.02%)</title><rect x="16.2377%" y="517" width="0.0169%" height="15" fill="rgb(234,188,29)" fg:x="959" fg:w="1"/><text x="16.3549%" y="527.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="16.2377%" y="501" width="0.0169%" height="15" fill="rgb(246,141,4)" fg:x="959" fg:w="1"/><text x="16.3549%" y="511.50"></text></g><g><title>mod_objcg_state (1 samples, 0.02%)</title><rect x="16.2377%" y="485" width="0.0169%" height="15" fill="rgb(229,23,39)" fg:x="959" fg:w="1"/><text x="16.3549%" y="495.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="16.2377%" y="645" width="0.0339%" height="15" fill="rgb(206,12,3)" fg:x="959" fg:w="2"/><text x="16.3549%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="16.2377%" y="629" width="0.0339%" height="15" fill="rgb(252,226,20)" fg:x="959" fg:w="2"/><text x="16.3549%" y="639.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="16.2377%" y="613" width="0.0339%" height="15" fill="rgb(216,123,35)" fg:x="959" fg:w="2"/><text x="16.3549%" y="623.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.03%)</title><rect x="16.2377%" y="597" width="0.0339%" height="15" fill="rgb(212,68,40)" fg:x="959" fg:w="2"/><text x="16.3549%" y="607.50"></text></g><g><title>__do_softirq (2 samples, 0.03%)</title><rect x="16.2377%" y="581" width="0.0339%" height="15" fill="rgb(254,125,32)" fg:x="959" fg:w="2"/><text x="16.3549%" y="591.50"></text></g><g><title>rcu_core_si (2 samples, 0.03%)</title><rect x="16.2377%" y="565" width="0.0339%" height="15" fill="rgb(253,97,22)" fg:x="959" fg:w="2"/><text x="16.3549%" y="575.50"></text></g><g><title>rcu_core (2 samples, 0.03%)</title><rect x="16.2377%" y="549" width="0.0339%" height="15" fill="rgb(241,101,14)" fg:x="959" fg:w="2"/><text x="16.3549%" y="559.50"></text></g><g><title>rcu_do_batch (2 samples, 0.03%)</title><rect x="16.2377%" y="533" width="0.0339%" height="15" fill="rgb(238,103,29)" fg:x="959" fg:w="2"/><text x="16.3549%" y="543.50"></text></g><g><title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="16.2547%" y="517" width="0.0169%" height="15" fill="rgb(233,195,47)" fg:x="960" fg:w="1"/><text x="16.3718%" y="527.50"></text></g><g><title>mas_walk (10 samples, 0.17%)</title><rect x="16.2377%" y="661" width="0.1693%" height="15" fill="rgb(246,218,30)" fg:x="959" fg:w="10"/><text x="16.3549%" y="671.50"></text></g><g><title>mtree_range_walk (8 samples, 0.14%)</title><rect x="16.2716%" y="645" width="0.1355%" height="15" fill="rgb(219,145,47)" fg:x="961" fg:w="8"/><text x="16.3888%" y="655.50"></text></g><g><title>lock_vma_under_rcu (13 samples, 0.22%)</title><rect x="16.2039%" y="677" width="0.2201%" height="15" fill="rgb(243,12,26)" fg:x="957" fg:w="13"/><text x="16.3210%" y="687.50"></text></g><g><title>mtree_range_walk (1 samples, 0.02%)</title><rect x="16.4070%" y="661" width="0.0169%" height="15" fill="rgb(214,87,16)" fg:x="969" fg:w="1"/><text x="16.5242%" y="671.50"></text></g><g><title>do_user_addr_fault (390 samples, 6.60%)</title><rect x="9.8375%" y="693" width="6.6035%" height="15" fill="rgb(208,99,42)" fg:x="581" fg:w="390"/><text x="9.9546%" y="703.50">do_user_addr_fault</text></g><g><title>up_read (1 samples, 0.02%)</title><rect x="16.4240%" y="677" width="0.0169%" height="15" fill="rgb(253,99,2)" fg:x="970" fg:w="1"/><text x="16.5412%" y="687.50"></text></g><g><title>asm_exc_page_fault (398 samples, 6.74%)</title><rect x="9.7528%" y="725" width="6.7389%" height="15" fill="rgb(220,168,23)" fg:x="576" fg:w="398"/><text x="9.8700%" y="735.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (394 samples, 6.67%)</title><rect x="9.8205%" y="709" width="6.6712%" height="15" fill="rgb(242,38,24)" fg:x="580" fg:w="394"/><text x="9.9377%" y="719.50">exc_page_fault</text></g><g><title>irqentry_exit (3 samples, 0.05%)</title><rect x="16.4409%" y="693" width="0.0508%" height="15" fill="rgb(225,182,9)" fg:x="971" fg:w="3"/><text x="16.5581%" y="703.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.03%)</title><rect x="16.4578%" y="677" width="0.0339%" height="15" fill="rgb(243,178,37)" fg:x="972" fg:w="2"/><text x="16.5750%" y="687.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.03%)</title><rect x="16.4578%" y="661" width="0.0339%" height="15" fill="rgb(232,139,19)" fg:x="972" fg:w="2"/><text x="16.5750%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.4917%" y="725" width="0.0169%" height="15" fill="rgb(225,201,24)" fg:x="974" fg:w="1"/><text x="16.6089%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="16.4917%" y="709" width="0.0169%" height="15" fill="rgb(221,47,46)" fg:x="974" fg:w="1"/><text x="16.6089%" y="719.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="16.4917%" y="693" width="0.0169%" height="15" fill="rgb(249,23,13)" fg:x="974" fg:w="1"/><text x="16.6089%" y="703.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="16.4917%" y="677" width="0.0169%" height="15" fill="rgb(219,9,5)" fg:x="974" fg:w="1"/><text x="16.6089%" y="687.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="16.4917%" y="661" width="0.0169%" height="15" fill="rgb(254,171,16)" fg:x="974" fg:w="1"/><text x="16.6089%" y="671.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="16.4917%" y="645" width="0.0169%" height="15" fill="rgb(230,171,20)" fg:x="974" fg:w="1"/><text x="16.6089%" y="655.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="16.4917%" y="629" width="0.0169%" height="15" fill="rgb(210,71,41)" fg:x="974" fg:w="1"/><text x="16.6089%" y="639.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="16.4917%" y="613" width="0.0169%" height="15" fill="rgb(206,173,20)" fg:x="974" fg:w="1"/><text x="16.6089%" y="623.50"></text></g><g><title>__i915_gem_free_object_rcu (1 samples, 0.02%)</title><rect x="16.4917%" y="597" width="0.0169%" height="15" fill="rgb(233,88,34)" fg:x="974" fg:w="1"/><text x="16.6089%" y="607.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="16.4917%" y="581" width="0.0169%" height="15" fill="rgb(223,209,46)" fg:x="974" fg:w="1"/><text x="16.6089%" y="591.50"></text></g><g><title>cache_from_obj (1 samples, 0.02%)</title><rect x="16.4917%" y="565" width="0.0169%" height="15" fill="rgb(250,43,18)" fg:x="974" fg:w="1"/><text x="16.6089%" y="575.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="16.5086%" y="725" width="0.0169%" height="15" fill="rgb(208,13,10)" fg:x="975" fg:w="1"/><text x="16.6258%" y="735.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="16.5256%" y="725" width="0.0169%" height="15" fill="rgb(212,200,36)" fg:x="976" fg:w="1"/><text x="16.6428%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (477 samples, 8.08%)</title><rect x="8.8554%" y="917" width="8.0765%" height="15" fill="rgb(225,90,30)" fg:x="523" fg:w="477"/><text x="8.9726%" y="927.50">core::iter::traits::iterato..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (477 samples, 8.08%)</title><rect x="8.8554%" y="901" width="8.0765%" height="15" fill="rgb(236,182,39)" fg:x="523" fg:w="477"/><text x="8.9726%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (477 samples, 8.08%)</title><rect x="8.8554%" y="885" width="8.0765%" height="15" fill="rgb(212,144,35)" fg:x="523" fg:w="477"/><text x="8.9726%" y="895.50">&lt;alloc::vec::Vec&lt;T&gt; as allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (477 samples, 8.08%)</title><rect x="8.8554%" y="869" width="8.0765%" height="15" fill="rgb(228,63,44)" fg:x="523" fg:w="477"/><text x="8.9726%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (477 samples, 8.08%)</title><rect x="8.8554%" y="853" width="8.0765%" height="15" fill="rgb(228,109,6)" fg:x="523" fg:w="477"/><text x="8.9726%" y="863.50">&lt;alloc::vec::Vec&lt;T,A&gt; as al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (477 samples, 8.08%)</title><rect x="8.8554%" y="837" width="8.0765%" height="15" fill="rgb(238,117,24)" fg:x="523" fg:w="477"/><text x="8.9726%" y="847.50">alloc::vec::Vec&lt;T,A&gt;::exten..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (477 samples, 8.08%)</title><rect x="8.8554%" y="821" width="8.0765%" height="15" fill="rgb(242,26,26)" fg:x="523" fg:w="477"/><text x="8.9726%" y="831.50">&lt;core::iter::adapters::take..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (477 samples, 8.08%)</title><rect x="8.8554%" y="805" width="8.0765%" height="15" fill="rgb(221,92,48)" fg:x="523" fg:w="477"/><text x="8.9726%" y="815.50">&lt;core::iter::adapters::take..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (477 samples, 8.08%)</title><rect x="8.8554%" y="789" width="8.0765%" height="15" fill="rgb(209,209,32)" fg:x="523" fg:w="477"/><text x="8.9726%" y="799.50">core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (472 samples, 7.99%)</title><rect x="8.9401%" y="773" width="7.9919%" height="15" fill="rgb(221,70,22)" fg:x="528" fg:w="472"/><text x="9.0572%" y="783.50">&lt;core::iter::adapters::tak..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (472 samples, 7.99%)</title><rect x="8.9401%" y="757" width="7.9919%" height="15" fill="rgb(248,145,5)" fg:x="528" fg:w="472"/><text x="9.0572%" y="767.50">alloc::vec::Vec&lt;T,A&gt;::exte..</text></g><g><title>core::ptr::write (471 samples, 7.97%)</title><rect x="8.9570%" y="741" width="7.9749%" height="15" fill="rgb(226,116,26)" fg:x="529" fg:w="471"/><text x="9.0742%" y="751.50">core::ptr::write</text></g><g><title>sync_regs (23 samples, 0.39%)</title><rect x="16.5425%" y="725" width="0.3894%" height="15" fill="rgb(244,5,17)" fg:x="977" fg:w="23"/><text x="16.6597%" y="735.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="17.6939%" y="869" width="0.0169%" height="15" fill="rgb(252,159,33)" fg:x="1045" fg:w="1"/><text x="17.8111%" y="879.50"></text></g><g><title>access_error (2 samples, 0.03%)</title><rect x="17.7277%" y="837" width="0.0339%" height="15" fill="rgb(206,71,0)" fg:x="1047" fg:w="2"/><text x="17.8449%" y="847.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="17.7616%" y="821" width="0.0169%" height="15" fill="rgb(233,118,54)" fg:x="1049" fg:w="1"/><text x="17.8788%" y="831.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="17.7785%" y="821" width="0.0169%" height="15" fill="rgb(234,83,48)" fg:x="1050" fg:w="1"/><text x="17.8957%" y="831.50"></text></g><g><title>blk_cgroup_congested (3 samples, 0.05%)</title><rect x="17.8632%" y="741" width="0.0508%" height="15" fill="rgb(228,3,54)" fg:x="1055" fg:w="3"/><text x="17.9804%" y="751.50"></text></g><g><title>__folio_throttle_swaprate (4 samples, 0.07%)</title><rect x="17.8632%" y="757" width="0.0677%" height="15" fill="rgb(226,155,13)" fg:x="1055" fg:w="4"/><text x="17.9804%" y="767.50"></text></g><g><title>kthread_blkcg (1 samples, 0.02%)</title><rect x="17.9140%" y="741" width="0.0169%" height="15" fill="rgb(241,28,37)" fg:x="1058" fg:w="1"/><text x="18.0312%" y="751.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="17.9478%" y="741" width="0.0169%" height="15" fill="rgb(233,93,10)" fg:x="1060" fg:w="1"/><text x="18.0650%" y="751.50"></text></g><g><title>__rcu_read_unlock (19 samples, 0.32%)</title><rect x="17.9648%" y="741" width="0.3217%" height="15" fill="rgb(225,113,19)" fg:x="1061" fg:w="19"/><text x="18.0820%" y="751.50"></text></g><g><title>__count_memcg_events (3 samples, 0.05%)</title><rect x="18.3373%" y="725" width="0.0508%" height="15" fill="rgb(241,2,18)" fg:x="1083" fg:w="3"/><text x="18.4545%" y="735.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="18.3542%" y="709" width="0.0339%" height="15" fill="rgb(228,207,21)" fg:x="1084" fg:w="2"/><text x="18.4714%" y="719.50"></text></g><g><title>consume_stock (1 samples, 0.02%)</title><rect x="18.3881%" y="725" width="0.0169%" height="15" fill="rgb(213,211,35)" fg:x="1086" fg:w="1"/><text x="18.5053%" y="735.50"></text></g><g><title>charge_memcg (15 samples, 0.25%)</title><rect x="18.2865%" y="741" width="0.2540%" height="15" fill="rgb(209,83,10)" fg:x="1080" fg:w="15"/><text x="18.4037%" y="751.50"></text></g><g><title>try_charge_memcg (8 samples, 0.14%)</title><rect x="18.4050%" y="725" width="0.1355%" height="15" fill="rgb(209,164,1)" fg:x="1087" fg:w="8"/><text x="18.5222%" y="735.50"></text></g><g><title>consume_stock (2 samples, 0.03%)</title><rect x="18.5066%" y="709" width="0.0339%" height="15" fill="rgb(213,184,43)" fg:x="1093" fg:w="2"/><text x="18.6238%" y="719.50"></text></g><g><title>__mem_cgroup_charge (38 samples, 0.64%)</title><rect x="17.9309%" y="757" width="0.6434%" height="15" fill="rgb(231,61,34)" fg:x="1059" fg:w="38"/><text x="18.0481%" y="767.50"></text></g><g><title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="18.5405%" y="741" width="0.0339%" height="15" fill="rgb(235,75,3)" fg:x="1095" fg:w="2"/><text x="18.6577%" y="751.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="18.5743%" y="757" width="0.0169%" height="15" fill="rgb(220,106,47)" fg:x="1097" fg:w="1"/><text x="18.6915%" y="767.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.02%)</title><rect x="18.5913%" y="757" width="0.0169%" height="15" fill="rgb(210,196,33)" fg:x="1098" fg:w="1"/><text x="18.7085%" y="767.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="18.5913%" y="741" width="0.0169%" height="15" fill="rgb(229,154,42)" fg:x="1098" fg:w="1"/><text x="18.7085%" y="751.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="18.6082%" y="757" width="0.0169%" height="15" fill="rgb(228,114,26)" fg:x="1099" fg:w="1"/><text x="18.7254%" y="767.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="18.6251%" y="757" width="0.0169%" height="15" fill="rgb(208,144,1)" fg:x="1100" fg:w="1"/><text x="18.7423%" y="767.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="18.6421%" y="757" width="0.0169%" height="15" fill="rgb(239,112,37)" fg:x="1101" fg:w="1"/><text x="18.7592%" y="767.50"></text></g><g><title>charge_memcg (3 samples, 0.05%)</title><rect x="18.6590%" y="757" width="0.0508%" height="15" fill="rgb(210,96,50)" fg:x="1102" fg:w="3"/><text x="18.7762%" y="767.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.02%)</title><rect x="18.7267%" y="709" width="0.0169%" height="15" fill="rgb(222,178,2)" fg:x="1106" fg:w="1"/><text x="18.8439%" y="719.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="18.7267%" y="693" width="0.0169%" height="15" fill="rgb(226,74,18)" fg:x="1106" fg:w="1"/><text x="18.8439%" y="703.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="18.7267%" y="677" width="0.0169%" height="15" fill="rgb(225,67,54)" fg:x="1106" fg:w="1"/><text x="18.8439%" y="687.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="18.7267%" y="661" width="0.0169%" height="15" fill="rgb(251,92,32)" fg:x="1106" fg:w="1"/><text x="18.8439%" y="671.50"></text></g><g><title>lru_add_fn (3 samples, 0.05%)</title><rect x="18.7437%" y="709" width="0.0508%" height="15" fill="rgb(228,149,22)" fg:x="1107" fg:w="3"/><text x="18.8608%" y="719.50"></text></g><g><title>lru_gen_add_folio (2 samples, 0.03%)</title><rect x="18.7606%" y="693" width="0.0339%" height="15" fill="rgb(243,54,13)" fg:x="1108" fg:w="2"/><text x="18.8778%" y="703.50"></text></g><g><title>folio_add_lru_vma (7 samples, 0.12%)</title><rect x="18.7098%" y="757" width="0.1185%" height="15" fill="rgb(243,180,28)" fg:x="1105" fg:w="7"/><text x="18.8270%" y="767.50"></text></g><g><title>folio_add_lru (7 samples, 0.12%)</title><rect x="18.7098%" y="741" width="0.1185%" height="15" fill="rgb(208,167,24)" fg:x="1105" fg:w="7"/><text x="18.8270%" y="751.50"></text></g><g><title>folio_batch_move_lru (6 samples, 0.10%)</title><rect x="18.7267%" y="725" width="0.1016%" height="15" fill="rgb(245,73,45)" fg:x="1106" fg:w="6"/><text x="18.8439%" y="735.50"></text></g><g><title>release_pages (2 samples, 0.03%)</title><rect x="18.7944%" y="709" width="0.0339%" height="15" fill="rgb(237,203,48)" fg:x="1110" fg:w="2"/><text x="18.9116%" y="719.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="18.8452%" y="709" width="0.0169%" height="15" fill="rgb(211,197,16)" fg:x="1113" fg:w="1"/><text x="18.9624%" y="719.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.05%)</title><rect x="18.8283%" y="757" width="0.0508%" height="15" fill="rgb(243,99,51)" fg:x="1112" fg:w="3"/><text x="18.9455%" y="767.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.05%)</title><rect x="18.8283%" y="741" width="0.0508%" height="15" fill="rgb(215,123,29)" fg:x="1112" fg:w="3"/><text x="18.9455%" y="751.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="18.8452%" y="725" width="0.0339%" height="15" fill="rgb(239,186,37)" fg:x="1113" fg:w="2"/><text x="18.9624%" y="735.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="18.8622%" y="709" width="0.0169%" height="15" fill="rgb(252,136,39)" fg:x="1114" fg:w="1"/><text x="18.9794%" y="719.50"></text></g><g><title>inc_mm_counter (2 samples, 0.03%)</title><rect x="18.8791%" y="757" width="0.0339%" height="15" fill="rgb(223,213,32)" fg:x="1115" fg:w="2"/><text x="18.9963%" y="767.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="18.8960%" y="741" width="0.0169%" height="15" fill="rgb(233,115,5)" fg:x="1116" fg:w="1"/><text x="19.0132%" y="751.50"></text></g><g><title>native_set_pte (1 samples, 0.02%)</title><rect x="18.9130%" y="757" width="0.0169%" height="15" fill="rgb(207,226,44)" fg:x="1117" fg:w="1"/><text x="19.0302%" y="767.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="18.9976%" y="709" width="0.0169%" height="15" fill="rgb(208,126,0)" fg:x="1122" fg:w="1"/><text x="19.1148%" y="719.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="19.0484%" y="693" width="0.0169%" height="15" fill="rgb(244,66,21)" fg:x="1125" fg:w="1"/><text x="19.1656%" y="703.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="19.0654%" y="693" width="0.0169%" height="15" fill="rgb(222,97,12)" fg:x="1126" fg:w="1"/><text x="19.1825%" y="703.50"></text></g><g><title>clear_page_erms (1 samples, 0.02%)</title><rect x="19.0823%" y="693" width="0.0169%" height="15" fill="rgb(219,213,19)" fg:x="1127" fg:w="1"/><text x="19.1995%" y="703.50"></text></g><g><title>post_alloc_hook (1 samples, 0.02%)</title><rect x="19.0992%" y="693" width="0.0169%" height="15" fill="rgb(252,169,30)" fg:x="1128" fg:w="1"/><text x="19.2164%" y="703.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.17%)</title><rect x="19.0146%" y="709" width="0.1693%" height="15" fill="rgb(206,32,51)" fg:x="1123" fg:w="10"/><text x="19.1317%" y="719.50"></text></g><g><title>rmqueue (4 samples, 0.07%)</title><rect x="19.1162%" y="693" width="0.0677%" height="15" fill="rgb(250,172,42)" fg:x="1129" fg:w="4"/><text x="19.2333%" y="703.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.03%)</title><rect x="19.1500%" y="677" width="0.0339%" height="15" fill="rgb(209,34,43)" fg:x="1131" fg:w="2"/><text x="19.2672%" y="687.50"></text></g><g><title>rmqueue_bulk (2 samples, 0.03%)</title><rect x="19.1500%" y="661" width="0.0339%" height="15" fill="rgb(223,11,35)" fg:x="1131" fg:w="2"/><text x="19.2672%" y="671.50"></text></g><g><title>do_anonymous_page (80 samples, 1.35%)</title><rect x="17.8463%" y="773" width="1.3546%" height="15" fill="rgb(251,219,26)" fg:x="1054" fg:w="80"/><text x="17.9634%" y="783.50">do..</text></g><g><title>vma_alloc_folio (16 samples, 0.27%)</title><rect x="18.9299%" y="757" width="0.2709%" height="15" fill="rgb(231,119,3)" fg:x="1118" fg:w="16"/><text x="19.0471%" y="767.50"></text></g><g><title>__folio_alloc (13 samples, 0.22%)</title><rect x="18.9807%" y="741" width="0.2201%" height="15" fill="rgb(216,97,11)" fg:x="1121" fg:w="13"/><text x="19.0979%" y="751.50"></text></g><g><title>__alloc_pages (13 samples, 0.22%)</title><rect x="18.9807%" y="725" width="0.2201%" height="15" fill="rgb(223,59,9)" fg:x="1121" fg:w="13"/><text x="19.0979%" y="735.50"></text></g><g><title>post_alloc_hook (1 samples, 0.02%)</title><rect x="19.1839%" y="709" width="0.0169%" height="15" fill="rgb(233,93,31)" fg:x="1133" fg:w="1"/><text x="19.3011%" y="719.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="19.2008%" y="773" width="0.0169%" height="15" fill="rgb(239,81,33)" fg:x="1134" fg:w="1"/><text x="19.3180%" y="783.50"></text></g><g><title>__handle_mm_fault (84 samples, 1.42%)</title><rect x="17.8124%" y="805" width="1.4223%" height="15" fill="rgb(213,120,34)" fg:x="1052" fg:w="84"/><text x="17.9296%" y="815.50">__h..</text></g><g><title>handle_pte_fault (82 samples, 1.39%)</title><rect x="17.8463%" y="789" width="1.3884%" height="15" fill="rgb(243,49,53)" fg:x="1054" fg:w="82"/><text x="17.9634%" y="799.50">han..</text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="19.2177%" y="773" width="0.0169%" height="15" fill="rgb(247,216,33)" fg:x="1135" fg:w="1"/><text x="19.3349%" y="783.50"></text></g><g><title>handle_mm_fault (86 samples, 1.46%)</title><rect x="17.7955%" y="821" width="1.4561%" height="15" fill="rgb(226,26,14)" fg:x="1051" fg:w="86"/><text x="17.9126%" y="831.50">han..</text></g><g><title>pmd_val (1 samples, 0.02%)</title><rect x="19.2347%" y="805" width="0.0169%" height="15" fill="rgb(215,49,53)" fg:x="1136" fg:w="1"/><text x="19.3519%" y="815.50"></text></g><g><title>mas_walk (1 samples, 0.02%)</title><rect x="19.2685%" y="805" width="0.0169%" height="15" fill="rgb(245,162,40)" fg:x="1138" fg:w="1"/><text x="19.3857%" y="815.50"></text></g><g><title>mtree_range_walk (1 samples, 0.02%)</title><rect x="19.2685%" y="789" width="0.0169%" height="15" fill="rgb(229,68,17)" fg:x="1138" fg:w="1"/><text x="19.3857%" y="799.50"></text></g><g><title>lock_vma_under_rcu (3 samples, 0.05%)</title><rect x="19.2516%" y="821" width="0.0508%" height="15" fill="rgb(213,182,10)" fg:x="1137" fg:w="3"/><text x="19.3688%" y="831.50"></text></g><g><title>mtree_range_walk (1 samples, 0.02%)</title><rect x="19.2855%" y="805" width="0.0169%" height="15" fill="rgb(245,125,30)" fg:x="1139" fg:w="1"/><text x="19.4027%" y="815.50"></text></g><g><title>asm_exc_page_fault (97 samples, 1.64%)</title><rect x="17.7108%" y="869" width="1.6424%" height="15" fill="rgb(232,202,2)" fg:x="1046" fg:w="97"/><text x="17.8280%" y="879.50">asm..</text></g><g><title>exc_page_fault (97 samples, 1.64%)</title><rect x="17.7108%" y="853" width="1.6424%" height="15" fill="rgb(237,140,51)" fg:x="1046" fg:w="97"/><text x="17.8280%" y="863.50">exc..</text></g><g><title>do_user_addr_fault (94 samples, 1.59%)</title><rect x="17.7616%" y="837" width="1.5916%" height="15" fill="rgb(236,157,25)" fg:x="1049" fg:w="94"/><text x="17.8788%" y="847.50">do_..</text></g><g><title>up_read (3 samples, 0.05%)</title><rect x="19.3024%" y="821" width="0.0508%" height="15" fill="rgb(219,209,0)" fg:x="1140" fg:w="3"/><text x="19.4196%" y="831.50"></text></g><g><title>error_entry (2 samples, 0.03%)</title><rect x="19.3532%" y="869" width="0.0339%" height="15" fill="rgb(240,116,54)" fg:x="1143" fg:w="2"/><text x="19.4704%" y="879.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::new (630 samples, 10.67%)</title><rect x="8.8554%" y="933" width="10.6671%" height="15" fill="rgb(216,10,36)" fg:x="523" fg:w="630"/><text x="8.9726%" y="943.50">fringe_vs_astar::algorithms::astar::..</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::new (153 samples, 2.59%)</title><rect x="16.9319%" y="917" width="2.5906%" height="15" fill="rgb(222,72,44)" fg:x="1000" fg:w="153"/><text x="17.0491%" y="927.50">fringe_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (152 samples, 2.57%)</title><rect x="16.9489%" y="901" width="2.5737%" height="15" fill="rgb(232,159,9)" fg:x="1001" fg:w="152"/><text x="17.0661%" y="911.50">alloc::..</text></g><g><title>core::ptr::write (132 samples, 2.24%)</title><rect x="17.2875%" y="885" width="2.2350%" height="15" fill="rgb(210,39,32)" fg:x="1021" fg:w="132"/><text x="17.4047%" y="895.50">core::..</text></g><g><title>sync_regs (8 samples, 0.14%)</title><rect x="19.3871%" y="869" width="0.1355%" height="15" fill="rgb(216,194,45)" fg:x="1145" fg:w="8"/><text x="19.5043%" y="879.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.24%)</title><rect x="20.3522%" y="917" width="0.2370%" height="15" fill="rgb(218,18,35)" fg:x="1202" fg:w="14"/><text x="20.4694%" y="927.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&lt;&amp;f64&gt;&gt;::add (1 samples, 0.02%)</title><rect x="20.5892%" y="917" width="0.0169%" height="15" fill="rgb(207,83,51)" fg:x="1216" fg:w="1"/><text x="20.7064%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (1 samples, 0.02%)</title><rect x="20.5892%" y="901" width="0.0169%" height="15" fill="rgb(225,63,43)" fg:x="1216" fg:w="1"/><text x="20.7064%" y="911.50"></text></g><g><title>_compound_head (12 samples, 0.20%)</title><rect x="20.6062%" y="597" width="0.2032%" height="15" fill="rgb(207,57,36)" fg:x="1217" fg:w="12"/><text x="20.7234%" y="607.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="20.8940%" y="549" width="0.0339%" height="15" fill="rgb(216,99,33)" fg:x="1234" fg:w="2"/><text x="21.0112%" y="559.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="20.9109%" y="533" width="0.0169%" height="15" fill="rgb(225,42,16)" fg:x="1235" fg:w="1"/><text x="21.0281%" y="543.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.07%)</title><rect x="20.8771%" y="565" width="0.0677%" height="15" fill="rgb(220,201,45)" fg:x="1233" fg:w="4"/><text x="20.9943%" y="575.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="20.9279%" y="549" width="0.0169%" height="15" fill="rgb(225,33,4)" fg:x="1236" fg:w="1"/><text x="21.0451%" y="559.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="20.9448%" y="565" width="0.0169%" height="15" fill="rgb(224,33,50)" fg:x="1237" fg:w="1"/><text x="21.0620%" y="575.50"></text></g><g><title>page_remove_rmap (7 samples, 0.12%)</title><rect x="20.8601%" y="581" width="0.1185%" height="15" fill="rgb(246,198,51)" fg:x="1232" fg:w="7"/><text x="20.9773%" y="591.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="20.9617%" y="565" width="0.0169%" height="15" fill="rgb(205,22,4)" fg:x="1238" fg:w="1"/><text x="21.0789%" y="575.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.03%)</title><rect x="21.0125%" y="517" width="0.0339%" height="15" fill="rgb(206,3,8)" fg:x="1241" fg:w="2"/><text x="21.1297%" y="527.50"></text></g><g><title>uncharge_folio (1 samples, 0.02%)</title><rect x="21.0295%" y="501" width="0.0169%" height="15" fill="rgb(251,23,15)" fg:x="1242" fg:w="1"/><text x="21.1466%" y="511.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="21.0464%" y="517" width="0.0169%" height="15" fill="rgb(252,88,28)" fg:x="1243" fg:w="1"/><text x="21.1636%" y="527.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.03%)</title><rect x="21.0633%" y="517" width="0.0339%" height="15" fill="rgb(212,127,14)" fg:x="1244" fg:w="2"/><text x="21.1805%" y="527.50"></text></g><g><title>free_unref_page_list (11 samples, 0.19%)</title><rect x="21.0972%" y="517" width="0.1863%" height="15" fill="rgb(247,145,37)" fg:x="1246" fg:w="11"/><text x="21.2144%" y="527.50"></text></g><g><title>free_unref_page_commit (11 samples, 0.19%)</title><rect x="21.0972%" y="501" width="0.1863%" height="15" fill="rgb(209,117,53)" fg:x="1246" fg:w="11"/><text x="21.2144%" y="511.50"></text></g><g><title>free_pcppages_bulk (9 samples, 0.15%)</title><rect x="21.1311%" y="485" width="0.1524%" height="15" fill="rgb(212,90,42)" fg:x="1248" fg:w="9"/><text x="21.2482%" y="495.50"></text></g><g><title>__free_one_page (9 samples, 0.15%)</title><rect x="21.1311%" y="469" width="0.1524%" height="15" fill="rgb(218,164,37)" fg:x="1248" fg:w="9"/><text x="21.2482%" y="479.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="21.2834%" y="517" width="0.0169%" height="15" fill="rgb(246,65,34)" fg:x="1257" fg:w="1"/><text x="21.4006%" y="527.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="21.3681%" y="485" width="0.0169%" height="15" fill="rgb(231,100,33)" fg:x="1262" fg:w="1"/><text x="21.4853%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64,core::option::Option&lt;f64&gt;)&gt;&gt; (47 samples, 0.80%)</title><rect x="20.6062%" y="901" width="0.7958%" height="15" fill="rgb(228,126,14)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64,core::option::Option&lt;f64&gt;)&gt;&gt; (47 samples, 0.80%)</title><rect x="20.6062%" y="885" width="0.7958%" height="15" fill="rgb(215,173,21)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.80%)</title><rect x="20.6062%" y="869" width="0.7958%" height="15" fill="rgb(210,6,40)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.80%)</title><rect x="20.6062%" y="853" width="0.7958%" height="15" fill="rgb(212,48,18)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.80%)</title><rect x="20.6062%" y="837" width="0.7958%" height="15" fill="rgb(230,214,11)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="847.50"></text></g><g><title>__GI___libc_free (47 samples, 0.80%)</title><rect x="20.6062%" y="821" width="0.7958%" height="15" fill="rgb(254,105,39)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="831.50"></text></g><g><title>__GI___munmap (47 samples, 0.80%)</title><rect x="20.6062%" y="805" width="0.7958%" height="15" fill="rgb(245,158,5)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (47 samples, 0.80%)</title><rect x="20.6062%" y="789" width="0.7958%" height="15" fill="rgb(249,208,11)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="799.50"></text></g><g><title>do_syscall_64 (47 samples, 0.80%)</title><rect x="20.6062%" y="773" width="0.7958%" height="15" fill="rgb(210,39,28)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="783.50"></text></g><g><title>x64_sys_call (47 samples, 0.80%)</title><rect x="20.6062%" y="757" width="0.7958%" height="15" fill="rgb(211,56,53)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="767.50"></text></g><g><title>__x64_sys_munmap (47 samples, 0.80%)</title><rect x="20.6062%" y="741" width="0.7958%" height="15" fill="rgb(226,201,30)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="751.50"></text></g><g><title>__vm_munmap (47 samples, 0.80%)</title><rect x="20.6062%" y="725" width="0.7958%" height="15" fill="rgb(239,101,34)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="735.50"></text></g><g><title>do_vmi_munmap (47 samples, 0.80%)</title><rect x="20.6062%" y="709" width="0.7958%" height="15" fill="rgb(226,209,5)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="719.50"></text></g><g><title>do_vmi_align_munmap (47 samples, 0.80%)</title><rect x="20.6062%" y="693" width="0.7958%" height="15" fill="rgb(250,105,47)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="703.50"></text></g><g><title>unmap_region (47 samples, 0.80%)</title><rect x="20.6062%" y="677" width="0.7958%" height="15" fill="rgb(230,72,3)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="687.50"></text></g><g><title>unmap_vmas (47 samples, 0.80%)</title><rect x="20.6062%" y="661" width="0.7958%" height="15" fill="rgb(232,218,39)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="671.50"></text></g><g><title>unmap_single_vma (47 samples, 0.80%)</title><rect x="20.6062%" y="645" width="0.7958%" height="15" fill="rgb(248,166,6)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="655.50"></text></g><g><title>unmap_page_range (47 samples, 0.80%)</title><rect x="20.6062%" y="629" width="0.7958%" height="15" fill="rgb(247,89,20)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="639.50"></text></g><g><title>zap_pmd_range.isra.0 (47 samples, 0.80%)</title><rect x="20.6062%" y="613" width="0.7958%" height="15" fill="rgb(248,130,54)" fg:x="1217" fg:w="47"/><text x="20.7234%" y="623.50"></text></g><g><title>zap_pte_range (35 samples, 0.59%)</title><rect x="20.8093%" y="597" width="0.5926%" height="15" fill="rgb(234,196,4)" fg:x="1229" fg:w="35"/><text x="20.9265%" y="607.50"></text></g><g><title>tlb_flush_mmu (25 samples, 0.42%)</title><rect x="20.9787%" y="581" width="0.4233%" height="15" fill="rgb(250,143,31)" fg:x="1239" fg:w="25"/><text x="21.0959%" y="591.50"></text></g><g><title>tlb_batch_pages_flush (25 samples, 0.42%)</title><rect x="20.9787%" y="565" width="0.4233%" height="15" fill="rgb(211,110,34)" fg:x="1239" fg:w="25"/><text x="21.0959%" y="575.50"></text></g><g><title>free_pages_and_swap_cache (25 samples, 0.42%)</title><rect x="20.9787%" y="549" width="0.4233%" height="15" fill="rgb(215,124,48)" fg:x="1239" fg:w="25"/><text x="21.0959%" y="559.50"></text></g><g><title>release_pages (25 samples, 0.42%)</title><rect x="20.9787%" y="533" width="0.4233%" height="15" fill="rgb(216,46,13)" fg:x="1239" fg:w="25"/><text x="21.0959%" y="543.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.10%)</title><rect x="21.3004%" y="517" width="0.1016%" height="15" fill="rgb(205,184,25)" fg:x="1258" fg:w="6"/><text x="21.4176%" y="527.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.05%)</title><rect x="21.3512%" y="501" width="0.0508%" height="15" fill="rgb(228,1,10)" fg:x="1261" fg:w="3"/><text x="21.4684%" y="511.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="21.3850%" y="485" width="0.0169%" height="15" fill="rgb(213,116,27)" fg:x="1263" fg:w="1"/><text x="21.5022%" y="495.50"></text></g><g><title>_compound_head (2 samples, 0.03%)</title><rect x="21.4020%" y="581" width="0.0339%" height="15" fill="rgb(241,95,50)" fg:x="1264" fg:w="2"/><text x="21.5192%" y="591.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="21.4528%" y="565" width="0.0169%" height="15" fill="rgb(238,48,32)" fg:x="1267" fg:w="1"/><text x="21.5699%" y="575.50"></text></g><g><title>free_unref_page_list (4 samples, 0.07%)</title><rect x="21.5036%" y="501" width="0.0677%" height="15" fill="rgb(235,113,49)" fg:x="1270" fg:w="4"/><text x="21.6207%" y="511.50"></text></g><g><title>free_unref_page_commit (4 samples, 0.07%)</title><rect x="21.5036%" y="485" width="0.0677%" height="15" fill="rgb(205,127,43)" fg:x="1270" fg:w="4"/><text x="21.6207%" y="495.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.05%)</title><rect x="21.5205%" y="469" width="0.0508%" height="15" fill="rgb(250,162,2)" fg:x="1271" fg:w="3"/><text x="21.6377%" y="479.50"></text></g><g><title>__free_one_page (3 samples, 0.05%)</title><rect x="21.5205%" y="453" width="0.0508%" height="15" fill="rgb(220,13,41)" fg:x="1271" fg:w="3"/><text x="21.6377%" y="463.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="21.5544%" y="437" width="0.0169%" height="15" fill="rgb(249,221,25)" fg:x="1273" fg:w="1"/><text x="21.6715%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::astar::AStar&gt; (61 samples, 1.03%)</title><rect x="20.6062%" y="917" width="1.0328%" height="15" fill="rgb(215,208,19)" fg:x="1217" fg:w="61"/><text x="20.7234%" y="927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::frontier::Frontier&gt; (14 samples, 0.24%)</title><rect x="21.4020%" y="901" width="0.2370%" height="15" fill="rgb(236,175,2)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;f64&gt;&gt;&gt; (14 samples, 0.24%)</title><rect x="21.4020%" y="885" width="0.2370%" height="15" fill="rgb(241,52,2)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;f64&gt;&gt;&gt; (14 samples, 0.24%)</title><rect x="21.4020%" y="869" width="0.2370%" height="15" fill="rgb(248,140,14)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.24%)</title><rect x="21.4020%" y="853" width="0.2370%" height="15" fill="rgb(253,22,42)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.24%)</title><rect x="21.4020%" y="837" width="0.2370%" height="15" fill="rgb(234,61,47)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.24%)</title><rect x="21.4020%" y="821" width="0.2370%" height="15" fill="rgb(208,226,15)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="831.50"></text></g><g><title>__GI___libc_free (14 samples, 0.24%)</title><rect x="21.4020%" y="805" width="0.2370%" height="15" fill="rgb(217,221,4)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="815.50"></text></g><g><title>__GI___munmap (14 samples, 0.24%)</title><rect x="21.4020%" y="789" width="0.2370%" height="15" fill="rgb(212,174,34)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.24%)</title><rect x="21.4020%" y="773" width="0.2370%" height="15" fill="rgb(253,83,4)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="783.50"></text></g><g><title>do_syscall_64 (14 samples, 0.24%)</title><rect x="21.4020%" y="757" width="0.2370%" height="15" fill="rgb(250,195,49)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="767.50"></text></g><g><title>x64_sys_call (14 samples, 0.24%)</title><rect x="21.4020%" y="741" width="0.2370%" height="15" fill="rgb(241,192,25)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="751.50"></text></g><g><title>__x64_sys_munmap (14 samples, 0.24%)</title><rect x="21.4020%" y="725" width="0.2370%" height="15" fill="rgb(208,124,10)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="735.50"></text></g><g><title>__vm_munmap (14 samples, 0.24%)</title><rect x="21.4020%" y="709" width="0.2370%" height="15" fill="rgb(222,33,0)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="719.50"></text></g><g><title>do_vmi_munmap (14 samples, 0.24%)</title><rect x="21.4020%" y="693" width="0.2370%" height="15" fill="rgb(234,209,28)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="703.50"></text></g><g><title>do_vmi_align_munmap (14 samples, 0.24%)</title><rect x="21.4020%" y="677" width="0.2370%" height="15" fill="rgb(224,11,23)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="687.50"></text></g><g><title>unmap_region (14 samples, 0.24%)</title><rect x="21.4020%" y="661" width="0.2370%" height="15" fill="rgb(232,99,1)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="671.50"></text></g><g><title>unmap_vmas (14 samples, 0.24%)</title><rect x="21.4020%" y="645" width="0.2370%" height="15" fill="rgb(237,95,45)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="655.50"></text></g><g><title>unmap_single_vma (14 samples, 0.24%)</title><rect x="21.4020%" y="629" width="0.2370%" height="15" fill="rgb(208,109,11)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="639.50"></text></g><g><title>unmap_page_range (14 samples, 0.24%)</title><rect x="21.4020%" y="613" width="0.2370%" height="15" fill="rgb(216,190,48)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="623.50"></text></g><g><title>zap_pmd_range.isra.0 (14 samples, 0.24%)</title><rect x="21.4020%" y="597" width="0.2370%" height="15" fill="rgb(251,171,36)" fg:x="1264" fg:w="14"/><text x="21.5192%" y="607.50"></text></g><g><title>zap_pte_range (12 samples, 0.20%)</title><rect x="21.4358%" y="581" width="0.2032%" height="15" fill="rgb(230,62,22)" fg:x="1266" fg:w="12"/><text x="21.5530%" y="591.50"></text></g><g><title>tlb_flush_mmu (10 samples, 0.17%)</title><rect x="21.4697%" y="565" width="0.1693%" height="15" fill="rgb(225,114,35)" fg:x="1268" fg:w="10"/><text x="21.5869%" y="575.50"></text></g><g><title>tlb_batch_pages_flush (10 samples, 0.17%)</title><rect x="21.4697%" y="549" width="0.1693%" height="15" fill="rgb(215,118,42)" fg:x="1268" fg:w="10"/><text x="21.5869%" y="559.50"></text></g><g><title>free_pages_and_swap_cache (10 samples, 0.17%)</title><rect x="21.4697%" y="533" width="0.1693%" height="15" fill="rgb(243,119,21)" fg:x="1268" fg:w="10"/><text x="21.5869%" y="543.50"></text></g><g><title>release_pages (10 samples, 0.17%)</title><rect x="21.4697%" y="517" width="0.1693%" height="15" fill="rgb(252,177,53)" fg:x="1268" fg:w="10"/><text x="21.5869%" y="527.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (4 samples, 0.07%)</title><rect x="21.5713%" y="501" width="0.0677%" height="15" fill="rgb(237,209,29)" fg:x="1274" fg:w="4"/><text x="21.6885%" y="511.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="21.6221%" y="485" width="0.0169%" height="15" fill="rgb(212,65,23)" fg:x="1277" fg:w="1"/><text x="21.7393%" y="495.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (1 samples, 0.02%)</title><rect x="21.6390%" y="917" width="0.0169%" height="15" fill="rgb(230,222,46)" fg:x="1278" fg:w="1"/><text x="21.7562%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve::_{{closure}} (1 samples, 0.02%)</title><rect x="21.6559%" y="917" width="0.0169%" height="15" fill="rgb(215,135,32)" fg:x="1279" fg:w="1"/><text x="21.7731%" y="927.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (1 samples, 0.02%)</title><rect x="21.6559%" y="901" width="0.0169%" height="15" fill="rgb(246,101,22)" fg:x="1279" fg:w="1"/><text x="21.7731%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="21.6729%" y="885" width="0.0169%" height="15" fill="rgb(206,107,13)" fg:x="1280" fg:w="1"/><text x="21.7901%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="21.6729%" y="869" width="0.0169%" height="15" fill="rgb(250,100,44)" fg:x="1280" fg:w="1"/><text x="21.7901%" y="879.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="21.6898%" y="853" width="0.0169%" height="15" fill="rgb(231,147,38)" fg:x="1281" fg:w="1"/><text x="21.8070%" y="863.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="21.7745%" y="837" width="0.0169%" height="15" fill="rgb(229,8,40)" fg:x="1286" fg:w="1"/><text x="21.8917%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (2 samples, 0.03%)</title><rect x="21.7914%" y="837" width="0.0339%" height="15" fill="rgb(221,135,30)" fg:x="1287" fg:w="2"/><text x="21.9086%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (1 samples, 0.02%)</title><rect x="21.8083%" y="821" width="0.0169%" height="15" fill="rgb(249,193,18)" fg:x="1288" fg:w="1"/><text x="21.9255%" y="831.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="21.8083%" y="805" width="0.0169%" height="15" fill="rgb(209,133,39)" fg:x="1288" fg:w="1"/><text x="21.9255%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="21.8083%" y="789" width="0.0169%" height="15" fill="rgb(232,100,14)" fg:x="1288" fg:w="1"/><text x="21.9255%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.10%)</title><rect x="21.8253%" y="821" width="0.1016%" height="15" fill="rgb(224,185,1)" fg:x="1289" fg:w="6"/><text x="21.9424%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (7 samples, 0.12%)</title><rect x="21.8253%" y="837" width="0.1185%" height="15" fill="rgb(223,139,8)" fg:x="1289" fg:w="7"/><text x="21.9424%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="21.9269%" y="821" width="0.0169%" height="15" fill="rgb(232,213,38)" fg:x="1295" fg:w="1"/><text x="22.0440%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_to_bottom (16 samples, 0.27%)</title><rect x="21.7067%" y="853" width="0.2709%" height="15" fill="rgb(207,94,22)" fg:x="1282" fg:w="16"/><text x="21.8239%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.03%)</title><rect x="21.9438%" y="837" width="0.0339%" height="15" fill="rgb(219,183,54)" fg:x="1296" fg:w="2"/><text x="22.0610%" y="847.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.03%)</title><rect x="21.9438%" y="821" width="0.0339%" height="15" fill="rgb(216,185,54)" fg:x="1296" fg:w="2"/><text x="22.0610%" y="831.50"></text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::pop (19 samples, 0.32%)</title><rect x="21.6729%" y="917" width="0.3217%" height="15" fill="rgb(254,217,39)" fg:x="1280" fg:w="19"/><text x="21.7901%" y="927.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (19 samples, 0.32%)</title><rect x="21.6729%" y="901" width="0.3217%" height="15" fill="rgb(240,178,23)" fg:x="1280" fg:w="19"/><text x="21.7901%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.30%)</title><rect x="21.6898%" y="885" width="0.3048%" height="15" fill="rgb(218,11,47)" fg:x="1281" fg:w="18"/><text x="21.8070%" y="895.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop::_{{closure}} (18 samples, 0.30%)</title><rect x="21.6898%" y="869" width="0.3048%" height="15" fill="rgb(218,51,51)" fg:x="1281" fg:w="18"/><text x="21.8070%" y="879.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="21.9776%" y="853" width="0.0169%" height="15" fill="rgb(238,126,27)" fg:x="1298" fg:w="1"/><text x="22.0948%" y="863.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.02%)</title><rect x="21.9776%" y="837" width="0.0169%" height="15" fill="rgb(249,202,22)" fg:x="1298" fg:w="1"/><text x="22.0948%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="21.9776%" y="821" width="0.0169%" height="15" fill="rgb(254,195,49)" fg:x="1298" fg:w="1"/><text x="22.0948%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="22.2655%" y="901" width="0.0169%" height="15" fill="rgb(208,123,14)" fg:x="1315" fg:w="1"/><text x="22.3827%" y="911.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="22.2655%" y="885" width="0.0169%" height="15" fill="rgb(224,200,8)" fg:x="1315" fg:w="1"/><text x="22.3827%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="22.2655%" y="869" width="0.0169%" height="15" fill="rgb(217,61,36)" fg:x="1315" fg:w="1"/><text x="22.3827%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.02%)</title><rect x="22.3163%" y="869" width="0.0169%" height="15" fill="rgb(206,35,45)" fg:x="1318" fg:w="1"/><text x="22.4335%" y="879.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.02%)</title><rect x="22.3163%" y="853" width="0.0169%" height="15" fill="rgb(217,65,33)" fg:x="1318" fg:w="1"/><text x="22.4335%" y="863.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (4 samples, 0.07%)</title><rect x="22.2824%" y="885" width="0.0677%" height="15" fill="rgb(222,158,48)" fg:x="1316" fg:w="4"/><text x="22.3996%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (1 samples, 0.02%)</title><rect x="22.3332%" y="869" width="0.0169%" height="15" fill="rgb(254,2,54)" fg:x="1319" fg:w="1"/><text x="22.4504%" y="879.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="22.3332%" y="853" width="0.0169%" height="15" fill="rgb(250,143,38)" fg:x="1319" fg:w="1"/><text x="22.4504%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="22.3332%" y="837" width="0.0169%" height="15" fill="rgb(248,25,0)" fg:x="1319" fg:w="1"/><text x="22.4504%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="22.3502%" y="837" width="0.0169%" height="15" fill="rgb(206,152,27)" fg:x="1320" fg:w="1"/><text x="22.4673%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (8 samples, 0.14%)</title><rect x="22.2824%" y="901" width="0.1355%" height="15" fill="rgb(240,77,30)" fg:x="1316" fg:w="8"/><text x="22.3996%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.07%)</title><rect x="22.3502%" y="885" width="0.0677%" height="15" fill="rgb(231,5,3)" fg:x="1320" fg:w="4"/><text x="22.4673%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.07%)</title><rect x="22.3502%" y="869" width="0.0677%" height="15" fill="rgb(207,226,32)" fg:x="1320" fg:w="4"/><text x="22.4673%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.07%)</title><rect x="22.3502%" y="853" width="0.0677%" height="15" fill="rgb(222,207,47)" fg:x="1320" fg:w="4"/><text x="22.4673%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="22.3671%" y="837" width="0.0508%" height="15" fill="rgb(229,115,45)" fg:x="1321" fg:w="3"/><text x="22.4843%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.05%)</title><rect x="22.3671%" y="821" width="0.0508%" height="15" fill="rgb(224,191,6)" fg:x="1321" fg:w="3"/><text x="22.4843%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.05%)</title><rect x="22.3671%" y="805" width="0.0508%" height="15" fill="rgb(230,227,24)" fg:x="1321" fg:w="3"/><text x="22.4843%" y="815.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.05%)</title><rect x="22.3671%" y="789" width="0.0508%" height="15" fill="rgb(228,80,19)" fg:x="1321" fg:w="3"/><text x="22.4843%" y="799.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.05%)</title><rect x="22.3671%" y="773" width="0.0508%" height="15" fill="rgb(247,229,0)" fg:x="1321" fg:w="3"/><text x="22.4843%" y="783.50"></text></g><g><title>_int_realloc (2 samples, 0.03%)</title><rect x="22.3840%" y="757" width="0.0339%" height="15" fill="rgb(237,194,15)" fg:x="1322" fg:w="2"/><text x="22.5012%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.03%)</title><rect x="22.3840%" y="741" width="0.0339%" height="15" fill="rgb(219,203,20)" fg:x="1322" fg:w="2"/><text x="22.5012%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (143 samples, 2.42%)</title><rect x="29.7663%" y="789" width="2.4213%" height="15" fill="rgb(234,128,8)" fg:x="1758" fg:w="143"/><text x="29.8835%" y="799.50">alloc:..</text></g><g><title>core::ptr::read (143 samples, 2.42%)</title><rect x="29.7663%" y="773" width="2.4213%" height="15" fill="rgb(248,202,8)" fg:x="1758" fg:w="143"/><text x="29.8835%" y="783.50">core::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (136 samples, 2.30%)</title><rect x="32.1876%" y="789" width="2.3027%" height="15" fill="rgb(206,104,37)" fg:x="1901" fg:w="136"/><text x="32.3048%" y="799.50">core::..</text></g><g><title>core::cmp::PartialOrd::ge (136 samples, 2.30%)</title><rect x="32.1876%" y="773" width="2.3027%" height="15" fill="rgb(223,8,27)" fg:x="1901" fg:w="136"/><text x="32.3048%" y="783.50">core::..</text></g><g><title>&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell as core::cmp::PartialOrd&gt;::partial_cmp (136 samples, 2.30%)</title><rect x="32.1876%" y="757" width="2.3027%" height="15" fill="rgb(216,217,28)" fg:x="1901" fg:w="136"/><text x="32.3048%" y="767.50">&lt;fring..</text></g><g><title>&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell as core::cmp::Ord&gt;::cmp (136 samples, 2.30%)</title><rect x="32.1876%" y="741" width="2.3027%" height="15" fill="rgb(249,199,1)" fg:x="1901" fg:w="136"/><text x="32.3048%" y="751.50">&lt;fring..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (163 samples, 2.76%)</title><rect x="34.4903%" y="789" width="2.7599%" height="15" fill="rgb(240,85,17)" fg:x="2037" fg:w="163"/><text x="34.6075%" y="799.50">core::c..</text></g><g><title>core::cmp::PartialOrd::le (163 samples, 2.76%)</title><rect x="34.4903%" y="773" width="2.7599%" height="15" fill="rgb(206,108,45)" fg:x="2037" fg:w="163"/><text x="34.6075%" y="783.50">core::c..</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt;&gt;::from (1,028 samples, 17.41%)</title><rect x="22.4179%" y="853" width="17.4060%" height="15" fill="rgb(245,210,41)" fg:x="1324" fg:w="1028"/><text x="22.5351%" y="863.50">&lt;alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt; as core::c..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::rebuild (1,028 samples, 17.41%)</title><rect x="22.4179%" y="837" width="17.4060%" height="15" fill="rgb(206,13,37)" fg:x="1324" fg:w="1028"/><text x="22.5351%" y="847.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::rebuild</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down (922 samples, 15.61%)</title><rect x="24.2127%" y="821" width="15.6112%" height="15" fill="rgb(250,61,18)" fg:x="1430" fg:w="922"/><text x="24.3299%" y="831.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_down_range (922 samples, 15.61%)</title><rect x="24.2127%" y="805" width="15.6112%" height="15" fill="rgb(235,172,48)" fg:x="1430" fg:w="922"/><text x="24.3299%" y="815.50">alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (152 samples, 2.57%)</title><rect x="37.2503%" y="789" width="2.5737%" height="15" fill="rgb(249,201,17)" fg:x="2200" fg:w="152"/><text x="37.3674%" y="799.50">core::p..</text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (152 samples, 2.57%)</title><rect x="37.2503%" y="773" width="2.5737%" height="15" fill="rgb(219,208,6)" fg:x="2200" fg:w="152"/><text x="37.3674%" y="783.50">&lt;alloc:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (152 samples, 2.57%)</title><rect x="37.2503%" y="757" width="2.5737%" height="15" fill="rgb(248,31,23)" fg:x="2200" fg:w="152"/><text x="37.3674%" y="767.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.95%)</title><rect x="47.8158%" y="757" width="0.9482%" height="15" fill="rgb(245,15,42)" fg:x="2824" fg:w="56"/><text x="47.9330%" y="767.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (313 samples, 5.30%)</title><rect x="52.5059%" y="709" width="5.2997%" height="15" fill="rgb(222,217,39)" fg:x="3101" fg:w="313"/><text x="52.6231%" y="719.50">&lt;core::slice::ite..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (313 samples, 5.30%)</title><rect x="52.5059%" y="693" width="5.2997%" height="15" fill="rgb(210,219,27)" fg:x="3101" fg:w="313"/><text x="52.6231%" y="703.50">&lt;core::ptr::non_n..</text></g><g><title>&lt;alloc::collections::binary_heap::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (346 samples, 5.86%)</title><rect x="52.5059%" y="741" width="5.8584%" height="15" fill="rgb(252,166,36)" fg:x="3101" fg:w="346"/><text x="52.6231%" y="751.50">&lt;alloc::collections..</text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (346 samples, 5.86%)</title><rect x="52.5059%" y="725" width="5.8584%" height="15" fill="rgb(245,132,34)" fg:x="3101" fg:w="346"/><text x="52.6231%" y="735.50">&lt;alloc::vec::drain:..</text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.56%)</title><rect x="57.8056%" y="709" width="0.5588%" height="15" fill="rgb(236,54,3)" fg:x="3414" fg:w="33"/><text x="57.9228%" y="719.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (33 samples, 0.56%)</title><rect x="57.8056%" y="693" width="0.5588%" height="15" fill="rgb(241,173,43)" fg:x="3414" fg:w="33"/><text x="57.9228%" y="703.50"></text></g><g><title>core::ptr::read (33 samples, 0.56%)</title><rect x="57.8056%" y="677" width="0.5588%" height="15" fill="rgb(215,190,9)" fg:x="3414" fg:w="33"/><text x="57.9228%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (897 samples, 15.19%)</title><rect x="48.7640%" y="757" width="15.1879%" height="15" fill="rgb(242,101,16)" fg:x="2880" fg:w="897"/><text x="48.8812%" y="767.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::..</text></g><g><title>core::option::Option&lt;T&gt;::map (330 samples, 5.59%)</title><rect x="58.3644%" y="741" width="5.5875%" height="15" fill="rgb(223,190,21)" fg:x="3447" fg:w="330"/><text x="58.4816%" y="751.50">core::option::Opti..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (330 samples, 5.59%)</title><rect x="58.3644%" y="725" width="5.5875%" height="15" fill="rgb(215,228,25)" fg:x="3447" fg:w="330"/><text x="58.4816%" y="735.50">core::ops::functio..</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::replace::_{{closure}} (330 samples, 5.59%)</title><rect x="58.3644%" y="709" width="5.5875%" height="15" fill="rgb(225,36,22)" fg:x="3447" fg:w="330"/><text x="58.4816%" y="719.50">fringe_vs_astar::s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (258 samples, 4.37%)</title><rect x="63.9519%" y="757" width="4.3684%" height="15" fill="rgb(251,106,46)" fg:x="3777" fg:w="258"/><text x="64.0691%" y="767.50">alloc::vec::V..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,829 samples, 30.97%)</title><rect x="39.8239%" y="789" width="30.9685%" height="15" fill="rgb(208,90,1)" fg:x="2352" fg:w="1829"/><text x="39.9411%" y="799.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,829 samples, 30.97%)</title><rect x="39.8239%" y="773" width="30.9685%" height="15" fill="rgb(243,10,4)" fg:x="2352" fg:w="1829"/><text x="39.9411%" y="783.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (146 samples, 2.47%)</title><rect x="68.3204%" y="757" width="2.4721%" height="15" fill="rgb(212,137,27)" fg:x="4035" fg:w="146"/><text x="68.4375%" y="767.50">core::..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="70.7755%" y="741" width="0.0169%" height="15" fill="rgb(231,220,49)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="751.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="70.7755%" y="725" width="0.0169%" height="15" fill="rgb(237,96,20)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="735.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="70.7755%" y="709" width="0.0169%" height="15" fill="rgb(239,229,30)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="719.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="70.7755%" y="693" width="0.0169%" height="15" fill="rgb(219,65,33)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="703.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="70.7755%" y="677" width="0.0169%" height="15" fill="rgb(243,134,7)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="687.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="70.7755%" y="661" width="0.0169%" height="15" fill="rgb(216,177,54)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="671.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="70.7755%" y="645" width="0.0169%" height="15" fill="rgb(211,160,20)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="655.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="70.7755%" y="629" width="0.0169%" height="15" fill="rgb(239,85,39)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="639.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="70.7755%" y="613" width="0.0169%" height="15" fill="rgb(232,125,22)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="623.50"></text></g><g><title>trigger_load_balance (1 samples, 0.02%)</title><rect x="70.7755%" y="597" width="0.0169%" height="15" fill="rgb(244,57,34)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="607.50"></text></g><g><title>nohz_balancer_kick (1 samples, 0.02%)</title><rect x="70.7755%" y="581" width="0.0169%" height="15" fill="rgb(214,203,32)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="591.50"></text></g><g><title>nohz_balance_exit_idle (1 samples, 0.02%)</title><rect x="70.7755%" y="565" width="0.0169%" height="15" fill="rgb(207,58,43)" fg:x="4180" fg:w="1"/><text x="70.8927%" y="575.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.17%)</title><rect x="70.7924%" y="677" width="0.1693%" height="15" fill="rgb(215,193,15)" fg:x="4181" fg:w="10"/><text x="70.9096%" y="687.50"></text></g><g><title>_int_malloc (10 samples, 0.17%)</title><rect x="70.7924%" y="661" width="0.1693%" height="15" fill="rgb(232,15,44)" fg:x="4181" fg:w="10"/><text x="70.9096%" y="671.50"></text></g><g><title>unlink_chunk (2 samples, 0.03%)</title><rect x="70.9279%" y="645" width="0.0339%" height="15" fill="rgb(212,3,48)" fg:x="4189" fg:w="2"/><text x="71.0451%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="70.9617%" y="677" width="0.0169%" height="15" fill="rgb(218,128,7)" fg:x="4191" fg:w="1"/><text x="71.0789%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,869 samples, 48.58%)</title><rect x="22.4179%" y="885" width="48.5777%" height="15" fill="rgb(226,216,39)" fg:x="1324" fg:w="2869"/><text x="22.5351%" y="895.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,869 samples, 48.58%)</title><rect x="22.4179%" y="869" width="48.5777%" height="15" fill="rgb(243,47,51)" fg:x="1324" fg:w="2869"/><text x="22.5351%" y="879.50">&lt;alloc::collections::binary_heap::BinaryHeap&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,841 samples, 31.17%)</title><rect x="39.8239%" y="853" width="31.1717%" height="15" fill="rgb(241,183,40)" fg:x="2352" fg:w="1841"/><text x="39.9411%" y="863.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,841 samples, 31.17%)</title><rect x="39.8239%" y="837" width="31.1717%" height="15" fill="rgb(231,217,32)" fg:x="2352" fg:w="1841"/><text x="39.9411%" y="847.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,841 samples, 31.17%)</title><rect x="39.8239%" y="821" width="31.1717%" height="15" fill="rgb(229,61,38)" fg:x="2352" fg:w="1841"/><text x="39.9411%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,841 samples, 31.17%)</title><rect x="39.8239%" y="805" width="31.1717%" height="15" fill="rgb(225,210,5)" fg:x="2352" fg:w="1841"/><text x="39.9411%" y="815.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.20%)</title><rect x="70.7924%" y="789" width="0.2032%" height="15" fill="rgb(231,79,45)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.20%)</title><rect x="70.7924%" y="773" width="0.2032%" height="15" fill="rgb(224,100,7)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.20%)</title><rect x="70.7924%" y="757" width="0.2032%" height="15" fill="rgb(241,198,18)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (12 samples, 0.20%)</title><rect x="70.7924%" y="741" width="0.2032%" height="15" fill="rgb(252,97,53)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.20%)</title><rect x="70.7924%" y="725" width="0.2032%" height="15" fill="rgb(220,88,7)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.20%)</title><rect x="70.7924%" y="709" width="0.2032%" height="15" fill="rgb(213,176,14)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="719.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.20%)</title><rect x="70.7924%" y="693" width="0.2032%" height="15" fill="rgb(246,73,7)" fg:x="4181" fg:w="12"/><text x="70.9096%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="70.9787%" y="677" width="0.0169%" height="15" fill="rgb(245,64,36)" fg:x="4192" fg:w="1"/><text x="71.0959%" y="687.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="70.9956%" y="789" width="0.0677%" height="15" fill="rgb(245,80,10)" fg:x="4193" fg:w="4"/><text x="71.1128%" y="799.50"></text></g><g><title>_int_free (4 samples, 0.07%)</title><rect x="70.9956%" y="773" width="0.0677%" height="15" fill="rgb(232,107,50)" fg:x="4193" fg:w="4"/><text x="71.1128%" y="783.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (3,977 samples, 67.34%)</title><rect x="3.7420%" y="965" width="67.3383%" height="15" fill="rgb(253,3,0)" fg:x="221" fg:w="3977"/><text x="3.8591%" y="975.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (3,675 samples, 62.22%)</title><rect x="8.8554%" y="949" width="62.2249%" height="15" fill="rgb(212,99,53)" fg:x="523" fg:w="3675"/><text x="8.9726%" y="959.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::algorithms::astar::AStar::solve (3,045 samples, 51.56%)</title><rect x="19.5225%" y="933" width="51.5577%" height="15" fill="rgb(249,111,54)" fg:x="1153" fg:w="3045"/><text x="19.6397%" y="943.50">fringe_vs_astar::algorithms::astar::AStar::solve</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::push (2,899 samples, 49.09%)</title><rect x="21.9946%" y="917" width="49.0857%" height="15" fill="rgb(249,55,30)" fg:x="1299" fg:w="2899"/><text x="22.1118%" y="927.50">fringe_vs_astar::structures::frontier::Frontier::push</text></g><g><title>fringe_vs_astar::structures::frontier::Frontier::replace (2,874 samples, 48.66%)</title><rect x="22.4179%" y="901" width="48.6624%" height="15" fill="rgb(237,47,42)" fg:x="1324" fg:w="2874"/><text x="22.5351%" y="911.50">fringe_vs_astar::structures::frontier::Frontier::replace</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::BinaryHeap&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (5 samples, 0.08%)</title><rect x="70.9956%" y="885" width="0.0847%" height="15" fill="rgb(211,20,18)" fg:x="4193" fg:w="5"/><text x="71.1128%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (5 samples, 0.08%)</title><rect x="70.9956%" y="869" width="0.0847%" height="15" fill="rgb(231,203,46)" fg:x="4193" fg:w="5"/><text x="71.1128%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::structures::weighted_cell::WeightedCell&gt;&gt; (5 samples, 0.08%)</title><rect x="70.9956%" y="853" width="0.0847%" height="15" fill="rgb(237,142,3)" fg:x="4193" fg:w="5"/><text x="71.1128%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="70.9956%" y="837" width="0.0847%" height="15" fill="rgb(241,107,1)" fg:x="4193" fg:w="5"/><text x="71.1128%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.08%)</title><rect x="70.9956%" y="821" width="0.0847%" height="15" fill="rgb(229,83,13)" fg:x="4193" fg:w="5"/><text x="71.1128%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.08%)</title><rect x="70.9956%" y="805" width="0.0847%" height="15" fill="rgb(241,91,40)" fg:x="4193" fg:w="5"/><text x="71.1128%" y="815.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="71.0633%" y="789" width="0.0169%" height="15" fill="rgb(225,3,45)" fg:x="4197" fg:w="1"/><text x="71.1805%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.02%)</title><rect x="71.4189%" y="933" width="0.0169%" height="15" fill="rgb(244,223,14)" fg:x="4218" fg:w="1"/><text x="71.5361%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="71.4189%" y="917" width="0.0169%" height="15" fill="rgb(224,124,37)" fg:x="4218" fg:w="1"/><text x="71.5361%" y="927.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="72.4009%" y="885" width="0.0169%" height="15" fill="rgb(251,171,30)" fg:x="4276" fg:w="1"/><text x="72.5181%" y="895.50"></text></g><g><title>access_error (1 samples, 0.02%)</title><rect x="72.4179%" y="869" width="0.0169%" height="15" fill="rgb(236,46,54)" fg:x="4277" fg:w="1"/><text x="72.5351%" y="879.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="72.4348%" y="853" width="0.0169%" height="15" fill="rgb(245,213,5)" fg:x="4278" fg:w="1"/><text x="72.5520%" y="863.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="72.5872%" y="805" width="0.0169%" height="15" fill="rgb(230,144,27)" fg:x="4287" fg:w="1"/><text x="72.7044%" y="815.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="72.6380%" y="773" width="0.0169%" height="15" fill="rgb(220,86,6)" fg:x="4290" fg:w="1"/><text x="72.7552%" y="783.50"></text></g><g><title>__folio_throttle_swaprate (4 samples, 0.07%)</title><rect x="72.6211%" y="789" width="0.0677%" height="15" fill="rgb(240,20,13)" fg:x="4289" fg:w="4"/><text x="72.7383%" y="799.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.03%)</title><rect x="72.6549%" y="773" width="0.0339%" height="15" fill="rgb(217,89,34)" fg:x="4291" fg:w="2"/><text x="72.7721%" y="783.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="72.7565%" y="773" width="0.0169%" height="15" fill="rgb(229,13,5)" fg:x="4297" fg:w="1"/><text x="72.8737%" y="783.50"></text></g><g><title>__rcu_read_unlock (25 samples, 0.42%)</title><rect x="72.7735%" y="773" width="0.4233%" height="15" fill="rgb(244,67,35)" fg:x="4298" fg:w="25"/><text x="72.8906%" y="783.50"></text></g><g><title>__count_memcg_events (8 samples, 0.14%)</title><rect x="73.2306%" y="757" width="0.1355%" height="15" fill="rgb(221,40,2)" fg:x="4325" fg:w="8"/><text x="73.3478%" y="767.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="73.3322%" y="741" width="0.0339%" height="15" fill="rgb(237,157,21)" fg:x="4331" fg:w="2"/><text x="73.4494%" y="751.50"></text></g><g><title>charge_memcg (19 samples, 0.32%)</title><rect x="73.1967%" y="773" width="0.3217%" height="15" fill="rgb(222,94,11)" fg:x="4323" fg:w="19"/><text x="73.3139%" y="783.50"></text></g><g><title>try_charge_memcg (9 samples, 0.15%)</title><rect x="73.3661%" y="757" width="0.1524%" height="15" fill="rgb(249,113,6)" fg:x="4333" fg:w="9"/><text x="73.4833%" y="767.50"></text></g><g><title>consume_stock (2 samples, 0.03%)</title><rect x="73.4846%" y="741" width="0.0339%" height="15" fill="rgb(238,137,36)" fg:x="4340" fg:w="2"/><text x="73.6018%" y="751.50"></text></g><g><title>get_mem_cgroup_from_mm (13 samples, 0.22%)</title><rect x="73.5185%" y="773" width="0.2201%" height="15" fill="rgb(210,102,26)" fg:x="4342" fg:w="13"/><text x="73.6356%" y="783.50"></text></g><g><title>__mem_cgroup_charge (63 samples, 1.07%)</title><rect x="72.6888%" y="789" width="1.0667%" height="15" fill="rgb(218,30,30)" fg:x="4293" fg:w="63"/><text x="72.8060%" y="799.50">_..</text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="73.7386%" y="773" width="0.0169%" height="15" fill="rgb(214,67,26)" fg:x="4355" fg:w="1"/><text x="73.8558%" y="783.50"></text></g><g><title>__pte_alloc (1 samples, 0.02%)</title><rect x="73.7555%" y="789" width="0.0169%" height="15" fill="rgb(251,9,53)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="799.50"></text></g><g><title>pte_alloc_one (1 samples, 0.02%)</title><rect x="73.7555%" y="773" width="0.0169%" height="15" fill="rgb(228,204,25)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="783.50"></text></g><g><title>alloc_pages (1 samples, 0.02%)</title><rect x="73.7555%" y="757" width="0.0169%" height="15" fill="rgb(207,153,8)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="767.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="73.7555%" y="741" width="0.0169%" height="15" fill="rgb(242,9,16)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="751.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="73.7555%" y="725" width="0.0169%" height="15" fill="rgb(217,211,10)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="735.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="73.7555%" y="709" width="0.0169%" height="15" fill="rgb(219,228,52)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="719.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="73.7555%" y="693" width="0.0169%" height="15" fill="rgb(231,92,29)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="703.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="73.7555%" y="677" width="0.0169%" height="15" fill="rgb(232,8,23)" fg:x="4356" fg:w="1"/><text x="73.8727%" y="687.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.02%)</title><rect x="73.7724%" y="789" width="0.0169%" height="15" fill="rgb(216,211,34)" fg:x="4357" fg:w="1"/><text x="73.8896%" y="799.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="73.7724%" y="773" width="0.0169%" height="15" fill="rgb(236,151,0)" fg:x="4357" fg:w="1"/><text x="73.8896%" y="783.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="73.7894%" y="789" width="0.0169%" height="15" fill="rgb(209,168,3)" fg:x="4358" fg:w="1"/><text x="73.9066%" y="799.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="73.8063%" y="789" width="0.0339%" height="15" fill="rgb(208,129,28)" fg:x="4359" fg:w="2"/><text x="73.9235%" y="799.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="73.9756%" y="709" width="0.0339%" height="15" fill="rgb(229,78,22)" fg:x="4369" fg:w="2"/><text x="74.0928%" y="719.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="73.9756%" y="693" width="0.0339%" height="15" fill="rgb(228,187,13)" fg:x="4369" fg:w="2"/><text x="74.0928%" y="703.50"></text></g><g><title>lru_add_fn (7 samples, 0.12%)</title><rect x="73.9079%" y="741" width="0.1185%" height="15" fill="rgb(240,119,24)" fg:x="4365" fg:w="7"/><text x="74.0251%" y="751.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.10%)</title><rect x="73.9248%" y="725" width="0.1016%" height="15" fill="rgb(209,194,42)" fg:x="4366" fg:w="6"/><text x="74.0420%" y="735.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="74.0095%" y="709" width="0.0169%" height="15" fill="rgb(247,200,46)" fg:x="4371" fg:w="1"/><text x="74.1267%" y="719.50"></text></g><g><title>folio_add_lru_vma (14 samples, 0.24%)</title><rect x="73.8402%" y="789" width="0.2370%" height="15" fill="rgb(218,76,16)" fg:x="4361" fg:w="14"/><text x="73.9574%" y="799.50"></text></g><g><title>folio_add_lru (14 samples, 0.24%)</title><rect x="73.8402%" y="773" width="0.2370%" height="15" fill="rgb(225,21,48)" fg:x="4361" fg:w="14"/><text x="73.9574%" y="783.50"></text></g><g><title>folio_batch_move_lru (10 samples, 0.17%)</title><rect x="73.9079%" y="757" width="0.1693%" height="15" fill="rgb(239,223,50)" fg:x="4365" fg:w="10"/><text x="74.0251%" y="767.50"></text></g><g><title>release_pages (3 samples, 0.05%)</title><rect x="74.0264%" y="741" width="0.0508%" height="15" fill="rgb(244,45,21)" fg:x="4372" fg:w="3"/><text x="74.1436%" y="751.50"></text></g><g><title>folio_add_new_anon_rmap (2 samples, 0.03%)</title><rect x="74.0772%" y="789" width="0.0339%" height="15" fill="rgb(232,33,43)" fg:x="4375" fg:w="2"/><text x="74.1944%" y="799.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.03%)</title><rect x="74.0772%" y="773" width="0.0339%" height="15" fill="rgb(209,8,3)" fg:x="4375" fg:w="2"/><text x="74.1944%" y="783.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="74.0772%" y="757" width="0.0339%" height="15" fill="rgb(214,25,53)" fg:x="4375" fg:w="2"/><text x="74.1944%" y="767.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="74.0772%" y="741" width="0.0339%" height="15" fill="rgb(254,186,54)" fg:x="4375" fg:w="2"/><text x="74.1944%" y="751.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="74.0941%" y="725" width="0.0169%" height="15" fill="rgb(208,174,49)" fg:x="4376" fg:w="1"/><text x="74.2113%" y="735.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="74.1111%" y="789" width="0.0169%" height="15" fill="rgb(233,191,51)" fg:x="4377" fg:w="1"/><text x="74.2283%" y="799.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="74.1111%" y="773" width="0.0169%" height="15" fill="rgb(222,134,10)" fg:x="4377" fg:w="1"/><text x="74.2283%" y="783.50"></text></g><g><title>policy_nodemask (1 samples, 0.02%)</title><rect x="74.1280%" y="789" width="0.0169%" height="15" fill="rgb(230,226,20)" fg:x="4378" fg:w="1"/><text x="74.2452%" y="799.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.02%)</title><rect x="74.2973%" y="725" width="0.0169%" height="15" fill="rgb(251,111,25)" fg:x="4388" fg:w="1"/><text x="74.4145%" y="735.50"></text></g><g><title>post_alloc_hook (2 samples, 0.03%)</title><rect x="74.3143%" y="725" width="0.0339%" height="15" fill="rgb(224,40,46)" fg:x="4389" fg:w="2"/><text x="74.4314%" y="735.50"></text></g><g><title>get_page_from_freelist (18 samples, 0.30%)</title><rect x="74.2635%" y="741" width="0.3048%" height="15" fill="rgb(236,108,47)" fg:x="4386" fg:w="18"/><text x="74.3806%" y="751.50"></text></g><g><title>rmqueue (13 samples, 0.22%)</title><rect x="74.3481%" y="725" width="0.2201%" height="15" fill="rgb(234,93,0)" fg:x="4391" fg:w="13"/><text x="74.4653%" y="735.50"></text></g><g><title>__rmqueue_pcplist (11 samples, 0.19%)</title><rect x="74.3820%" y="709" width="0.1863%" height="15" fill="rgb(224,213,32)" fg:x="4393" fg:w="11"/><text x="74.4992%" y="719.50"></text></g><g><title>rmqueue_bulk (10 samples, 0.17%)</title><rect x="74.3989%" y="693" width="0.1693%" height="15" fill="rgb(251,11,48)" fg:x="4394" fg:w="10"/><text x="74.5161%" y="703.50"></text></g><g><title>__alloc_pages (21 samples, 0.36%)</title><rect x="74.2296%" y="757" width="0.3556%" height="15" fill="rgb(236,173,5)" fg:x="4384" fg:w="21"/><text x="74.3468%" y="767.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="74.5682%" y="741" width="0.0169%" height="15" fill="rgb(230,95,12)" fg:x="4404" fg:w="1"/><text x="74.6854%" y="751.50"></text></g><g><title>__cond_resched (1 samples, 0.02%)</title><rect x="74.5852%" y="757" width="0.0169%" height="15" fill="rgb(232,209,1)" fg:x="4405" fg:w="1"/><text x="74.7024%" y="767.50"></text></g><g><title>do_anonymous_page (119 samples, 2.01%)</title><rect x="72.6041%" y="805" width="2.0149%" height="15" fill="rgb(232,6,1)" fg:x="4288" fg:w="119"/><text x="72.7213%" y="815.50">do_an..</text></g><g><title>vma_alloc_folio (28 samples, 0.47%)</title><rect x="74.1449%" y="789" width="0.4741%" height="15" fill="rgb(210,224,50)" fg:x="4379" fg:w="28"/><text x="74.2621%" y="799.50"></text></g><g><title>__folio_alloc (23 samples, 0.39%)</title><rect x="74.2296%" y="773" width="0.3894%" height="15" fill="rgb(228,127,35)" fg:x="4384" fg:w="23"/><text x="74.3468%" y="783.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="74.6021%" y="757" width="0.0169%" height="15" fill="rgb(245,102,45)" fg:x="4406" fg:w="1"/><text x="74.7193%" y="767.50"></text></g><g><title>__handle_mm_fault (128 samples, 2.17%)</title><rect x="72.4687%" y="837" width="2.1673%" height="15" fill="rgb(214,1,49)" fg:x="4280" fg:w="128"/><text x="72.5859%" y="847.50">__han..</text></g><g><title>handle_pte_fault (121 samples, 2.05%)</title><rect x="72.5872%" y="821" width="2.0488%" height="15" fill="rgb(226,163,40)" fg:x="4287" fg:w="121"/><text x="72.7044%" y="831.50">handl..</text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="74.6190%" y="805" width="0.0169%" height="15" fill="rgb(239,212,28)" fg:x="4407" fg:w="1"/><text x="74.7362%" y="815.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="74.6190%" y="789" width="0.0169%" height="15" fill="rgb(220,20,13)" fg:x="4407" fg:w="1"/><text x="74.7362%" y="799.50"></text></g><g><title>count_memcg_events.constprop.0 (2 samples, 0.03%)</title><rect x="74.6360%" y="837" width="0.0339%" height="15" fill="rgb(210,164,35)" fg:x="4408" fg:w="2"/><text x="74.7532%" y="847.50"></text></g><g><title>__count_memcg_events (2 samples, 0.03%)</title><rect x="74.6360%" y="821" width="0.0339%" height="15" fill="rgb(248,109,41)" fg:x="4408" fg:w="2"/><text x="74.7532%" y="831.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="74.6529%" y="805" width="0.0169%" height="15" fill="rgb(238,23,50)" fg:x="4409" fg:w="1"/><text x="74.7701%" y="815.50"></text></g><g><title>handle_mm_fault (132 samples, 2.24%)</title><rect x="72.4517%" y="853" width="2.2350%" height="15" fill="rgb(211,48,49)" fg:x="4279" fg:w="132"/><text x="72.5689%" y="863.50">handle..</text></g><g><title>pud_val (1 samples, 0.02%)</title><rect x="74.6698%" y="837" width="0.0169%" height="15" fill="rgb(223,36,21)" fg:x="4410" fg:w="1"/><text x="74.7870%" y="847.50"></text></g><g><title>do_user_addr_fault (137 samples, 2.32%)</title><rect x="72.4348%" y="869" width="2.3197%" height="15" fill="rgb(207,123,46)" fg:x="4278" fg:w="137"/><text x="72.5520%" y="879.50">do_use..</text></g><g><title>lock_vma_under_rcu (4 samples, 0.07%)</title><rect x="74.6868%" y="853" width="0.0677%" height="15" fill="rgb(240,218,32)" fg:x="4411" fg:w="4"/><text x="74.8039%" y="863.50"></text></g><g><title>mas_walk (3 samples, 0.05%)</title><rect x="74.7037%" y="837" width="0.0508%" height="15" fill="rgb(252,5,43)" fg:x="4412" fg:w="3"/><text x="74.8209%" y="847.50"></text></g><g><title>mtree_range_walk (3 samples, 0.05%)</title><rect x="74.7037%" y="821" width="0.0508%" height="15" fill="rgb(252,84,19)" fg:x="4412" fg:w="3"/><text x="74.8209%" y="831.50"></text></g><g><title>asm_exc_page_fault (140 samples, 2.37%)</title><rect x="72.4009%" y="901" width="2.3705%" height="15" fill="rgb(243,152,39)" fg:x="4276" fg:w="140"/><text x="72.5181%" y="911.50">asm_ex..</text></g><g><title>exc_page_fault (139 samples, 2.35%)</title><rect x="72.4179%" y="885" width="2.3535%" height="15" fill="rgb(234,160,15)" fg:x="4277" fg:w="139"/><text x="72.5351%" y="895.50">exc_pa..</text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="74.7545%" y="869" width="0.0169%" height="15" fill="rgb(237,34,20)" fg:x="4415" fg:w="1"/><text x="74.8717%" y="879.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="74.7545%" y="853" width="0.0169%" height="15" fill="rgb(229,97,13)" fg:x="4415" fg:w="1"/><text x="74.8717%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="74.7545%" y="837" width="0.0169%" height="15" fill="rgb(234,71,50)" fg:x="4415" fg:w="1"/><text x="74.8717%" y="847.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="74.7714%" y="901" width="0.0169%" height="15" fill="rgb(253,155,4)" fg:x="4416" fg:w="1"/><text x="74.8886%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (206 samples, 3.49%)</title><rect x="71.4358%" y="933" width="3.4880%" height="15" fill="rgb(222,185,37)" fg:x="4219" fg:w="206"/><text x="71.5530%" y="943.50">alloc::vec..</text></g><g><title>core::ptr::write (178 samples, 3.01%)</title><rect x="71.9099%" y="917" width="3.0139%" height="15" fill="rgb(251,177,13)" fg:x="4247" fg:w="178"/><text x="72.0271%" y="927.50">core::pt..</text></g><g><title>sync_regs (8 samples, 0.14%)</title><rect x="74.7884%" y="901" width="0.1355%" height="15" fill="rgb(250,179,40)" fg:x="4417" fg:w="8"/><text x="74.9055%" y="911.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.12%)</title><rect x="74.9238%" y="933" width="0.1185%" height="15" fill="rgb(242,44,2)" fg:x="4425" fg:w="7"/><text x="75.0410%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.12%)</title><rect x="74.9238%" y="917" width="0.1185%" height="15" fill="rgb(216,177,13)" fg:x="4425" fg:w="7"/><text x="75.0410%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.12%)</title><rect x="74.9238%" y="901" width="0.1185%" height="15" fill="rgb(216,106,43)" fg:x="4425" fg:w="7"/><text x="75.0410%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.05%)</title><rect x="75.2286%" y="837" width="0.0508%" height="15" fill="rgb(216,183,2)" fg:x="4443" fg:w="3"/><text x="75.3458%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.05%)</title><rect x="75.2286%" y="821" width="0.0508%" height="15" fill="rgb(249,75,3)" fg:x="4443" fg:w="3"/><text x="75.3458%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="75.2455%" y="805" width="0.0339%" height="15" fill="rgb(219,67,39)" fg:x="4444" fg:w="2"/><text x="75.3627%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="75.2455%" y="789" width="0.0339%" height="15" fill="rgb(253,228,2)" fg:x="4444" fg:w="2"/><text x="75.3627%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="75.2455%" y="773" width="0.0339%" height="15" fill="rgb(235,138,27)" fg:x="4444" fg:w="2"/><text x="75.3627%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="75.2794%" y="837" width="0.0339%" height="15" fill="rgb(236,97,51)" fg:x="4446" fg:w="2"/><text x="75.3966%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="75.2794%" y="821" width="0.0339%" height="15" fill="rgb(240,80,30)" fg:x="4446" fg:w="2"/><text x="75.3966%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.44%)</title><rect x="75.3132%" y="773" width="0.4402%" height="15" fill="rgb(230,178,19)" fg:x="4448" fg:w="26"/><text x="75.4304%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.24%)</title><rect x="75.5164%" y="757" width="0.2370%" height="15" fill="rgb(210,190,27)" fg:x="4460" fg:w="14"/><text x="75.6336%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.49%)</title><rect x="75.3132%" y="789" width="0.4910%" height="15" fill="rgb(222,107,31)" fg:x="4448" fg:w="29"/><text x="75.4304%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.05%)</title><rect x="75.7535%" y="773" width="0.0508%" height="15" fill="rgb(216,127,34)" fg:x="4474" fg:w="3"/><text x="75.8707%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect x="75.8043%" y="773" width="0.0169%" height="15" fill="rgb(234,116,52)" fg:x="4477" fg:w="1"/><text x="75.9215%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.02%)</title><rect x="75.8043%" y="757" width="0.0169%" height="15" fill="rgb(222,124,15)" fg:x="4477" fg:w="1"/><text x="75.9215%" y="767.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="75.8043%" y="741" width="0.0169%" height="15" fill="rgb(231,179,28)" fg:x="4477" fg:w="1"/><text x="75.9215%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (18 samples, 0.30%)</title><rect x="75.8043%" y="789" width="0.3048%" height="15" fill="rgb(226,93,45)" fg:x="4477" fg:w="18"/><text x="75.9215%" y="799.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (17 samples, 0.29%)</title><rect x="75.8212%" y="773" width="0.2878%" height="15" fill="rgb(215,8,51)" fg:x="4478" fg:w="17"/><text x="75.9384%" y="783.50"></text></g><g><title>fringe_vs_astar::xy_to_index (17 samples, 0.29%)</title><rect x="75.8212%" y="757" width="0.2878%" height="15" fill="rgb(223,106,5)" fg:x="4478" fg:w="17"/><text x="75.9384%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (57 samples, 0.97%)</title><rect x="75.1609%" y="869" width="0.9651%" height="15" fill="rgb(250,191,5)" fg:x="4439" fg:w="57"/><text x="75.2780%" y="879.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (57 samples, 0.97%)</title><rect x="75.1609%" y="853" width="0.9651%" height="15" fill="rgb(242,132,44)" fg:x="4439" fg:w="57"/><text x="75.2780%" y="863.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (48 samples, 0.81%)</title><rect x="75.3132%" y="837" width="0.8127%" height="15" fill="rgb(251,152,29)" fg:x="4448" fg:w="48"/><text x="75.4304%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48 samples, 0.81%)</title><rect x="75.3132%" y="821" width="0.8127%" height="15" fill="rgb(218,179,5)" fg:x="4448" fg:w="48"/><text x="75.4304%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 0.81%)</title><rect x="75.3132%" y="805" width="0.8127%" height="15" fill="rgb(227,67,19)" fg:x="4448" fg:w="48"/><text x="75.4304%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (1 samples, 0.02%)</title><rect x="76.1090%" y="789" width="0.0169%" height="15" fill="rgb(233,119,31)" fg:x="4495" fg:w="1"/><text x="76.2262%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="76.1090%" y="773" width="0.0169%" height="15" fill="rgb(241,120,22)" fg:x="4495" fg:w="1"/><text x="76.2262%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="76.1090%" y="757" width="0.0169%" height="15" fill="rgb(224,102,30)" fg:x="4495" fg:w="1"/><text x="76.2262%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="76.1090%" y="741" width="0.0169%" height="15" fill="rgb(210,164,37)" fg:x="4495" fg:w="1"/><text x="76.2262%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="76.1260%" y="869" width="0.0169%" height="15" fill="rgb(226,191,16)" fg:x="4496" fg:w="1"/><text x="76.2432%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="76.1260%" y="853" width="0.0169%" height="15" fill="rgb(214,40,45)" fg:x="4496" fg:w="1"/><text x="76.2432%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="76.1260%" y="837" width="0.0169%" height="15" fill="rgb(244,29,26)" fg:x="4496" fg:w="1"/><text x="76.2432%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.02%)</title><rect x="76.1260%" y="821" width="0.0169%" height="15" fill="rgb(216,16,5)" fg:x="4496" fg:w="1"/><text x="76.2432%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.02%)</title><rect x="76.1260%" y="805" width="0.0169%" height="15" fill="rgb(249,76,35)" fg:x="4496" fg:w="1"/><text x="76.2432%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="76.2106%" y="821" width="0.0508%" height="15" fill="rgb(207,11,44)" fg:x="4501" fg:w="3"/><text x="76.3278%" y="831.50"></text></g><g><title>__irqentry_text_end (2 samples, 0.03%)</title><rect x="77.8700%" y="725" width="0.0339%" height="15" fill="rgb(228,190,49)" fg:x="4599" fg:w="2"/><text x="77.9872%" y="735.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="77.9038%" y="709" width="0.0169%" height="15" fill="rgb(214,173,12)" fg:x="4601" fg:w="1"/><text x="78.0210%" y="719.50"></text></g><g><title>access_error (1 samples, 0.02%)</title><rect x="77.9377%" y="693" width="0.0169%" height="15" fill="rgb(218,26,35)" fg:x="4603" fg:w="1"/><text x="78.0549%" y="703.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="77.9716%" y="677" width="0.0169%" height="15" fill="rgb(220,200,19)" fg:x="4605" fg:w="1"/><text x="78.0887%" y="687.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="77.9885%" y="677" width="0.0169%" height="15" fill="rgb(239,95,49)" fg:x="4606" fg:w="1"/><text x="78.1057%" y="687.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="78.1917%" y="629" width="0.0169%" height="15" fill="rgb(235,85,53)" fg:x="4618" fg:w="1"/><text x="78.3089%" y="639.50"></text></g><g><title>__folio_throttle_swaprate (4 samples, 0.07%)</title><rect x="78.2425%" y="613" width="0.0677%" height="15" fill="rgb(233,133,31)" fg:x="4621" fg:w="4"/><text x="78.3597%" y="623.50"></text></g><g><title>blk_cgroup_congested (3 samples, 0.05%)</title><rect x="78.2594%" y="597" width="0.0508%" height="15" fill="rgb(218,25,20)" fg:x="4622" fg:w="3"/><text x="78.3766%" y="607.50"></text></g><g><title>__get_vma_policy (1 samples, 0.02%)</title><rect x="78.3102%" y="613" width="0.0169%" height="15" fill="rgb(252,210,38)" fg:x="4625" fg:w="1"/><text x="78.4274%" y="623.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.05%)</title><rect x="78.4456%" y="597" width="0.0508%" height="15" fill="rgb(242,134,21)" fg:x="4633" fg:w="3"/><text x="78.5628%" y="607.50"></text></g><g><title>__rcu_read_unlock (27 samples, 0.46%)</title><rect x="78.4964%" y="597" width="0.4572%" height="15" fill="rgb(213,28,48)" fg:x="4636" fg:w="27"/><text x="78.6136%" y="607.50"></text></g><g><title>__count_memcg_events (6 samples, 0.10%)</title><rect x="79.0721%" y="581" width="0.1016%" height="15" fill="rgb(250,196,2)" fg:x="4670" fg:w="6"/><text x="79.1893%" y="591.50"></text></g><g><title>cgroup_rstat_updated (3 samples, 0.05%)</title><rect x="79.1229%" y="565" width="0.0508%" height="15" fill="rgb(227,5,17)" fg:x="4673" fg:w="3"/><text x="79.2401%" y="575.50"></text></g><g><title>consume_stock (1 samples, 0.02%)</title><rect x="79.1737%" y="581" width="0.0169%" height="15" fill="rgb(221,226,24)" fg:x="4676" fg:w="1"/><text x="79.2909%" y="591.50"></text></g><g><title>memcg_check_events (1 samples, 0.02%)</title><rect x="79.1907%" y="581" width="0.0169%" height="15" fill="rgb(211,5,48)" fg:x="4677" fg:w="1"/><text x="79.3078%" y="591.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="79.2076%" y="581" width="0.0169%" height="15" fill="rgb(219,150,6)" fg:x="4678" fg:w="1"/><text x="79.3248%" y="591.50"></text></g><g><title>consume_stock (1 samples, 0.02%)</title><rect x="79.3938%" y="565" width="0.0169%" height="15" fill="rgb(251,46,16)" fg:x="4689" fg:w="1"/><text x="79.5110%" y="575.50"></text></g><g><title>charge_memcg (29 samples, 0.49%)</title><rect x="78.9536%" y="597" width="0.4910%" height="15" fill="rgb(220,204,40)" fg:x="4663" fg:w="29"/><text x="79.0708%" y="607.50"></text></g><g><title>try_charge_memcg (13 samples, 0.22%)</title><rect x="79.2245%" y="581" width="0.2201%" height="15" fill="rgb(211,85,2)" fg:x="4679" fg:w="13"/><text x="79.3417%" y="591.50"></text></g><g><title>page_counter_try_charge (2 samples, 0.03%)</title><rect x="79.4108%" y="565" width="0.0339%" height="15" fill="rgb(229,17,7)" fg:x="4690" fg:w="2"/><text x="79.5280%" y="575.50"></text></g><g><title>__mem_cgroup_charge (76 samples, 1.29%)</title><rect x="78.3271%" y="613" width="1.2868%" height="15" fill="rgb(239,72,28)" fg:x="4626" fg:w="76"/><text x="78.4443%" y="623.50">__..</text></g><g><title>get_mem_cgroup_from_mm (10 samples, 0.17%)</title><rect x="79.4446%" y="597" width="0.1693%" height="15" fill="rgb(230,47,54)" fg:x="4692" fg:w="10"/><text x="79.5618%" y="607.50"></text></g><g><title>__pte_offset_map_lock (5 samples, 0.08%)</title><rect x="79.6140%" y="613" width="0.0847%" height="15" fill="rgb(214,50,8)" fg:x="4702" fg:w="5"/><text x="79.7311%" y="623.50"></text></g><g><title>__pte_offset_map (3 samples, 0.05%)</title><rect x="79.6478%" y="597" width="0.0508%" height="15" fill="rgb(216,198,43)" fg:x="4704" fg:w="3"/><text x="79.7650%" y="607.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="79.6986%" y="613" width="0.0169%" height="15" fill="rgb(234,20,35)" fg:x="4707" fg:w="1"/><text x="79.8158%" y="623.50"></text></g><g><title>folio_mapping (1 samples, 0.02%)</title><rect x="79.8849%" y="549" width="0.0169%" height="15" fill="rgb(254,45,19)" fg:x="4718" fg:w="1"/><text x="80.0021%" y="559.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="80.0034%" y="533" width="0.0339%" height="15" fill="rgb(219,14,44)" fg:x="4725" fg:w="2"/><text x="80.1206%" y="543.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.03%)</title><rect x="80.0034%" y="517" width="0.0339%" height="15" fill="rgb(217,220,26)" fg:x="4725" fg:w="2"/><text x="80.1206%" y="527.50"></text></g><g><title>lru_add_fn (15 samples, 0.25%)</title><rect x="79.8002%" y="565" width="0.2540%" height="15" fill="rgb(213,158,28)" fg:x="4713" fg:w="15"/><text x="79.9174%" y="575.50"></text></g><g><title>lru_gen_add_folio (9 samples, 0.15%)</title><rect x="79.9018%" y="549" width="0.1524%" height="15" fill="rgb(252,51,52)" fg:x="4719" fg:w="9"/><text x="80.0190%" y="559.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="80.0373%" y="533" width="0.0169%" height="15" fill="rgb(246,89,16)" fg:x="4727" fg:w="1"/><text x="80.1544%" y="543.50"></text></g><g><title>folio_batch_move_lru (18 samples, 0.30%)</title><rect x="79.7833%" y="581" width="0.3048%" height="15" fill="rgb(216,158,49)" fg:x="4712" fg:w="18"/><text x="79.9005%" y="591.50"></text></g><g><title>release_pages (2 samples, 0.03%)</title><rect x="80.0542%" y="565" width="0.0339%" height="15" fill="rgb(236,107,19)" fg:x="4728" fg:w="2"/><text x="80.1714%" y="575.50"></text></g><g><title>folio_add_lru_vma (23 samples, 0.39%)</title><rect x="79.7155%" y="613" width="0.3894%" height="15" fill="rgb(228,185,30)" fg:x="4708" fg:w="23"/><text x="79.8327%" y="623.50"></text></g><g><title>folio_add_lru (23 samples, 0.39%)</title><rect x="79.7155%" y="597" width="0.3894%" height="15" fill="rgb(246,134,8)" fg:x="4708" fg:w="23"/><text x="79.8327%" y="607.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="80.0880%" y="581" width="0.0169%" height="15" fill="rgb(214,143,50)" fg:x="4730" fg:w="1"/><text x="80.2052%" y="591.50"></text></g><g><title>folio_add_new_anon_rmap (7 samples, 0.12%)</title><rect x="80.1050%" y="613" width="0.1185%" height="15" fill="rgb(228,75,8)" fg:x="4731" fg:w="7"/><text x="80.2222%" y="623.50"></text></g><g><title>__mod_lruvec_page_state (5 samples, 0.08%)</title><rect x="80.1388%" y="597" width="0.0847%" height="15" fill="rgb(207,175,4)" fg:x="4733" fg:w="5"/><text x="80.2560%" y="607.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.07%)</title><rect x="80.1558%" y="581" width="0.0677%" height="15" fill="rgb(205,108,24)" fg:x="4734" fg:w="4"/><text x="80.2730%" y="591.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="80.1896%" y="565" width="0.0339%" height="15" fill="rgb(244,120,49)" fg:x="4736" fg:w="2"/><text x="80.3068%" y="575.50"></text></g><g><title>inc_mm_counter (2 samples, 0.03%)</title><rect x="80.2235%" y="613" width="0.0339%" height="15" fill="rgb(223,47,38)" fg:x="4738" fg:w="2"/><text x="80.3407%" y="623.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="80.2235%" y="597" width="0.0339%" height="15" fill="rgb(229,179,11)" fg:x="4738" fg:w="2"/><text x="80.3407%" y="607.50"></text></g><g><title>pfn_pte (1 samples, 0.02%)</title><rect x="80.2574%" y="613" width="0.0169%" height="15" fill="rgb(231,122,1)" fg:x="4740" fg:w="1"/><text x="80.3746%" y="623.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="80.3420%" y="597" width="0.0169%" height="15" fill="rgb(245,119,9)" fg:x="4745" fg:w="1"/><text x="80.4592%" y="607.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="80.4267%" y="565" width="0.0169%" height="15" fill="rgb(241,163,25)" fg:x="4750" fg:w="1"/><text x="80.5439%" y="575.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="80.4775%" y="549" width="0.0169%" height="15" fill="rgb(217,214,3)" fg:x="4753" fg:w="1"/><text x="80.5947%" y="559.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="80.4944%" y="549" width="0.0169%" height="15" fill="rgb(240,86,28)" fg:x="4754" fg:w="1"/><text x="80.6116%" y="559.50"></text></g><g><title>clear_page_erms (16 samples, 0.27%)</title><rect x="80.5113%" y="549" width="0.2709%" height="15" fill="rgb(215,47,9)" fg:x="4755" fg:w="16"/><text x="80.6285%" y="559.50"></text></g><g><title>post_alloc_hook (2 samples, 0.03%)</title><rect x="80.7823%" y="549" width="0.0339%" height="15" fill="rgb(252,25,45)" fg:x="4771" fg:w="2"/><text x="80.8994%" y="559.50"></text></g><g><title>get_page_from_freelist (48 samples, 0.81%)</title><rect x="80.4436%" y="565" width="0.8127%" height="15" fill="rgb(251,164,9)" fg:x="4751" fg:w="48"/><text x="80.5608%" y="575.50"></text></g><g><title>rmqueue (26 samples, 0.44%)</title><rect x="80.8161%" y="549" width="0.4402%" height="15" fill="rgb(233,194,0)" fg:x="4773" fg:w="26"/><text x="80.9333%" y="559.50"></text></g><g><title>__rmqueue_pcplist (25 samples, 0.42%)</title><rect x="80.8331%" y="533" width="0.4233%" height="15" fill="rgb(249,111,24)" fg:x="4774" fg:w="25"/><text x="80.9502%" y="543.50"></text></g><g><title>rmqueue_bulk (24 samples, 0.41%)</title><rect x="80.8500%" y="517" width="0.4064%" height="15" fill="rgb(250,223,3)" fg:x="4775" fg:w="24"/><text x="80.9672%" y="527.50"></text></g><g><title>do_anonymous_page (181 samples, 3.06%)</title><rect x="78.2086%" y="629" width="3.0647%" height="15" fill="rgb(236,178,37)" fg:x="4619" fg:w="181"/><text x="78.3258%" y="639.50">do_anonym..</text></g><g><title>vma_alloc_folio (59 samples, 1.00%)</title><rect x="80.2743%" y="613" width="0.9990%" height="15" fill="rgb(241,158,50)" fg:x="4741" fg:w="59"/><text x="80.3915%" y="623.50">v..</text></g><g><title>__folio_alloc (54 samples, 0.91%)</title><rect x="80.3590%" y="597" width="0.9143%" height="15" fill="rgb(213,121,41)" fg:x="4746" fg:w="54"/><text x="80.4761%" y="607.50">_..</text></g><g><title>__alloc_pages (54 samples, 0.91%)</title><rect x="80.3590%" y="581" width="0.9143%" height="15" fill="rgb(240,92,3)" fg:x="4746" fg:w="54"/><text x="80.4761%" y="591.50">_..</text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="81.2563%" y="565" width="0.0169%" height="15" fill="rgb(205,123,3)" fg:x="4799" fg:w="1"/><text x="81.3735%" y="575.50"></text></g><g><title>handle_pte_fault (188 samples, 3.18%)</title><rect x="78.1409%" y="645" width="3.1832%" height="15" fill="rgb(205,97,47)" fg:x="4615" fg:w="188"/><text x="78.2581%" y="655.50">handle_pt..</text></g><g><title>pte_offset_map_nolock (3 samples, 0.05%)</title><rect x="81.2733%" y="629" width="0.0508%" height="15" fill="rgb(247,152,14)" fg:x="4800" fg:w="3"/><text x="81.3905%" y="639.50"></text></g><g><title>pmd_val (1 samples, 0.02%)</title><rect x="81.3241%" y="645" width="0.0169%" height="15" fill="rgb(248,195,53)" fg:x="4803" fg:w="1"/><text x="81.4413%" y="655.50"></text></g><g><title>__handle_mm_fault (196 samples, 3.32%)</title><rect x="78.0393%" y="661" width="3.3187%" height="15" fill="rgb(226,201,16)" fg:x="4609" fg:w="196"/><text x="78.1565%" y="671.50">__handle_..</text></g><g><title>pud_val (1 samples, 0.02%)</title><rect x="81.3410%" y="645" width="0.0169%" height="15" fill="rgb(205,98,0)" fg:x="4804" fg:w="1"/><text x="81.4582%" y="655.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="81.3579%" y="661" width="0.0169%" height="15" fill="rgb(214,191,48)" fg:x="4805" fg:w="1"/><text x="81.4751%" y="671.50"></text></g><g><title>handle_mm_fault (200 samples, 3.39%)</title><rect x="78.0054%" y="677" width="3.3864%" height="15" fill="rgb(237,112,39)" fg:x="4607" fg:w="200"/><text x="78.1226%" y="687.50">handle_mm_..</text></g><g><title>pud_val (1 samples, 0.02%)</title><rect x="81.3749%" y="661" width="0.0169%" height="15" fill="rgb(247,203,27)" fg:x="4806" fg:w="1"/><text x="81.4921%" y="671.50"></text></g><g><title>lock_vma_under_rcu (6 samples, 0.10%)</title><rect x="81.3918%" y="677" width="0.1016%" height="15" fill="rgb(235,124,28)" fg:x="4807" fg:w="6"/><text x="81.5090%" y="687.50"></text></g><g><title>mas_walk (3 samples, 0.05%)</title><rect x="81.4426%" y="661" width="0.0508%" height="15" fill="rgb(208,207,46)" fg:x="4810" fg:w="3"/><text x="81.5598%" y="671.50"></text></g><g><title>mtree_range_walk (2 samples, 0.03%)</title><rect x="81.4595%" y="645" width="0.0339%" height="15" fill="rgb(234,176,4)" fg:x="4811" fg:w="2"/><text x="81.5767%" y="655.50"></text></g><g><title>do_user_addr_fault (210 samples, 3.56%)</title><rect x="77.9546%" y="693" width="3.5557%" height="15" fill="rgb(230,133,28)" fg:x="4604" fg:w="210"/><text x="78.0718%" y="703.50">do_user_ad..</text></g><g><title>up_read (1 samples, 0.02%)</title><rect x="81.4934%" y="677" width="0.0169%" height="15" fill="rgb(211,137,40)" fg:x="4813" fg:w="1"/><text x="81.6106%" y="687.50"></text></g><g><title>asm_exc_page_fault (214 samples, 3.62%)</title><rect x="77.9038%" y="725" width="3.6234%" height="15" fill="rgb(254,35,13)" fg:x="4601" fg:w="214"/><text x="78.0210%" y="735.50">asm_exc_pag..</text></g><g><title>exc_page_fault (213 samples, 3.61%)</title><rect x="77.9208%" y="709" width="3.6065%" height="15" fill="rgb(225,49,51)" fg:x="4602" fg:w="213"/><text x="78.0379%" y="719.50">exc_page_fa..</text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="81.5103%" y="693" width="0.0169%" height="15" fill="rgb(251,10,15)" fg:x="4814" fg:w="1"/><text x="81.6275%" y="703.50"></text></g><g><title>checked_request2size (5 samples, 0.08%)</title><rect x="81.5273%" y="725" width="0.0847%" height="15" fill="rgb(228,207,15)" fg:x="4815" fg:w="5"/><text x="81.6444%" y="735.50"></text></g><g><title>early_xen_iret_patch (1 samples, 0.02%)</title><rect x="81.6119%" y="725" width="0.0169%" height="15" fill="rgb(241,99,19)" fg:x="4820" fg:w="1"/><text x="81.7291%" y="735.50"></text></g><g><title>error_entry (2 samples, 0.03%)</title><rect x="81.6289%" y="725" width="0.0339%" height="15" fill="rgb(207,104,49)" fg:x="4821" fg:w="2"/><text x="81.7460%" y="735.50"></text></g><g><title>error_return (1 samples, 0.02%)</title><rect x="81.6627%" y="725" width="0.0169%" height="15" fill="rgb(234,99,18)" fg:x="4823" fg:w="1"/><text x="81.7799%" y="735.50"></text></g><g><title>sync_regs (22 samples, 0.37%)</title><rect x="81.6796%" y="725" width="0.3725%" height="15" fill="rgb(213,191,49)" fg:x="4824" fg:w="22"/><text x="81.7968%" y="735.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="82.0860%" y="517" width="0.0169%" height="15" fill="rgb(210,226,19)" fg:x="4848" fg:w="1"/><text x="82.2032%" y="527.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.02%)</title><rect x="82.1029%" y="517" width="0.0169%" height="15" fill="rgb(229,97,18)" fg:x="4849" fg:w="1"/><text x="82.2201%" y="527.50"></text></g><g><title>__kmem_cache_alloc_bulk (1 samples, 0.02%)</title><rect x="82.1029%" y="501" width="0.0169%" height="15" fill="rgb(211,167,15)" fg:x="4849" fg:w="1"/><text x="82.2201%" y="511.50"></text></g><g><title>___slab_alloc (1 samples, 0.02%)</title><rect x="82.1029%" y="485" width="0.0169%" height="15" fill="rgb(210,169,34)" fg:x="4849" fg:w="1"/><text x="82.2201%" y="495.50"></text></g><g><title>mas_preallocate (3 samples, 0.05%)</title><rect x="82.0860%" y="549" width="0.0508%" height="15" fill="rgb(241,121,31)" fg:x="4848" fg:w="3"/><text x="82.2032%" y="559.50"></text></g><g><title>mas_alloc_nodes (3 samples, 0.05%)</title><rect x="82.0860%" y="533" width="0.0508%" height="15" fill="rgb(232,40,11)" fg:x="4848" fg:w="3"/><text x="82.2032%" y="543.50"></text></g><g><title>memset_orig (1 samples, 0.02%)</title><rect x="82.1199%" y="517" width="0.0169%" height="15" fill="rgb(205,86,26)" fg:x="4850" fg:w="1"/><text x="82.2371%" y="527.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="82.1368%" y="517" width="0.0169%" height="15" fill="rgb(231,126,28)" fg:x="4851" fg:w="1"/><text x="82.2540%" y="527.50"></text></g><g><title>__slab_free (1 samples, 0.02%)</title><rect x="82.1368%" y="501" width="0.0169%" height="15" fill="rgb(219,221,18)" fg:x="4851" fg:w="1"/><text x="82.2540%" y="511.50"></text></g><g><title>mas_store_prealloc (2 samples, 0.03%)</title><rect x="82.1368%" y="549" width="0.0339%" height="15" fill="rgb(211,40,0)" fg:x="4851" fg:w="2"/><text x="82.2540%" y="559.50"></text></g><g><title>mas_destroy (2 samples, 0.03%)</title><rect x="82.1368%" y="533" width="0.0339%" height="15" fill="rgb(239,85,43)" fg:x="4851" fg:w="2"/><text x="82.2540%" y="543.50"></text></g><g><title>kmem_cache_free_bulk (1 samples, 0.02%)</title><rect x="82.1537%" y="517" width="0.0169%" height="15" fill="rgb(231,55,21)" fg:x="4852" fg:w="1"/><text x="82.2709%" y="527.50"></text></g><g><title>kmem_cache_free_bulk.part.0 (1 samples, 0.02%)</title><rect x="82.1537%" y="501" width="0.0169%" height="15" fill="rgb(225,184,43)" fg:x="4852" fg:w="1"/><text x="82.2709%" y="511.50"></text></g><g><title>__slab_free (1 samples, 0.02%)</title><rect x="82.1537%" y="485" width="0.0169%" height="15" fill="rgb(251,158,41)" fg:x="4852" fg:w="1"/><text x="82.2709%" y="495.50"></text></g><g><title>put_cpu_partial (1 samples, 0.02%)</title><rect x="82.1537%" y="469" width="0.0169%" height="15" fill="rgb(234,159,37)" fg:x="4852" fg:w="1"/><text x="82.2709%" y="479.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="82.1707%" y="501" width="0.0169%" height="15" fill="rgb(216,204,22)" fg:x="4853" fg:w="1"/><text x="82.2879%" y="511.50"></text></g><g><title>__glibc_morecore (8 samples, 0.14%)</title><rect x="82.0691%" y="709" width="0.1355%" height="15" fill="rgb(214,17,3)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="719.50"></text></g><g><title>__GI___sbrk (8 samples, 0.14%)</title><rect x="82.0691%" y="693" width="0.1355%" height="15" fill="rgb(212,111,17)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="703.50"></text></g><g><title>__GI___sbrk (8 samples, 0.14%)</title><rect x="82.0691%" y="677" width="0.1355%" height="15" fill="rgb(221,157,24)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="687.50"></text></g><g><title>__brk (8 samples, 0.14%)</title><rect x="82.0691%" y="661" width="0.1355%" height="15" fill="rgb(252,16,13)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.14%)</title><rect x="82.0691%" y="645" width="0.1355%" height="15" fill="rgb(221,62,2)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="655.50"></text></g><g><title>do_syscall_64 (8 samples, 0.14%)</title><rect x="82.0691%" y="629" width="0.1355%" height="15" fill="rgb(247,87,22)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="639.50"></text></g><g><title>x64_sys_call (8 samples, 0.14%)</title><rect x="82.0691%" y="613" width="0.1355%" height="15" fill="rgb(215,73,9)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="623.50"></text></g><g><title>__x64_sys_brk (8 samples, 0.14%)</title><rect x="82.0691%" y="597" width="0.1355%" height="15" fill="rgb(207,175,33)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="607.50"></text></g><g><title>__do_sys_brk (8 samples, 0.14%)</title><rect x="82.0691%" y="581" width="0.1355%" height="15" fill="rgb(243,129,54)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="591.50"></text></g><g><title>do_brk_flags (8 samples, 0.14%)</title><rect x="82.0691%" y="565" width="0.1355%" height="15" fill="rgb(227,119,45)" fg:x="4847" fg:w="8"/><text x="82.1863%" y="575.50"></text></g><g><title>perf_event_mmap (2 samples, 0.03%)</title><rect x="82.1707%" y="549" width="0.0339%" height="15" fill="rgb(205,109,36)" fg:x="4853" fg:w="2"/><text x="82.2879%" y="559.50"></text></g><g><title>perf_event_mmap_event (2 samples, 0.03%)</title><rect x="82.1707%" y="533" width="0.0339%" height="15" fill="rgb(205,6,39)" fg:x="4853" fg:w="2"/><text x="82.2879%" y="543.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.03%)</title><rect x="82.1707%" y="517" width="0.0339%" height="15" fill="rgb(221,32,16)" fg:x="4853" fg:w="2"/><text x="82.2879%" y="527.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="82.1876%" y="501" width="0.0169%" height="15" fill="rgb(228,144,50)" fg:x="4854" fg:w="1"/><text x="82.3048%" y="511.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="82.1876%" y="485" width="0.0169%" height="15" fill="rgb(229,201,53)" fg:x="4854" fg:w="1"/><text x="82.3048%" y="495.50"></text></g><g><title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="82.1876%" y="469" width="0.0169%" height="15" fill="rgb(249,153,27)" fg:x="4854" fg:w="1"/><text x="82.3048%" y="479.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.03%)</title><rect x="82.2553%" y="597" width="0.0339%" height="15" fill="rgb(227,106,25)" fg:x="4858" fg:w="2"/><text x="82.3725%" y="607.50"></text></g><g><title>charge_memcg (2 samples, 0.03%)</title><rect x="82.2553%" y="581" width="0.0339%" height="15" fill="rgb(230,65,29)" fg:x="4858" fg:w="2"/><text x="82.3725%" y="591.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="82.2723%" y="565" width="0.0169%" height="15" fill="rgb(221,57,46)" fg:x="4859" fg:w="1"/><text x="82.3895%" y="575.50"></text></g><g><title>handle_mm_fault (6 samples, 0.10%)</title><rect x="82.2045%" y="661" width="0.1016%" height="15" fill="rgb(229,161,17)" fg:x="4855" fg:w="6"/><text x="82.3217%" y="671.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.08%)</title><rect x="82.2215%" y="645" width="0.0847%" height="15" fill="rgb(222,213,11)" fg:x="4856" fg:w="5"/><text x="82.3387%" y="655.50"></text></g><g><title>handle_pte_fault (4 samples, 0.07%)</title><rect x="82.2384%" y="629" width="0.0677%" height="15" fill="rgb(235,35,13)" fg:x="4857" fg:w="4"/><text x="82.3556%" y="639.50"></text></g><g><title>do_anonymous_page (3 samples, 0.05%)</title><rect x="82.2553%" y="613" width="0.0508%" height="15" fill="rgb(233,158,34)" fg:x="4858" fg:w="3"/><text x="82.3725%" y="623.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="82.2892%" y="597" width="0.0169%" height="15" fill="rgb(215,151,48)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="607.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="82.2892%" y="581" width="0.0169%" height="15" fill="rgb(229,84,14)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="591.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="82.2892%" y="565" width="0.0169%" height="15" fill="rgb(229,68,14)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="575.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="82.2892%" y="549" width="0.0169%" height="15" fill="rgb(243,106,26)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="559.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="82.2892%" y="533" width="0.0169%" height="15" fill="rgb(206,45,38)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="543.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="82.2892%" y="517" width="0.0169%" height="15" fill="rgb(226,6,15)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="527.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="82.2892%" y="501" width="0.0169%" height="15" fill="rgb(232,22,54)" fg:x="4860" fg:w="1"/><text x="82.4064%" y="511.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.12%)</title><rect x="82.2045%" y="709" width="0.1185%" height="15" fill="rgb(229,222,32)" fg:x="4855" fg:w="7"/><text x="82.3217%" y="719.50"></text></g><g><title>exc_page_fault (7 samples, 0.12%)</title><rect x="82.2045%" y="693" width="0.1185%" height="15" fill="rgb(228,62,29)" fg:x="4855" fg:w="7"/><text x="82.3217%" y="703.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.12%)</title><rect x="82.2045%" y="677" width="0.1185%" height="15" fill="rgb(251,103,34)" fg:x="4855" fg:w="7"/><text x="82.3217%" y="687.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.02%)</title><rect x="82.3061%" y="661" width="0.0169%" height="15" fill="rgb(233,12,30)" fg:x="4861" fg:w="1"/><text x="82.4233%" y="671.50"></text></g><g><title>mas_walk (1 samples, 0.02%)</title><rect x="82.3061%" y="645" width="0.0169%" height="15" fill="rgb(238,52,0)" fg:x="4861" fg:w="1"/><text x="82.4233%" y="655.50"></text></g><g><title>mtree_range_walk (1 samples, 0.02%)</title><rect x="82.3061%" y="629" width="0.0169%" height="15" fill="rgb(223,98,5)" fg:x="4861" fg:w="1"/><text x="82.4233%" y="639.50"></text></g><g><title>sysmalloc (17 samples, 0.29%)</title><rect x="82.0522%" y="725" width="0.2878%" height="15" fill="rgb(228,75,37)" fg:x="4846" fg:w="17"/><text x="82.1693%" y="735.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="82.3231%" y="709" width="0.0169%" height="15" fill="rgb(205,115,49)" fg:x="4862" fg:w="1"/><text x="82.4402%" y="719.50"></text></g><g><title>_int_malloc (347 samples, 5.88%)</title><rect x="76.4815%" y="741" width="5.8754%" height="15" fill="rgb(250,154,43)" fg:x="4517" fg:w="347"/><text x="76.5987%" y="751.50">_int_malloc</text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="82.3400%" y="725" width="0.0169%" height="15" fill="rgb(226,43,29)" fg:x="4863" fg:w="1"/><text x="82.4572%" y="735.50"></text></g><g><title>arena_for_chunk (4 samples, 0.07%)</title><rect x="82.3569%" y="741" width="0.0677%" height="15" fill="rgb(249,228,39)" fg:x="4864" fg:w="4"/><text x="82.4741%" y="751.50"></text></g><g><title>__GI___libc_malloc (363 samples, 6.15%)</title><rect x="76.3122%" y="757" width="6.1463%" height="15" fill="rgb(216,79,43)" fg:x="4507" fg:w="363"/><text x="76.4294%" y="767.50">__GI___libc_malloc</text></g><g><title>checked_request2size (2 samples, 0.03%)</title><rect x="82.4247%" y="741" width="0.0339%" height="15" fill="rgb(228,95,12)" fg:x="4868" fg:w="2"/><text x="82.5418%" y="751.50"></text></g><g><title>__rdl_alloc (3 samples, 0.05%)</title><rect x="82.4585%" y="757" width="0.0508%" height="15" fill="rgb(249,221,15)" fg:x="4870" fg:w="3"/><text x="82.5757%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (444 samples, 7.52%)</title><rect x="75.0423%" y="933" width="7.5178%" height="15" fill="rgb(233,34,13)" fg:x="4432" fg:w="444"/><text x="75.1595%" y="943.50">core::iter::traits::itera..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (444 samples, 7.52%)</title><rect x="75.0423%" y="917" width="7.5178%" height="15" fill="rgb(214,103,39)" fg:x="4432" fg:w="444"/><text x="75.1595%" y="927.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (444 samples, 7.52%)</title><rect x="75.0423%" y="901" width="7.5178%" height="15" fill="rgb(251,126,39)" fg:x="4432" fg:w="444"/><text x="75.1595%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (443 samples, 7.50%)</title><rect x="75.0593%" y="885" width="7.5008%" height="15" fill="rgb(214,216,36)" fg:x="4433" fg:w="443"/><text x="75.1764%" y="895.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (379 samples, 6.42%)</title><rect x="76.1429%" y="869" width="6.4172%" height="15" fill="rgb(220,221,8)" fg:x="4497" fg:w="379"/><text x="76.2601%" y="879.50">alloc::vec::Vec&lt;T&gt;::w..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (379 samples, 6.42%)</title><rect x="76.1429%" y="853" width="6.4172%" height="15" fill="rgb(240,216,3)" fg:x="4497" fg:w="379"/><text x="76.2601%" y="863.50">alloc::vec::Vec&lt;T,A&gt;:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (375 samples, 6.35%)</title><rect x="76.2106%" y="837" width="6.3495%" height="15" fill="rgb(232,218,17)" fg:x="4501" fg:w="375"/><text x="76.3278%" y="847.50">alloc::raw_vec::RawV..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (372 samples, 6.30%)</title><rect x="76.2614%" y="821" width="6.2987%" height="15" fill="rgb(229,163,45)" fg:x="4504" fg:w="372"/><text x="76.3786%" y="831.50">alloc::raw_vec::RawV..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (369 samples, 6.25%)</title><rect x="76.3122%" y="805" width="6.2479%" height="15" fill="rgb(231,110,42)" fg:x="4507" fg:w="369"/><text x="76.4294%" y="815.50">&lt;alloc::alloc::Globa..</text></g><g><title>alloc::alloc::Global::alloc_impl (369 samples, 6.25%)</title><rect x="76.3122%" y="789" width="6.2479%" height="15" fill="rgb(208,170,48)" fg:x="4507" fg:w="369"/><text x="76.4294%" y="799.50">alloc::alloc::Global..</text></g><g><title>alloc::alloc::alloc (369 samples, 6.25%)</title><rect x="76.3122%" y="773" width="6.2479%" height="15" fill="rgb(239,116,25)" fg:x="4507" fg:w="369"/><text x="76.4294%" y="783.50">alloc::alloc::alloc</text></g><g><title>core::ptr::read_volatile (3 samples, 0.05%)</title><rect x="82.5093%" y="757" width="0.0508%" height="15" fill="rgb(219,200,50)" fg:x="4873" fg:w="3"/><text x="82.6265%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (3 samples, 0.05%)</title><rect x="82.5601%" y="933" width="0.0508%" height="15" fill="rgb(245,200,0)" fg:x="4876" fg:w="3"/><text x="82.6773%" y="943.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (3 samples, 0.05%)</title><rect x="82.5601%" y="917" width="0.0508%" height="15" fill="rgb(245,119,33)" fg:x="4876" fg:w="3"/><text x="82.6773%" y="927.50"></text></g><g><title>__GI___libc_free (57 samples, 0.97%)</title><rect x="82.6448%" y="853" width="0.9651%" height="15" fill="rgb(231,125,12)" fg:x="4881" fg:w="57"/><text x="82.7620%" y="863.50">_..</text></g><g><title>_int_free (50 samples, 0.85%)</title><rect x="82.7633%" y="837" width="0.8466%" height="15" fill="rgb(216,96,41)" fg:x="4888" fg:w="50"/><text x="82.8805%" y="847.50">_..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="83.5930%" y="821" width="0.0169%" height="15" fill="rgb(248,43,45)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="831.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="83.5930%" y="805" width="0.0169%" height="15" fill="rgb(217,222,7)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="815.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="83.5930%" y="789" width="0.0169%" height="15" fill="rgb(233,28,6)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="799.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="83.5930%" y="773" width="0.0169%" height="15" fill="rgb(231,218,15)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="783.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="83.5930%" y="757" width="0.0169%" height="15" fill="rgb(226,171,48)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="767.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="83.5930%" y="741" width="0.0169%" height="15" fill="rgb(235,201,9)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="751.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="83.5930%" y="725" width="0.0169%" height="15" fill="rgb(217,80,15)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="735.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="83.5930%" y="709" width="0.0169%" height="15" fill="rgb(219,152,8)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="719.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="83.5930%" y="693" width="0.0169%" height="15" fill="rgb(243,107,38)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="703.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="83.5930%" y="677" width="0.0169%" height="15" fill="rgb(231,17,5)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="687.50"></text></g><g><title>hrtimer_active (1 samples, 0.02%)</title><rect x="83.5930%" y="661" width="0.0169%" height="15" fill="rgb(209,25,54)" fg:x="4937" fg:w="1"/><text x="83.7101%" y="671.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.07%)</title><rect x="83.6099%" y="853" width="0.0677%" height="15" fill="rgb(219,0,2)" fg:x="4938" fg:w="4"/><text x="83.7271%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (65 samples, 1.10%)</title><rect x="82.6448%" y="869" width="1.1006%" height="15" fill="rgb(246,9,5)" fg:x="4881" fg:w="65"/><text x="82.7620%" y="879.50">a..</text></g><g><title>__rust_dealloc (4 samples, 0.07%)</title><rect x="83.6776%" y="853" width="0.0677%" height="15" fill="rgb(226,159,4)" fg:x="4942" fg:w="4"/><text x="83.7948%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (72 samples, 1.22%)</title><rect x="82.6109%" y="933" width="1.2191%" height="15" fill="rgb(219,175,34)" fg:x="4879" fg:w="72"/><text x="82.7281%" y="943.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (72 samples, 1.22%)</title><rect x="82.6109%" y="917" width="1.2191%" height="15" fill="rgb(236,10,46)" fg:x="4879" fg:w="72"/><text x="82.7281%" y="927.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 1.22%)</title><rect x="82.6109%" y="901" width="1.2191%" height="15" fill="rgb(240,211,16)" fg:x="4879" fg:w="72"/><text x="82.7281%" y="911.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 1.19%)</title><rect x="82.6448%" y="885" width="1.1852%" height="15" fill="rgb(205,3,43)" fg:x="4881" fg:w="70"/><text x="82.7620%" y="895.50">&lt;a..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (5 samples, 0.08%)</title><rect x="83.7453%" y="869" width="0.0847%" height="15" fill="rgb(245,7,22)" fg:x="4946" fg:w="5"/><text x="83.8625%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (2 samples, 0.03%)</title><rect x="83.8300%" y="933" width="0.0339%" height="15" fill="rgb(239,132,32)" fg:x="4951" fg:w="2"/><text x="83.9472%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (2 samples, 0.03%)</title><rect x="83.8300%" y="917" width="0.0339%" height="15" fill="rgb(228,202,34)" fg:x="4951" fg:w="2"/><text x="83.9472%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="83.8300%" y="901" width="0.0339%" height="15" fill="rgb(254,200,22)" fg:x="4951" fg:w="2"/><text x="83.9472%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="83.8300%" y="885" width="0.0339%" height="15" fill="rgb(219,10,39)" fg:x="4951" fg:w="2"/><text x="83.9472%" y="895.50"></text></g><g><title>checked_request2size (10 samples, 0.17%)</title><rect x="85.0491%" y="837" width="0.1693%" height="15" fill="rgb(226,210,39)" fg:x="5023" fg:w="10"/><text x="85.1663%" y="847.50"></text></g><g><title>__GI___libc_malloc (38 samples, 0.64%)</title><rect x="84.6935%" y="853" width="0.6434%" height="15" fill="rgb(208,219,16)" fg:x="5002" fg:w="38"/><text x="84.8107%" y="863.50"></text></g><g><title>tcache_get (7 samples, 0.12%)</title><rect x="85.2184%" y="837" width="0.1185%" height="15" fill="rgb(216,158,51)" fg:x="5033" fg:w="7"/><text x="85.3356%" y="847.50"></text></g><g><title>__rdl_alloc (10 samples, 0.17%)</title><rect x="85.3369%" y="853" width="0.1693%" height="15" fill="rgb(233,14,44)" fg:x="5040" fg:w="10"/><text x="85.4541%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (58 samples, 0.98%)</title><rect x="84.5919%" y="917" width="0.9821%" height="15" fill="rgb(237,97,39)" fg:x="4996" fg:w="58"/><text x="84.7091%" y="927.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.98%)</title><rect x="84.5919%" y="901" width="0.9821%" height="15" fill="rgb(218,198,43)" fg:x="4996" fg:w="58"/><text x="84.7091%" y="911.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.98%)</title><rect x="84.5919%" y="885" width="0.9821%" height="15" fill="rgb(231,104,20)" fg:x="4996" fg:w="58"/><text x="84.7091%" y="895.50">a..</text></g><g><title>alloc::alloc::alloc (58 samples, 0.98%)</title><rect x="84.5919%" y="869" width="0.9821%" height="15" fill="rgb(254,36,13)" fg:x="4996" fg:w="58"/><text x="84.7091%" y="879.50">a..</text></g><g><title>__rust_alloc (4 samples, 0.07%)</title><rect x="85.5063%" y="853" width="0.0677%" height="15" fill="rgb(248,14,50)" fg:x="5050" fg:w="4"/><text x="85.6235%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (5 samples, 0.08%)</title><rect x="85.5740%" y="917" width="0.0847%" height="15" fill="rgb(217,107,29)" fg:x="5054" fg:w="5"/><text x="85.6912%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.08%)</title><rect x="85.5740%" y="901" width="0.0847%" height="15" fill="rgb(251,169,33)" fg:x="5054" fg:w="5"/><text x="85.6912%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.08%)</title><rect x="85.5740%" y="885" width="0.0847%" height="15" fill="rgb(217,108,32)" fg:x="5054" fg:w="5"/><text x="85.6912%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.08%)</title><rect x="85.5740%" y="869" width="0.0847%" height="15" fill="rgb(219,66,42)" fg:x="5054" fg:w="5"/><text x="85.6912%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (8 samples, 0.14%)</title><rect x="85.6587%" y="917" width="0.1355%" height="15" fill="rgb(206,180,7)" fg:x="5059" fg:w="8"/><text x="85.7758%" y="927.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (8 samples, 0.14%)</title><rect x="85.6587%" y="901" width="0.1355%" height="15" fill="rgb(208,226,31)" fg:x="5059" fg:w="8"/><text x="85.7758%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.08%)</title><rect x="85.7094%" y="885" width="0.0847%" height="15" fill="rgb(218,26,49)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.08%)</title><rect x="85.7094%" y="869" width="0.0847%" height="15" fill="rgb(233,197,48)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="879.50"></text></g><g><title>irqentry_exit (5 samples, 0.08%)</title><rect x="85.7094%" y="853" width="0.0847%" height="15" fill="rgb(252,181,51)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="863.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.08%)</title><rect x="85.7094%" y="837" width="0.0847%" height="15" fill="rgb(253,90,19)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.08%)</title><rect x="85.7094%" y="821" width="0.0847%" height="15" fill="rgb(215,171,30)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="831.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.08%)</title><rect x="85.7094%" y="805" width="0.0847%" height="15" fill="rgb(214,222,9)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="815.50"></text></g><g><title>schedule (5 samples, 0.08%)</title><rect x="85.7094%" y="789" width="0.0847%" height="15" fill="rgb(223,3,22)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="799.50"></text></g><g><title>__schedule (5 samples, 0.08%)</title><rect x="85.7094%" y="773" width="0.0847%" height="15" fill="rgb(225,196,46)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.08%)</title><rect x="85.7094%" y="757" width="0.0847%" height="15" fill="rgb(209,110,37)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="767.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="85.7094%" y="741" width="0.0847%" height="15" fill="rgb(249,89,12)" fg:x="5062" fg:w="5"/><text x="85.8266%" y="751.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.07%)</title><rect x="85.7264%" y="725" width="0.0677%" height="15" fill="rgb(226,27,33)" fg:x="5063" fg:w="4"/><text x="85.8436%" y="735.50"></text></g><g><title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="85.7264%" y="709" width="0.0677%" height="15" fill="rgb(213,82,22)" fg:x="5063" fg:w="4"/><text x="85.8436%" y="719.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="85.7264%" y="693" width="0.0677%" height="15" fill="rgb(248,140,0)" fg:x="5063" fg:w="4"/><text x="85.8436%" y="703.50"></text></g><g><title>native_write_msr (4 samples, 0.07%)</title><rect x="85.7264%" y="677" width="0.0677%" height="15" fill="rgb(228,106,3)" fg:x="5063" fg:w="4"/><text x="85.8436%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 0.91%)</title><rect x="85.7941%" y="869" width="0.9143%" height="15" fill="rgb(209,23,37)" fg:x="5067" fg:w="54"/><text x="85.9113%" y="879.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.08%)</title><rect x="86.8608%" y="837" width="0.0847%" height="15" fill="rgb(241,93,50)" fg:x="5130" fg:w="5"/><text x="86.9780%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="87.0809%" y="821" width="0.0339%" height="15" fill="rgb(253,46,43)" fg:x="5143" fg:w="2"/><text x="87.1981%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.19%)</title><rect x="87.3349%" y="613" width="0.1863%" height="15" fill="rgb(226,206,43)" fg:x="5158" fg:w="11"/><text x="87.4521%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="87.5212%" y="613" width="0.1355%" height="15" fill="rgb(217,54,7)" fg:x="5169" fg:w="8"/><text x="87.6384%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.08%)</title><rect x="87.5720%" y="597" width="0.0847%" height="15" fill="rgb(223,5,52)" fg:x="5172" fg:w="5"/><text x="87.6891%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.34%)</title><rect x="87.3349%" y="629" width="0.3386%" height="15" fill="rgb(206,52,46)" fg:x="5158" fg:w="20"/><text x="87.4521%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="87.6566%" y="613" width="0.0169%" height="15" fill="rgb(253,136,11)" fg:x="5177" fg:w="1"/><text x="87.7738%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (27 samples, 0.46%)</title><rect x="87.2841%" y="757" width="0.4572%" height="15" fill="rgb(208,106,33)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (27 samples, 0.46%)</title><rect x="87.2841%" y="741" width="0.4572%" height="15" fill="rgb(206,54,4)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.46%)</title><rect x="87.2841%" y="725" width="0.4572%" height="15" fill="rgb(213,3,15)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.46%)</title><rect x="87.2841%" y="709" width="0.4572%" height="15" fill="rgb(252,211,39)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.46%)</title><rect x="87.2841%" y="693" width="0.4572%" height="15" fill="rgb(223,6,36)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 0.46%)</title><rect x="87.2841%" y="677" width="0.4572%" height="15" fill="rgb(252,169,45)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (27 samples, 0.46%)</title><rect x="87.2841%" y="661" width="0.4572%" height="15" fill="rgb(212,48,26)" fg:x="5155" fg:w="27"/><text x="87.4013%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.41%)</title><rect x="87.3349%" y="645" width="0.4064%" height="15" fill="rgb(251,102,48)" fg:x="5158" fg:w="24"/><text x="87.4521%" y="655.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (4 samples, 0.07%)</title><rect x="87.6736%" y="629" width="0.0677%" height="15" fill="rgb(243,208,16)" fg:x="5178" fg:w="4"/><text x="87.7907%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 0.07%)</title><rect x="87.6736%" y="613" width="0.0677%" height="15" fill="rgb(219,96,24)" fg:x="5178" fg:w="4"/><text x="87.7907%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4 samples, 0.07%)</title><rect x="87.6736%" y="597" width="0.0677%" height="15" fill="rgb(219,33,29)" fg:x="5178" fg:w="4"/><text x="87.7907%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (11 samples, 0.19%)</title><rect x="87.7413%" y="757" width="0.1863%" height="15" fill="rgb(223,176,5)" fg:x="5182" fg:w="11"/><text x="87.8585%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="87.9275%" y="645" width="0.0339%" height="15" fill="rgb(228,140,14)" fg:x="5193" fg:w="2"/><text x="88.0447%" y="655.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (52 samples, 0.88%)</title><rect x="87.1148%" y="773" width="0.8805%" height="15" fill="rgb(217,179,31)" fg:x="5145" fg:w="52"/><text x="87.2320%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="757" width="0.0677%" height="15" fill="rgb(230,9,30)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="741" width="0.0677%" height="15" fill="rgb(230,136,20)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="725" width="0.0677%" height="15" fill="rgb(215,210,22)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="709" width="0.0677%" height="15" fill="rgb(218,43,5)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="693" width="0.0677%" height="15" fill="rgb(216,11,5)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="677" width="0.0677%" height="15" fill="rgb(209,82,29)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.07%)</title><rect x="87.9275%" y="661" width="0.0677%" height="15" fill="rgb(244,115,12)" fg:x="5193" fg:w="4"/><text x="88.0447%" y="671.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="87.9614%" y="645" width="0.0339%" height="15" fill="rgb(222,82,18)" fg:x="5195" fg:w="2"/><text x="88.0786%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.03%)</title><rect x="87.9614%" y="629" width="0.0339%" height="15" fill="rgb(249,227,8)" fg:x="5195" fg:w="2"/><text x="88.0786%" y="639.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="87.9614%" y="613" width="0.0339%" height="15" fill="rgb(253,141,45)" fg:x="5195" fg:w="2"/><text x="88.0786%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="87.9953%" y="613" width="0.0677%" height="15" fill="rgb(234,184,4)" fg:x="5197" fg:w="4"/><text x="88.1124%" y="623.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.20%)</title><rect x="87.9953%" y="629" width="0.2032%" height="15" fill="rgb(218,194,23)" fg:x="5197" fg:w="12"/><text x="88.1124%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="88.0630%" y="613" width="0.1355%" height="15" fill="rgb(235,66,41)" fg:x="5201" fg:w="8"/><text x="88.1802%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.07%)</title><rect x="88.1307%" y="597" width="0.0677%" height="15" fill="rgb(245,217,1)" fg:x="5205" fg:w="4"/><text x="88.2479%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 1.29%)</title><rect x="87.1148%" y="821" width="1.2868%" height="15" fill="rgb(229,91,1)" fg:x="5145" fg:w="76"/><text x="87.2320%" y="831.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 1.29%)</title><rect x="87.1148%" y="805" width="1.2868%" height="15" fill="rgb(207,101,30)" fg:x="5145" fg:w="76"/><text x="87.2320%" y="815.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (76 samples, 1.29%)</title><rect x="87.1148%" y="789" width="1.2868%" height="15" fill="rgb(223,82,49)" fg:x="5145" fg:w="76"/><text x="87.2320%" y="799.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (24 samples, 0.41%)</title><rect x="87.9953%" y="773" width="0.4064%" height="15" fill="rgb(218,167,17)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (24 samples, 0.41%)</title><rect x="87.9953%" y="757" width="0.4064%" height="15" fill="rgb(208,103,14)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.41%)</title><rect x="87.9953%" y="741" width="0.4064%" height="15" fill="rgb(238,20,8)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.41%)</title><rect x="87.9953%" y="725" width="0.4064%" height="15" fill="rgb(218,80,54)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.41%)</title><rect x="87.9953%" y="709" width="0.4064%" height="15" fill="rgb(240,144,17)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.41%)</title><rect x="87.9953%" y="693" width="0.4064%" height="15" fill="rgb(245,27,50)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.41%)</title><rect x="87.9953%" y="677" width="0.4064%" height="15" fill="rgb(251,51,7)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (24 samples, 0.41%)</title><rect x="87.9953%" y="661" width="0.4064%" height="15" fill="rgb(245,217,29)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.41%)</title><rect x="87.9953%" y="645" width="0.4064%" height="15" fill="rgb(221,176,29)" fg:x="5197" fg:w="24"/><text x="88.1124%" y="655.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (12 samples, 0.20%)</title><rect x="88.1984%" y="629" width="0.2032%" height="15" fill="rgb(212,180,24)" fg:x="5209" fg:w="12"/><text x="88.3156%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (12 samples, 0.20%)</title><rect x="88.1984%" y="613" width="0.2032%" height="15" fill="rgb(254,24,2)" fg:x="5209" fg:w="12"/><text x="88.3156%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (12 samples, 0.20%)</title><rect x="88.1984%" y="597" width="0.2032%" height="15" fill="rgb(230,100,2)" fg:x="5209" fg:w="12"/><text x="88.3156%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="88.4016%" y="821" width="0.0169%" height="15" fill="rgb(219,142,25)" fg:x="5221" fg:w="1"/><text x="88.5188%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="88.4016%" y="805" width="0.0169%" height="15" fill="rgb(240,73,43)" fg:x="5221" fg:w="1"/><text x="88.5188%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.03%)</title><rect x="88.5540%" y="757" width="0.0339%" height="15" fill="rgb(214,114,15)" fg:x="5230" fg:w="2"/><text x="88.6712%" y="767.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.13284448463870148805 (1 samples, 0.02%)</title><rect x="88.5879%" y="757" width="0.0169%" height="15" fill="rgb(207,130,4)" fg:x="5232" fg:w="1"/><text x="88.7051%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="88.6048%" y="757" width="0.0169%" height="15" fill="rgb(221,25,40)" fg:x="5233" fg:w="1"/><text x="88.7220%" y="767.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.15%)</title><rect x="89.1974%" y="661" width="0.1524%" height="15" fill="rgb(241,184,7)" fg:x="5268" fg:w="9"/><text x="89.3146%" y="671.50"></text></g><g><title>_int_free (26 samples, 0.44%)</title><rect x="89.3498%" y="661" width="0.4402%" height="15" fill="rgb(235,159,4)" fg:x="5277" fg:w="26"/><text x="89.4670%" y="671.50"></text></g><g><title>tcache_put (2 samples, 0.03%)</title><rect x="89.7562%" y="645" width="0.0339%" height="15" fill="rgb(214,87,48)" fg:x="5301" fg:w="2"/><text x="89.8734%" y="655.50"></text></g><g><title>alloc_perturb (2 samples, 0.03%)</title><rect x="90.6874%" y="645" width="0.0339%" height="15" fill="rgb(246,198,24)" fg:x="5356" fg:w="2"/><text x="90.8046%" y="655.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="90.7213%" y="645" width="0.0169%" height="15" fill="rgb(209,66,40)" fg:x="5358" fg:w="1"/><text x="90.8385%" y="655.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="90.7213%" y="629" width="0.0169%" height="15" fill="rgb(233,147,39)" fg:x="5358" fg:w="1"/><text x="90.8385%" y="639.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="90.7213%" y="613" width="0.0169%" height="15" fill="rgb(231,145,52)" fg:x="5358" fg:w="1"/><text x="90.8385%" y="623.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.02%)</title><rect x="90.7213%" y="597" width="0.0169%" height="15" fill="rgb(206,20,26)" fg:x="5358" fg:w="1"/><text x="90.8385%" y="607.50"></text></g><g><title>mas_walk (1 samples, 0.02%)</title><rect x="90.7213%" y="581" width="0.0169%" height="15" fill="rgb(238,220,4)" fg:x="5358" fg:w="1"/><text x="90.8385%" y="591.50"></text></g><g><title>mtree_range_walk (1 samples, 0.02%)</title><rect x="90.7213%" y="565" width="0.0169%" height="15" fill="rgb(252,195,42)" fg:x="5358" fg:w="1"/><text x="90.8385%" y="575.50"></text></g><g><title>checked_request2size (4 samples, 0.07%)</title><rect x="90.7382%" y="645" width="0.0677%" height="15" fill="rgb(209,10,6)" fg:x="5359" fg:w="4"/><text x="90.8554%" y="655.50"></text></g><g><title>_int_malloc (66 samples, 1.12%)</title><rect x="89.7900%" y="661" width="1.1175%" height="15" fill="rgb(229,3,52)" fg:x="5303" fg:w="66"/><text x="89.9072%" y="671.50">_i..</text></g><g><title>tcache_put (6 samples, 0.10%)</title><rect x="90.8060%" y="645" width="0.1016%" height="15" fill="rgb(253,49,37)" fg:x="5363" fg:w="6"/><text x="90.9231%" y="655.50"></text></g><g><title>_int_realloc (118 samples, 2.00%)</title><rect x="88.9434%" y="677" width="1.9980%" height="15" fill="rgb(240,103,49)" fg:x="5253" fg:w="118"/><text x="89.0606%" y="687.50">_int_..</text></g><g><title>memcpy@@GLIBC_2.14@plt (2 samples, 0.03%)</title><rect x="90.9076%" y="661" width="0.0339%" height="15" fill="rgb(250,182,30)" fg:x="5369" fg:w="2"/><text x="91.0247%" y="671.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="90.9414%" y="677" width="0.0169%" height="15" fill="rgb(248,8,30)" fg:x="5371" fg:w="1"/><text x="91.0586%" y="687.50"></text></g><g><title>__GI___libc_realloc (133 samples, 2.25%)</title><rect x="88.7403%" y="693" width="2.2519%" height="15" fill="rgb(237,120,30)" fg:x="5241" fg:w="133"/><text x="88.8575%" y="703.50">__GI__..</text></g><g><title>checked_request2size (2 samples, 0.03%)</title><rect x="90.9583%" y="677" width="0.0339%" height="15" fill="rgb(221,146,34)" fg:x="5372" fg:w="2"/><text x="91.0755%" y="687.50"></text></g><g><title>__rdl_realloc (5 samples, 0.08%)</title><rect x="90.9922%" y="693" width="0.0847%" height="15" fill="rgb(242,55,13)" fg:x="5374" fg:w="5"/><text x="91.1094%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (140 samples, 2.37%)</title><rect x="88.7403%" y="741" width="2.3705%" height="15" fill="rgb(242,112,31)" fg:x="5241" fg:w="140"/><text x="88.8575%" y="751.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (140 samples, 2.37%)</title><rect x="88.7403%" y="725" width="2.3705%" height="15" fill="rgb(249,192,27)" fg:x="5241" fg:w="140"/><text x="88.8575%" y="735.50">alloc:..</text></g><g><title>alloc::alloc::realloc (140 samples, 2.37%)</title><rect x="88.7403%" y="709" width="2.3705%" height="15" fill="rgb(208,204,44)" fg:x="5241" fg:w="140"/><text x="88.8575%" y="719.50">alloc:..</text></g><g><title>__rust_realloc (2 samples, 0.03%)</title><rect x="91.0769%" y="693" width="0.0339%" height="15" fill="rgb(208,93,54)" fg:x="5379" fg:w="2"/><text x="91.1941%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (148 samples, 2.51%)</title><rect x="88.6217%" y="757" width="2.5059%" height="15" fill="rgb(242,1,31)" fg:x="5234" fg:w="148"/><text x="88.7389%" y="767.50">alloc::..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="91.1107%" y="741" width="0.0169%" height="15" fill="rgb(241,83,25)" fg:x="5381" fg:w="1"/><text x="91.2279%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="91.1277%" y="757" width="0.0169%" height="15" fill="rgb(205,169,50)" fg:x="5382" fg:w="1"/><text x="91.2449%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="91.1277%" y="741" width="0.0169%" height="15" fill="rgb(239,186,37)" fg:x="5382" fg:w="1"/><text x="91.2449%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="91.1446%" y="725" width="0.0339%" height="15" fill="rgb(205,221,10)" fg:x="5383" fg:w="2"/><text x="91.2618%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (165 samples, 2.79%)</title><rect x="88.4186%" y="821" width="2.7938%" height="15" fill="rgb(218,196,15)" fg:x="5222" fg:w="165"/><text x="88.5357%" y="831.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (165 samples, 2.79%)</title><rect x="88.4186%" y="805" width="2.7938%" height="15" fill="rgb(218,196,35)" fg:x="5222" fg:w="165"/><text x="88.5357%" y="815.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (163 samples, 2.76%)</title><rect x="88.4524%" y="789" width="2.7599%" height="15" fill="rgb(233,63,24)" fg:x="5224" fg:w="163"/><text x="88.5696%" y="799.50">alloc::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (163 samples, 2.76%)</title><rect x="88.4524%" y="773" width="2.7599%" height="15" fill="rgb(225,8,4)" fg:x="5224" fg:w="163"/><text x="88.5696%" y="783.50">alloc::..</text></g><g><title>core::cmp::max (4 samples, 0.07%)</title><rect x="91.1446%" y="757" width="0.0677%" height="15" fill="rgb(234,105,35)" fg:x="5383" fg:w="4"/><text x="91.2618%" y="767.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.07%)</title><rect x="91.1446%" y="741" width="0.0677%" height="15" fill="rgb(236,21,32)" fg:x="5383" fg:w="4"/><text x="91.2618%" y="751.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.03%)</title><rect x="91.1785%" y="725" width="0.0339%" height="15" fill="rgb(228,109,6)" fg:x="5385" fg:w="2"/><text x="91.2957%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (10 samples, 0.17%)</title><rect x="91.2123%" y="821" width="0.1693%" height="15" fill="rgb(229,215,31)" fg:x="5387" fg:w="10"/><text x="91.3295%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="91.3816%" y="773" width="0.0169%" height="15" fill="rgb(221,52,54)" fg:x="5397" fg:w="1"/><text x="91.4988%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (2 samples, 0.03%)</title><rect x="91.3816%" y="821" width="0.0339%" height="15" fill="rgb(252,129,43)" fg:x="5397" fg:w="2"/><text x="91.4988%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (2 samples, 0.03%)</title><rect x="91.3816%" y="805" width="0.0339%" height="15" fill="rgb(248,183,27)" fg:x="5397" fg:w="2"/><text x="91.4988%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="91.3816%" y="789" width="0.0339%" height="15" fill="rgb(250,0,22)" fg:x="5397" fg:w="2"/><text x="91.4988%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="773" width="0.0169%" height="15" fill="rgb(213,166,10)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="757" width="0.0169%" height="15" fill="rgb(207,163,36)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="741" width="0.0169%" height="15" fill="rgb(208,122,22)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="725" width="0.0169%" height="15" fill="rgb(207,104,49)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="709" width="0.0169%" height="15" fill="rgb(248,211,50)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="693" width="0.0169%" height="15" fill="rgb(217,13,45)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="677" width="0.0169%" height="15" fill="rgb(211,216,49)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="91.3986%" y="661" width="0.0169%" height="15" fill="rgb(221,58,53)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="91.3986%" y="645" width="0.0169%" height="15" fill="rgb(220,112,41)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="91.3986%" y="629" width="0.0169%" height="15" fill="rgb(236,38,28)" fg:x="5398" fg:w="1"/><text x="91.5158%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (281 samples, 4.76%)</title><rect x="86.8608%" y="853" width="4.7579%" height="15" fill="rgb(227,195,22)" fg:x="5130" fg:w="281"/><text x="86.9780%" y="863.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (276 samples, 4.67%)</title><rect x="86.9455%" y="837" width="4.6732%" height="15" fill="rgb(214,55,33)" fg:x="5135" fg:w="276"/><text x="87.0627%" y="847.50">alloc::vec::Ve..</text></g><g><title>core::ptr::write (12 samples, 0.20%)</title><rect x="91.4155%" y="821" width="0.2032%" height="15" fill="rgb(248,80,13)" fg:x="5399" fg:w="12"/><text x="91.5327%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="91.6356%" y="677" width="0.0169%" height="15" fill="rgb(238,52,6)" fg:x="5412" fg:w="1"/><text x="91.7528%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="91.6864%" y="629" width="0.0169%" height="15" fill="rgb(224,198,47)" fg:x="5415" fg:w="1"/><text x="91.8036%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.07%)</title><rect x="91.6526%" y="645" width="0.0677%" height="15" fill="rgb(233,171,20)" fg:x="5413" fg:w="4"/><text x="91.7697%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="91.7034%" y="629" width="0.0169%" height="15" fill="rgb(241,30,25)" fg:x="5416" fg:w="1"/><text x="91.8205%" y="639.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="91.6526%" y="661" width="0.0847%" height="15" fill="rgb(207,171,38)" fg:x="5413" fg:w="5"/><text x="91.7697%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="91.7203%" y="645" width="0.0169%" height="15" fill="rgb(234,70,1)" fg:x="5417" fg:w="1"/><text x="91.8375%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.20%)</title><rect x="91.6187%" y="837" width="0.2032%" height="15" fill="rgb(232,178,18)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (12 samples, 0.20%)</title><rect x="91.6187%" y="821" width="0.2032%" height="15" fill="rgb(241,78,40)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="831.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (12 samples, 0.20%)</title><rect x="91.6187%" y="805" width="0.2032%" height="15" fill="rgb(222,35,25)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (12 samples, 0.20%)</title><rect x="91.6187%" y="789" width="0.2032%" height="15" fill="rgb(207,92,16)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.20%)</title><rect x="91.6187%" y="773" width="0.2032%" height="15" fill="rgb(216,59,51)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.20%)</title><rect x="91.6187%" y="757" width="0.2032%" height="15" fill="rgb(213,80,28)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.20%)</title><rect x="91.6187%" y="741" width="0.2032%" height="15" fill="rgb(220,93,7)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.20%)</title><rect x="91.6187%" y="725" width="0.2032%" height="15" fill="rgb(225,24,44)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.20%)</title><rect x="91.6187%" y="709" width="0.2032%" height="15" fill="rgb(243,74,40)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (12 samples, 0.20%)</title><rect x="91.6187%" y="693" width="0.2032%" height="15" fill="rgb(228,39,7)" fg:x="5411" fg:w="12"/><text x="91.7359%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.17%)</title><rect x="91.6526%" y="677" width="0.1693%" height="15" fill="rgb(227,79,8)" fg:x="5413" fg:w="10"/><text x="91.7697%" y="687.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (5 samples, 0.08%)</title><rect x="91.7372%" y="661" width="0.0847%" height="15" fill="rgb(236,58,11)" fg:x="5418" fg:w="5"/><text x="91.8544%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (5 samples, 0.08%)</title><rect x="91.7372%" y="645" width="0.0847%" height="15" fill="rgb(249,63,35)" fg:x="5418" fg:w="5"/><text x="91.8544%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (5 samples, 0.08%)</title><rect x="91.7372%" y="629" width="0.0847%" height="15" fill="rgb(252,114,16)" fg:x="5418" fg:w="5"/><text x="91.8544%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.24%)</title><rect x="91.6187%" y="853" width="0.2370%" height="15" fill="rgb(254,151,24)" fg:x="5411" fg:w="14"/><text x="91.7359%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.03%)</title><rect x="91.8219%" y="837" width="0.0339%" height="15" fill="rgb(253,54,39)" fg:x="5423" fg:w="2"/><text x="91.9391%" y="847.50"></text></g><g><title>__memcpy_evex_unaligned_erms (87 samples, 1.47%)</title><rect x="91.8557%" y="853" width="1.4731%" height="15" fill="rgb(243,25,45)" fg:x="5425" fg:w="87"/><text x="91.9729%" y="863.50">__m..</text></g><g><title>checked_request2size (3 samples, 0.05%)</title><rect x="93.4812%" y="725" width="0.0508%" height="15" fill="rgb(234,134,9)" fg:x="5521" fg:w="3"/><text x="93.5984%" y="735.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.34%)</title><rect x="93.3288%" y="741" width="0.3386%" height="15" fill="rgb(227,166,31)" fg:x="5512" fg:w="20"/><text x="93.4460%" y="751.50"></text></g><g><title>tcache_get (8 samples, 0.14%)</title><rect x="93.5320%" y="725" width="0.1355%" height="15" fill="rgb(245,143,41)" fg:x="5524" fg:w="8"/><text x="93.6492%" y="735.50"></text></g><g><title>__rdl_alloc (4 samples, 0.07%)</title><rect x="93.6675%" y="741" width="0.0677%" height="15" fill="rgb(238,181,32)" fg:x="5532" fg:w="4"/><text x="93.7846%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.44%)</title><rect x="93.3288%" y="853" width="0.4402%" height="15" fill="rgb(224,113,18)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.44%)</title><rect x="93.3288%" y="837" width="0.4402%" height="15" fill="rgb(240,229,28)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.44%)</title><rect x="93.3288%" y="821" width="0.4402%" height="15" fill="rgb(250,185,3)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (26 samples, 0.44%)</title><rect x="93.3288%" y="805" width="0.4402%" height="15" fill="rgb(212,59,25)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.44%)</title><rect x="93.3288%" y="789" width="0.4402%" height="15" fill="rgb(221,87,20)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.44%)</title><rect x="93.3288%" y="773" width="0.4402%" height="15" fill="rgb(213,74,28)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="783.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.44%)</title><rect x="93.3288%" y="757" width="0.4402%" height="15" fill="rgb(224,132,34)" fg:x="5512" fg:w="26"/><text x="93.4460%" y="767.50"></text></g><g><title>__rust_alloc (2 samples, 0.03%)</title><rect x="93.7352%" y="741" width="0.0339%" height="15" fill="rgb(222,101,24)" fg:x="5536" fg:w="2"/><text x="93.8524%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (472 samples, 7.99%)</title><rect x="85.7941%" y="917" width="7.9919%" height="15" fill="rgb(254,142,4)" fg:x="5067" fg:w="472"/><text x="85.9113%" y="927.50">core::iter::traits::iterat..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (472 samples, 7.99%)</title><rect x="85.7941%" y="901" width="7.9919%" height="15" fill="rgb(230,229,49)" fg:x="5067" fg:w="472"/><text x="85.9113%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (472 samples, 7.99%)</title><rect x="85.7941%" y="885" width="7.9919%" height="15" fill="rgb(238,70,47)" fg:x="5067" fg:w="472"/><text x="85.9113%" y="895.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (418 samples, 7.08%)</title><rect x="86.7084%" y="869" width="7.0775%" height="15" fill="rgb(231,160,17)" fg:x="5121" fg:w="418"/><text x="86.8256%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="93.7690%" y="853" width="0.0169%" height="15" fill="rgb(218,68,53)" fg:x="5538" fg:w="1"/><text x="93.8862%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (4 samples, 0.07%)</title><rect x="93.7860%" y="917" width="0.0677%" height="15" fill="rgb(236,111,10)" fg:x="5539" fg:w="4"/><text x="93.9032%" y="927.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (4 samples, 0.07%)</title><rect x="93.7860%" y="901" width="0.0677%" height="15" fill="rgb(224,34,41)" fg:x="5539" fg:w="4"/><text x="93.9032%" y="911.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (4 samples, 0.07%)</title><rect x="93.7860%" y="885" width="0.0677%" height="15" fill="rgb(241,118,19)" fg:x="5539" fg:w="4"/><text x="93.9032%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (4 samples, 0.07%)</title><rect x="93.7860%" y="869" width="0.0677%" height="15" fill="rgb(238,129,25)" fg:x="5539" fg:w="4"/><text x="93.9032%" y="879.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (4 samples, 0.07%)</title><rect x="93.7860%" y="853" width="0.0677%" height="15" fill="rgb(238,22,31)" fg:x="5539" fg:w="4"/><text x="93.9032%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (4 samples, 0.07%)</title><rect x="93.8537%" y="917" width="0.0677%" height="15" fill="rgb(222,174,48)" fg:x="5543" fg:w="4"/><text x="93.9709%" y="927.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (4 samples, 0.07%)</title><rect x="93.8537%" y="901" width="0.0677%" height="15" fill="rgb(206,152,40)" fg:x="5543" fg:w="4"/><text x="93.9709%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6 samples, 0.10%)</title><rect x="93.9214%" y="917" width="0.1016%" height="15" fill="rgb(218,99,54)" fg:x="5547" fg:w="6"/><text x="94.0386%" y="927.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (6 samples, 0.10%)</title><rect x="93.9214%" y="901" width="0.1016%" height="15" fill="rgb(220,174,26)" fg:x="5547" fg:w="6"/><text x="94.0386%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.10%)</title><rect x="93.9214%" y="885" width="0.1016%" height="15" fill="rgb(245,116,9)" fg:x="5547" fg:w="6"/><text x="94.0386%" y="895.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (6 samples, 0.10%)</title><rect x="93.9214%" y="869" width="0.1016%" height="15" fill="rgb(209,72,35)" fg:x="5547" fg:w="6"/><text x="94.0386%" y="879.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (6 samples, 0.10%)</title><rect x="93.9214%" y="853" width="0.1016%" height="15" fill="rgb(226,126,21)" fg:x="5547" fg:w="6"/><text x="94.0386%" y="863.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (5 samples, 0.08%)</title><rect x="94.0230%" y="885" width="0.0847%" height="15" fill="rgb(227,192,1)" fg:x="5553" fg:w="5"/><text x="94.1402%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.12%)</title><rect x="94.0230%" y="917" width="0.1185%" height="15" fill="rgb(237,180,29)" fg:x="5553" fg:w="7"/><text x="94.1402%" y="927.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (7 samples, 0.12%)</title><rect x="94.0230%" y="901" width="0.1185%" height="15" fill="rgb(230,197,35)" fg:x="5553" fg:w="7"/><text x="94.1402%" y="911.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (2 samples, 0.03%)</title><rect x="94.1077%" y="885" width="0.0339%" height="15" fill="rgb(246,193,31)" fg:x="5558" fg:w="2"/><text x="94.2249%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="94.1246%" y="869" width="0.0169%" height="15" fill="rgb(241,36,4)" fg:x="5559" fg:w="1"/><text x="94.2418%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="94.1246%" y="853" width="0.0169%" height="15" fill="rgb(241,130,17)" fg:x="5559" fg:w="1"/><text x="94.2418%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="94.1246%" y="837" width="0.0169%" height="15" fill="rgb(206,137,32)" fg:x="5559" fg:w="1"/><text x="94.2418%" y="847.50"></text></g><g><title>__GI___libc_free (49 samples, 0.83%)</title><rect x="94.1754%" y="837" width="0.8297%" height="15" fill="rgb(237,228,51)" fg:x="5562" fg:w="49"/><text x="94.2926%" y="847.50"></text></g><g><title>_int_free (43 samples, 0.73%)</title><rect x="94.2770%" y="821" width="0.7281%" height="15" fill="rgb(243,6,42)" fg:x="5568" fg:w="43"/><text x="94.3942%" y="831.50"></text></g><g><title>tcache_put (8 samples, 0.14%)</title><rect x="94.8696%" y="805" width="0.1355%" height="15" fill="rgb(251,74,28)" fg:x="5603" fg:w="8"/><text x="94.9868%" y="815.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="95.0051%" y="837" width="0.0169%" height="15" fill="rgb(218,20,49)" fg:x="5611" fg:w="1"/><text x="95.1223%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (53 samples, 0.90%)</title><rect x="94.1416%" y="917" width="0.8974%" height="15" fill="rgb(238,28,14)" fg:x="5560" fg:w="53"/><text x="94.2587%" y="927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (53 samples, 0.90%)</title><rect x="94.1416%" y="901" width="0.8974%" height="15" fill="rgb(229,40,46)" fg:x="5560" fg:w="53"/><text x="94.2587%" y="911.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.90%)</title><rect x="94.1416%" y="885" width="0.8974%" height="15" fill="rgb(244,195,20)" fg:x="5560" fg:w="53"/><text x="94.2587%" y="895.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.86%)</title><rect x="94.1754%" y="869" width="0.8635%" height="15" fill="rgb(253,56,35)" fg:x="5562" fg:w="51"/><text x="94.2926%" y="879.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (51 samples, 0.86%)</title><rect x="94.1754%" y="853" width="0.8635%" height="15" fill="rgb(210,149,44)" fg:x="5562" fg:w="51"/><text x="94.2926%" y="863.50">a..</text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="95.0220%" y="837" width="0.0169%" height="15" fill="rgb(240,135,12)" fg:x="5612" fg:w="1"/><text x="95.1392%" y="847.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.02%)</title><rect x="95.0389%" y="917" width="0.0169%" height="15" fill="rgb(251,24,50)" fg:x="5613" fg:w="1"/><text x="95.1561%" y="927.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (678 samples, 11.48%)</title><rect x="83.8639%" y="933" width="11.4799%" height="15" fill="rgb(243,200,47)" fg:x="4953" fg:w="678"/><text x="83.9811%" y="943.50">fringe_vs_astar::structures::graph::gen..</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (17 samples, 0.29%)</title><rect x="95.0559%" y="917" width="0.2878%" height="15" fill="rgb(224,166,26)" fg:x="5614" fg:w="17"/><text x="95.1731%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.10%)</title><rect x="95.2421%" y="901" width="0.1016%" height="15" fill="rgb(233,0,47)" fg:x="5625" fg:w="6"/><text x="95.3593%" y="911.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.10%)</title><rect x="95.2421%" y="885" width="0.1016%" height="15" fill="rgb(253,80,5)" fg:x="5625" fg:w="6"/><text x="95.3593%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.10%)</title><rect x="95.2421%" y="869" width="0.1016%" height="15" fill="rgb(214,133,25)" fg:x="5625" fg:w="6"/><text x="95.3593%" y="879.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (9 samples, 0.15%)</title><rect x="95.3437%" y="933" width="0.1524%" height="15" fill="rgb(209,27,14)" fg:x="5631" fg:w="9"/><text x="95.4609%" y="943.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,451 samples, 24.57%)</title><rect x="71.0803%" y="949" width="24.5682%" height="15" fill="rgb(219,102,51)" fg:x="4198" fg:w="1451"/><text x="71.1974%" y="959.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (9 samples, 0.15%)</title><rect x="95.4961%" y="933" width="0.1524%" height="15" fill="rgb(237,18,16)" fg:x="5640" fg:w="9"/><text x="95.6133%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.15%)</title><rect x="95.4961%" y="917" width="0.1524%" height="15" fill="rgb(241,85,17)" fg:x="5640" fg:w="9"/><text x="95.6133%" y="927.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.15%)</title><rect x="95.4961%" y="901" width="0.1524%" height="15" fill="rgb(236,90,42)" fg:x="5640" fg:w="9"/><text x="95.6133%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.15%)</title><rect x="95.4961%" y="885" width="0.1524%" height="15" fill="rgb(249,57,21)" fg:x="5640" fg:w="9"/><text x="95.6133%" y="895.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,452 samples, 24.59%)</title><rect x="71.0803%" y="965" width="24.5852%" height="15" fill="rgb(243,12,36)" fg:x="4198" fg:w="1452"/><text x="71.1974%" y="975.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.02%)</title><rect x="95.6485%" y="949" width="0.0169%" height="15" fill="rgb(253,128,47)" fg:x="5649" fg:w="1"/><text x="95.7657%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.17%)</title><rect x="95.7839%" y="821" width="0.1693%" height="15" fill="rgb(207,33,20)" fg:x="5657" fg:w="10"/><text x="95.9011%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.03%)</title><rect x="95.9533%" y="789" width="0.0339%" height="15" fill="rgb(233,215,35)" fg:x="5667" fg:w="2"/><text x="96.0705%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="95.9533%" y="773" width="0.0339%" height="15" fill="rgb(249,188,52)" fg:x="5667" fg:w="2"/><text x="96.0705%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="95.9533%" y="757" width="0.0339%" height="15" fill="rgb(225,12,32)" fg:x="5667" fg:w="2"/><text x="96.0705%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (11 samples, 0.19%)</title><rect x="95.9871%" y="789" width="0.1863%" height="15" fill="rgb(247,98,14)" fg:x="5669" fg:w="11"/><text x="96.1043%" y="799.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="96.1734%" y="421" width="0.0169%" height="15" fill="rgb(247,219,48)" fg:x="5680" fg:w="1"/><text x="96.2906%" y="431.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="96.1734%" y="405" width="0.0169%" height="15" fill="rgb(253,60,48)" fg:x="5680" fg:w="1"/><text x="96.2906%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="96.1734%" y="389" width="0.0169%" height="15" fill="rgb(245,15,52)" fg:x="5680" fg:w="1"/><text x="96.2906%" y="399.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="96.1734%" y="373" width="0.0169%" height="15" fill="rgb(220,133,28)" fg:x="5680" fg:w="1"/><text x="96.2906%" y="383.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="96.1734%" y="357" width="0.0169%" height="15" fill="rgb(217,180,4)" fg:x="5680" fg:w="1"/><text x="96.2906%" y="367.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="96.1734%" y="341" width="0.0169%" height="15" fill="rgb(251,24,1)" fg:x="5680" fg:w="1"/><text x="96.2906%" y="351.50"></text></g><g><title>_compound_head (1 samples, 0.02%)</title><rect x="96.1903%" y="357" width="0.0169%" height="15" fill="rgb(212,185,49)" fg:x="5681" fg:w="1"/><text x="96.3075%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.44%)</title><rect x="95.7839%" y="837" width="0.4402%" height="15" fill="rgb(215,175,22)" fg:x="5657" fg:w="26"/><text x="95.9011%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.27%)</title><rect x="95.9533%" y="821" width="0.2709%" height="15" fill="rgb(250,205,14)" fg:x="5667" fg:w="16"/><text x="96.0705%" y="831.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (16 samples, 0.27%)</title><rect x="95.9533%" y="805" width="0.2709%" height="15" fill="rgb(225,211,22)" fg:x="5667" fg:w="16"/><text x="96.0705%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="96.1734%" y="789" width="0.0508%" height="15" fill="rgb(251,179,42)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (3 samples, 0.05%)</title><rect x="96.1734%" y="773" width="0.0508%" height="15" fill="rgb(208,216,51)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="96.1734%" y="757" width="0.0508%" height="15" fill="rgb(235,36,11)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (3 samples, 0.05%)</title><rect x="96.1734%" y="741" width="0.0508%" height="15" fill="rgb(213,189,28)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="96.1734%" y="725" width="0.0508%" height="15" fill="rgb(227,203,42)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3 samples, 0.05%)</title><rect x="96.1734%" y="709" width="0.0508%" height="15" fill="rgb(244,72,36)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="96.1734%" y="693" width="0.0508%" height="15" fill="rgb(213,53,17)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="96.1734%" y="677" width="0.0508%" height="15" fill="rgb(207,167,3)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="96.1734%" y="661" width="0.0508%" height="15" fill="rgb(216,98,30)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="671.50"></text></g><g><title>__GI___libc_free (3 samples, 0.05%)</title><rect x="96.1734%" y="645" width="0.0508%" height="15" fill="rgb(236,123,15)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="655.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="96.1734%" y="629" width="0.0508%" height="15" fill="rgb(248,81,50)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="639.50"></text></g><g><title>systrim (3 samples, 0.05%)</title><rect x="96.1734%" y="613" width="0.0508%" height="15" fill="rgb(214,120,4)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="623.50"></text></g><g><title>__glibc_morecore (3 samples, 0.05%)</title><rect x="96.1734%" y="597" width="0.0508%" height="15" fill="rgb(208,179,34)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="607.50"></text></g><g><title>__GI___sbrk (3 samples, 0.05%)</title><rect x="96.1734%" y="581" width="0.0508%" height="15" fill="rgb(227,140,7)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="591.50"></text></g><g><title>__GI___sbrk (3 samples, 0.05%)</title><rect x="96.1734%" y="565" width="0.0508%" height="15" fill="rgb(214,22,6)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="575.50"></text></g><g><title>__brk (3 samples, 0.05%)</title><rect x="96.1734%" y="549" width="0.0508%" height="15" fill="rgb(207,137,27)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="96.1734%" y="533" width="0.0508%" height="15" fill="rgb(210,8,46)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="543.50"></text></g><g><title>do_syscall_64 (3 samples, 0.05%)</title><rect x="96.1734%" y="517" width="0.0508%" height="15" fill="rgb(240,16,54)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="527.50"></text></g><g><title>x64_sys_call (3 samples, 0.05%)</title><rect x="96.1734%" y="501" width="0.0508%" height="15" fill="rgb(211,209,29)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="511.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.05%)</title><rect x="96.1734%" y="485" width="0.0508%" height="15" fill="rgb(226,228,24)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="495.50"></text></g><g><title>__do_sys_brk (3 samples, 0.05%)</title><rect x="96.1734%" y="469" width="0.0508%" height="15" fill="rgb(222,84,9)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="479.50"></text></g><g><title>do_vmi_align_munmap (3 samples, 0.05%)</title><rect x="96.1734%" y="453" width="0.0508%" height="15" fill="rgb(234,203,30)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="463.50"></text></g><g><title>unmap_region (3 samples, 0.05%)</title><rect x="96.1734%" y="437" width="0.0508%" height="15" fill="rgb(238,109,14)" fg:x="5680" fg:w="3"/><text x="96.2906%" y="447.50"></text></g><g><title>unmap_vmas (2 samples, 0.03%)</title><rect x="96.1903%" y="421" width="0.0339%" height="15" fill="rgb(233,206,34)" fg:x="5681" fg:w="2"/><text x="96.3075%" y="431.50"></text></g><g><title>unmap_single_vma (2 samples, 0.03%)</title><rect x="96.1903%" y="405" width="0.0339%" height="15" fill="rgb(220,167,47)" fg:x="5681" fg:w="2"/><text x="96.3075%" y="415.50"></text></g><g><title>unmap_page_range (2 samples, 0.03%)</title><rect x="96.1903%" y="389" width="0.0339%" height="15" fill="rgb(238,105,10)" fg:x="5681" fg:w="2"/><text x="96.3075%" y="399.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.03%)</title><rect x="96.1903%" y="373" width="0.0339%" height="15" fill="rgb(213,227,17)" fg:x="5681" fg:w="2"/><text x="96.3075%" y="383.50"></text></g><g><title>zap_pte_range (1 samples, 0.02%)</title><rect x="96.2072%" y="357" width="0.0169%" height="15" fill="rgb(217,132,38)" fg:x="5682" fg:w="1"/><text x="96.3244%" y="367.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="96.2072%" y="341" width="0.0169%" height="15" fill="rgb(242,146,4)" fg:x="5682" fg:w="1"/><text x="96.3244%" y="351.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="96.2072%" y="325" width="0.0169%" height="15" fill="rgb(212,61,9)" fg:x="5682" fg:w="1"/><text x="96.3244%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="96.2072%" y="309" width="0.0169%" height="15" fill="rgb(247,126,22)" fg:x="5682" fg:w="1"/><text x="96.3244%" y="319.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="96.2072%" y="293" width="0.0169%" height="15" fill="rgb(220,196,2)" fg:x="5682" fg:w="1"/><text x="96.3244%" y="303.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="96.2072%" y="277" width="0.0169%" height="15" fill="rgb(208,46,4)" fg:x="5682" fg:w="1"/><text x="96.3244%" y="287.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="96.2580%" y="533" width="0.0169%" height="15" fill="rgb(252,104,46)" fg:x="5685" fg:w="1"/><text x="96.3752%" y="543.50"></text></g><g><title>__mem_cgroup_charge (3 samples, 0.05%)</title><rect x="96.2580%" y="549" width="0.0508%" height="15" fill="rgb(237,152,48)" fg:x="5685" fg:w="3"/><text x="96.3752%" y="559.50"></text></g><g><title>charge_memcg (2 samples, 0.03%)</title><rect x="96.2750%" y="533" width="0.0339%" height="15" fill="rgb(221,59,37)" fg:x="5686" fg:w="2"/><text x="96.3922%" y="543.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="96.2919%" y="517" width="0.0169%" height="15" fill="rgb(209,202,51)" fg:x="5687" fg:w="1"/><text x="96.4091%" y="527.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="96.2919%" y="501" width="0.0169%" height="15" fill="rgb(228,81,30)" fg:x="5687" fg:w="1"/><text x="96.4091%" y="511.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.02%)</title><rect x="96.3088%" y="549" width="0.0169%" height="15" fill="rgb(227,42,39)" fg:x="5688" fg:w="1"/><text x="96.4260%" y="559.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.08%)</title><rect x="96.2580%" y="661" width="0.0847%" height="15" fill="rgb(221,26,2)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="671.50"></text></g><g><title>exc_page_fault (5 samples, 0.08%)</title><rect x="96.2580%" y="645" width="0.0847%" height="15" fill="rgb(254,61,31)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="655.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.08%)</title><rect x="96.2580%" y="629" width="0.0847%" height="15" fill="rgb(222,173,38)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="639.50"></text></g><g><title>handle_mm_fault (5 samples, 0.08%)</title><rect x="96.2580%" y="613" width="0.0847%" height="15" fill="rgb(218,50,12)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="623.50"></text></g><g><title>__handle_mm_fault (5 samples, 0.08%)</title><rect x="96.2580%" y="597" width="0.0847%" height="15" fill="rgb(223,88,40)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="607.50"></text></g><g><title>handle_pte_fault (5 samples, 0.08%)</title><rect x="96.2580%" y="581" width="0.0847%" height="15" fill="rgb(237,54,19)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="591.50"></text></g><g><title>do_anonymous_page (5 samples, 0.08%)</title><rect x="96.2580%" y="565" width="0.0847%" height="15" fill="rgb(251,129,25)" fg:x="5685" fg:w="5"/><text x="96.3752%" y="575.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="96.3258%" y="549" width="0.0169%" height="15" fill="rgb(238,97,19)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="559.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="96.3258%" y="533" width="0.0169%" height="15" fill="rgb(240,169,18)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="543.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="96.3258%" y="517" width="0.0169%" height="15" fill="rgb(230,187,49)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="527.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="96.3258%" y="501" width="0.0169%" height="15" fill="rgb(209,44,26)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="511.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="96.3258%" y="485" width="0.0169%" height="15" fill="rgb(244,0,6)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="495.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="96.3258%" y="469" width="0.0169%" height="15" fill="rgb(248,18,21)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="479.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="96.3258%" y="453" width="0.0169%" height="15" fill="rgb(245,180,19)" fg:x="5689" fg:w="1"/><text x="96.4430%" y="463.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="96.3427%" y="661" width="0.0169%" height="15" fill="rgb(252,118,36)" fg:x="5690" fg:w="1"/><text x="96.4599%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.15%)</title><rect x="96.2242%" y="837" width="0.1524%" height="15" fill="rgb(210,224,19)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.15%)</title><rect x="96.2242%" y="821" width="0.1524%" height="15" fill="rgb(218,30,24)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.15%)</title><rect x="96.2242%" y="805" width="0.1524%" height="15" fill="rgb(219,75,50)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.15%)</title><rect x="96.2242%" y="789" width="0.1524%" height="15" fill="rgb(234,72,50)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.15%)</title><rect x="96.2242%" y="773" width="0.1524%" height="15" fill="rgb(219,100,48)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.15%)</title><rect x="96.2242%" y="757" width="0.1524%" height="15" fill="rgb(253,5,41)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.15%)</title><rect x="96.2242%" y="741" width="0.1524%" height="15" fill="rgb(247,181,11)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="751.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.15%)</title><rect x="96.2242%" y="725" width="0.1524%" height="15" fill="rgb(222,223,25)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="735.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.15%)</title><rect x="96.2242%" y="709" width="0.1524%" height="15" fill="rgb(214,198,28)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="719.50"></text></g><g><title>_int_realloc (9 samples, 0.15%)</title><rect x="96.2242%" y="693" width="0.1524%" height="15" fill="rgb(230,46,43)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="703.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9 samples, 0.15%)</title><rect x="96.2242%" y="677" width="0.1524%" height="15" fill="rgb(233,65,53)" fg:x="5683" fg:w="9"/><text x="96.3414%" y="687.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="96.3596%" y="661" width="0.0169%" height="15" fill="rgb(221,121,27)" fg:x="5691" fg:w="1"/><text x="96.4768%" y="671.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.03%)</title><rect x="96.4104%" y="709" width="0.0339%" height="15" fill="rgb(247,70,47)" fg:x="5694" fg:w="2"/><text x="96.5276%" y="719.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.03%)</title><rect x="96.4104%" y="693" width="0.0339%" height="15" fill="rgb(228,85,35)" fg:x="5694" fg:w="2"/><text x="96.5276%" y="703.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.02%)</title><rect x="96.4443%" y="709" width="0.0169%" height="15" fill="rgb(209,50,18)" fg:x="5696" fg:w="1"/><text x="96.5615%" y="719.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="96.4443%" y="693" width="0.0169%" height="15" fill="rgb(250,19,35)" fg:x="5696" fg:w="1"/><text x="96.5615%" y="703.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.02%)</title><rect x="96.4443%" y="677" width="0.0169%" height="15" fill="rgb(253,107,29)" fg:x="5696" fg:w="1"/><text x="96.5615%" y="687.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="96.4443%" y="661" width="0.0169%" height="15" fill="rgb(252,179,29)" fg:x="5696" fg:w="1"/><text x="96.5615%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (48 samples, 0.81%)</title><rect x="95.6654%" y="949" width="0.8127%" height="15" fill="rgb(238,194,6)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.81%)</title><rect x="95.6654%" y="933" width="0.8127%" height="15" fill="rgb(238,164,29)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.81%)</title><rect x="95.6654%" y="917" width="0.8127%" height="15" fill="rgb(224,25,9)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.81%)</title><rect x="95.6654%" y="901" width="0.8127%" height="15" fill="rgb(244,153,23)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.81%)</title><rect x="95.6654%" y="885" width="0.8127%" height="15" fill="rgb(212,203,14)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (48 samples, 0.81%)</title><rect x="95.6654%" y="869" width="0.8127%" height="15" fill="rgb(220,164,20)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (48 samples, 0.81%)</title><rect x="95.6654%" y="853" width="0.8127%" height="15" fill="rgb(222,203,48)" fg:x="5650" fg:w="48"/><text x="95.7826%" y="863.50"></text></g><g><title>core::ptr::write (6 samples, 0.10%)</title><rect x="96.3766%" y="837" width="0.1016%" height="15" fill="rgb(215,159,22)" fg:x="5692" fg:w="6"/><text x="96.4938%" y="847.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.07%)</title><rect x="96.4104%" y="821" width="0.0677%" height="15" fill="rgb(216,183,47)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="831.50"></text></g><g><title>exc_page_fault (4 samples, 0.07%)</title><rect x="96.4104%" y="805" width="0.0677%" height="15" fill="rgb(229,195,25)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="815.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.07%)</title><rect x="96.4104%" y="789" width="0.0677%" height="15" fill="rgb(224,132,51)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="799.50"></text></g><g><title>handle_mm_fault (4 samples, 0.07%)</title><rect x="96.4104%" y="773" width="0.0677%" height="15" fill="rgb(240,63,7)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="783.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.07%)</title><rect x="96.4104%" y="757" width="0.0677%" height="15" fill="rgb(249,182,41)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="767.50"></text></g><g><title>handle_pte_fault (4 samples, 0.07%)</title><rect x="96.4104%" y="741" width="0.0677%" height="15" fill="rgb(243,47,26)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="751.50"></text></g><g><title>do_anonymous_page (4 samples, 0.07%)</title><rect x="96.4104%" y="725" width="0.0677%" height="15" fill="rgb(233,48,2)" fg:x="5694" fg:w="4"/><text x="96.5276%" y="735.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="96.4612%" y="709" width="0.0169%" height="15" fill="rgb(244,165,34)" fg:x="5697" fg:w="1"/><text x="96.5784%" y="719.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="96.4612%" y="693" width="0.0169%" height="15" fill="rgb(207,89,7)" fg:x="5697" fg:w="1"/><text x="96.5784%" y="703.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="96.4612%" y="677" width="0.0169%" height="15" fill="rgb(244,117,36)" fg:x="5697" fg:w="1"/><text x="96.5784%" y="687.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="96.4612%" y="661" width="0.0169%" height="15" fill="rgb(226,144,34)" fg:x="5697" fg:w="1"/><text x="96.5784%" y="671.50"></text></g><g><title>clear_page_erms (1 samples, 0.02%)</title><rect x="96.4612%" y="645" width="0.0169%" height="15" fill="rgb(213,23,19)" fg:x="5697" fg:w="1"/><text x="96.5784%" y="655.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.02%)</title><rect x="96.4782%" y="741" width="0.0169%" height="15" fill="rgb(217,75,12)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="751.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.02%)</title><rect x="96.4782%" y="725" width="0.0169%" height="15" fill="rgb(224,159,17)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.02%)</title><rect x="96.4782%" y="709" width="0.0169%" height="15" fill="rgb(217,118,1)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="719.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.02%)</title><rect x="96.4782%" y="693" width="0.0169%" height="15" fill="rgb(232,180,48)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="703.50"></text></g><g><title>__GI___libc_read (1 samples, 0.02%)</title><rect x="96.4782%" y="677" width="0.0169%" height="15" fill="rgb(230,27,33)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="96.4782%" y="661" width="0.0169%" height="15" fill="rgb(205,31,21)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="96.4782%" y="645" width="0.0169%" height="15" fill="rgb(253,59,4)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="655.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="96.4782%" y="629" width="0.0169%" height="15" fill="rgb(224,201,9)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="639.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="96.4782%" y="613" width="0.0169%" height="15" fill="rgb(229,206,30)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="623.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="96.4782%" y="597" width="0.0169%" height="15" fill="rgb(212,67,47)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="607.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="96.4782%" y="581" width="0.0169%" height="15" fill="rgb(211,96,50)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="591.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="96.4782%" y="565" width="0.0169%" height="15" fill="rgb(252,114,18)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="575.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="96.4782%" y="549" width="0.0169%" height="15" fill="rgb(223,58,37)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="559.50"></text></g><g><title>filemap_read (1 samples, 0.02%)</title><rect x="96.4782%" y="533" width="0.0169%" height="15" fill="rgb(237,70,4)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="543.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="96.4782%" y="517" width="0.0169%" height="15" fill="rgb(244,85,46)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="527.50"></text></g><g><title>_copy_to_iter (1 samples, 0.02%)</title><rect x="96.4782%" y="501" width="0.0169%" height="15" fill="rgb(223,39,52)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="511.50"></text></g><g><title>copyout (1 samples, 0.02%)</title><rect x="96.4782%" y="485" width="0.0169%" height="15" fill="rgb(218,200,14)" fg:x="5698" fg:w="1"/><text x="96.5953%" y="495.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (2 samples, 0.03%)</title><rect x="96.4782%" y="949" width="0.0339%" height="15" fill="rgb(208,171,16)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.03%)</title><rect x="96.4782%" y="933" width="0.0339%" height="15" fill="rgb(234,200,18)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="96.4782%" y="917" width="0.0339%" height="15" fill="rgb(228,45,11)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="96.4782%" y="901" width="0.0339%" height="15" fill="rgb(237,182,11)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="96.4782%" y="885" width="0.0339%" height="15" fill="rgb(241,175,49)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="96.4782%" y="869" width="0.0339%" height="15" fill="rgb(247,38,35)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.03%)</title><rect x="96.4782%" y="853" width="0.0339%" height="15" fill="rgb(228,39,49)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="96.4782%" y="837" width="0.0339%" height="15" fill="rgb(226,101,26)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="847.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="96.4782%" y="821" width="0.0339%" height="15" fill="rgb(206,141,19)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="831.50"></text></g><g><title>std::io::BufRead::read_line (2 samples, 0.03%)</title><rect x="96.4782%" y="805" width="0.0339%" height="15" fill="rgb(211,200,13)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="815.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.03%)</title><rect x="96.4782%" y="789" width="0.0339%" height="15" fill="rgb(241,121,6)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="799.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (2 samples, 0.03%)</title><rect x="96.4782%" y="773" width="0.0339%" height="15" fill="rgb(234,221,29)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="783.50"></text></g><g><title>std::io::read_until (2 samples, 0.03%)</title><rect x="96.4782%" y="757" width="0.0339%" height="15" fill="rgb(229,136,5)" fg:x="5698" fg:w="2"/><text x="96.5953%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="96.4951%" y="741" width="0.0169%" height="15" fill="rgb(238,36,11)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="96.4951%" y="725" width="0.0169%" height="15" fill="rgb(251,55,41)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="96.4951%" y="709" width="0.0169%" height="15" fill="rgb(242,34,40)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="96.4951%" y="693" width="0.0169%" height="15" fill="rgb(215,42,17)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="96.4951%" y="677" width="0.0169%" height="15" fill="rgb(207,44,46)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="96.4951%" y="661" width="0.0169%" height="15" fill="rgb(211,206,28)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="96.4951%" y="645" width="0.0169%" height="15" fill="rgb(237,167,16)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="655.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.13284448463870148805 (1 samples, 0.02%)</title><rect x="96.4951%" y="629" width="0.0169%" height="15" fill="rgb(233,66,6)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="96.4951%" y="613" width="0.0169%" height="15" fill="rgb(246,123,29)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="96.4951%" y="597" width="0.0169%" height="15" fill="rgb(209,62,40)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="607.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="96.4951%" y="581" width="0.0169%" height="15" fill="rgb(218,4,25)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="591.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="96.4951%" y="565" width="0.0169%" height="15" fill="rgb(253,91,49)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="575.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="96.4951%" y="549" width="0.0169%" height="15" fill="rgb(228,155,29)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="559.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="96.4951%" y="533" width="0.0169%" height="15" fill="rgb(243,57,37)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="543.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="96.4951%" y="517" width="0.0169%" height="15" fill="rgb(244,167,17)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="527.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="96.4951%" y="501" width="0.0169%" height="15" fill="rgb(207,181,38)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="511.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="96.4951%" y="485" width="0.0169%" height="15" fill="rgb(211,8,23)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="495.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="96.4951%" y="469" width="0.0169%" height="15" fill="rgb(235,11,44)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="479.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.02%)</title><rect x="96.4951%" y="453" width="0.0169%" height="15" fill="rgb(248,18,52)" fg:x="5699" fg:w="1"/><text x="96.6123%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.14%)</title><rect x="96.5290%" y="645" width="0.1355%" height="15" fill="rgb(208,4,7)" fg:x="5701" fg:w="8"/><text x="96.6461%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.14%)</title><rect x="96.5290%" y="629" width="0.1355%" height="15" fill="rgb(240,17,39)" fg:x="5701" fg:w="8"/><text x="96.6461%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.22%)</title><rect x="96.5290%" y="661" width="0.2201%" height="15" fill="rgb(207,170,3)" fg:x="5701" fg:w="13"/><text x="96.6461%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.08%)</title><rect x="96.6644%" y="645" width="0.0847%" height="15" fill="rgb(236,100,52)" fg:x="5709" fg:w="5"/><text x="96.7816%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.08%)</title><rect x="96.6644%" y="629" width="0.0847%" height="15" fill="rgb(246,78,51)" fg:x="5709" fg:w="5"/><text x="96.7816%" y="639.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (5 samples, 0.08%)</title><rect x="96.6644%" y="613" width="0.0847%" height="15" fill="rgb(211,17,15)" fg:x="5709" fg:w="5"/><text x="96.7816%" y="623.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="96.7660%" y="437" width="0.0169%" height="15" fill="rgb(209,59,46)" fg:x="5715" fg:w="1"/><text x="96.8832%" y="447.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.03%)</title><rect x="96.7829%" y="373" width="0.0339%" height="15" fill="rgb(210,92,25)" fg:x="5716" fg:w="2"/><text x="96.9001%" y="383.50"></text></g><g><title>charge_memcg (2 samples, 0.03%)</title><rect x="96.7829%" y="357" width="0.0339%" height="15" fill="rgb(238,174,52)" fg:x="5716" fg:w="2"/><text x="96.9001%" y="367.50"></text></g><g><title>try_charge_memcg (2 samples, 0.03%)</title><rect x="96.7829%" y="341" width="0.0339%" height="15" fill="rgb(230,73,7)" fg:x="5716" fg:w="2"/><text x="96.9001%" y="351.50"></text></g><g><title>consume_stock (1 samples, 0.02%)</title><rect x="96.7999%" y="325" width="0.0169%" height="15" fill="rgb(243,124,40)" fg:x="5717" fg:w="1"/><text x="96.9171%" y="335.50"></text></g><g><title>_int_malloc (4 samples, 0.07%)</title><rect x="96.7660%" y="501" width="0.0677%" height="15" fill="rgb(244,170,11)" fg:x="5715" fg:w="4"/><text x="96.8832%" y="511.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.07%)</title><rect x="96.7660%" y="485" width="0.0677%" height="15" fill="rgb(207,114,54)" fg:x="5715" fg:w="4"/><text x="96.8832%" y="495.50"></text></g><g><title>exc_page_fault (4 samples, 0.07%)</title><rect x="96.7660%" y="469" width="0.0677%" height="15" fill="rgb(205,42,20)" fg:x="5715" fg:w="4"/><text x="96.8832%" y="479.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.07%)</title><rect x="96.7660%" y="453" width="0.0677%" height="15" fill="rgb(230,30,28)" fg:x="5715" fg:w="4"/><text x="96.8832%" y="463.50"></text></g><g><title>handle_mm_fault (3 samples, 0.05%)</title><rect x="96.7829%" y="437" width="0.0508%" height="15" fill="rgb(205,73,54)" fg:x="5716" fg:w="3"/><text x="96.9001%" y="447.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="96.7829%" y="421" width="0.0508%" height="15" fill="rgb(254,227,23)" fg:x="5716" fg:w="3"/><text x="96.9001%" y="431.50"></text></g><g><title>handle_pte_fault (3 samples, 0.05%)</title><rect x="96.7829%" y="405" width="0.0508%" height="15" fill="rgb(228,202,34)" fg:x="5716" fg:w="3"/><text x="96.9001%" y="415.50"></text></g><g><title>do_anonymous_page (3 samples, 0.05%)</title><rect x="96.7829%" y="389" width="0.0508%" height="15" fill="rgb(222,225,37)" fg:x="5716" fg:w="3"/><text x="96.9001%" y="399.50"></text></g><g><title>policy_nodemask (1 samples, 0.02%)</title><rect x="96.8168%" y="373" width="0.0169%" height="15" fill="rgb(221,14,54)" fg:x="5718" fg:w="1"/><text x="96.9340%" y="383.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="96.8337%" y="341" width="0.0169%" height="15" fill="rgb(254,102,2)" fg:x="5719" fg:w="1"/><text x="96.9509%" y="351.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="96.8337%" y="325" width="0.0169%" height="15" fill="rgb(232,104,17)" fg:x="5719" fg:w="1"/><text x="96.9509%" y="335.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="96.8337%" y="309" width="0.0169%" height="15" fill="rgb(250,220,14)" fg:x="5719" fg:w="1"/><text x="96.9509%" y="319.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="96.8337%" y="293" width="0.0169%" height="15" fill="rgb(241,158,9)" fg:x="5719" fg:w="1"/><text x="96.9509%" y="303.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.03%)</title><rect x="96.8337%" y="501" width="0.0339%" height="15" fill="rgb(246,9,43)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="511.50"></text></g><g><title>exc_page_fault (2 samples, 0.03%)</title><rect x="96.8337%" y="485" width="0.0339%" height="15" fill="rgb(206,73,33)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="495.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="96.8337%" y="469" width="0.0339%" height="15" fill="rgb(222,79,8)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="479.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="96.8337%" y="453" width="0.0339%" height="15" fill="rgb(234,8,54)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="463.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="96.8337%" y="437" width="0.0339%" height="15" fill="rgb(209,134,38)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="447.50"></text></g><g><title>handle_pte_fault (2 samples, 0.03%)</title><rect x="96.8337%" y="421" width="0.0339%" height="15" fill="rgb(230,127,29)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="431.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="96.8337%" y="405" width="0.0339%" height="15" fill="rgb(242,44,41)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="415.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.03%)</title><rect x="96.8337%" y="389" width="0.0339%" height="15" fill="rgb(222,56,43)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="399.50"></text></g><g><title>__folio_alloc (2 samples, 0.03%)</title><rect x="96.8337%" y="373" width="0.0339%" height="15" fill="rgb(238,39,47)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="383.50"></text></g><g><title>__alloc_pages (2 samples, 0.03%)</title><rect x="96.8337%" y="357" width="0.0339%" height="15" fill="rgb(226,79,43)" fg:x="5719" fg:w="2"/><text x="96.9509%" y="367.50"></text></g><g><title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="96.8507%" y="341" width="0.0169%" height="15" fill="rgb(242,105,53)" fg:x="5720" fg:w="1"/><text x="96.9678%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.14%)</title><rect x="96.7491%" y="661" width="0.1355%" height="15" fill="rgb(251,132,46)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.14%)</title><rect x="96.7491%" y="645" width="0.1355%" height="15" fill="rgb(231,77,14)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.14%)</title><rect x="96.7491%" y="629" width="0.1355%" height="15" fill="rgb(240,135,9)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.14%)</title><rect x="96.7491%" y="613" width="0.1355%" height="15" fill="rgb(248,109,14)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.14%)</title><rect x="96.7491%" y="597" width="0.1355%" height="15" fill="rgb(227,146,52)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.14%)</title><rect x="96.7491%" y="581" width="0.1355%" height="15" fill="rgb(232,54,3)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.14%)</title><rect x="96.7491%" y="565" width="0.1355%" height="15" fill="rgb(229,201,43)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="575.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.14%)</title><rect x="96.7491%" y="549" width="0.1355%" height="15" fill="rgb(252,161,33)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="559.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.14%)</title><rect x="96.7491%" y="533" width="0.1355%" height="15" fill="rgb(226,146,40)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="543.50"></text></g><g><title>_int_realloc (8 samples, 0.14%)</title><rect x="96.7491%" y="517" width="0.1355%" height="15" fill="rgb(219,47,25)" fg:x="5714" fg:w="8"/><text x="96.8663%" y="527.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="96.8676%" y="501" width="0.0169%" height="15" fill="rgb(250,135,13)" fg:x="5721" fg:w="1"/><text x="96.9848%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.44%)</title><rect x="96.5120%" y="933" width="0.4402%" height="15" fill="rgb(219,229,18)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.44%)</title><rect x="96.5120%" y="917" width="0.4402%" height="15" fill="rgb(217,152,27)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.44%)</title><rect x="96.5120%" y="901" width="0.4402%" height="15" fill="rgb(225,71,47)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.44%)</title><rect x="96.5120%" y="885" width="0.4402%" height="15" fill="rgb(220,139,14)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.44%)</title><rect x="96.5120%" y="869" width="0.4402%" height="15" fill="rgb(247,54,32)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (26 samples, 0.44%)</title><rect x="96.5120%" y="853" width="0.4402%" height="15" fill="rgb(252,131,39)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.44%)</title><rect x="96.5120%" y="837" width="0.4402%" height="15" fill="rgb(210,108,39)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.44%)</title><rect x="96.5120%" y="821" width="0.4402%" height="15" fill="rgb(205,23,29)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.44%)</title><rect x="96.5120%" y="805" width="0.4402%" height="15" fill="rgb(246,139,46)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (26 samples, 0.44%)</title><rect x="96.5120%" y="789" width="0.4402%" height="15" fill="rgb(250,81,26)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="799.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (26 samples, 0.44%)</title><rect x="96.5120%" y="773" width="0.4402%" height="15" fill="rgb(214,104,7)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.44%)</title><rect x="96.5120%" y="757" width="0.4402%" height="15" fill="rgb(233,189,8)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.44%)</title><rect x="96.5120%" y="741" width="0.4402%" height="15" fill="rgb(228,141,17)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.44%)</title><rect x="96.5120%" y="725" width="0.4402%" height="15" fill="rgb(247,157,1)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.44%)</title><rect x="96.5120%" y="709" width="0.4402%" height="15" fill="rgb(249,225,5)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 0.44%)</title><rect x="96.5120%" y="693" width="0.4402%" height="15" fill="rgb(242,55,13)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (26 samples, 0.44%)</title><rect x="96.5120%" y="677" width="0.4402%" height="15" fill="rgb(230,49,50)" fg:x="5700" fg:w="26"/><text x="96.6292%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (4 samples, 0.07%)</title><rect x="96.8845%" y="661" width="0.0677%" height="15" fill="rgb(241,111,38)" fg:x="5722" fg:w="4"/><text x="97.0017%" y="671.50"></text></g><g><title>_start (5,507 samples, 93.24%)</title><rect x="3.7250%" y="1125" width="93.2442%" height="15" fill="rgb(252,155,4)" fg:x="220" fg:w="5507"/><text x="3.8422%" y="1135.50">_start</text></g><g><title>__libc_start_main_impl (5,507 samples, 93.24%)</title><rect x="3.7250%" y="1109" width="93.2442%" height="15" fill="rgb(212,69,32)" fg:x="220" fg:w="5507"/><text x="3.8422%" y="1119.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (5,506 samples, 93.23%)</title><rect x="3.7420%" y="1093" width="93.2272%" height="15" fill="rgb(243,107,47)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1103.50">__libc_start_call_main</text></g><g><title>main (5,506 samples, 93.23%)</title><rect x="3.7420%" y="1077" width="93.2272%" height="15" fill="rgb(247,130,12)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (5,506 samples, 93.23%)</title><rect x="3.7420%" y="1061" width="93.2272%" height="15" fill="rgb(233,74,16)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (5,506 samples, 93.23%)</title><rect x="3.7420%" y="1045" width="93.2272%" height="15" fill="rgb(208,58,18)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1055.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,506 samples, 93.23%)</title><rect x="3.7420%" y="1029" width="93.2272%" height="15" fill="rgb(242,225,1)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1039.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (5,506 samples, 93.23%)</title><rect x="3.7420%" y="1013" width="93.2272%" height="15" fill="rgb(249,39,40)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1023.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (5,506 samples, 93.23%)</title><rect x="3.7420%" y="997" width="93.2272%" height="15" fill="rgb(207,72,44)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="1007.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (5,506 samples, 93.23%)</title><rect x="3.7420%" y="981" width="93.2272%" height="15" fill="rgb(215,193,12)" fg:x="221" fg:w="5506"/><text x="3.8591%" y="991.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (77 samples, 1.30%)</title><rect x="95.6654%" y="965" width="1.3038%" height="15" fill="rgb(248,41,39)" fg:x="5650" fg:w="77"/><text x="95.7826%" y="975.50">fr..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map (27 samples, 0.46%)</title><rect x="96.5120%" y="949" width="0.4572%" height="15" fill="rgb(253,85,4)" fg:x="5700" fg:w="27"/><text x="96.6292%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect x="96.9523%" y="933" width="0.0169%" height="15" fill="rgb(243,70,31)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.9523%" y="917" width="0.0169%" height="15" fill="rgb(253,195,26)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.02%)</title><rect x="96.9523%" y="901" width="0.0169%" height="15" fill="rgb(243,42,11)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="96.9523%" y="885" width="0.0169%" height="15" fill="rgb(239,66,17)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="96.9523%" y="869" width="0.0169%" height="15" fill="rgb(217,132,21)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="96.9523%" y="853" width="0.0169%" height="15" fill="rgb(252,202,21)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.9523%" y="837" width="0.0169%" height="15" fill="rgb(233,98,36)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="96.9523%" y="821" width="0.0169%" height="15" fill="rgb(216,153,54)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="96.9523%" y="805" width="0.0169%" height="15" fill="rgb(250,99,7)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="815.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="96.9523%" y="789" width="0.0169%" height="15" fill="rgb(207,56,50)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="96.9523%" y="773" width="0.0169%" height="15" fill="rgb(244,61,34)" fg:x="5726" fg:w="1"/><text x="97.0694%" y="783.50"></text></g><g><title>asm_exc_page_fault (131 samples, 2.22%)</title><rect x="96.9692%" y="1125" width="2.2181%" height="15" fill="rgb(241,50,38)" fg:x="5727" fg:w="131"/><text x="97.0864%" y="1135.50">asm_ex..</text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.1873%" y="1077" width="0.0169%" height="15" fill="rgb(212,166,30)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="1087.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.1873%" y="1061" width="0.0169%" height="15" fill="rgb(249,127,32)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="1071.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.1873%" y="1045" width="0.0169%" height="15" fill="rgb(209,103,0)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="1055.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="99.1873%" y="1029" width="0.0169%" height="15" fill="rgb(238,209,51)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="1039.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.1873%" y="1013" width="0.0169%" height="15" fill="rgb(237,56,23)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="1023.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.1873%" y="997" width="0.0169%" height="15" fill="rgb(215,153,46)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="1007.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.1873%" y="981" width="0.0169%" height="15" fill="rgb(224,49,31)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="991.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.1873%" y="965" width="0.0169%" height="15" fill="rgb(250,18,42)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="975.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="99.1873%" y="949" width="0.0169%" height="15" fill="rgb(215,176,39)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="959.50"></text></g><g><title>change_protection (1 samples, 0.02%)</title><rect x="99.1873%" y="933" width="0.0169%" height="15" fill="rgb(223,77,29)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="943.50"></text></g><g><title>change_protection_range (1 samples, 0.02%)</title><rect x="99.1873%" y="917" width="0.0169%" height="15" fill="rgb(234,94,52)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="927.50"></text></g><g><title>change_p4d_range (1 samples, 0.02%)</title><rect x="99.1873%" y="901" width="0.0169%" height="15" fill="rgb(220,154,50)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="911.50"></text></g><g><title>change_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="99.1873%" y="885" width="0.0169%" height="15" fill="rgb(212,11,10)" fg:x="5858" fg:w="1"/><text x="99.3045%" y="895.50"></text></g><g><title>__mt_destroy (1 samples, 0.02%)</title><rect x="99.2042%" y="965" width="0.0169%" height="15" fill="rgb(205,166,19)" fg:x="5859" fg:w="1"/><text x="99.3214%" y="975.50"></text></g><g><title>_compound_head (9 samples, 0.15%)</title><rect x="99.2211%" y="901" width="0.1524%" height="15" fill="rgb(244,198,16)" fg:x="5860" fg:w="9"/><text x="99.3383%" y="911.50"></text></g><g><title>vm_normal_page (1 samples, 0.02%)</title><rect x="99.3735%" y="901" width="0.0169%" height="15" fill="rgb(219,69,12)" fg:x="5869" fg:w="1"/><text x="99.4907%" y="911.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.05%)</title><rect x="99.4412%" y="853" width="0.0508%" height="15" fill="rgb(245,30,7)" fg:x="5873" fg:w="3"/><text x="99.5584%" y="863.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.05%)</title><rect x="99.4412%" y="837" width="0.0508%" height="15" fill="rgb(218,221,48)" fg:x="5873" fg:w="3"/><text x="99.5584%" y="847.50"></text></g><g><title>page_remove_rmap (6 samples, 0.10%)</title><rect x="99.4074%" y="885" width="0.1016%" height="15" fill="rgb(216,66,15)" fg:x="5871" fg:w="6"/><text x="99.5246%" y="895.50"></text></g><g><title>__mod_lruvec_page_state (4 samples, 0.07%)</title><rect x="99.4412%" y="869" width="0.0677%" height="15" fill="rgb(226,122,50)" fg:x="5873" fg:w="4"/><text x="99.5584%" y="879.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="99.4920%" y="853" width="0.0169%" height="15" fill="rgb(239,156,16)" fg:x="5876" fg:w="1"/><text x="99.6092%" y="863.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.03%)</title><rect x="99.5090%" y="821" width="0.0339%" height="15" fill="rgb(224,27,38)" fg:x="5877" fg:w="2"/><text x="99.6262%" y="831.50"></text></g><g><title>uncharge_folio (2 samples, 0.03%)</title><rect x="99.5090%" y="805" width="0.0339%" height="15" fill="rgb(224,39,27)" fg:x="5877" fg:w="2"/><text x="99.6262%" y="815.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.5428%" y="821" width="0.0169%" height="15" fill="rgb(215,92,29)" fg:x="5879" fg:w="1"/><text x="99.6600%" y="831.50"></text></g><g><title>free_unref_page_commit (15 samples, 0.25%)</title><rect x="99.5598%" y="805" width="0.2540%" height="15" fill="rgb(207,159,16)" fg:x="5880" fg:w="15"/><text x="99.6770%" y="815.50"></text></g><g><title>free_pcppages_bulk (13 samples, 0.22%)</title><rect x="99.5936%" y="789" width="0.2201%" height="15" fill="rgb(238,163,47)" fg:x="5882" fg:w="13"/><text x="99.7108%" y="799.50"></text></g><g><title>__free_one_page (12 samples, 0.20%)</title><rect x="99.6106%" y="773" width="0.2032%" height="15" fill="rgb(219,91,49)" fg:x="5883" fg:w="12"/><text x="99.7278%" y="783.50"></text></g><g><title>free_unref_page_list (16 samples, 0.27%)</title><rect x="99.5598%" y="821" width="0.2709%" height="15" fill="rgb(227,167,31)" fg:x="5880" fg:w="16"/><text x="99.6770%" y="831.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="99.8137%" y="805" width="0.0169%" height="15" fill="rgb(234,80,54)" fg:x="5895" fg:w="1"/><text x="99.9309%" y="815.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="99.8645%" y="805" width="0.0339%" height="15" fill="rgb(212,114,2)" fg:x="5898" fg:w="2"/><text x="99.9817%" y="815.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="99.8815%" y="789" width="0.0169%" height="15" fill="rgb(234,50,24)" fg:x="5899" fg:w="1"/><text x="99.9987%" y="799.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="99.8815%" y="773" width="0.0169%" height="15" fill="rgb(221,68,8)" fg:x="5899" fg:w="1"/><text x="99.9987%" y="783.50"></text></g><g><title>fringe-vs-astar (5,901 samples, 99.92%)</title><rect x="0.0000%" y="1141" width="99.9153%" height="15" fill="rgb(254,180,31)" fg:x="0" fg:w="5901"/><text x="0.1172%" y="1151.50">fringe-vs-astar</text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.73%)</title><rect x="99.1873%" y="1125" width="0.7281%" height="15" fill="rgb(247,130,50)" fg:x="5858" fg:w="43"/><text x="99.3045%" y="1135.50"></text></g><g><title>do_syscall_64 (43 samples, 0.73%)</title><rect x="99.1873%" y="1109" width="0.7281%" height="15" fill="rgb(211,109,4)" fg:x="5858" fg:w="43"/><text x="99.3045%" y="1119.50"></text></g><g><title>x64_sys_call (43 samples, 0.73%)</title><rect x="99.1873%" y="1093" width="0.7281%" height="15" fill="rgb(238,50,21)" fg:x="5858" fg:w="43"/><text x="99.3045%" y="1103.50"></text></g><g><title>__x64_sys_exit_group (42 samples, 0.71%)</title><rect x="99.2042%" y="1077" width="0.7111%" height="15" fill="rgb(225,57,45)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="1087.50"></text></g><g><title>do_group_exit (42 samples, 0.71%)</title><rect x="99.2042%" y="1061" width="0.7111%" height="15" fill="rgb(209,196,50)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="1071.50"></text></g><g><title>do_exit (42 samples, 0.71%)</title><rect x="99.2042%" y="1045" width="0.7111%" height="15" fill="rgb(242,140,13)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="1055.50"></text></g><g><title>exit_mm (42 samples, 0.71%)</title><rect x="99.2042%" y="1029" width="0.7111%" height="15" fill="rgb(217,111,7)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="1039.50"></text></g><g><title>mmput (42 samples, 0.71%)</title><rect x="99.2042%" y="1013" width="0.7111%" height="15" fill="rgb(253,193,51)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="1023.50"></text></g><g><title>__mmput (42 samples, 0.71%)</title><rect x="99.2042%" y="997" width="0.7111%" height="15" fill="rgb(252,70,29)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="1007.50"></text></g><g><title>exit_mmap (42 samples, 0.71%)</title><rect x="99.2042%" y="981" width="0.7111%" height="15" fill="rgb(232,127,12)" fg:x="5859" fg:w="42"/><text x="99.3214%" y="991.50"></text></g><g><title>unmap_vmas (41 samples, 0.69%)</title><rect x="99.2211%" y="965" width="0.6942%" height="15" fill="rgb(211,180,21)" fg:x="5860" fg:w="41"/><text x="99.3383%" y="975.50"></text></g><g><title>unmap_single_vma (41 samples, 0.69%)</title><rect x="99.2211%" y="949" width="0.6942%" height="15" fill="rgb(229,72,13)" fg:x="5860" fg:w="41"/><text x="99.3383%" y="959.50"></text></g><g><title>unmap_page_range (41 samples, 0.69%)</title><rect x="99.2211%" y="933" width="0.6942%" height="15" fill="rgb(240,211,49)" fg:x="5860" fg:w="41"/><text x="99.3383%" y="943.50"></text></g><g><title>zap_pmd_range.isra.0 (41 samples, 0.69%)</title><rect x="99.2211%" y="917" width="0.6942%" height="15" fill="rgb(219,149,40)" fg:x="5860" fg:w="41"/><text x="99.3383%" y="927.50"></text></g><g><title>zap_pte_range (31 samples, 0.52%)</title><rect x="99.3905%" y="901" width="0.5249%" height="15" fill="rgb(210,127,46)" fg:x="5870" fg:w="31"/><text x="99.5076%" y="911.50"></text></g><g><title>tlb_flush_mmu (24 samples, 0.41%)</title><rect x="99.5090%" y="885" width="0.4064%" height="15" fill="rgb(220,106,7)" fg:x="5877" fg:w="24"/><text x="99.6262%" y="895.50"></text></g><g><title>tlb_batch_pages_flush (24 samples, 0.41%)</title><rect x="99.5090%" y="869" width="0.4064%" height="15" fill="rgb(249,31,22)" fg:x="5877" fg:w="24"/><text x="99.6262%" y="879.50"></text></g><g><title>free_pages_and_swap_cache (24 samples, 0.41%)</title><rect x="99.5090%" y="853" width="0.4064%" height="15" fill="rgb(253,1,49)" fg:x="5877" fg:w="24"/><text x="99.6262%" y="863.50"></text></g><g><title>release_pages (24 samples, 0.41%)</title><rect x="99.5090%" y="837" width="0.4064%" height="15" fill="rgb(227,144,33)" fg:x="5877" fg:w="24"/><text x="99.6262%" y="847.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (5 samples, 0.08%)</title><rect x="99.8307%" y="821" width="0.0847%" height="15" fill="rgb(249,163,44)" fg:x="5896" fg:w="5"/><text x="99.9479%" y="831.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="99.8984%" y="805" width="0.0169%" height="15" fill="rgb(234,15,39)" fg:x="5900" fg:w="1"/><text x="100.0156%" y="815.50"></text></g><g><title>all (5,906 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(207,66,16)" fg:x="0" fg:w="5906"/><text x="0.1172%" y="1167.50"></text></g><g><title>perf-exec (5 samples, 0.08%)</title><rect x="99.9153%" y="1141" width="0.0847%" height="15" fill="rgb(233,112,24)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="99.9153%" y="1125" width="0.0847%" height="15" fill="rgb(230,90,22)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1135.50"></text></g><g><title>do_syscall_64 (5 samples, 0.08%)</title><rect x="99.9153%" y="1109" width="0.0847%" height="15" fill="rgb(229,61,13)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1119.50"></text></g><g><title>x64_sys_call (5 samples, 0.08%)</title><rect x="99.9153%" y="1093" width="0.0847%" height="15" fill="rgb(225,57,24)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1103.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.08%)</title><rect x="99.9153%" y="1077" width="0.0847%" height="15" fill="rgb(208,169,48)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1087.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.08%)</title><rect x="99.9153%" y="1061" width="0.0847%" height="15" fill="rgb(244,218,51)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1071.50"></text></g><g><title>bprm_execve (5 samples, 0.08%)</title><rect x="99.9153%" y="1045" width="0.0847%" height="15" fill="rgb(214,148,10)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1055.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.08%)</title><rect x="99.9153%" y="1029" width="0.0847%" height="15" fill="rgb(225,174,27)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1039.50"></text></g><g><title>exec_binprm (5 samples, 0.08%)</title><rect x="99.9153%" y="1013" width="0.0847%" height="15" fill="rgb(230,96,26)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1023.50"></text></g><g><title>search_binary_handler (5 samples, 0.08%)</title><rect x="99.9153%" y="997" width="0.0847%" height="15" fill="rgb(232,10,30)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="1007.50"></text></g><g><title>load_elf_binary (5 samples, 0.08%)</title><rect x="99.9153%" y="981" width="0.0847%" height="15" fill="rgb(222,8,50)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="991.50"></text></g><g><title>begin_new_exec (5 samples, 0.08%)</title><rect x="99.9153%" y="965" width="0.0847%" height="15" fill="rgb(213,81,27)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="975.50"></text></g><g><title>perf_event_exec (5 samples, 0.08%)</title><rect x="99.9153%" y="949" width="0.0847%" height="15" fill="rgb(245,50,10)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="959.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.08%)</title><rect x="99.9153%" y="933" width="0.0847%" height="15" fill="rgb(216,100,18)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="943.50"></text></g><g><title>ctx_resched (5 samples, 0.08%)</title><rect x="99.9153%" y="917" width="0.0847%" height="15" fill="rgb(236,147,54)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="927.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.08%)</title><rect x="99.9153%" y="901" width="0.0847%" height="15" fill="rgb(205,143,26)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="911.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="99.9153%" y="885" width="0.0847%" height="15" fill="rgb(236,26,9)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="895.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="99.9153%" y="869" width="0.0847%" height="15" fill="rgb(221,165,53)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="879.50"></text></g><g><title>native_write_msr (5 samples, 0.08%)</title><rect x="99.9153%" y="853" width="0.0847%" height="15" fill="rgb(214,110,17)" fg:x="5901" fg:w="5"/><text x="100.0325%" y="863.50"></text></g></svg></svg>