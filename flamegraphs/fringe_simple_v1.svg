<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="838" onload="init(evt)" viewBox="0 0 2560 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="821.00"> </text><svg id="frames" x="10" width="2540" total_samples="5375"><g><title>__GI___libc_realloc (4 samples, 0.07%)</title><rect x="0.0000%" y="741" width="0.0744%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.1172%" y="751.50"></text></g><g><title>__rdl_realloc (2 samples, 0.04%)</title><rect x="0.0744%" y="741" width="0.0372%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="2"/><text x="0.1916%" y="751.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="0.1116%" y="741" width="0.0372%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="2"/><text x="0.2288%" y="751.50"></text></g><g><title>_int_malloc (5 samples, 0.09%)</title><rect x="0.1488%" y="741" width="0.0930%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="5"/><text x="0.2660%" y="751.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="0.2419%" y="741" width="0.0186%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="1"/><text x="0.3590%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.06%)</title><rect x="0.2605%" y="741" width="0.0558%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="3"/><text x="0.3777%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="0.3163%" y="741" width="0.0372%" height="15" fill="rgb(207,160,47)" fg:x="17" fg:w="2"/><text x="0.4335%" y="751.50"></text></g><g><title>[[heap]] (27 samples, 0.50%)</title><rect x="0.0000%" y="757" width="0.5023%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="27"/><text x="0.1172%" y="767.50"></text></g><g><title>unlink_chunk (8 samples, 0.15%)</title><rect x="0.3535%" y="741" width="0.1488%" height="15" fill="rgb(218,30,26)" fg:x="19" fg:w="8"/><text x="0.4707%" y="751.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.5023%" y="741" width="0.0186%" height="15" fill="rgb(220,122,19)" fg:x="27" fg:w="1"/><text x="0.6195%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.5209%" y="741" width="0.0186%" height="15" fill="rgb(250,228,42)" fg:x="28" fg:w="1"/><text x="0.6381%" y="751.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph as fringe_vs_astar::structures::graph::Graph&gt;::get_height (1 samples, 0.02%)</title><rect x="0.5395%" y="741" width="0.0186%" height="15" fill="rgb(240,193,28)" fg:x="29" fg:w="1"/><text x="0.6567%" y="751.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph as fringe_vs_astar::structures::graph::Graph&gt;::neighbors (2 samples, 0.04%)</title><rect x="0.5581%" y="741" width="0.0372%" height="15" fill="rgb(216,20,37)" fg:x="30" fg:w="2"/><text x="0.6753%" y="751.50"></text></g><g><title>__GI___libc_free (5 samples, 0.09%)</title><rect x="0.5953%" y="741" width="0.0930%" height="15" fill="rgb(206,188,39)" fg:x="32" fg:w="5"/><text x="0.7125%" y="751.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.24%)</title><rect x="0.6884%" y="741" width="0.2419%" height="15" fill="rgb(217,207,13)" fg:x="37" fg:w="13"/><text x="0.8056%" y="751.50"></text></g><g><title>__rdl_realloc (16 samples, 0.30%)</title><rect x="0.9302%" y="741" width="0.2977%" height="15" fill="rgb(231,73,38)" fg:x="50" fg:w="16"/><text x="1.0474%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.2279%" y="741" width="0.0186%" height="15" fill="rgb(225,20,46)" fg:x="66" fg:w="1"/><text x="1.3451%" y="751.50"></text></g><g><title>_int_realloc (8 samples, 0.15%)</title><rect x="1.2465%" y="741" width="0.1488%" height="15" fill="rgb(210,31,41)" fg:x="67" fg:w="8"/><text x="1.3637%" y="751.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (1 samples, 0.02%)</title><rect x="1.3953%" y="741" width="0.0186%" height="15" fill="rgb(221,200,47)" fg:x="75" fg:w="1"/><text x="1.5125%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="1.4140%" y="741" width="0.0372%" height="15" fill="rgb(226,26,5)" fg:x="76" fg:w="2"/><text x="1.5311%" y="751.50"></text></g><g><title>[[stack]] (53 samples, 0.99%)</title><rect x="0.5023%" y="757" width="0.9860%" height="15" fill="rgb(249,33,26)" fg:x="27" fg:w="53"/><text x="0.6195%" y="767.50">[..</text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="1.4512%" y="741" width="0.0372%" height="15" fill="rgb(235,183,28)" fg:x="78" fg:w="2"/><text x="1.5684%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="1.4512%" y="725" width="0.0372%" height="15" fill="rgb(221,5,38)" fg:x="78" fg:w="2"/><text x="1.5684%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="1.4512%" y="709" width="0.0372%" height="15" fill="rgb(247,18,42)" fg:x="78" fg:w="2"/><text x="1.5684%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="1.4512%" y="693" width="0.0372%" height="15" fill="rgb(241,131,45)" fg:x="78" fg:w="2"/><text x="1.5684%" y="703.50"></text></g><g><title>[fringe-vs-astar] (1 samples, 0.02%)</title><rect x="1.4884%" y="757" width="0.0186%" height="15" fill="rgb(249,31,29)" fg:x="80" fg:w="1"/><text x="1.6056%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.4884%" y="741" width="0.0186%" height="15" fill="rgb(225,111,53)" fg:x="80" fg:w="1"/><text x="1.6056%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;]&gt; (1 samples, 0.02%)</title><rect x="1.4884%" y="725" width="0.0186%" height="15" fill="rgb(238,160,17)" fg:x="80" fg:w="1"/><text x="1.6056%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt; (1 samples, 0.02%)</title><rect x="1.4884%" y="709" width="0.0186%" height="15" fill="rgb(214,148,48)" fg:x="80" fg:w="1"/><text x="1.6056%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt; (1 samples, 0.02%)</title><rect x="1.4884%" y="693" width="0.0186%" height="15" fill="rgb(232,36,49)" fg:x="80" fg:w="1"/><text x="1.6056%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.4884%" y="677" width="0.0186%" height="15" fill="rgb(209,103,24)" fg:x="80" fg:w="1"/><text x="1.6056%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="1.4884%" y="661" width="0.0186%" height="15" fill="rgb(229,88,8)" fg:x="80" fg:w="1"/><text x="1.6056%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="1.4884%" y="645" width="0.0186%" height="15" fill="rgb(213,181,19)" fg:x="80" fg:w="1"/><text x="1.6056%" y="655.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.07%)</title><rect x="1.5070%" y="741" width="0.0744%" height="15" fill="rgb(254,191,54)" fg:x="81" fg:w="4"/><text x="1.6242%" y="751.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.5628%" y="725" width="0.0186%" height="15" fill="rgb(241,83,37)" fg:x="84" fg:w="1"/><text x="1.6800%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.5628%" y="709" width="0.0186%" height="15" fill="rgb(233,36,39)" fg:x="84" fg:w="1"/><text x="1.6800%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="1.5628%" y="693" width="0.0186%" height="15" fill="rgb(226,3,54)" fg:x="84" fg:w="1"/><text x="1.6800%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="1.5628%" y="677" width="0.0186%" height="15" fill="rgb(245,192,40)" fg:x="84" fg:w="1"/><text x="1.6800%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="1.5628%" y="661" width="0.0186%" height="15" fill="rgb(238,167,29)" fg:x="84" fg:w="1"/><text x="1.6800%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="1.5628%" y="645" width="0.0186%" height="15" fill="rgb(232,182,51)" fg:x="84" fg:w="1"/><text x="1.6800%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.15%)</title><rect x="1.5814%" y="741" width="0.1488%" height="15" fill="rgb(231,60,39)" fg:x="85" fg:w="8"/><text x="1.6986%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.13%)</title><rect x="1.6000%" y="725" width="0.1302%" height="15" fill="rgb(208,69,12)" fg:x="86" fg:w="7"/><text x="1.7172%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.13%)</title><rect x="1.6000%" y="709" width="0.1302%" height="15" fill="rgb(235,93,37)" fg:x="86" fg:w="7"/><text x="1.7172%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.13%)</title><rect x="1.6000%" y="693" width="0.1302%" height="15" fill="rgb(213,116,39)" fg:x="86" fg:w="7"/><text x="1.7172%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.13%)</title><rect x="1.6000%" y="677" width="0.1302%" height="15" fill="rgb(222,207,29)" fg:x="86" fg:w="7"/><text x="1.7172%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.13%)</title><rect x="1.6000%" y="661" width="0.1302%" height="15" fill="rgb(206,96,30)" fg:x="86" fg:w="7"/><text x="1.7172%" y="671.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="1.7302%" y="741" width="0.0744%" height="15" fill="rgb(218,138,4)" fg:x="93" fg:w="4"/><text x="1.8474%" y="751.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="1.8047%" y="741" width="0.0558%" height="15" fill="rgb(250,191,14)" fg:x="97" fg:w="3"/><text x="1.9218%" y="751.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.20%)</title><rect x="1.8605%" y="741" width="0.2047%" height="15" fill="rgb(239,60,40)" fg:x="100" fg:w="11"/><text x="1.9777%" y="751.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.06%)</title><rect x="2.0651%" y="741" width="0.0558%" height="15" fill="rgb(206,27,48)" fg:x="111" fg:w="3"/><text x="2.1823%" y="751.50"></text></g><g><title>__rdl_realloc (4 samples, 0.07%)</title><rect x="2.1209%" y="741" width="0.0744%" height="15" fill="rgb(225,35,8)" fg:x="114" fg:w="4"/><text x="2.2381%" y="751.50"></text></g><g><title>_int_free (26 samples, 0.48%)</title><rect x="2.1953%" y="741" width="0.4837%" height="15" fill="rgb(250,213,24)" fg:x="118" fg:w="26"/><text x="2.3125%" y="751.50"></text></g><g><title>_int_malloc (25 samples, 0.47%)</title><rect x="2.6791%" y="741" width="0.4651%" height="15" fill="rgb(247,123,22)" fg:x="144" fg:w="25"/><text x="2.7963%" y="751.50"></text></g><g><title>_int_realloc (43 samples, 0.80%)</title><rect x="3.1442%" y="741" width="0.8000%" height="15" fill="rgb(231,138,38)" fg:x="169" fg:w="43"/><text x="3.2614%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.32%)</title><rect x="3.9442%" y="741" width="0.3163%" height="15" fill="rgb(231,145,46)" fg:x="212" fg:w="17"/><text x="4.0614%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.13%)</title><rect x="4.1302%" y="725" width="0.1302%" height="15" fill="rgb(251,118,11)" fg:x="222" fg:w="7"/><text x="4.2474%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.09%)</title><rect x="4.2605%" y="741" width="0.0930%" height="15" fill="rgb(217,147,25)" fg:x="229" fg:w="5"/><text x="4.3777%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.09%)</title><rect x="4.2605%" y="725" width="0.0930%" height="15" fill="rgb(247,81,37)" fg:x="229" fg:w="5"/><text x="4.3777%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.24%)</title><rect x="4.3535%" y="741" width="0.2419%" height="15" fill="rgb(209,12,38)" fg:x="234" fg:w="13"/><text x="4.4707%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.04%)</title><rect x="4.5581%" y="725" width="0.0372%" height="15" fill="rgb(227,1,9)" fg:x="245" fg:w="2"/><text x="4.6753%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.04%)</title><rect x="4.5581%" y="709" width="0.0372%" height="15" fill="rgb(248,47,43)" fg:x="245" fg:w="2"/><text x="4.6753%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.04%)</title><rect x="4.5581%" y="693" width="0.0372%" height="15" fill="rgb(221,10,30)" fg:x="245" fg:w="2"/><text x="4.6753%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="4.8372%" y="725" width="0.0372%" height="15" fill="rgb(210,229,1)" fg:x="260" fg:w="2"/><text x="4.9544%" y="735.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::new (1 samples, 0.02%)</title><rect x="4.8744%" y="725" width="0.0186%" height="15" fill="rgb(222,148,37)" fg:x="262" fg:w="1"/><text x="4.9916%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="4.8744%" y="709" width="0.0186%" height="15" fill="rgb(234,67,33)" fg:x="262" fg:w="1"/><text x="4.9916%" y="719.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::fringe_simple (17 samples, 0.32%)</title><rect x="4.5953%" y="741" width="0.3163%" height="15" fill="rgb(247,98,35)" fg:x="247" fg:w="17"/><text x="4.7125%" y="751.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::push_now (1 samples, 0.02%)</title><rect x="4.8930%" y="725" width="0.0186%" height="15" fill="rgb(247,138,52)" fg:x="263" fg:w="1"/><text x="5.0102%" y="735.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::delete_from_fringe (1 samples, 0.02%)</title><rect x="4.8930%" y="709" width="0.0186%" height="15" fill="rgb(213,79,30)" fg:x="263" fg:w="1"/><text x="5.0102%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;(usize,usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="4.8930%" y="693" width="0.0186%" height="15" fill="rgb(246,177,23)" fg:x="263" fg:w="1"/><text x="5.0102%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="4.8930%" y="677" width="0.0186%" height="15" fill="rgb(230,62,27)" fg:x="263" fg:w="1"/><text x="5.0102%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="4.8930%" y="661" width="0.0186%" height="15" fill="rgb(216,154,8)" fg:x="263" fg:w="1"/><text x="5.0102%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="4.8930%" y="645" width="0.0186%" height="15" fill="rgb(244,35,45)" fg:x="263" fg:w="1"/><text x="5.0102%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="4.8930%" y="629" width="0.0186%" height="15" fill="rgb(251,115,12)" fg:x="263" fg:w="1"/><text x="5.0102%" y="639.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="4.9116%" y="741" width="0.0186%" height="15" fill="rgb(240,54,50)" fg:x="264" fg:w="1"/><text x="5.0288%" y="751.50"></text></g><g><title>[unknown] (191 samples, 3.55%)</title><rect x="1.5070%" y="757" width="3.5535%" height="15" fill="rgb(233,84,52)" fg:x="81" fg:w="191"/><text x="1.6242%" y="767.50">[unknown]</text></g><g><title>unlink_chunk (7 samples, 0.13%)</title><rect x="4.9302%" y="741" width="0.1302%" height="15" fill="rgb(207,117,47)" fg:x="265" fg:w="7"/><text x="5.0474%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="5.0605%" y="757" width="0.0186%" height="15" fill="rgb(249,43,39)" fg:x="272" fg:w="1"/><text x="5.1777%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="5.0791%" y="757" width="0.0372%" height="15" fill="rgb(209,38,44)" fg:x="273" fg:w="2"/><text x="5.1963%" y="767.50"></text></g><g><title>_int_malloc (4 samples, 0.07%)</title><rect x="5.1163%" y="757" width="0.0744%" height="15" fill="rgb(236,212,23)" fg:x="275" fg:w="4"/><text x="5.2335%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="597" width="0.0186%" height="15" fill="rgb(242,79,21)" fg:x="279" fg:w="1"/><text x="5.3079%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::graph::Graph&gt;&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="581" width="0.0186%" height="15" fill="rgb(211,96,35)" fg:x="279" fg:w="1"/><text x="5.3079%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="565" width="0.0186%" height="15" fill="rgb(253,215,40)" fg:x="279" fg:w="1"/><text x="5.3079%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="549" width="0.0186%" height="15" fill="rgb(211,81,21)" fg:x="279" fg:w="1"/><text x="5.3079%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.1907%" y="533" width="0.0186%" height="15" fill="rgb(208,190,38)" fg:x="279" fg:w="1"/><text x="5.3079%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;]&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="517" width="0.0186%" height="15" fill="rgb(235,213,38)" fg:x="279" fg:w="1"/><text x="5.3079%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="501" width="0.0186%" height="15" fill="rgb(237,122,38)" fg:x="279" fg:w="1"/><text x="5.3079%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.1907%" y="485" width="0.0186%" height="15" fill="rgb(244,218,35)" fg:x="279" fg:w="1"/><text x="5.3079%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;((usize,usize),f64)&gt;]&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="469" width="0.0186%" height="15" fill="rgb(240,68,47)" fg:x="279" fg:w="1"/><text x="5.3079%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="453" width="0.0186%" height="15" fill="rgb(210,16,53)" fg:x="279" fg:w="1"/><text x="5.3079%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (1 samples, 0.02%)</title><rect x="5.1907%" y="437" width="0.0186%" height="15" fill="rgb(235,124,12)" fg:x="279" fg:w="1"/><text x="5.3079%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.1907%" y="421" width="0.0186%" height="15" fill="rgb(224,169,11)" fg:x="279" fg:w="1"/><text x="5.3079%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.1907%" y="405" width="0.0186%" height="15" fill="rgb(250,166,2)" fg:x="279" fg:w="1"/><text x="5.3079%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.1907%" y="389" width="0.0186%" height="15" fill="rgb(242,216,29)" fg:x="279" fg:w="1"/><text x="5.3079%" y="399.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="5.1907%" y="373" width="0.0186%" height="15" fill="rgb(230,116,27)" fg:x="279" fg:w="1"/><text x="5.3079%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="5.1907%" y="357" width="0.0186%" height="15" fill="rgb(228,99,48)" fg:x="279" fg:w="1"/><text x="5.3079%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.2093%" y="581" width="0.0186%" height="15" fill="rgb(253,11,6)" fg:x="280" fg:w="1"/><text x="5.3265%" y="591.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (96 samples, 1.79%)</title><rect x="17.4698%" y="549" width="1.7860%" height="15" fill="rgb(247,143,39)" fg:x="939" fg:w="96"/><text x="17.5870%" y="559.50">&lt;&amp;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (141 samples, 2.62%)</title><rect x="19.2558%" y="549" width="2.6233%" height="15" fill="rgb(236,97,10)" fg:x="1035" fg:w="141"/><text x="19.3730%" y="559.50">&lt;alloc:..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (141 samples, 2.62%)</title><rect x="19.2558%" y="533" width="2.6233%" height="15" fill="rgb(233,208,19)" fg:x="1035" fg:w="141"/><text x="19.3730%" y="543.50">core::s..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (141 samples, 2.62%)</title><rect x="19.2558%" y="517" width="2.6233%" height="15" fill="rgb(216,164,2)" fg:x="1035" fg:w="141"/><text x="19.3730%" y="527.50">&lt;usize ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.07%)</title><rect x="21.8791%" y="549" width="0.0744%" height="15" fill="rgb(220,129,5)" fg:x="1176" fg:w="4"/><text x="21.9963%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.07%)</title><rect x="21.8791%" y="533" width="0.0744%" height="15" fill="rgb(242,17,10)" fg:x="1176" fg:w="4"/><text x="21.9963%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.07%)</title><rect x="21.8791%" y="517" width="0.0744%" height="15" fill="rgb(242,107,0)" fg:x="1176" fg:w="4"/><text x="21.9963%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.26%)</title><rect x="21.9535%" y="549" width="0.2605%" height="15" fill="rgb(251,28,31)" fg:x="1180" fg:w="14"/><text x="22.0707%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.11%)</title><rect x="22.1023%" y="533" width="0.1116%" height="15" fill="rgb(233,223,10)" fg:x="1188" fg:w="6"/><text x="22.2195%" y="543.50"></text></g><g><title>&lt;fringe_vs_astar::structures::graph::AdjacencyGridGraph as fringe_vs_astar::structures::graph::Graph&gt;::neighbors (5 samples, 0.09%)</title><rect x="22.2140%" y="549" width="0.0930%" height="15" fill="rgb(215,21,27)" fg:x="1194" fg:w="5"/><text x="22.3311%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="22.2698%" y="533" width="0.0372%" height="15" fill="rgb(232,23,21)" fg:x="1197" fg:w="2"/><text x="22.3870%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="22.2698%" y="517" width="0.0372%" height="15" fill="rgb(244,5,23)" fg:x="1197" fg:w="2"/><text x="22.3870%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="22.2698%" y="501" width="0.0372%" height="15" fill="rgb(226,81,46)" fg:x="1197" fg:w="2"/><text x="22.3870%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="23.5535%" y="501" width="0.0186%" height="15" fill="rgb(247,70,30)" fg:x="1266" fg:w="1"/><text x="23.6707%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.02%)</title><rect x="23.5721%" y="501" width="0.0186%" height="15" fill="rgb(212,68,19)" fg:x="1267" fg:w="1"/><text x="23.6893%" y="511.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="24.0558%" y="277" width="0.0186%" height="15" fill="rgb(240,187,13)" fg:x="1293" fg:w="1"/><text x="24.1730%" y="287.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="24.0558%" y="261" width="0.0186%" height="15" fill="rgb(223,113,26)" fg:x="1293" fg:w="1"/><text x="24.1730%" y="271.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.04%)</title><rect x="24.0744%" y="277" width="0.0372%" height="15" fill="rgb(206,192,2)" fg:x="1294" fg:w="2"/><text x="24.1916%" y="287.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="24.0930%" y="261" width="0.0186%" height="15" fill="rgb(241,108,4)" fg:x="1295" fg:w="1"/><text x="24.2102%" y="271.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="24.0930%" y="245" width="0.0186%" height="15" fill="rgb(247,173,49)" fg:x="1295" fg:w="1"/><text x="24.2102%" y="255.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="24.0930%" y="229" width="0.0186%" height="15" fill="rgb(224,114,35)" fg:x="1295" fg:w="1"/><text x="24.2102%" y="239.50"></text></g><g><title>handle_mm_fault (4 samples, 0.07%)</title><rect x="24.0558%" y="341" width="0.0744%" height="15" fill="rgb(245,159,27)" fg:x="1293" fg:w="4"/><text x="24.1730%" y="351.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.07%)</title><rect x="24.0558%" y="325" width="0.0744%" height="15" fill="rgb(245,172,44)" fg:x="1293" fg:w="4"/><text x="24.1730%" y="335.50"></text></g><g><title>handle_pte_fault (4 samples, 0.07%)</title><rect x="24.0558%" y="309" width="0.0744%" height="15" fill="rgb(236,23,11)" fg:x="1293" fg:w="4"/><text x="24.1730%" y="319.50"></text></g><g><title>do_anonymous_page (4 samples, 0.07%)</title><rect x="24.0558%" y="293" width="0.0744%" height="15" fill="rgb(205,117,38)" fg:x="1293" fg:w="4"/><text x="24.1730%" y="303.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.02%)</title><rect x="24.1116%" y="277" width="0.0186%" height="15" fill="rgb(237,72,25)" fg:x="1296" fg:w="1"/><text x="24.2288%" y="287.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="24.1116%" y="261" width="0.0186%" height="15" fill="rgb(244,70,9)" fg:x="1296" fg:w="1"/><text x="24.2288%" y="271.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.02%)</title><rect x="24.1116%" y="245" width="0.0186%" height="15" fill="rgb(217,125,39)" fg:x="1296" fg:w="1"/><text x="24.2288%" y="255.50"></text></g><g><title>lru_add_fn (1 samples, 0.02%)</title><rect x="24.1116%" y="229" width="0.0186%" height="15" fill="rgb(235,36,10)" fg:x="1296" fg:w="1"/><text x="24.2288%" y="239.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.02%)</title><rect x="24.1116%" y="213" width="0.0186%" height="15" fill="rgb(251,123,47)" fg:x="1296" fg:w="1"/><text x="24.2288%" y="223.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.09%)</title><rect x="24.0558%" y="389" width="0.0930%" height="15" fill="rgb(221,13,13)" fg:x="1293" fg:w="5"/><text x="24.1730%" y="399.50"></text></g><g><title>exc_page_fault (5 samples, 0.09%)</title><rect x="24.0558%" y="373" width="0.0930%" height="15" fill="rgb(238,131,9)" fg:x="1293" fg:w="5"/><text x="24.1730%" y="383.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.09%)</title><rect x="24.0558%" y="357" width="0.0930%" height="15" fill="rgb(211,50,8)" fg:x="1293" fg:w="5"/><text x="24.1730%" y="367.50"></text></g><g><title>mas_walk (1 samples, 0.02%)</title><rect x="24.1302%" y="341" width="0.0186%" height="15" fill="rgb(245,182,24)" fg:x="1297" fg:w="1"/><text x="24.2474%" y="351.50"></text></g><g><title>__memcpy_evex_unaligned_erms (23 samples, 0.43%)</title><rect x="23.7395%" y="405" width="0.4279%" height="15" fill="rgb(242,14,37)" fg:x="1276" fg:w="23"/><text x="23.8567%" y="415.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="24.1488%" y="389" width="0.0186%" height="15" fill="rgb(246,228,12)" fg:x="1298" fg:w="1"/><text x="24.2660%" y="399.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="24.1674%" y="405" width="0.1116%" height="15" fill="rgb(213,55,15)" fg:x="1299" fg:w="6"/><text x="24.2846%" y="415.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="24.2605%" y="389" width="0.0186%" height="15" fill="rgb(209,9,3)" fg:x="1304" fg:w="1"/><text x="24.3777%" y="399.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="24.8930%" y="261" width="0.0186%" height="15" fill="rgb(230,59,30)" fg:x="1338" fg:w="1"/><text x="25.0102%" y="271.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.04%)</title><rect x="24.8930%" y="277" width="0.0372%" height="15" fill="rgb(209,121,21)" fg:x="1338" fg:w="2"/><text x="25.0102%" y="287.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="24.9116%" y="261" width="0.0186%" height="15" fill="rgb(220,109,13)" fg:x="1339" fg:w="1"/><text x="25.0288%" y="271.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="24.9116%" y="245" width="0.0186%" height="15" fill="rgb(232,18,1)" fg:x="1339" fg:w="1"/><text x="25.0288%" y="255.50"></text></g><g><title>folio_add_lru_vma (1 samples, 0.02%)</title><rect x="24.9302%" y="277" width="0.0186%" height="15" fill="rgb(215,41,42)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="287.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="24.9302%" y="261" width="0.0186%" height="15" fill="rgb(224,123,36)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="271.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.02%)</title><rect x="24.9302%" y="245" width="0.0186%" height="15" fill="rgb(240,125,3)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="255.50"></text></g><g><title>lru_add_fn (1 samples, 0.02%)</title><rect x="24.9302%" y="229" width="0.0186%" height="15" fill="rgb(205,98,50)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="239.50"></text></g><g><title>lru_gen_add_folio (1 samples, 0.02%)</title><rect x="24.9302%" y="213" width="0.0186%" height="15" fill="rgb(205,185,37)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="223.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="24.9302%" y="197" width="0.0186%" height="15" fill="rgb(238,207,15)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="207.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="24.9302%" y="181" width="0.0186%" height="15" fill="rgb(213,199,42)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="191.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="24.9302%" y="165" width="0.0186%" height="15" fill="rgb(235,201,11)" fg:x="1340" fg:w="1"/><text x="25.0474%" y="175.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.09%)</title><rect x="24.8744%" y="389" width="0.0930%" height="15" fill="rgb(207,46,11)" fg:x="1337" fg:w="5"/><text x="24.9916%" y="399.50"></text></g><g><title>exc_page_fault (5 samples, 0.09%)</title><rect x="24.8744%" y="373" width="0.0930%" height="15" fill="rgb(241,35,35)" fg:x="1337" fg:w="5"/><text x="24.9916%" y="383.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.09%)</title><rect x="24.8744%" y="357" width="0.0930%" height="15" fill="rgb(243,32,47)" fg:x="1337" fg:w="5"/><text x="24.9916%" y="367.50"></text></g><g><title>handle_mm_fault (4 samples, 0.07%)</title><rect x="24.8930%" y="341" width="0.0744%" height="15" fill="rgb(247,202,23)" fg:x="1338" fg:w="4"/><text x="25.0102%" y="351.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.07%)</title><rect x="24.8930%" y="325" width="0.0744%" height="15" fill="rgb(219,102,11)" fg:x="1338" fg:w="4"/><text x="25.0102%" y="335.50"></text></g><g><title>handle_pte_fault (4 samples, 0.07%)</title><rect x="24.8930%" y="309" width="0.0744%" height="15" fill="rgb(243,110,44)" fg:x="1338" fg:w="4"/><text x="25.0102%" y="319.50"></text></g><g><title>do_anonymous_page (4 samples, 0.07%)</title><rect x="24.8930%" y="293" width="0.0744%" height="15" fill="rgb(222,74,54)" fg:x="1338" fg:w="4"/><text x="25.0102%" y="303.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="24.9488%" y="277" width="0.0186%" height="15" fill="rgb(216,99,12)" fg:x="1341" fg:w="1"/><text x="25.0660%" y="287.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="24.9488%" y="261" width="0.0186%" height="15" fill="rgb(226,22,26)" fg:x="1341" fg:w="1"/><text x="25.0660%" y="271.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="24.9488%" y="245" width="0.0186%" height="15" fill="rgb(217,163,10)" fg:x="1341" fg:w="1"/><text x="25.0660%" y="255.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="24.9488%" y="229" width="0.0186%" height="15" fill="rgb(213,25,53)" fg:x="1341" fg:w="1"/><text x="25.0660%" y="239.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="24.9674%" y="389" width="0.0186%" height="15" fill="rgb(252,105,26)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="399.50"></text></g><g><title>__glibc_morecore (1 samples, 0.02%)</title><rect x="24.9674%" y="373" width="0.0186%" height="15" fill="rgb(220,39,43)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="383.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="24.9674%" y="357" width="0.0186%" height="15" fill="rgb(229,68,48)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="367.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="24.9674%" y="341" width="0.0186%" height="15" fill="rgb(252,8,32)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="351.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="24.9674%" y="325" width="0.0186%" height="15" fill="rgb(223,20,43)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="24.9674%" y="309" width="0.0186%" height="15" fill="rgb(229,81,49)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="319.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="24.9674%" y="293" width="0.0186%" height="15" fill="rgb(236,28,36)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="303.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="24.9674%" y="277" width="0.0186%" height="15" fill="rgb(249,185,26)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="287.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="24.9674%" y="261" width="0.0186%" height="15" fill="rgb(249,174,33)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="271.50"></text></g><g><title>__do_sys_brk (1 samples, 0.02%)</title><rect x="24.9674%" y="245" width="0.0186%" height="15" fill="rgb(233,201,37)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="255.50"></text></g><g><title>do_brk_flags (1 samples, 0.02%)</title><rect x="24.9674%" y="229" width="0.0186%" height="15" fill="rgb(221,78,26)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="239.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="24.9674%" y="213" width="0.0186%" height="15" fill="rgb(250,127,30)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="223.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.02%)</title><rect x="24.9674%" y="197" width="0.0186%" height="15" fill="rgb(230,49,44)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="207.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="24.9674%" y="181" width="0.0186%" height="15" fill="rgb(229,67,23)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="191.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="24.9674%" y="165" width="0.0186%" height="15" fill="rgb(249,83,47)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="175.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="24.9674%" y="149" width="0.0186%" height="15" fill="rgb(215,43,3)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="159.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.02%)</title><rect x="24.9674%" y="133" width="0.0186%" height="15" fill="rgb(238,154,13)" fg:x="1342" fg:w="1"/><text x="25.0846%" y="143.50"></text></g><g><title>_int_malloc (42 samples, 0.78%)</title><rect x="24.2791%" y="405" width="0.7814%" height="15" fill="rgb(219,56,2)" fg:x="1305" fg:w="42"/><text x="24.3963%" y="415.50"></text></g><g><title>unlink_chunk (4 samples, 0.07%)</title><rect x="24.9860%" y="389" width="0.0744%" height="15" fill="rgb(233,0,4)" fg:x="1343" fg:w="4"/><text x="25.1032%" y="399.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.06%)</title><rect x="25.0605%" y="405" width="0.0558%" height="15" fill="rgb(235,30,7)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="415.50"></text></g><g><title>exc_page_fault (3 samples, 0.06%)</title><rect x="25.0605%" y="389" width="0.0558%" height="15" fill="rgb(250,79,13)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="399.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.06%)</title><rect x="25.0605%" y="373" width="0.0558%" height="15" fill="rgb(211,146,34)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="383.50"></text></g><g><title>handle_mm_fault (3 samples, 0.06%)</title><rect x="25.0605%" y="357" width="0.0558%" height="15" fill="rgb(228,22,38)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="367.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.06%)</title><rect x="25.0605%" y="341" width="0.0558%" height="15" fill="rgb(235,168,5)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="351.50"></text></g><g><title>handle_pte_fault (3 samples, 0.06%)</title><rect x="25.0605%" y="325" width="0.0558%" height="15" fill="rgb(221,155,16)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="335.50"></text></g><g><title>do_anonymous_page (3 samples, 0.06%)</title><rect x="25.0605%" y="309" width="0.0558%" height="15" fill="rgb(215,215,53)" fg:x="1347" fg:w="3"/><text x="25.1777%" y="319.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.04%)</title><rect x="25.0791%" y="293" width="0.0372%" height="15" fill="rgb(223,4,10)" fg:x="1348" fg:w="2"/><text x="25.1963%" y="303.50"></text></g><g><title>__folio_alloc (2 samples, 0.04%)</title><rect x="25.0791%" y="277" width="0.0372%" height="15" fill="rgb(234,103,6)" fg:x="1348" fg:w="2"/><text x="25.1963%" y="287.50"></text></g><g><title>__alloc_pages (2 samples, 0.04%)</title><rect x="25.0791%" y="261" width="0.0372%" height="15" fill="rgb(227,97,0)" fg:x="1348" fg:w="2"/><text x="25.1963%" y="271.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.04%)</title><rect x="25.0791%" y="245" width="0.0372%" height="15" fill="rgb(234,150,53)" fg:x="1348" fg:w="2"/><text x="25.1963%" y="255.50"></text></g><g><title>rmqueue (2 samples, 0.04%)</title><rect x="25.0791%" y="229" width="0.0372%" height="15" fill="rgb(228,201,54)" fg:x="1348" fg:w="2"/><text x="25.1963%" y="239.50"></text></g><g><title>__rmqueue_pcplist (2 samples, 0.04%)</title><rect x="25.0791%" y="213" width="0.0372%" height="15" fill="rgb(222,22,37)" fg:x="1348" fg:w="2"/><text x="25.1963%" y="223.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="25.0977%" y="197" width="0.0186%" height="15" fill="rgb(237,53,32)" fg:x="1349" fg:w="1"/><text x="25.2149%" y="207.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="25.1163%" y="405" width="0.0186%" height="15" fill="rgb(233,25,53)" fg:x="1350" fg:w="1"/><text x="25.2335%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (84 samples, 1.56%)</title><rect x="23.5907%" y="501" width="1.5628%" height="15" fill="rgb(210,40,34)" fg:x="1268" fg:w="84"/><text x="23.7079%" y="511.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (84 samples, 1.56%)</title><rect x="23.5907%" y="485" width="1.5628%" height="15" fill="rgb(241,220,44)" fg:x="1268" fg:w="84"/><text x="23.7079%" y="495.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (84 samples, 1.56%)</title><rect x="23.5907%" y="469" width="1.5628%" height="15" fill="rgb(235,28,35)" fg:x="1268" fg:w="84"/><text x="23.7079%" y="479.50">all..</text></g><g><title>alloc::alloc::realloc (84 samples, 1.56%)</title><rect x="23.5907%" y="453" width="1.5628%" height="15" fill="rgb(210,56,17)" fg:x="1268" fg:w="84"/><text x="23.7079%" y="463.50">all..</text></g><g><title>__GI___libc_realloc (84 samples, 1.56%)</title><rect x="23.5907%" y="437" width="1.5628%" height="15" fill="rgb(224,130,29)" fg:x="1268" fg:w="84"/><text x="23.7079%" y="447.50">__G..</text></g><g><title>_int_realloc (82 samples, 1.53%)</title><rect x="23.6279%" y="421" width="1.5256%" height="15" fill="rgb(235,212,8)" fg:x="1270" fg:w="82"/><text x="23.7451%" y="431.50">_in..</text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="25.1349%" y="405" width="0.0186%" height="15" fill="rgb(223,33,50)" fg:x="1351" fg:w="1"/><text x="25.2521%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="25.1535%" y="501" width="0.0186%" height="15" fill="rgb(219,149,13)" fg:x="1352" fg:w="1"/><text x="25.2707%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="25.1535%" y="485" width="0.0186%" height="15" fill="rgb(250,156,29)" fg:x="1352" fg:w="1"/><text x="25.2707%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (88 samples, 1.64%)</title><rect x="23.5535%" y="533" width="1.6372%" height="15" fill="rgb(216,193,19)" fg:x="1266" fg:w="88"/><text x="23.6707%" y="543.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (88 samples, 1.64%)</title><rect x="23.5535%" y="517" width="1.6372%" height="15" fill="rgb(216,135,14)" fg:x="1266" fg:w="88"/><text x="23.6707%" y="527.50">all..</text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="25.1721%" y="501" width="0.0186%" height="15" fill="rgb(241,47,5)" fg:x="1353" fg:w="1"/><text x="25.2893%" y="511.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="25.1721%" y="485" width="0.0186%" height="15" fill="rgb(233,42,35)" fg:x="1353" fg:w="1"/><text x="25.2893%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="25.1721%" y="469" width="0.0186%" height="15" fill="rgb(231,13,6)" fg:x="1353" fg:w="1"/><text x="25.2893%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.11%)</title><rect x="25.1907%" y="533" width="0.1116%" height="15" fill="rgb(207,181,40)" fg:x="1354" fg:w="6"/><text x="25.3079%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.11%)</title><rect x="25.1907%" y="517" width="0.1116%" height="15" fill="rgb(254,173,49)" fg:x="1354" fg:w="6"/><text x="25.3079%" y="527.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="25.3023%" y="533" width="0.0186%" height="15" fill="rgb(221,1,38)" fg:x="1360" fg:w="1"/><text x="25.4195%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="25.3023%" y="517" width="0.0186%" height="15" fill="rgb(206,124,46)" fg:x="1360" fg:w="1"/><text x="25.4195%" y="527.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="25.3023%" y="501" width="0.0186%" height="15" fill="rgb(249,21,11)" fg:x="1360" fg:w="1"/><text x="25.4195%" y="511.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.09%)</title><rect x="25.3209%" y="533" width="0.0930%" height="15" fill="rgb(222,201,40)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="543.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.09%)</title><rect x="25.3209%" y="517" width="0.0930%" height="15" fill="rgb(235,61,29)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="527.50"></text></g><g><title>irqentry_exit (5 samples, 0.09%)</title><rect x="25.3209%" y="501" width="0.0930%" height="15" fill="rgb(219,207,3)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.09%)</title><rect x="25.3209%" y="485" width="0.0930%" height="15" fill="rgb(222,56,46)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.09%)</title><rect x="25.3209%" y="469" width="0.0930%" height="15" fill="rgb(239,76,54)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="479.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.09%)</title><rect x="25.3209%" y="453" width="0.0930%" height="15" fill="rgb(231,124,27)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="463.50"></text></g><g><title>schedule (5 samples, 0.09%)</title><rect x="25.3209%" y="437" width="0.0930%" height="15" fill="rgb(249,195,6)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="447.50"></text></g><g><title>__schedule (5 samples, 0.09%)</title><rect x="25.3209%" y="421" width="0.0930%" height="15" fill="rgb(237,174,47)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="431.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.09%)</title><rect x="25.3209%" y="405" width="0.0930%" height="15" fill="rgb(206,201,31)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="415.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.09%)</title><rect x="25.3209%" y="389" width="0.0930%" height="15" fill="rgb(231,57,52)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="399.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.09%)</title><rect x="25.3209%" y="373" width="0.0930%" height="15" fill="rgb(248,177,22)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="383.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="25.3209%" y="357" width="0.0930%" height="15" fill="rgb(215,211,37)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="367.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.09%)</title><rect x="25.3209%" y="341" width="0.0930%" height="15" fill="rgb(241,128,51)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="351.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="25.3209%" y="325" width="0.0930%" height="15" fill="rgb(227,165,31)" fg:x="1361" fg:w="5"/><text x="25.4381%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (269 samples, 5.00%)</title><rect x="22.3070%" y="549" width="5.0047%" height="15" fill="rgb(228,167,24)" fg:x="1199" fg:w="269"/><text x="22.4242%" y="559.50">alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::write (102 samples, 1.90%)</title><rect x="25.4140%" y="533" width="1.8977%" height="15" fill="rgb(228,143,12)" fg:x="1366" fg:w="102"/><text x="25.5311%" y="543.50">core..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="27.2930%" y="517" width="0.0186%" height="15" fill="rgb(249,149,8)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="27.2930%" y="501" width="0.0186%" height="15" fill="rgb(243,35,44)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="27.2930%" y="485" width="0.0186%" height="15" fill="rgb(246,89,9)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="495.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="27.2930%" y="469" width="0.0186%" height="15" fill="rgb(233,213,13)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="27.2930%" y="453" width="0.0186%" height="15" fill="rgb(233,141,41)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="463.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="27.2930%" y="437" width="0.0186%" height="15" fill="rgb(239,167,4)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="447.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="27.2930%" y="421" width="0.0186%" height="15" fill="rgb(209,217,16)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="431.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="27.2930%" y="405" width="0.0186%" height="15" fill="rgb(219,88,35)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="415.50"></text></g><g><title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="27.2930%" y="389" width="0.0186%" height="15" fill="rgb(220,193,23)" fg:x="1467" fg:w="1"/><text x="27.4102%" y="399.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="27.3116%" y="341" width="0.0186%" height="15" fill="rgb(230,90,52)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="351.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="27.3116%" y="325" width="0.0186%" height="15" fill="rgb(252,106,19)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="335.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="27.3116%" y="309" width="0.0186%" height="15" fill="rgb(206,74,20)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="319.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="27.3116%" y="293" width="0.0186%" height="15" fill="rgb(230,138,44)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="303.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="27.3116%" y="277" width="0.0186%" height="15" fill="rgb(235,182,43)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="287.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="27.3116%" y="261" width="0.0186%" height="15" fill="rgb(242,16,51)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="27.3116%" y="245" width="0.0186%" height="15" fill="rgb(248,9,4)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="255.50"></text></g><g><title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="27.3116%" y="229" width="0.0186%" height="15" fill="rgb(210,31,22)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="239.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="27.3116%" y="213" width="0.0186%" height="15" fill="rgb(239,54,39)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="223.50"></text></g><g><title>xhci_handle_event (1 samples, 0.02%)</title><rect x="27.3116%" y="197" width="0.0186%" height="15" fill="rgb(230,99,41)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="207.50"></text></g><g><title>handle_tx_event (1 samples, 0.02%)</title><rect x="27.3116%" y="181" width="0.0186%" height="15" fill="rgb(253,106,12)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="191.50"></text></g><g><title>process_bulk_intr_td.isra.0 (1 samples, 0.02%)</title><rect x="27.3116%" y="165" width="0.0186%" height="15" fill="rgb(213,46,41)" fg:x="1468" fg:w="1"/><text x="27.4288%" y="175.50"></text></g><g><title>asm_common_interrupt (6 samples, 0.11%)</title><rect x="27.3116%" y="549" width="0.1116%" height="15" fill="rgb(215,133,35)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="559.50"></text></g><g><title>common_interrupt (6 samples, 0.11%)</title><rect x="27.3116%" y="533" width="0.1116%" height="15" fill="rgb(213,28,5)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="543.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.11%)</title><rect x="27.3116%" y="517" width="0.1116%" height="15" fill="rgb(215,77,49)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="527.50"></text></g><g><title>__irq_exit_rcu (6 samples, 0.11%)</title><rect x="27.3116%" y="501" width="0.1116%" height="15" fill="rgb(248,100,22)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="511.50"></text></g><g><title>__do_softirq (6 samples, 0.11%)</title><rect x="27.3116%" y="485" width="0.1116%" height="15" fill="rgb(208,67,9)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="495.50"></text></g><g><title>tasklet_hi_action (6 samples, 0.11%)</title><rect x="27.3116%" y="469" width="0.1116%" height="15" fill="rgb(219,133,21)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="479.50"></text></g><g><title>tasklet_action_common.constprop.0 (6 samples, 0.11%)</title><rect x="27.3116%" y="453" width="0.1116%" height="15" fill="rgb(246,46,29)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="463.50"></text></g><g><title>usb_giveback_urb_bh (6 samples, 0.11%)</title><rect x="27.3116%" y="437" width="0.1116%" height="15" fill="rgb(246,185,52)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="447.50"></text></g><g><title>__usb_hcd_giveback_urb (6 samples, 0.11%)</title><rect x="27.3116%" y="421" width="0.1116%" height="15" fill="rgb(252,136,11)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="431.50"></text></g><g><title>btusb_intr_complete (6 samples, 0.11%)</title><rect x="27.3116%" y="405" width="0.1116%" height="15" fill="rgb(219,138,53)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="415.50"></text></g><g><title>usb_submit_urb (6 samples, 0.11%)</title><rect x="27.3116%" y="389" width="0.1116%" height="15" fill="rgb(211,51,23)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="399.50"></text></g><g><title>usb_hcd_submit_urb (6 samples, 0.11%)</title><rect x="27.3116%" y="373" width="0.1116%" height="15" fill="rgb(247,221,28)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="383.50"></text></g><g><title>xhci_urb_enqueue (6 samples, 0.11%)</title><rect x="27.3116%" y="357" width="0.1116%" height="15" fill="rgb(251,222,45)" fg:x="1468" fg:w="6"/><text x="27.4288%" y="367.50"></text></g><g><title>xhci_queue_intr_tx (5 samples, 0.09%)</title><rect x="27.3302%" y="341" width="0.0930%" height="15" fill="rgb(217,162,53)" fg:x="1469" fg:w="5"/><text x="27.4474%" y="351.50"></text></g><g><title>xhci_queue_bulk_tx (5 samples, 0.09%)</title><rect x="27.3302%" y="325" width="0.0930%" height="15" fill="rgb(229,93,14)" fg:x="1469" fg:w="5"/><text x="27.4474%" y="335.50"></text></g><g><title>xhci_ring_ep_doorbell (5 samples, 0.09%)</title><rect x="27.3302%" y="309" width="0.0930%" height="15" fill="rgb(209,67,49)" fg:x="1469" fg:w="5"/><text x="27.4474%" y="319.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="27.4233%" y="549" width="0.0186%" height="15" fill="rgb(213,87,29)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="559.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="27.4233%" y="533" width="0.0186%" height="15" fill="rgb(205,151,52)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="543.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="27.4233%" y="517" width="0.0186%" height="15" fill="rgb(253,215,39)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="527.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="27.4233%" y="501" width="0.0186%" height="15" fill="rgb(221,220,41)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="27.4233%" y="485" width="0.0186%" height="15" fill="rgb(218,133,21)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="495.50"></text></g><g><title>exit_to_user_mode_loop (1 samples, 0.02%)</title><rect x="27.4233%" y="469" width="0.0186%" height="15" fill="rgb(221,193,43)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="479.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="27.4233%" y="453" width="0.0186%" height="15" fill="rgb(240,128,52)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="27.4233%" y="437" width="0.0186%" height="15" fill="rgb(253,114,12)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="447.50"></text></g><g><title>pick_next_task (1 samples, 0.02%)</title><rect x="27.4233%" y="421" width="0.0186%" height="15" fill="rgb(215,223,47)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="431.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="27.4233%" y="405" width="0.0186%" height="15" fill="rgb(248,225,23)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="415.50"></text></g><g><title>put_prev_entity (1 samples, 0.02%)</title><rect x="27.4233%" y="389" width="0.0186%" height="15" fill="rgb(250,108,0)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="399.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="27.4233%" y="373" width="0.0186%" height="15" fill="rgb(228,208,7)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="383.50"></text></g><g><title>cpuacct_charge (1 samples, 0.02%)</title><rect x="27.4233%" y="357" width="0.0186%" height="15" fill="rgb(244,45,10)" fg:x="1474" fg:w="1"/><text x="27.5404%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.06%)</title><rect x="27.4419%" y="549" width="0.0558%" height="15" fill="rgb(207,125,25)" fg:x="1475" fg:w="3"/><text x="27.5590%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.06%)</title><rect x="27.4419%" y="533" width="0.0558%" height="15" fill="rgb(210,195,18)" fg:x="1475" fg:w="3"/><text x="27.5590%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.06%)</title><rect x="27.4419%" y="517" width="0.0558%" height="15" fill="rgb(249,80,12)" fg:x="1475" fg:w="3"/><text x="27.5590%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (22 samples, 0.41%)</title><rect x="27.4977%" y="549" width="0.4093%" height="15" fill="rgb(221,65,9)" fg:x="1478" fg:w="22"/><text x="27.6149%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringe::Fringe&gt; (3 samples, 0.06%)</title><rect x="27.9070%" y="549" width="0.0558%" height="15" fill="rgb(235,49,36)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(bool,bool)&gt;&gt;&gt; (3 samples, 0.06%)</title><rect x="27.9070%" y="533" width="0.0558%" height="15" fill="rgb(225,32,20)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="27.9070%" y="517" width="0.0558%" height="15" fill="rgb(215,141,46)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(bool,bool)&gt;]&gt; (3 samples, 0.06%)</title><rect x="27.9070%" y="501" width="0.0558%" height="15" fill="rgb(250,160,47)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(bool,bool)&gt;&gt; (3 samples, 0.06%)</title><rect x="27.9070%" y="485" width="0.0558%" height="15" fill="rgb(216,222,40)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(bool,bool)&gt;&gt; (3 samples, 0.06%)</title><rect x="27.9070%" y="469" width="0.0558%" height="15" fill="rgb(234,217,39)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="27.9070%" y="453" width="0.0558%" height="15" fill="rgb(207,178,40)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.06%)</title><rect x="27.9070%" y="437" width="0.0558%" height="15" fill="rgb(221,136,13)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.06%)</title><rect x="27.9070%" y="421" width="0.0558%" height="15" fill="rgb(249,199,10)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="431.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="27.9070%" y="405" width="0.0558%" height="15" fill="rgb(249,222,13)" fg:x="1500" fg:w="3"/><text x="28.0242%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="27.9256%" y="389" width="0.0372%" height="15" fill="rgb(244,185,38)" fg:x="1501" fg:w="2"/><text x="28.0428%" y="399.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="27.9442%" y="373" width="0.0186%" height="15" fill="rgb(236,202,9)" fg:x="1502" fg:w="1"/><text x="28.0614%" y="383.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (6 samples, 0.11%)</title><rect x="27.9628%" y="549" width="0.1116%" height="15" fill="rgb(250,229,37)" fg:x="1503" fg:w="6"/><text x="28.0800%" y="559.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="28.1488%" y="373" width="0.0186%" height="15" fill="rgb(206,174,23)" fg:x="1513" fg:w="1"/><text x="28.2660%" y="383.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (79 samples, 1.47%)</title><rect x="28.1116%" y="517" width="1.4698%" height="15" fill="rgb(211,33,43)" fg:x="1511" fg:w="79"/><text x="28.2288%" y="527.50">&lt;al..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (79 samples, 1.47%)</title><rect x="28.1116%" y="501" width="1.4698%" height="15" fill="rgb(245,58,50)" fg:x="1511" fg:w="79"/><text x="28.2288%" y="511.50">&lt;al..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter_wrapping (79 samples, 1.47%)</title><rect x="28.1116%" y="485" width="1.4698%" height="15" fill="rgb(244,68,36)" fg:x="1511" fg:w="79"/><text x="28.2288%" y="495.50">all..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (77 samples, 1.43%)</title><rect x="28.1488%" y="469" width="1.4326%" height="15" fill="rgb(232,229,15)" fg:x="1513" fg:w="77"/><text x="28.2660%" y="479.50">all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (77 samples, 1.43%)</title><rect x="28.1488%" y="453" width="1.4326%" height="15" fill="rgb(254,30,23)" fg:x="1513" fg:w="77"/><text x="28.2660%" y="463.50">cor..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 1.43%)</title><rect x="28.1488%" y="437" width="1.4326%" height="15" fill="rgb(235,160,14)" fg:x="1513" fg:w="77"/><text x="28.2660%" y="447.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 1.43%)</title><rect x="28.1488%" y="421" width="1.4326%" height="15" fill="rgb(212,155,44)" fg:x="1513" fg:w="77"/><text x="28.2660%" y="431.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 1.43%)</title><rect x="28.1488%" y="405" width="1.4326%" height="15" fill="rgb(226,2,50)" fg:x="1513" fg:w="77"/><text x="28.2660%" y="415.50">&lt;co..</text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 1.43%)</title><rect x="28.1488%" y="389" width="1.4326%" height="15" fill="rgb(234,177,6)" fg:x="1513" fg:w="77"/><text x="28.2660%" y="399.50">&lt;al..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (76 samples, 1.41%)</title><rect x="28.1674%" y="373" width="1.4140%" height="15" fill="rgb(217,24,9)" fg:x="1514" fg:w="76"/><text x="28.2846%" y="383.50">&lt;co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (53 samples, 0.99%)</title><rect x="28.5953%" y="357" width="0.9860%" height="15" fill="rgb(220,13,46)" fg:x="1537" fg:w="53"/><text x="28.7125%" y="367.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (40 samples, 0.74%)</title><rect x="28.8372%" y="341" width="0.7442%" height="15" fill="rgb(239,221,27)" fg:x="1550" fg:w="40"/><text x="28.9544%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (40 samples, 0.74%)</title><rect x="28.8372%" y="325" width="0.7442%" height="15" fill="rgb(222,198,25)" fg:x="1550" fg:w="40"/><text x="28.9544%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (40 samples, 0.74%)</title><rect x="28.8372%" y="309" width="0.7442%" height="15" fill="rgb(211,99,13)" fg:x="1550" fg:w="40"/><text x="28.9544%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter::_{{closure}} (40 samples, 0.74%)</title><rect x="28.8372%" y="293" width="0.7442%" height="15" fill="rgb(232,111,31)" fg:x="1550" fg:w="40"/><text x="28.9544%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (40 samples, 0.74%)</title><rect x="28.8372%" y="277" width="0.7442%" height="15" fill="rgb(245,82,37)" fg:x="1550" fg:w="40"/><text x="28.9544%" y="287.50"></text></g><g><title>core::ptr::write (40 samples, 0.74%)</title><rect x="28.8372%" y="261" width="0.7442%" height="15" fill="rgb(227,149,46)" fg:x="1550" fg:w="40"/><text x="28.9544%" y="271.50"></text></g><g><title>_int_malloc (22 samples, 0.41%)</title><rect x="29.6372%" y="405" width="0.4093%" height="15" fill="rgb(218,36,50)" fg:x="1593" fg:w="22"/><text x="29.7544%" y="415.50"></text></g><g><title>unlink_chunk (3 samples, 0.06%)</title><rect x="29.9907%" y="389" width="0.0558%" height="15" fill="rgb(226,80,48)" fg:x="1612" fg:w="3"/><text x="30.1079%" y="399.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.45%)</title><rect x="29.6186%" y="421" width="0.4465%" height="15" fill="rgb(238,224,15)" fg:x="1592" fg:w="24"/><text x="29.7358%" y="431.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="30.0465%" y="405" width="0.0186%" height="15" fill="rgb(241,136,10)" fg:x="1615" fg:w="1"/><text x="30.1637%" y="415.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (108 samples, 2.01%)</title><rect x="28.0744%" y="533" width="2.0093%" height="15" fill="rgb(208,32,45)" fg:x="1509" fg:w="108"/><text x="28.1916%" y="543.50">&lt;allo..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (27 samples, 0.50%)</title><rect x="29.5814%" y="517" width="0.5023%" height="15" fill="rgb(207,135,9)" fg:x="1590" fg:w="27"/><text x="29.6986%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.48%)</title><rect x="29.6000%" y="501" width="0.4837%" height="15" fill="rgb(206,86,44)" fg:x="1591" fg:w="26"/><text x="29.7172%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (26 samples, 0.48%)</title><rect x="29.6000%" y="485" width="0.4837%" height="15" fill="rgb(245,177,15)" fg:x="1591" fg:w="26"/><text x="29.7172%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.47%)</title><rect x="29.6186%" y="469" width="0.4651%" height="15" fill="rgb(206,64,50)" fg:x="1592" fg:w="25"/><text x="29.7358%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.47%)</title><rect x="29.6186%" y="453" width="0.4651%" height="15" fill="rgb(234,36,40)" fg:x="1592" fg:w="25"/><text x="29.7358%" y="463.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.47%)</title><rect x="29.6186%" y="437" width="0.4651%" height="15" fill="rgb(213,64,8)" fg:x="1592" fg:w="25"/><text x="29.7358%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="30.0651%" y="421" width="0.0186%" height="15" fill="rgb(210,75,36)" fg:x="1616" fg:w="1"/><text x="30.1823%" y="431.50"></text></g><g><title>_int_free (14 samples, 0.26%)</title><rect x="30.1767%" y="437" width="0.2605%" height="15" fill="rgb(229,88,21)" fg:x="1622" fg:w="14"/><text x="30.2939%" y="447.50"></text></g><g><title>unlink_chunk (4 samples, 0.07%)</title><rect x="30.3628%" y="421" width="0.0744%" height="15" fill="rgb(252,204,47)" fg:x="1632" fg:w="4"/><text x="30.4800%" y="431.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::later_to_now (128 samples, 2.38%)</title><rect x="28.0744%" y="549" width="2.3814%" height="15" fill="rgb(208,77,27)" fg:x="1509" fg:w="128"/><text x="28.1916%" y="559.50">fringe..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;(usize,usize)&gt;&gt; (20 samples, 0.37%)</title><rect x="30.0837%" y="533" width="0.3721%" height="15" fill="rgb(221,76,26)" fg:x="1617" fg:w="20"/><text x="30.2009%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (20 samples, 0.37%)</title><rect x="30.0837%" y="517" width="0.3721%" height="15" fill="rgb(225,139,18)" fg:x="1617" fg:w="20"/><text x="30.2009%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.37%)</title><rect x="30.0837%" y="501" width="0.3721%" height="15" fill="rgb(230,137,11)" fg:x="1617" fg:w="20"/><text x="30.2009%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.37%)</title><rect x="30.0837%" y="485" width="0.3721%" height="15" fill="rgb(212,28,1)" fg:x="1617" fg:w="20"/><text x="30.2009%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.37%)</title><rect x="30.0837%" y="469" width="0.3721%" height="15" fill="rgb(248,164,17)" fg:x="1617" fg:w="20"/><text x="30.2009%" y="479.50"></text></g><g><title>__GI___libc_free (20 samples, 0.37%)</title><rect x="30.0837%" y="453" width="0.3721%" height="15" fill="rgb(222,171,42)" fg:x="1617" fg:w="20"/><text x="30.2009%" y="463.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="30.4372%" y="437" width="0.0186%" height="15" fill="rgb(243,84,45)" fg:x="1636" fg:w="1"/><text x="30.5544%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.15%)</title><rect x="30.4558%" y="533" width="0.1488%" height="15" fill="rgb(252,49,23)" fg:x="1637" fg:w="8"/><text x="30.5730%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.15%)</title><rect x="30.4558%" y="517" width="0.1488%" height="15" fill="rgb(215,19,7)" fg:x="1637" fg:w="8"/><text x="30.5730%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.15%)</title><rect x="30.4558%" y="501" width="0.1488%" height="15" fill="rgb(238,81,41)" fg:x="1637" fg:w="8"/><text x="30.5730%" y="511.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (1 samples, 0.02%)</title><rect x="31.1070%" y="485" width="0.0186%" height="15" fill="rgb(210,199,37)" fg:x="1672" fg:w="1"/><text x="31.2242%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="31.1070%" y="469" width="0.0186%" height="15" fill="rgb(244,192,49)" fg:x="1672" fg:w="1"/><text x="31.2242%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="31.1256%" y="485" width="0.0372%" height="15" fill="rgb(226,211,11)" fg:x="1673" fg:w="2"/><text x="31.2428%" y="495.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.06%)</title><rect x="31.3302%" y="389" width="0.0558%" height="15" fill="rgb(236,162,54)" fg:x="1684" fg:w="3"/><text x="31.4474%" y="399.50"></text></g><g><title>_int_free (5 samples, 0.09%)</title><rect x="31.3860%" y="389" width="0.0930%" height="15" fill="rgb(220,229,9)" fg:x="1687" fg:w="5"/><text x="31.5032%" y="399.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="31.8326%" y="373" width="0.0186%" height="15" fill="rgb(250,87,22)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="383.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="31.8326%" y="357" width="0.0186%" height="15" fill="rgb(239,43,17)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="367.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="31.8326%" y="341" width="0.0186%" height="15" fill="rgb(231,177,25)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="351.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="31.8326%" y="325" width="0.0186%" height="15" fill="rgb(219,179,1)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="335.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="31.8326%" y="309" width="0.0186%" height="15" fill="rgb(238,219,53)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="319.50"></text></g><g><title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="31.8326%" y="293" width="0.0186%" height="15" fill="rgb(232,167,36)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="303.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="31.8326%" y="277" width="0.0186%" height="15" fill="rgb(244,19,51)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="287.50"></text></g><g><title>execlists_submission_tasklet (1 samples, 0.02%)</title><rect x="31.8326%" y="261" width="0.0186%" height="15" fill="rgb(224,6,22)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="271.50"></text></g><g><title>__execlists_schedule_out (1 samples, 0.02%)</title><rect x="31.8326%" y="245" width="0.0186%" height="15" fill="rgb(224,145,5)" fg:x="1711" fg:w="1"/><text x="31.9497%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.69%)</title><rect x="31.1814%" y="469" width="0.6884%" height="15" fill="rgb(234,130,49)" fg:x="1676" fg:w="37"/><text x="31.2986%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.69%)</title><rect x="31.1814%" y="453" width="0.6884%" height="15" fill="rgb(254,6,2)" fg:x="1676" fg:w="37"/><text x="31.2986%" y="463.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.69%)</title><rect x="31.1814%" y="437" width="0.6884%" height="15" fill="rgb(208,96,46)" fg:x="1676" fg:w="37"/><text x="31.2986%" y="447.50"></text></g><g><title>__GI___libc_realloc (37 samples, 0.69%)</title><rect x="31.1814%" y="421" width="0.6884%" height="15" fill="rgb(239,3,39)" fg:x="1676" fg:w="37"/><text x="31.2986%" y="431.50"></text></g><g><title>_int_realloc (35 samples, 0.65%)</title><rect x="31.2186%" y="405" width="0.6512%" height="15" fill="rgb(233,210,1)" fg:x="1678" fg:w="35"/><text x="31.3358%" y="415.50"></text></g><g><title>_int_malloc (21 samples, 0.39%)</title><rect x="31.4791%" y="389" width="0.3907%" height="15" fill="rgb(244,137,37)" fg:x="1692" fg:w="21"/><text x="31.5963%" y="399.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="31.8512%" y="373" width="0.0186%" height="15" fill="rgb(240,136,2)" fg:x="1712" fg:w="1"/><text x="31.9684%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (1 samples, 0.02%)</title><rect x="31.8698%" y="469" width="0.0186%" height="15" fill="rgb(239,18,37)" fg:x="1713" fg:w="1"/><text x="31.9870%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.78%)</title><rect x="31.1628%" y="485" width="0.7814%" height="15" fill="rgb(218,185,22)" fg:x="1675" fg:w="42"/><text x="31.2800%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.06%)</title><rect x="31.8884%" y="469" width="0.0558%" height="15" fill="rgb(225,218,4)" fg:x="1714" fg:w="3"/><text x="32.0056%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (46 samples, 0.86%)</title><rect x="31.1070%" y="517" width="0.8558%" height="15" fill="rgb(230,182,32)" fg:x="1672" fg:w="46"/><text x="31.2242%" y="527.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (46 samples, 0.86%)</title><rect x="31.1070%" y="501" width="0.8558%" height="15" fill="rgb(242,56,43)" fg:x="1672" fg:w="46"/><text x="31.2242%" y="511.50">a..</text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="31.9442%" y="485" width="0.0186%" height="15" fill="rgb(233,99,24)" fg:x="1717" fg:w="1"/><text x="32.0614%" y="495.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="31.9442%" y="469" width="0.0186%" height="15" fill="rgb(234,209,42)" fg:x="1717" fg:w="1"/><text x="32.0614%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="31.9442%" y="453" width="0.0186%" height="15" fill="rgb(227,7,12)" fg:x="1717" fg:w="1"/><text x="32.0614%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.06%)</title><rect x="31.9628%" y="517" width="0.0558%" height="15" fill="rgb(245,203,43)" fg:x="1718" fg:w="3"/><text x="32.0800%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.06%)</title><rect x="31.9628%" y="501" width="0.0558%" height="15" fill="rgb(238,205,33)" fg:x="1718" fg:w="3"/><text x="32.0800%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.0186%" y="517" width="0.0186%" height="15" fill="rgb(231,56,7)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.0186%" y="501" width="0.0186%" height="15" fill="rgb(244,186,29)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="32.0186%" y="485" width="0.0186%" height="15" fill="rgb(234,111,31)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="495.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="32.0186%" y="469" width="0.0186%" height="15" fill="rgb(241,149,10)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="32.0186%" y="453" width="0.0186%" height="15" fill="rgb(249,206,44)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="463.50"></text></g><g><title>rcu_core_si (1 samples, 0.02%)</title><rect x="32.0186%" y="437" width="0.0186%" height="15" fill="rgb(251,153,30)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="447.50"></text></g><g><title>rcu_core (1 samples, 0.02%)</title><rect x="32.0186%" y="421" width="0.0186%" height="15" fill="rgb(239,152,38)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="431.50"></text></g><g><title>rcu_do_batch (1 samples, 0.02%)</title><rect x="32.0186%" y="405" width="0.0186%" height="15" fill="rgb(249,139,47)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="415.50"></text></g><g><title>mt_free_rcu (1 samples, 0.02%)</title><rect x="32.0186%" y="389" width="0.0186%" height="15" fill="rgb(244,64,35)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="399.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="32.0186%" y="373" width="0.0186%" height="15" fill="rgb(216,46,15)" fg:x="1721" fg:w="1"/><text x="32.1358%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (116 samples, 2.16%)</title><rect x="30.6047%" y="533" width="2.1581%" height="15" fill="rgb(250,74,19)" fg:x="1645" fg:w="116"/><text x="30.7218%" y="543.50">alloc..</text></g><g><title>core::ptr::write (39 samples, 0.73%)</title><rect x="32.0372%" y="517" width="0.7256%" height="15" fill="rgb(249,42,33)" fg:x="1722" fg:w="39"/><text x="32.1544%" y="527.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::new (130 samples, 2.42%)</title><rect x="30.4558%" y="549" width="2.4186%" height="15" fill="rgb(242,149,17)" fg:x="1637" fg:w="130"/><text x="30.5730%" y="559.50">fringe..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.11%)</title><rect x="32.7628%" y="533" width="0.1116%" height="15" fill="rgb(244,29,21)" fg:x="1761" fg:w="6"/><text x="32.8800%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.11%)</title><rect x="32.7628%" y="517" width="0.1116%" height="15" fill="rgb(220,130,37)" fg:x="1761" fg:w="6"/><text x="32.8800%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.11%)</title><rect x="32.7628%" y="501" width="0.1116%" height="15" fill="rgb(211,67,2)" fg:x="1761" fg:w="6"/><text x="32.8800%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (104 samples, 1.93%)</title><rect x="34.4372%" y="533" width="1.9349%" height="15" fill="rgb(235,68,52)" fg:x="1851" fg:w="104"/><text x="34.5544%" y="543.50">&lt;all..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (104 samples, 1.93%)</title><rect x="34.4372%" y="517" width="1.9349%" height="15" fill="rgb(246,142,3)" fg:x="1851" fg:w="104"/><text x="34.5544%" y="527.50">core..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (104 samples, 1.93%)</title><rect x="34.4372%" y="501" width="1.9349%" height="15" fill="rgb(241,25,7)" fg:x="1851" fg:w="104"/><text x="34.5544%" y="511.50">&lt;usi..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="36.3535%" y="485" width="0.0186%" height="15" fill="rgb(242,119,39)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="36.3535%" y="469" width="0.0186%" height="15" fill="rgb(241,98,45)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="479.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="36.3535%" y="453" width="0.0186%" height="15" fill="rgb(254,28,30)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="463.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="36.3535%" y="437" width="0.0186%" height="15" fill="rgb(241,142,54)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="447.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="36.3535%" y="421" width="0.0186%" height="15" fill="rgb(222,85,15)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="431.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="36.3535%" y="405" width="0.0186%" height="15" fill="rgb(210,85,47)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="415.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="36.3535%" y="389" width="0.0186%" height="15" fill="rgb(224,206,25)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="399.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="36.3535%" y="373" width="0.0186%" height="15" fill="rgb(243,201,19)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="383.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="36.3535%" y="357" width="0.0186%" height="15" fill="rgb(236,59,4)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="367.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="36.3535%" y="341" width="0.0186%" height="15" fill="rgb(254,179,45)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="351.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="36.3535%" y="325" width="0.0186%" height="15" fill="rgb(226,14,10)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="335.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="36.3535%" y="309" width="0.0186%" height="15" fill="rgb(244,27,41)" fg:x="1954" fg:w="1"/><text x="36.4707%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (55 samples, 1.02%)</title><rect x="38.5116%" y="501" width="1.0233%" height="15" fill="rgb(235,35,32)" fg:x="2070" fg:w="55"/><text x="38.6288%" y="511.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (55 samples, 1.02%)</title><rect x="38.5116%" y="485" width="1.0233%" height="15" fill="rgb(218,68,31)" fg:x="2070" fg:w="55"/><text x="38.6288%" y="495.50">a..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (56 samples, 1.04%)</title><rect x="38.5116%" y="517" width="1.0419%" height="15" fill="rgb(207,120,37)" fg:x="2070" fg:w="56"/><text x="38.6288%" y="527.50">a..</text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="39.5349%" y="501" width="0.0186%" height="15" fill="rgb(227,98,0)" fg:x="2125" fg:w="1"/><text x="39.6521%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (3 samples, 0.06%)</title><rect x="39.5535%" y="517" width="0.0558%" height="15" fill="rgb(207,7,3)" fg:x="2126" fg:w="3"/><text x="39.6707%" y="527.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::pop_now (420 samples, 7.81%)</title><rect x="32.8744%" y="549" width="7.8140%" height="15" fill="rgb(206,98,19)" fg:x="1767" fg:w="420"/><text x="32.9916%" y="559.50">fringe_vs_astar::algorithm..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (232 samples, 4.32%)</title><rect x="36.3721%" y="533" width="4.3163%" height="15" fill="rgb(217,5,26)" fg:x="1955" fg:w="232"/><text x="36.4893%" y="543.50">alloc::collec..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (58 samples, 1.08%)</title><rect x="39.6093%" y="517" width="1.0791%" height="15" fill="rgb(235,190,38)" fg:x="2129" fg:w="58"/><text x="39.7265%" y="527.50">a..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (58 samples, 1.08%)</title><rect x="39.6093%" y="501" width="1.0791%" height="15" fill="rgb(247,86,24)" fg:x="2129" fg:w="58"/><text x="39.7265%" y="511.50">a..</text></g><g><title>alloc::collections::vec_deque::wrap_index (58 samples, 1.08%)</title><rect x="39.6093%" y="485" width="1.0791%" height="15" fill="rgb(205,101,16)" fg:x="2129" fg:w="58"/><text x="39.7265%" y="495.50">a..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="44.8744%" y="501" width="0.0186%" height="15" fill="rgb(246,168,33)" fg:x="2412" fg:w="1"/><text x="44.9916%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="44.8744%" y="485" width="0.0186%" height="15" fill="rgb(231,114,1)" fg:x="2412" fg:w="1"/><text x="44.9916%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (42 samples, 0.78%)</title><rect x="44.8744%" y="517" width="0.7814%" height="15" fill="rgb(207,184,53)" fg:x="2412" fg:w="42"/><text x="44.9916%" y="527.50"></text></g><g><title>core::ptr::write (41 samples, 0.76%)</title><rect x="44.8930%" y="501" width="0.7628%" height="15" fill="rgb(224,95,51)" fg:x="2413" fg:w="41"/><text x="45.0102%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::handle_capacity_increase (3 samples, 0.06%)</title><rect x="45.6558%" y="501" width="0.0558%" height="15" fill="rgb(212,188,45)" fg:x="2454" fg:w="3"/><text x="45.7730%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="45.7674%" y="469" width="0.0186%" height="15" fill="rgb(223,154,38)" fg:x="2460" fg:w="1"/><text x="45.8846%" y="479.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="45.8233%" y="437" width="0.0186%" height="15" fill="rgb(251,22,52)" fg:x="2463" fg:w="1"/><text x="45.9404%" y="447.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (4 samples, 0.07%)</title><rect x="45.7860%" y="469" width="0.0744%" height="15" fill="rgb(229,209,22)" fg:x="2461" fg:w="4"/><text x="45.9032%" y="479.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="45.8047%" y="453" width="0.0558%" height="15" fill="rgb(234,138,34)" fg:x="2462" fg:w="3"/><text x="45.9218%" y="463.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="45.8419%" y="437" width="0.0186%" height="15" fill="rgb(212,95,11)" fg:x="2464" fg:w="1"/><text x="45.9590%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.04%)</title><rect x="45.8605%" y="469" width="0.0372%" height="15" fill="rgb(240,179,47)" fg:x="2465" fg:w="2"/><text x="45.9777%" y="479.50"></text></g><g><title>__memcpy_evex_unaligned_erms (33 samples, 0.61%)</title><rect x="46.2884%" y="373" width="0.6140%" height="15" fill="rgb(240,163,11)" fg:x="2488" fg:w="33"/><text x="46.4056%" y="383.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="46.8837%" y="357" width="0.0186%" height="15" fill="rgb(236,37,12)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="367.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="46.8837%" y="341" width="0.0186%" height="15" fill="rgb(232,164,16)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="351.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="46.8837%" y="325" width="0.0186%" height="15" fill="rgb(244,205,15)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="335.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="46.8837%" y="309" width="0.0186%" height="15" fill="rgb(223,117,47)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="319.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="46.8837%" y="293" width="0.0186%" height="15" fill="rgb(244,107,35)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="46.8837%" y="277" width="0.0186%" height="15" fill="rgb(205,140,8)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="287.50"></text></g><g><title>gen11_irq_handler (1 samples, 0.02%)</title><rect x="46.8837%" y="261" width="0.0186%" height="15" fill="rgb(228,84,46)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="271.50"></text></g><g><title>gen11_display_irq_handler (1 samples, 0.02%)</title><rect x="46.8837%" y="245" width="0.0186%" height="15" fill="rgb(254,188,9)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="255.50"></text></g><g><title>gen8_de_irq_handler (1 samples, 0.02%)</title><rect x="46.8837%" y="229" width="0.0186%" height="15" fill="rgb(206,112,54)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="239.50"></text></g><g><title>fwtable_read32 (1 samples, 0.02%)</title><rect x="46.8837%" y="213" width="0.0186%" height="15" fill="rgb(216,84,49)" fg:x="2520" fg:w="1"/><text x="47.0009%" y="223.50"></text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="47.2930%" y="357" width="0.0186%" height="15" fill="rgb(214,194,35)" fg:x="2542" fg:w="1"/><text x="47.4102%" y="367.50"></text></g><g><title>_int_free (25 samples, 0.47%)</title><rect x="46.9023%" y="373" width="0.4651%" height="15" fill="rgb(249,28,3)" fg:x="2521" fg:w="25"/><text x="47.0195%" y="383.50"></text></g><g><title>unlink_chunk (3 samples, 0.06%)</title><rect x="47.3116%" y="357" width="0.0558%" height="15" fill="rgb(222,56,52)" fg:x="2543" fg:w="3"/><text x="47.4288%" y="367.50"></text></g><g><title>alloc_perturb (2 samples, 0.04%)</title><rect x="48.3721%" y="357" width="0.0372%" height="15" fill="rgb(245,217,50)" fg:x="2600" fg:w="2"/><text x="48.4893%" y="367.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="48.4093%" y="357" width="0.0186%" height="15" fill="rgb(213,201,24)" fg:x="2602" fg:w="1"/><text x="48.5265%" y="367.50"></text></g><g><title>malloc_consolidate (3 samples, 0.06%)</title><rect x="48.4279%" y="357" width="0.0558%" height="15" fill="rgb(248,116,28)" fg:x="2603" fg:w="3"/><text x="48.5451%" y="367.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="48.4837%" y="357" width="0.0186%" height="15" fill="rgb(219,72,43)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="367.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="48.4837%" y="341" width="0.0186%" height="15" fill="rgb(209,138,14)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="351.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="48.4837%" y="325" width="0.0186%" height="15" fill="rgb(222,18,33)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="335.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="48.4837%" y="309" width="0.0186%" height="15" fill="rgb(213,199,7)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="319.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="48.4837%" y="293" width="0.0186%" height="15" fill="rgb(250,110,10)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="303.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="48.4837%" y="277" width="0.0186%" height="15" fill="rgb(248,123,6)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="287.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="48.4837%" y="261" width="0.0186%" height="15" fill="rgb(206,91,31)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="271.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="48.4837%" y="245" width="0.0186%" height="15" fill="rgb(211,154,13)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="255.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="48.4837%" y="229" width="0.0186%" height="15" fill="rgb(225,148,7)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="239.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.02%)</title><rect x="48.4837%" y="213" width="0.0186%" height="15" fill="rgb(220,160,43)" fg:x="2606" fg:w="1"/><text x="48.6009%" y="223.50"></text></g><g><title>tcache_put (3 samples, 0.06%)</title><rect x="48.5023%" y="357" width="0.0558%" height="15" fill="rgb(213,52,39)" fg:x="2607" fg:w="3"/><text x="48.6195%" y="367.50"></text></g><g><title>_int_malloc (84 samples, 1.56%)</title><rect x="47.3674%" y="373" width="1.5628%" height="15" fill="rgb(243,137,7)" fg:x="2546" fg:w="84"/><text x="47.4846%" y="383.50">_in..</text></g><g><title>unlink_chunk (20 samples, 0.37%)</title><rect x="48.5581%" y="357" width="0.3721%" height="15" fill="rgb(230,79,13)" fg:x="2610" fg:w="20"/><text x="48.6753%" y="367.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="48.9116%" y="341" width="0.0186%" height="15" fill="rgb(247,105,23)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="351.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="48.9116%" y="325" width="0.0186%" height="15" fill="rgb(223,179,41)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="335.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="48.9116%" y="309" width="0.0186%" height="15" fill="rgb(218,9,34)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="319.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="48.9116%" y="293" width="0.0186%" height="15" fill="rgb(222,106,8)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="303.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="48.9116%" y="277" width="0.0186%" height="15" fill="rgb(211,220,0)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="48.9116%" y="261" width="0.0186%" height="15" fill="rgb(229,52,16)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="271.50"></text></g><g><title>gen11_irq_handler (1 samples, 0.02%)</title><rect x="48.9116%" y="245" width="0.0186%" height="15" fill="rgb(212,155,18)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="255.50"></text></g><g><title>gen11_gt_irq_handler (1 samples, 0.02%)</title><rect x="48.9116%" y="229" width="0.0186%" height="15" fill="rgb(242,21,14)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="239.50"></text></g><g><title>gen11_gt_bank_handler (1 samples, 0.02%)</title><rect x="48.9116%" y="213" width="0.0186%" height="15" fill="rgb(222,19,48)" fg:x="2629" fg:w="1"/><text x="49.0288%" y="223.50"></text></g><g><title>_int_realloc (156 samples, 2.90%)</title><rect x="46.0465%" y="389" width="2.9023%" height="15" fill="rgb(232,45,27)" fg:x="2475" fg:w="156"/><text x="46.1637%" y="399.50">_int_rea..</text></g><g><title>memcpy@@GLIBC_2.14@plt (1 samples, 0.02%)</title><rect x="48.9302%" y="373" width="0.0186%" height="15" fill="rgb(249,103,42)" fg:x="2630" fg:w="1"/><text x="49.0474%" y="383.50"></text></g><g><title>arena_for_chunk (2 samples, 0.04%)</title><rect x="48.9488%" y="389" width="0.0372%" height="15" fill="rgb(246,81,33)" fg:x="2631" fg:w="2"/><text x="49.0660%" y="399.50"></text></g><g><title>__GI___libc_realloc (166 samples, 3.09%)</title><rect x="45.9535%" y="405" width="3.0884%" height="15" fill="rgb(252,33,42)" fg:x="2470" fg:w="166"/><text x="46.0707%" y="415.50">__GI___li..</text></g><g><title>checked_request2size (3 samples, 0.06%)</title><rect x="48.9860%" y="389" width="0.0558%" height="15" fill="rgb(209,212,41)" fg:x="2633" fg:w="3"/><text x="49.1032%" y="399.50"></text></g><g><title>__rdl_realloc (6 samples, 0.11%)</title><rect x="49.0419%" y="405" width="0.1116%" height="15" fill="rgb(207,154,6)" fg:x="2636" fg:w="6"/><text x="49.1590%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (173 samples, 3.22%)</title><rect x="45.9535%" y="453" width="3.2186%" height="15" fill="rgb(223,64,47)" fg:x="2470" fg:w="173"/><text x="46.0707%" y="463.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::Global::grow_impl (173 samples, 3.22%)</title><rect x="45.9535%" y="437" width="3.2186%" height="15" fill="rgb(211,161,38)" fg:x="2470" fg:w="173"/><text x="46.0707%" y="447.50">alloc::al..</text></g><g><title>alloc::alloc::realloc (173 samples, 3.22%)</title><rect x="45.9535%" y="421" width="3.2186%" height="15" fill="rgb(219,138,40)" fg:x="2470" fg:w="173"/><text x="46.0707%" y="431.50">alloc::al..</text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="49.1535%" y="405" width="0.0186%" height="15" fill="rgb(241,228,46)" fg:x="2642" fg:w="1"/><text x="49.2707%" y="415.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (1 samples, 0.02%)</title><rect x="49.1721%" y="453" width="0.0186%" height="15" fill="rgb(223,209,38)" fg:x="2643" fg:w="1"/><text x="49.2893%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (180 samples, 3.35%)</title><rect x="45.8977%" y="469" width="3.3488%" height="15" fill="rgb(236,164,45)" fg:x="2467" fg:w="180"/><text x="46.0149%" y="479.50">alloc::raw..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.06%)</title><rect x="49.1907%" y="453" width="0.0558%" height="15" fill="rgb(231,15,5)" fg:x="2644" fg:w="3"/><text x="49.3079%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.04%)</title><rect x="49.2465%" y="437" width="0.0372%" height="15" fill="rgb(252,35,15)" fg:x="2647" fg:w="2"/><text x="49.3637%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (196 samples, 3.65%)</title><rect x="45.6558%" y="517" width="3.6465%" height="15" fill="rgb(248,181,18)" fg:x="2454" fg:w="196"/><text x="45.7730%" y="527.50">alloc::coll..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (193 samples, 3.59%)</title><rect x="45.7116%" y="501" width="3.5907%" height="15" fill="rgb(233,39,42)" fg:x="2457" fg:w="193"/><text x="45.8288%" y="511.50">alloc::raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (193 samples, 3.59%)</title><rect x="45.7116%" y="485" width="3.5907%" height="15" fill="rgb(238,110,33)" fg:x="2457" fg:w="193"/><text x="45.8288%" y="495.50">alloc::raw..</text></g><g><title>core::cmp::max (3 samples, 0.06%)</title><rect x="49.2465%" y="469" width="0.0558%" height="15" fill="rgb(233,195,10)" fg:x="2647" fg:w="3"/><text x="49.3637%" y="479.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.06%)</title><rect x="49.2465%" y="453" width="0.0558%" height="15" fill="rgb(254,105,3)" fg:x="2647" fg:w="3"/><text x="49.3637%" y="463.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="49.2837%" y="437" width="0.0186%" height="15" fill="rgb(221,225,9)" fg:x="2649" fg:w="1"/><text x="49.4009%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (2 samples, 0.04%)</title><rect x="49.3023%" y="517" width="0.0372%" height="15" fill="rgb(224,227,45)" fg:x="2650" fg:w="2"/><text x="49.4195%" y="527.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="50.5302%" y="405" width="0.0186%" height="15" fill="rgb(229,198,43)" fg:x="2716" fg:w="1"/><text x="50.6474%" y="415.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="50.5302%" y="389" width="0.0186%" height="15" fill="rgb(206,209,35)" fg:x="2716" fg:w="1"/><text x="50.6474%" y="399.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="50.5302%" y="373" width="0.0186%" height="15" fill="rgb(245,195,53)" fg:x="2716" fg:w="1"/><text x="50.6474%" y="383.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="50.5302%" y="357" width="0.0186%" height="15" fill="rgb(240,92,26)" fg:x="2716" fg:w="1"/><text x="50.6474%" y="367.50"></text></g><g><title>account_user_time (1 samples, 0.02%)</title><rect x="50.5302%" y="341" width="0.0186%" height="15" fill="rgb(207,40,23)" fg:x="2716" fg:w="1"/><text x="50.6474%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (66 samples, 1.23%)</title><rect x="49.3395%" y="485" width="1.2279%" height="15" fill="rgb(223,111,35)" fg:x="2652" fg:w="66"/><text x="49.4567%" y="495.50">al..</text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="50.5302%" y="469" width="0.0372%" height="15" fill="rgb(229,147,28)" fg:x="2716" fg:w="2"/><text x="50.6474%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="50.5302%" y="453" width="0.0372%" height="15" fill="rgb(211,29,28)" fg:x="2716" fg:w="2"/><text x="50.6474%" y="463.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="50.5302%" y="437" width="0.0372%" height="15" fill="rgb(228,72,33)" fg:x="2716" fg:w="2"/><text x="50.6474%" y="447.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.04%)</title><rect x="50.5302%" y="421" width="0.0372%" height="15" fill="rgb(205,214,31)" fg:x="2716" fg:w="2"/><text x="50.6474%" y="431.50"></text></g><g><title>tick_program_event (1 samples, 0.02%)</title><rect x="50.5488%" y="405" width="0.0186%" height="15" fill="rgb(224,111,15)" fg:x="2717" fg:w="1"/><text x="50.6660%" y="415.50"></text></g><g><title>clockevents_program_event (1 samples, 0.02%)</title><rect x="50.5488%" y="389" width="0.0186%" height="15" fill="rgb(253,21,26)" fg:x="2717" fg:w="1"/><text x="50.6660%" y="399.50"></text></g><g><title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="50.5488%" y="373" width="0.0186%" height="15" fill="rgb(245,139,43)" fg:x="2717" fg:w="1"/><text x="50.6660%" y="383.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::push_later (533 samples, 9.92%)</title><rect x="40.6884%" y="549" width="9.9163%" height="15" fill="rgb(252,170,7)" fg:x="2187" fg:w="533"/><text x="40.8056%" y="559.50">fringe_vs_astar::algorithms::frin..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (421 samples, 7.83%)</title><rect x="42.7721%" y="533" width="7.8326%" height="15" fill="rgb(231,118,14)" fg:x="2299" fg:w="421"/><text x="42.8893%" y="543.50">alloc::collections::vec_de..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (68 samples, 1.27%)</title><rect x="49.3395%" y="517" width="1.2651%" height="15" fill="rgb(238,83,0)" fg:x="2652" fg:w="68"/><text x="49.4567%" y="527.50">al..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (68 samples, 1.27%)</title><rect x="49.3395%" y="501" width="1.2651%" height="15" fill="rgb(221,39,39)" fg:x="2652" fg:w="68"/><text x="49.4567%" y="511.50">al..</text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="50.5674%" y="485" width="0.0372%" height="15" fill="rgb(222,119,46)" fg:x="2718" fg:w="2"/><text x="50.6846%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="51.1814%" y="485" width="0.0186%" height="15" fill="rgb(222,165,49)" fg:x="2751" fg:w="1"/><text x="51.2986%" y="495.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="51.1814%" y="469" width="0.0186%" height="15" fill="rgb(219,113,52)" fg:x="2751" fg:w="1"/><text x="51.2986%" y="479.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.02%)</title><rect x="51.1814%" y="453" width="0.0186%" height="15" fill="rgb(214,7,15)" fg:x="2751" fg:w="1"/><text x="51.2986%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.02%)</title><rect x="51.1814%" y="437" width="0.0186%" height="15" fill="rgb(235,32,4)" fg:x="2751" fg:w="1"/><text x="51.2986%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.02%)</title><rect x="51.1814%" y="421" width="0.0186%" height="15" fill="rgb(238,90,54)" fg:x="2751" fg:w="1"/><text x="51.2986%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.02%)</title><rect x="51.1814%" y="405" width="0.0186%" height="15" fill="rgb(213,208,19)" fg:x="2751" fg:w="1"/><text x="51.2986%" y="415.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="51.2000%" y="485" width="0.0372%" height="15" fill="rgb(233,156,4)" fg:x="2752" fg:w="2"/><text x="51.3172%" y="495.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="51.2000%" y="469" width="0.0372%" height="15" fill="rgb(207,194,5)" fg:x="2752" fg:w="2"/><text x="51.3172%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (1 samples, 0.02%)</title><rect x="51.2372%" y="485" width="0.0186%" height="15" fill="rgb(206,111,30)" fg:x="2754" fg:w="1"/><text x="51.3544%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 0.02%)</title><rect x="51.2372%" y="469" width="0.0186%" height="15" fill="rgb(243,70,54)" fg:x="2754" fg:w="1"/><text x="51.3544%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (1 samples, 0.02%)</title><rect x="51.2372%" y="453" width="0.0186%" height="15" fill="rgb(242,28,8)" fg:x="2754" fg:w="1"/><text x="51.3544%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter (100 samples, 1.86%)</title><rect x="51.2558%" y="469" width="1.8605%" height="15" fill="rgb(219,106,18)" fg:x="2755" fg:w="100"/><text x="51.3730%" y="479.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (100 samples, 1.86%)</title><rect x="51.2558%" y="453" width="1.8605%" height="15" fill="rgb(244,222,10)" fg:x="2755" fg:w="100"/><text x="51.3730%" y="463.50">core..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 1.86%)</title><rect x="51.2558%" y="437" width="1.8605%" height="15" fill="rgb(236,179,52)" fg:x="2755" fg:w="100"/><text x="51.3730%" y="447.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 1.86%)</title><rect x="51.2558%" y="421" width="1.8605%" height="15" fill="rgb(213,23,39)" fg:x="2755" fg:w="100"/><text x="51.3730%" y="431.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 1.86%)</title><rect x="51.2558%" y="405" width="1.8605%" height="15" fill="rgb(238,48,10)" fg:x="2755" fg:w="100"/><text x="51.3730%" y="415.50">&lt;cor..</text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 1.86%)</title><rect x="51.2558%" y="389" width="1.8605%" height="15" fill="rgb(251,196,23)" fg:x="2755" fg:w="100"/><text x="51.3730%" y="399.50">&lt;all..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (97 samples, 1.80%)</title><rect x="51.3116%" y="373" width="1.8047%" height="15" fill="rgb(250,152,24)" fg:x="2758" fg:w="97"/><text x="51.4288%" y="383.50">&lt;cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (71 samples, 1.32%)</title><rect x="51.7953%" y="357" width="1.3209%" height="15" fill="rgb(209,150,17)" fg:x="2784" fg:w="71"/><text x="51.9125%" y="367.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (62 samples, 1.15%)</title><rect x="51.9628%" y="341" width="1.1535%" height="15" fill="rgb(234,202,34)" fg:x="2793" fg:w="62"/><text x="52.0800%" y="351.50">co..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (62 samples, 1.15%)</title><rect x="51.9628%" y="325" width="1.1535%" height="15" fill="rgb(253,148,53)" fg:x="2793" fg:w="62"/><text x="52.0800%" y="335.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (62 samples, 1.15%)</title><rect x="51.9628%" y="309" width="1.1535%" height="15" fill="rgb(218,129,16)" fg:x="2793" fg:w="62"/><text x="52.0800%" y="319.50">co..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter::_{{closure}} (62 samples, 1.15%)</title><rect x="51.9628%" y="293" width="1.1535%" height="15" fill="rgb(216,85,19)" fg:x="2793" fg:w="62"/><text x="52.0800%" y="303.50">al..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (62 samples, 1.15%)</title><rect x="51.9628%" y="277" width="1.1535%" height="15" fill="rgb(235,228,7)" fg:x="2793" fg:w="62"/><text x="52.0800%" y="287.50">al..</text></g><g><title>core::ptr::write (62 samples, 1.15%)</title><rect x="51.9628%" y="261" width="1.1535%" height="15" fill="rgb(245,175,0)" fg:x="2793" fg:w="62"/><text x="52.0800%" y="271.50">co..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (106 samples, 1.97%)</title><rect x="51.1814%" y="517" width="1.9721%" height="15" fill="rgb(208,168,36)" fg:x="2751" fg:w="106"/><text x="51.2986%" y="527.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (106 samples, 1.97%)</title><rect x="51.1814%" y="501" width="1.9721%" height="15" fill="rgb(246,171,24)" fg:x="2751" fg:w="106"/><text x="51.2986%" y="511.50">&lt;allo..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter_wrapping (102 samples, 1.90%)</title><rect x="51.2558%" y="485" width="1.8977%" height="15" fill="rgb(215,142,24)" fg:x="2755" fg:w="102"/><text x="51.3730%" y="495.50">allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter_wrapping::Guard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (2 samples, 0.04%)</title><rect x="53.1163%" y="469" width="0.0372%" height="15" fill="rgb(250,187,7)" fg:x="2855" fg:w="2"/><text x="53.2335%" y="479.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::write_iter_wrapping::Guard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="53.1163%" y="453" width="0.0372%" height="15" fill="rgb(228,66,33)" fg:x="2855" fg:w="2"/><text x="53.2335%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_slices (1 samples, 0.02%)</title><rect x="53.1535%" y="501" width="0.0186%" height="15" fill="rgb(234,215,21)" fg:x="2857" fg:w="1"/><text x="53.2707%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::slice_ranges (1 samples, 0.02%)</title><rect x="53.1535%" y="485" width="0.0186%" height="15" fill="rgb(222,191,20)" fg:x="2857" fg:w="1"/><text x="53.2707%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::iter (2 samples, 0.04%)</title><rect x="53.1535%" y="517" width="0.0372%" height="15" fill="rgb(245,79,54)" fg:x="2857" fg:w="2"/><text x="53.2707%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="53.1721%" y="501" width="0.0186%" height="15" fill="rgb(240,10,37)" fg:x="2858" fg:w="1"/><text x="53.2893%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="53.1721%" y="485" width="0.0186%" height="15" fill="rgb(214,192,32)" fg:x="2858" fg:w="1"/><text x="53.2893%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="53.1721%" y="469" width="0.0186%" height="15" fill="rgb(209,36,54)" fg:x="2858" fg:w="1"/><text x="53.2893%" y="479.50"></text></g><g><title>alloc_perturb (1 samples, 0.02%)</title><rect x="54.9581%" y="389" width="0.0186%" height="15" fill="rgb(220,10,11)" fg:x="2954" fg:w="1"/><text x="55.0753%" y="399.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="54.9767%" y="389" width="0.0186%" height="15" fill="rgb(221,106,17)" fg:x="2955" fg:w="1"/><text x="55.0939%" y="399.50"></text></g><g><title>tcache_put (2 samples, 0.04%)</title><rect x="54.9953%" y="389" width="0.0372%" height="15" fill="rgb(251,142,44)" fg:x="2956" fg:w="2"/><text x="55.1125%" y="399.50"></text></g><g><title>_int_malloc (95 samples, 1.77%)</title><rect x="53.3953%" y="405" width="1.7674%" height="15" fill="rgb(238,13,15)" fg:x="2870" fg:w="95"/><text x="53.5125%" y="415.50">_int..</text></g><g><title>unlink_chunk (7 samples, 0.13%)</title><rect x="55.0326%" y="389" width="0.1302%" height="15" fill="rgb(208,107,27)" fg:x="2958" fg:w="7"/><text x="55.1497%" y="399.50"></text></g><g><title>checked_request2size (3 samples, 0.06%)</title><rect x="55.1628%" y="405" width="0.0558%" height="15" fill="rgb(205,136,37)" fg:x="2965" fg:w="3"/><text x="55.2800%" y="415.50"></text></g><g><title>__GI___libc_malloc (107 samples, 1.99%)</title><rect x="53.2651%" y="421" width="1.9907%" height="15" fill="rgb(250,205,27)" fg:x="2863" fg:w="107"/><text x="53.3823%" y="431.50">__GI_..</text></g><g><title>tcache_get (2 samples, 0.04%)</title><rect x="55.2186%" y="405" width="0.0372%" height="15" fill="rgb(210,80,43)" fg:x="2968" fg:w="2"/><text x="55.3358%" y="415.50"></text></g><g><title>__rdl_alloc (3 samples, 0.06%)</title><rect x="55.2558%" y="421" width="0.0558%" height="15" fill="rgb(247,160,36)" fg:x="2970" fg:w="3"/><text x="55.3730%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 2.08%)</title><rect x="53.2465%" y="469" width="2.0837%" height="15" fill="rgb(234,13,49)" fg:x="2862" fg:w="112"/><text x="53.3637%" y="479.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 2.08%)</title><rect x="53.2465%" y="453" width="2.0837%" height="15" fill="rgb(234,122,0)" fg:x="2862" fg:w="112"/><text x="53.3637%" y="463.50">alloc..</text></g><g><title>alloc::alloc::alloc (112 samples, 2.08%)</title><rect x="53.2465%" y="437" width="2.0837%" height="15" fill="rgb(207,146,38)" fg:x="2862" fg:w="112"/><text x="53.3637%" y="447.50">alloc..</text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="55.3116%" y="421" width="0.0186%" height="15" fill="rgb(207,177,25)" fg:x="2973" fg:w="1"/><text x="55.4288%" y="431.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (116 samples, 2.16%)</title><rect x="53.1907%" y="517" width="2.1581%" height="15" fill="rgb(211,178,42)" fg:x="2859" fg:w="116"/><text x="53.3079%" y="527.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (116 samples, 2.16%)</title><rect x="53.1907%" y="501" width="2.1581%" height="15" fill="rgb(230,69,54)" fg:x="2859" fg:w="116"/><text x="53.3079%" y="511.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (116 samples, 2.16%)</title><rect x="53.1907%" y="485" width="2.1581%" height="15" fill="rgb(214,135,41)" fg:x="2859" fg:w="116"/><text x="53.3079%" y="495.50">alloc..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="55.3302%" y="469" width="0.0186%" height="15" fill="rgb(237,67,25)" fg:x="2974" fg:w="1"/><text x="55.4474%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.02%)</title><rect x="55.3302%" y="453" width="0.0186%" height="15" fill="rgb(222,189,50)" fg:x="2974" fg:w="1"/><text x="55.4474%" y="463.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (230 samples, 4.28%)</title><rect x="51.0884%" y="533" width="4.2791%" height="15" fill="rgb(245,148,34)" fg:x="2746" fg:w="230"/><text x="51.2056%" y="543.50">&lt;alloc::colle..</text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="55.3488%" y="517" width="0.0186%" height="15" fill="rgb(222,29,6)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="527.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="55.3488%" y="501" width="0.0186%" height="15" fill="rgb(221,189,43)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="55.3488%" y="485" width="0.0186%" height="15" fill="rgb(207,36,27)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="495.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="55.3488%" y="469" width="0.0186%" height="15" fill="rgb(217,90,24)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="55.3488%" y="453" width="0.0186%" height="15" fill="rgb(224,66,35)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="463.50"></text></g><g><title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="55.3488%" y="437" width="0.0186%" height="15" fill="rgb(221,13,50)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="447.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="55.3488%" y="421" width="0.0186%" height="15" fill="rgb(236,68,49)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="431.50"></text></g><g><title>usb_giveback_urb_bh (1 samples, 0.02%)</title><rect x="55.3488%" y="405" width="0.0186%" height="15" fill="rgb(229,146,28)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="415.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="55.3488%" y="389" width="0.0186%" height="15" fill="rgb(225,31,38)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="399.50"></text></g><g><title>btusb_intr_complete (1 samples, 0.02%)</title><rect x="55.3488%" y="373" width="0.0186%" height="15" fill="rgb(250,208,3)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="383.50"></text></g><g><title>usb_submit_urb (1 samples, 0.02%)</title><rect x="55.3488%" y="357" width="0.0186%" height="15" fill="rgb(246,54,23)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="367.50"></text></g><g><title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="55.3488%" y="341" width="0.0186%" height="15" fill="rgb(243,76,11)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="351.50"></text></g><g><title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="55.3488%" y="325" width="0.0186%" height="15" fill="rgb(245,21,50)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="335.50"></text></g><g><title>xhci_queue_intr_tx (1 samples, 0.02%)</title><rect x="55.3488%" y="309" width="0.0186%" height="15" fill="rgb(228,9,43)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="319.50"></text></g><g><title>xhci_queue_bulk_tx (1 samples, 0.02%)</title><rect x="55.3488%" y="293" width="0.0186%" height="15" fill="rgb(208,100,47)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="303.50"></text></g><g><title>xhci_ring_ep_doorbell (1 samples, 0.02%)</title><rect x="55.3488%" y="277" width="0.0186%" height="15" fill="rgb(232,26,8)" fg:x="2975" fg:w="1"/><text x="55.4660%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="55.3674%" y="533" width="0.0186%" height="15" fill="rgb(216,166,38)" fg:x="2976" fg:w="1"/><text x="55.4846%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="55.3674%" y="517" width="0.0186%" height="15" fill="rgb(251,202,51)" fg:x="2976" fg:w="1"/><text x="55.4846%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="55.3674%" y="501" width="0.0186%" height="15" fill="rgb(254,216,34)" fg:x="2976" fg:w="1"/><text x="55.4846%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.07%)</title><rect x="55.3860%" y="533" width="0.0744%" height="15" fill="rgb(251,32,27)" fg:x="2977" fg:w="4"/><text x="55.5032%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (4 samples, 0.07%)</title><rect x="55.3860%" y="517" width="0.0744%" height="15" fill="rgb(208,127,28)" fg:x="2977" fg:w="4"/><text x="55.5032%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.07%)</title><rect x="55.3860%" y="501" width="0.0744%" height="15" fill="rgb(224,137,22)" fg:x="2977" fg:w="4"/><text x="55.5032%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (1 samples, 0.02%)</title><rect x="55.4977%" y="517" width="0.0186%" height="15" fill="rgb(254,70,32)" fg:x="2983" fg:w="1"/><text x="55.6149%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="55.4977%" y="501" width="0.0186%" height="15" fill="rgb(229,75,37)" fg:x="2983" fg:w="1"/><text x="55.6149%" y="511.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (4 samples, 0.07%)</title><rect x="55.4605%" y="533" width="0.0744%" height="15" fill="rgb(252,64,23)" fg:x="2981" fg:w="4"/><text x="55.5777%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_sub (1 samples, 0.02%)</title><rect x="55.5163%" y="517" width="0.0186%" height="15" fill="rgb(232,162,48)" fg:x="2984" fg:w="1"/><text x="55.6335%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="55.5163%" y="501" width="0.0186%" height="15" fill="rgb(246,160,12)" fg:x="2984" fg:w="1"/><text x="55.6335%" y="511.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="55.9628%" y="421" width="0.0186%" height="15" fill="rgb(247,166,0)" fg:x="3008" fg:w="1"/><text x="56.0800%" y="431.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="55.9628%" y="405" width="0.0186%" height="15" fill="rgb(249,219,21)" fg:x="3008" fg:w="1"/><text x="56.0800%" y="415.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="55.9628%" y="389" width="0.0186%" height="15" fill="rgb(205,209,3)" fg:x="3008" fg:w="1"/><text x="56.0800%" y="399.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="55.9628%" y="373" width="0.0186%" height="15" fill="rgb(243,44,1)" fg:x="3008" fg:w="1"/><text x="56.0800%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="55.9628%" y="357" width="0.0186%" height="15" fill="rgb(206,159,16)" fg:x="3008" fg:w="1"/><text x="56.0800%" y="367.50"></text></g><g><title>__GI___libc_free (30 samples, 0.56%)</title><rect x="55.5349%" y="453" width="0.5581%" height="15" fill="rgb(244,77,30)" fg:x="2985" fg:w="30"/><text x="55.6521%" y="463.50"></text></g><g><title>_int_free (27 samples, 0.50%)</title><rect x="55.5907%" y="437" width="0.5023%" height="15" fill="rgb(218,69,12)" fg:x="2988" fg:w="27"/><text x="55.7079%" y="447.50"></text></g><g><title>unlink_chunk (6 samples, 0.11%)</title><rect x="55.9814%" y="421" width="0.1116%" height="15" fill="rgb(212,87,7)" fg:x="3009" fg:w="6"/><text x="56.0986%" y="431.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="56.0744%" y="405" width="0.0186%" height="15" fill="rgb(245,114,25)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="415.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="56.0744%" y="389" width="0.0186%" height="15" fill="rgb(210,61,42)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="399.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="56.0744%" y="373" width="0.0186%" height="15" fill="rgb(211,52,33)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="383.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="56.0744%" y="357" width="0.0186%" height="15" fill="rgb(234,58,33)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="367.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="56.0744%" y="341" width="0.0186%" height="15" fill="rgb(220,115,36)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="351.50"></text></g><g><title>tasklet_action (1 samples, 0.02%)</title><rect x="56.0744%" y="325" width="0.0186%" height="15" fill="rgb(243,153,54)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="335.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="56.0744%" y="309" width="0.0186%" height="15" fill="rgb(251,47,18)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="319.50"></text></g><g><title>usb_giveback_urb_bh (1 samples, 0.02%)</title><rect x="56.0744%" y="293" width="0.0186%" height="15" fill="rgb(242,102,42)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="303.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="56.0744%" y="277" width="0.0186%" height="15" fill="rgb(234,31,38)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="287.50"></text></g><g><title>btusb_tx_complete (1 samples, 0.02%)</title><rect x="56.0744%" y="261" width="0.0186%" height="15" fill="rgb(221,117,51)" fg:x="3014" fg:w="1"/><text x="56.1916%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;(usize,usize)&gt;&gt; (31 samples, 0.58%)</title><rect x="55.5349%" y="533" width="0.5767%" height="15" fill="rgb(212,20,18)" fg:x="2985" fg:w="31"/><text x="55.6521%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (31 samples, 0.58%)</title><rect x="55.5349%" y="517" width="0.5767%" height="15" fill="rgb(245,133,36)" fg:x="2985" fg:w="31"/><text x="55.6521%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.58%)</title><rect x="55.5349%" y="501" width="0.5767%" height="15" fill="rgb(212,6,19)" fg:x="2985" fg:w="31"/><text x="55.6521%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.58%)</title><rect x="55.5349%" y="485" width="0.5767%" height="15" fill="rgb(218,1,36)" fg:x="2985" fg:w="31"/><text x="55.6521%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.58%)</title><rect x="55.5349%" y="469" width="0.5767%" height="15" fill="rgb(246,84,54)" fg:x="2985" fg:w="31"/><text x="55.6521%" y="479.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="56.0930%" y="453" width="0.0186%" height="15" fill="rgb(242,110,6)" fg:x="3015" fg:w="1"/><text x="56.2102%" y="463.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::drain (1 samples, 0.02%)</title><rect x="56.1116%" y="517" width="0.0186%" height="15" fill="rgb(214,47,5)" fg:x="3016" fg:w="1"/><text x="56.2288%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.06%)</title><rect x="56.1302%" y="469" width="0.0558%" height="15" fill="rgb(218,159,25)" fg:x="3017" fg:w="3"/><text x="56.2474%" y="479.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt;&gt;::from (3 samples, 0.06%)</title><rect x="56.1302%" y="453" width="0.0558%" height="15" fill="rgb(215,211,28)" fg:x="3017" fg:w="3"/><text x="56.2474%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_raw_parts_with_alloc (3 samples, 0.06%)</title><rect x="56.1302%" y="437" width="0.0558%" height="15" fill="rgb(238,59,32)" fg:x="3017" fg:w="3"/><text x="56.2474%" y="447.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="56.1302%" y="421" width="0.0558%" height="15" fill="rgb(226,82,3)" fg:x="3017" fg:w="3"/><text x="56.2474%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="56.2605%" y="437" width="0.0186%" height="15" fill="rgb(240,164,32)" fg:x="3024" fg:w="1"/><text x="56.3777%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.13%)</title><rect x="56.3721%" y="405" width="0.1302%" height="15" fill="rgb(232,46,7)" fg:x="3030" fg:w="7"/><text x="56.4893%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (150 samples, 2.79%)</title><rect x="60.8744%" y="357" width="2.7907%" height="15" fill="rgb(229,129,53)" fg:x="3272" fg:w="150"/><text x="60.9916%" y="367.50">&lt;alloc::..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (138 samples, 2.57%)</title><rect x="65.5070%" y="325" width="2.5674%" height="15" fill="rgb(234,188,29)" fg:x="3521" fg:w="138"/><text x="65.6242%" y="335.50">alloc::..</text></g><g><title>core::ptr::read (138 samples, 2.57%)</title><rect x="65.5070%" y="309" width="2.5674%" height="15" fill="rgb(246,141,4)" fg:x="3521" fg:w="138"/><text x="65.6242%" y="319.50">core::p..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="68.0558%" y="293" width="0.0186%" height="15" fill="rgb(229,23,39)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="68.0558%" y="277" width="0.0186%" height="15" fill="rgb(206,12,3)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="287.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="68.0558%" y="261" width="0.0186%" height="15" fill="rgb(252,226,20)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="271.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="68.0558%" y="245" width="0.0186%" height="15" fill="rgb(216,123,35)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="255.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="68.0558%" y="229" width="0.0186%" height="15" fill="rgb(212,68,40)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="239.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="68.0558%" y="213" width="0.0186%" height="15" fill="rgb(254,125,32)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="223.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="68.0558%" y="197" width="0.0186%" height="15" fill="rgb(253,97,22)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="207.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="68.0558%" y="181" width="0.0186%" height="15" fill="rgb(241,101,14)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="191.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="68.0558%" y="165" width="0.0186%" height="15" fill="rgb(238,103,29)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="175.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="68.0558%" y="149" width="0.0186%" height="15" fill="rgb(233,195,47)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="159.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="68.0558%" y="133" width="0.0186%" height="15" fill="rgb(246,218,30)" fg:x="3658" fg:w="1"/><text x="68.1730%" y="143.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (67 samples, 1.25%)</title><rect x="68.0744%" y="325" width="1.2465%" height="15" fill="rgb(219,145,47)" fg:x="3659" fg:w="67"/><text x="68.1916%" y="335.50">al..</text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (67 samples, 1.25%)</title><rect x="68.0744%" y="309" width="1.2465%" height="15" fill="rgb(243,12,26)" fg:x="3659" fg:w="67"/><text x="68.1916%" y="319.50">al..</text></g><g><title>alloc::collections::vec_deque::wrap_index (67 samples, 1.25%)</title><rect x="68.0744%" y="293" width="1.2465%" height="15" fill="rgb(214,87,16)" fg:x="3659" fg:w="67"/><text x="68.1916%" y="303.50">al..</text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="69.3023%" y="277" width="0.0186%" height="15" fill="rgb(208,99,42)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="287.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="69.3023%" y="261" width="0.0186%" height="15" fill="rgb(253,99,2)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="271.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="69.3023%" y="245" width="0.0186%" height="15" fill="rgb(220,168,23)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="255.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="69.3023%" y="229" width="0.0186%" height="15" fill="rgb(242,38,24)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="239.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="69.3023%" y="213" width="0.0186%" height="15" fill="rgb(225,182,9)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="69.3023%" y="197" width="0.0186%" height="15" fill="rgb(243,178,37)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="207.50"></text></g><g><title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="69.3023%" y="181" width="0.0186%" height="15" fill="rgb(232,139,19)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="191.50"></text></g><g><title>xhci_irq (1 samples, 0.02%)</title><rect x="69.3023%" y="165" width="0.0186%" height="15" fill="rgb(225,201,24)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="175.50"></text></g><g><title>xhci_update_erst_dequeue (1 samples, 0.02%)</title><rect x="69.3023%" y="149" width="0.0186%" height="15" fill="rgb(221,47,46)" fg:x="3725" fg:w="1"/><text x="69.4195%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (305 samples, 5.67%)</title><rect x="63.6651%" y="341" width="5.6744%" height="15" fill="rgb(249,23,13)" fg:x="3422" fg:w="305"/><text x="63.7823%" y="351.50">&lt;alloc::collection..</text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="69.3209%" y="325" width="0.0186%" height="15" fill="rgb(219,9,5)" fg:x="3726" fg:w="1"/><text x="69.4381%" y="335.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="76.3349%" y="293" width="0.0186%" height="15" fill="rgb(254,171,16)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="303.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="76.3349%" y="277" width="0.0186%" height="15" fill="rgb(230,171,20)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="287.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="76.3349%" y="261" width="0.0186%" height="15" fill="rgb(210,71,41)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="76.3349%" y="245" width="0.0186%" height="15" fill="rgb(206,173,20)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="255.50"></text></g><g><title>gen11_irq_handler (1 samples, 0.02%)</title><rect x="76.3349%" y="229" width="0.0186%" height="15" fill="rgb(233,88,34)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="239.50"></text></g><g><title>gen11_display_irq_handler (1 samples, 0.02%)</title><rect x="76.3349%" y="213" width="0.0186%" height="15" fill="rgb(223,209,46)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="223.50"></text></g><g><title>gen8_de_irq_handler (1 samples, 0.02%)</title><rect x="76.3349%" y="197" width="0.0186%" height="15" fill="rgb(250,43,18)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="207.50"></text></g><g><title>drm_crtc_handle_vblank (1 samples, 0.02%)</title><rect x="76.3349%" y="181" width="0.0186%" height="15" fill="rgb(208,13,10)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="191.50"></text></g><g><title>drm_handle_vblank (1 samples, 0.02%)</title><rect x="76.3349%" y="165" width="0.0186%" height="15" fill="rgb(212,200,36)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="175.50"></text></g><g><title>drm_handle_vblank_events (1 samples, 0.02%)</title><rect x="76.3349%" y="149" width="0.0186%" height="15" fill="rgb(225,90,30)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="159.50"></text></g><g><title>send_vblank_event (1 samples, 0.02%)</title><rect x="76.3349%" y="133" width="0.0186%" height="15" fill="rgb(236,182,39)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="143.50"></text></g><g><title>drm_send_event_timestamp_locked (1 samples, 0.02%)</title><rect x="76.3349%" y="117" width="0.0186%" height="15" fill="rgb(212,144,35)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="127.50"></text></g><g><title>drm_send_event_helper (1 samples, 0.02%)</title><rect x="76.3349%" y="101" width="0.0186%" height="15" fill="rgb(228,63,44)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="111.50"></text></g><g><title>complete_all (1 samples, 0.02%)</title><rect x="76.3349%" y="85" width="0.0186%" height="15" fill="rgb(228,109,6)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="95.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="76.3349%" y="69" width="0.0186%" height="15" fill="rgb(238,117,24)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="79.50"></text></g><g><title>kthread_is_per_cpu (1 samples, 0.02%)</title><rect x="76.3349%" y="53" width="0.0186%" height="15" fill="rgb(242,26,26)" fg:x="4103" fg:w="1"/><text x="76.4521%" y="63.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.04%)</title><rect x="76.3349%" y="325" width="0.0372%" height="15" fill="rgb(221,92,48)" fg:x="4103" fg:w="2"/><text x="76.4521%" y="335.50"></text></g><g><title>common_interrupt (2 samples, 0.04%)</title><rect x="76.3349%" y="309" width="0.0372%" height="15" fill="rgb(209,209,32)" fg:x="4103" fg:w="2"/><text x="76.4521%" y="319.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="76.3535%" y="293" width="0.0186%" height="15" fill="rgb(221,70,22)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="303.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="76.3535%" y="277" width="0.0186%" height="15" fill="rgb(248,145,5)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="287.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="76.3535%" y="261" width="0.0186%" height="15" fill="rgb(226,116,26)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="271.50"></text></g><g><title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="76.3535%" y="245" width="0.0186%" height="15" fill="rgb(244,5,17)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="255.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="76.3535%" y="229" width="0.0186%" height="15" fill="rgb(252,159,33)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="239.50"></text></g><g><title>usb_giveback_urb_bh (1 samples, 0.02%)</title><rect x="76.3535%" y="213" width="0.0186%" height="15" fill="rgb(206,71,0)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="223.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="76.3535%" y="197" width="0.0186%" height="15" fill="rgb(233,118,54)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="207.50"></text></g><g><title>btusb_intr_complete (1 samples, 0.02%)</title><rect x="76.3535%" y="181" width="0.0186%" height="15" fill="rgb(234,83,48)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="191.50"></text></g><g><title>btusb_recv_intr (1 samples, 0.02%)</title><rect x="76.3535%" y="165" width="0.0186%" height="15" fill="rgb(228,3,54)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="175.50"></text></g><g><title>queue_delayed_work_on (1 samples, 0.02%)</title><rect x="76.3535%" y="149" width="0.0186%" height="15" fill="rgb(226,155,13)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="159.50"></text></g><g><title>__queue_delayed_work (1 samples, 0.02%)</title><rect x="76.3535%" y="133" width="0.0186%" height="15" fill="rgb(241,28,37)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="143.50"></text></g><g><title>__queue_work (1 samples, 0.02%)</title><rect x="76.3535%" y="117" width="0.0186%" height="15" fill="rgb(233,93,10)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="127.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="76.3535%" y="101" width="0.0186%" height="15" fill="rgb(225,113,19)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="76.3535%" y="85" width="0.0186%" height="15" fill="rgb(241,2,18)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="95.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="76.3535%" y="69" width="0.0186%" height="15" fill="rgb(228,207,21)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="79.50"></text></g><g><title>check_preempt_curr (1 samples, 0.02%)</title><rect x="76.3535%" y="53" width="0.0186%" height="15" fill="rgb(213,211,35)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="63.50"></text></g><g><title>set_next_buddy (1 samples, 0.02%)</title><rect x="76.3535%" y="37" width="0.0186%" height="15" fill="rgb(209,83,10)" fg:x="4104" fg:w="1"/><text x="76.4707%" y="47.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (834 samples, 15.52%)</title><rect x="60.8744%" y="389" width="15.5163%" height="15" fill="rgb(209,164,1)" fg:x="3272" fg:w="834"/><text x="60.9916%" y="399.50">&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::find (834 samples, 15.52%)</title><rect x="60.8744%" y="373" width="15.5163%" height="15" fill="rgb(213,184,43)" fg:x="3272" fg:w="834"/><text x="60.9916%" y="383.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (684 samples, 12.73%)</title><rect x="63.6651%" y="357" width="12.7256%" height="15" fill="rgb(231,61,34)" fg:x="3422" fg:w="684"/><text x="63.7823%" y="367.50">core::iter::traits::iterator::Iterator::try_..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (379 samples, 7.05%)</title><rect x="69.3395%" y="341" width="7.0512%" height="15" fill="rgb(235,75,3)" fg:x="3727" fg:w="379"/><text x="69.4567%" y="351.50">core::iter::traits::ite..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="76.3721%" y="325" width="0.0186%" height="15" fill="rgb(220,106,47)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="76.3721%" y="309" width="0.0186%" height="15" fill="rgb(210,196,33)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="76.3721%" y="293" width="0.0186%" height="15" fill="rgb(229,154,42)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="303.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="76.3721%" y="277" width="0.0186%" height="15" fill="rgb(228,114,26)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="287.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="76.3721%" y="261" width="0.0186%" height="15" fill="rgb(208,144,1)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="271.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="76.3721%" y="245" width="0.0186%" height="15" fill="rgb(239,112,37)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="255.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="76.3721%" y="229" width="0.0186%" height="15" fill="rgb(210,96,50)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="239.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="76.3721%" y="213" width="0.0186%" height="15" fill="rgb(222,178,2)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="223.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="76.3721%" y="197" width="0.0186%" height="15" fill="rgb(226,74,18)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="207.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="76.3721%" y="181" width="0.0186%" height="15" fill="rgb(225,67,54)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="191.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="76.3721%" y="165" width="0.0186%" height="15" fill="rgb(251,92,32)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="175.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="76.3721%" y="149" width="0.0186%" height="15" fill="rgb(228,149,22)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="159.50"></text></g><g><title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="76.3721%" y="133" width="0.0186%" height="15" fill="rgb(243,54,13)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="143.50"></text></g><g><title>native_write_msr (1 samples, 0.02%)</title><rect x="76.3721%" y="117" width="0.0186%" height="15" fill="rgb(243,180,28)" fg:x="4105" fg:w="1"/><text x="76.4893%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.04%)</title><rect x="76.3907%" y="389" width="0.0372%" height="15" fill="rgb(208,167,24)" fg:x="4106" fg:w="2"/><text x="76.5079%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.04%)</title><rect x="76.3907%" y="373" width="0.0372%" height="15" fill="rgb(245,73,45)" fg:x="4106" fg:w="2"/><text x="76.5079%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.07%)</title><rect x="76.5395%" y="325" width="0.0744%" height="15" fill="rgb(237,203,48)" fg:x="4114" fg:w="4"/><text x="76.6567%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (2 samples, 0.04%)</title><rect x="76.6140%" y="325" width="0.0372%" height="15" fill="rgb(211,197,16)" fg:x="4118" fg:w="2"/><text x="76.7311%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (8 samples, 0.15%)</title><rect x="76.6512%" y="325" width="0.1488%" height="15" fill="rgb(243,99,51)" fg:x="4120" fg:w="8"/><text x="76.7684%" y="335.50"></text></g><g><title>__memcpy_evex_unaligned_erms (79 samples, 1.47%)</title><rect x="78.3442%" y="229" width="1.4698%" height="15" fill="rgb(215,123,29)" fg:x="4211" fg:w="79"/><text x="78.4614%" y="239.50">__m..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="79.7953%" y="213" width="0.0186%" height="15" fill="rgb(239,186,37)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="79.7953%" y="197" width="0.0186%" height="15" fill="rgb(252,136,39)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="79.7953%" y="181" width="0.0186%" height="15" fill="rgb(223,213,32)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="79.7953%" y="165" width="0.0186%" height="15" fill="rgb(233,115,5)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="175.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="79.7953%" y="149" width="0.0186%" height="15" fill="rgb(207,226,44)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="159.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="79.7953%" y="133" width="0.0186%" height="15" fill="rgb(208,126,0)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="143.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="79.7953%" y="117" width="0.0186%" height="15" fill="rgb(244,66,21)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="127.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="79.7953%" y="101" width="0.0186%" height="15" fill="rgb(222,97,12)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="111.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="79.7953%" y="85" width="0.0186%" height="15" fill="rgb(219,213,19)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="95.50"></text></g><g><title>enqueue_task (1 samples, 0.02%)</title><rect x="79.7953%" y="69" width="0.0186%" height="15" fill="rgb(252,169,30)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="79.50"></text></g><g><title>plist_del (1 samples, 0.02%)</title><rect x="79.7953%" y="53" width="0.0186%" height="15" fill="rgb(206,32,51)" fg:x="4289" fg:w="1"/><text x="79.9125%" y="63.50"></text></g><g><title>free_perturb (3 samples, 0.06%)</title><rect x="81.0791%" y="213" width="0.0558%" height="15" fill="rgb(250,172,42)" fg:x="4358" fg:w="3"/><text x="81.1963%" y="223.50"></text></g><g><title>tcache_put (2 samples, 0.04%)</title><rect x="81.1349%" y="213" width="0.0372%" height="15" fill="rgb(209,34,43)" fg:x="4361" fg:w="2"/><text x="81.2521%" y="223.50"></text></g><g><title>_int_free (74 samples, 1.38%)</title><rect x="79.8140%" y="229" width="1.3767%" height="15" fill="rgb(223,11,35)" fg:x="4290" fg:w="74"/><text x="79.9311%" y="239.50">_i..</text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="81.1721%" y="213" width="0.0186%" height="15" fill="rgb(251,219,26)" fg:x="4363" fg:w="1"/><text x="81.2893%" y="223.50"></text></g><g><title>alloc_perturb (1 samples, 0.02%)</title><rect x="85.1535%" y="213" width="0.0186%" height="15" fill="rgb(231,119,3)" fg:x="4577" fg:w="1"/><text x="85.2707%" y="223.50"></text></g><g><title>xhci_handle_event (1 samples, 0.02%)</title><rect x="85.1721%" y="85" width="0.0186%" height="15" fill="rgb(216,97,11)" fg:x="4578" fg:w="1"/><text x="85.2893%" y="95.50"></text></g><g><title>handle_tx_event (1 samples, 0.02%)</title><rect x="85.1721%" y="69" width="0.0186%" height="15" fill="rgb(223,59,9)" fg:x="4578" fg:w="1"/><text x="85.2893%" y="79.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.04%)</title><rect x="85.1721%" y="213" width="0.0372%" height="15" fill="rgb(233,93,31)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="223.50"></text></g><g><title>common_interrupt (2 samples, 0.04%)</title><rect x="85.1721%" y="197" width="0.0372%" height="15" fill="rgb(239,81,33)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="207.50"></text></g><g><title>__common_interrupt (2 samples, 0.04%)</title><rect x="85.1721%" y="181" width="0.0372%" height="15" fill="rgb(213,120,34)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="191.50"></text></g><g><title>handle_edge_irq (2 samples, 0.04%)</title><rect x="85.1721%" y="165" width="0.0372%" height="15" fill="rgb(243,49,53)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="175.50"></text></g><g><title>handle_irq_event (2 samples, 0.04%)</title><rect x="85.1721%" y="149" width="0.0372%" height="15" fill="rgb(247,216,33)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="85.1721%" y="133" width="0.0372%" height="15" fill="rgb(226,26,14)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="143.50"></text></g><g><title>xhci_msi_irq (2 samples, 0.04%)</title><rect x="85.1721%" y="117" width="0.0372%" height="15" fill="rgb(215,49,53)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="127.50"></text></g><g><title>xhci_irq (2 samples, 0.04%)</title><rect x="85.1721%" y="101" width="0.0372%" height="15" fill="rgb(245,162,40)" fg:x="4578" fg:w="2"/><text x="85.2893%" y="111.50"></text></g><g><title>xhci_update_erst_dequeue (1 samples, 0.02%)</title><rect x="85.1907%" y="85" width="0.0186%" height="15" fill="rgb(229,68,17)" fg:x="4579" fg:w="1"/><text x="85.3079%" y="95.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="85.2093%" y="165" width="0.0186%" height="15" fill="rgb(213,182,10)" fg:x="4580" fg:w="1"/><text x="85.3265%" y="175.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="85.2093%" y="213" width="0.0372%" height="15" fill="rgb(245,125,30)" fg:x="4580" fg:w="2"/><text x="85.3265%" y="223.50"></text></g><g><title>exc_page_fault (2 samples, 0.04%)</title><rect x="85.2093%" y="197" width="0.0372%" height="15" fill="rgb(232,202,2)" fg:x="4580" fg:w="2"/><text x="85.3265%" y="207.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="85.2093%" y="181" width="0.0372%" height="15" fill="rgb(237,140,51)" fg:x="4580" fg:w="2"/><text x="85.3265%" y="191.50"></text></g><g><title>mas_walk (1 samples, 0.02%)</title><rect x="85.2279%" y="165" width="0.0186%" height="15" fill="rgb(236,157,25)" fg:x="4581" fg:w="1"/><text x="85.3451%" y="175.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="85.2465%" y="213" width="0.0186%" height="15" fill="rgb(219,209,0)" fg:x="4582" fg:w="1"/><text x="85.3637%" y="223.50"></text></g><g><title>malloc_consolidate (4 samples, 0.07%)</title><rect x="85.2651%" y="213" width="0.0744%" height="15" fill="rgb(240,116,54)" fg:x="4583" fg:w="4"/><text x="85.3823%" y="223.50"></text></g><g><title>tcache_put (5 samples, 0.09%)</title><rect x="85.3395%" y="213" width="0.0930%" height="15" fill="rgb(216,10,36)" fg:x="4587" fg:w="5"/><text x="85.4567%" y="223.50"></text></g><g><title>_int_malloc (259 samples, 4.82%)</title><rect x="81.1907%" y="229" width="4.8186%" height="15" fill="rgb(222,72,44)" fg:x="4364" fg:w="259"/><text x="81.3079%" y="239.50">_int_malloc</text></g><g><title>unlink_chunk (31 samples, 0.58%)</title><rect x="85.4326%" y="213" width="0.5767%" height="15" fill="rgb(232,159,9)" fg:x="4592" fg:w="31"/><text x="85.5497%" y="223.50"></text></g><g><title>memcpy@@GLIBC_2.14@plt (5 samples, 0.09%)</title><rect x="86.0093%" y="229" width="0.0930%" height="15" fill="rgb(210,39,32)" fg:x="4623" fg:w="5"/><text x="86.1265%" y="239.50"></text></g><g><title>_int_realloc (459 samples, 8.54%)</title><rect x="77.6000%" y="245" width="8.5395%" height="15" fill="rgb(216,194,45)" fg:x="4171" fg:w="459"/><text x="77.7172%" y="255.50">_int_realloc</text></g><g><title>unlink_chunk (2 samples, 0.04%)</title><rect x="86.1023%" y="229" width="0.0372%" height="15" fill="rgb(218,18,35)" fg:x="4628" fg:w="2"/><text x="86.2195%" y="239.50"></text></g><g><title>arena_for_chunk (4 samples, 0.07%)</title><rect x="86.1395%" y="245" width="0.0744%" height="15" fill="rgb(207,83,51)" fg:x="4630" fg:w="4"/><text x="86.2567%" y="255.50"></text></g><g><title>__GI___libc_realloc (501 samples, 9.32%)</title><rect x="77.0047%" y="261" width="9.3209%" height="15" fill="rgb(225,63,43)" fg:x="4139" fg:w="501"/><text x="77.1218%" y="271.50">__GI___libc_realloc</text></g><g><title>checked_request2size (6 samples, 0.11%)</title><rect x="86.2140%" y="245" width="0.1116%" height="15" fill="rgb(207,57,36)" fg:x="4634" fg:w="6"/><text x="86.3311%" y="255.50"></text></g><g><title>__rdl_realloc (5 samples, 0.09%)</title><rect x="86.3256%" y="261" width="0.0930%" height="15" fill="rgb(216,99,33)" fg:x="4640" fg:w="5"/><text x="86.4428%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (513 samples, 9.54%)</title><rect x="77.0047%" y="309" width="9.5442%" height="15" fill="rgb(225,42,16)" fg:x="4139" fg:w="513"/><text x="77.1218%" y="319.50">&lt;alloc::alloc::Global as core::a..</text></g><g><title>alloc::alloc::Global::grow_impl (513 samples, 9.54%)</title><rect x="77.0047%" y="293" width="9.5442%" height="15" fill="rgb(220,201,45)" fg:x="4139" fg:w="513"/><text x="77.1218%" y="303.50">alloc::alloc::Global::grow_impl</text></g><g><title>alloc::alloc::realloc (513 samples, 9.54%)</title><rect x="77.0047%" y="277" width="9.5442%" height="15" fill="rgb(225,33,4)" fg:x="4139" fg:w="513"/><text x="77.1218%" y="287.50">alloc::alloc::realloc</text></g><g><title>__rust_realloc (7 samples, 0.13%)</title><rect x="86.4186%" y="261" width="0.1302%" height="15" fill="rgb(224,33,50)" fg:x="4645" fg:w="7"/><text x="86.5358%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (5 samples, 0.09%)</title><rect x="86.5488%" y="309" width="0.0930%" height="15" fill="rgb(246,198,51)" fg:x="4652" fg:w="5"/><text x="86.6660%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (531 samples, 9.88%)</title><rect x="76.8000%" y="325" width="9.8791%" height="15" fill="rgb(205,22,4)" fg:x="4128" fg:w="531"/><text x="76.9172%" y="335.50">alloc::raw_vec::finish_grow</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.04%)</title><rect x="86.6419%" y="309" width="0.0372%" height="15" fill="rgb(206,3,8)" fg:x="4657" fg:w="2"/><text x="86.7590%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.06%)</title><rect x="86.6791%" y="325" width="0.0558%" height="15" fill="rgb(251,23,15)" fg:x="4659" fg:w="3"/><text x="86.7963%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.06%)</title><rect x="86.6791%" y="309" width="0.0558%" height="15" fill="rgb(252,88,28)" fg:x="4659" fg:w="3"/><text x="86.7963%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (560 samples, 10.42%)</title><rect x="76.4279%" y="389" width="10.4186%" height="15" fill="rgb(212,127,14)" fg:x="4108" fg:w="560"/><text x="76.5451%" y="399.50">alloc::vec::Vec&lt;T,A&gt;::reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (560 samples, 10.42%)</title><rect x="76.4279%" y="373" width="10.4186%" height="15" fill="rgb(247,145,37)" fg:x="4108" fg:w="560"/><text x="76.5451%" y="383.50">alloc::raw_vec::RawVec&lt;T,A&gt;::reserve</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (559 samples, 10.40%)</title><rect x="76.4465%" y="357" width="10.4000%" height="15" fill="rgb(209,117,53)" fg:x="4109" fg:w="559"/><text x="76.5637%" y="367.50">alloc::raw_vec::RawVec&lt;T,A&gt;::reserv..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (559 samples, 10.40%)</title><rect x="76.4465%" y="341" width="10.4000%" height="15" fill="rgb(212,90,42)" fg:x="4109" fg:w="559"/><text x="76.5637%" y="351.50">alloc::raw_vec::RawVec&lt;T,A&gt;::grow_a..</text></g><g><title>core::cmp::max (6 samples, 0.11%)</title><rect x="86.7349%" y="325" width="0.1116%" height="15" fill="rgb(218,164,37)" fg:x="4662" fg:w="6"/><text x="86.8521%" y="335.50"></text></g><g><title>core::cmp::Ord::max (6 samples, 0.11%)</title><rect x="86.7349%" y="309" width="0.1116%" height="15" fill="rgb(246,65,34)" fg:x="4662" fg:w="6"/><text x="86.8521%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.11%)</title><rect x="86.7349%" y="293" width="0.1116%" height="15" fill="rgb(231,100,33)" fg:x="4662" fg:w="6"/><text x="86.8521%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3 samples, 0.06%)</title><rect x="86.8465%" y="389" width="0.0558%" height="15" fill="rgb(228,126,14)" fg:x="4668" fg:w="3"/><text x="86.9637%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::collections::vec_deque::drain::Drain&lt;(usize,usize)&gt;,fringe_vs_astar::algorithms::fringe::delete_from_fringe::{{closure}}&gt;&gt; (4 samples, 0.07%)</title><rect x="86.9023%" y="389" width="0.0744%" height="15" fill="rgb(215,173,21)" fg:x="4671" fg:w="4"/><text x="87.0195%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::drain::Drain&lt;(usize,usize)&gt;&gt; (4 samples, 0.07%)</title><rect x="86.9023%" y="373" width="0.0744%" height="15" fill="rgb(210,6,40)" fg:x="4671" fg:w="4"/><text x="87.0195%" y="383.50"></text></g><g><title>&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="86.9023%" y="357" width="0.0744%" height="15" fill="rgb(212,48,18)" fg:x="4671" fg:w="4"/><text x="87.0195%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize),alloc::alloc::Global&gt;&gt; (4 samples, 0.07%)</title><rect x="86.9023%" y="341" width="0.0744%" height="15" fill="rgb(230,214,11)" fg:x="4671" fg:w="4"/><text x="87.0195%" y="351.50"></text></g><g><title>&lt;&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.07%)</title><rect x="86.9023%" y="325" width="0.0744%" height="15" fill="rgb(254,105,39)" fg:x="4671" fg:w="4"/><text x="87.0195%" y="335.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="89.1163%" y="373" width="0.0186%" height="15" fill="rgb(245,158,5)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="383.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="89.1163%" y="357" width="0.0186%" height="15" fill="rgb(249,208,11)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="367.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="89.1163%" y="341" width="0.0186%" height="15" fill="rgb(210,39,28)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="351.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="89.1163%" y="325" width="0.0186%" height="15" fill="rgb(211,56,53)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="335.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="89.1163%" y="309" width="0.0186%" height="15" fill="rgb(226,201,30)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="319.50"></text></g><g><title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="89.1163%" y="293" width="0.0186%" height="15" fill="rgb(239,101,34)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="303.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="89.1163%" y="277" width="0.0186%" height="15" fill="rgb(226,209,5)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="287.50"></text></g><g><title>execlists_submission_tasklet (1 samples, 0.02%)</title><rect x="89.1163%" y="261" width="0.0186%" height="15" fill="rgb(250,105,47)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="271.50"></text></g><g><title>drm_clflush_virt_range (1 samples, 0.02%)</title><rect x="89.1163%" y="245" width="0.0186%" height="15" fill="rgb(230,72,3)" fg:x="4790" fg:w="1"/><text x="89.2335%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (117 samples, 2.18%)</title><rect x="86.9767%" y="389" width="2.1767%" height="15" fill="rgb(232,218,39)" fg:x="4675" fg:w="117"/><text x="87.0939%" y="399.50">core:..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.1349%" y="373" width="0.0186%" height="15" fill="rgb(248,166,6)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.1349%" y="357" width="0.0186%" height="15" fill="rgb(247,89,20)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.1349%" y="341" width="0.0186%" height="15" fill="rgb(248,130,54)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="351.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="89.1349%" y="325" width="0.0186%" height="15" fill="rgb(234,196,4)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="335.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="89.1349%" y="309" width="0.0186%" height="15" fill="rgb(250,143,31)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="319.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="89.1349%" y="293" width="0.0186%" height="15" fill="rgb(211,110,34)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="303.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="89.1349%" y="277" width="0.0186%" height="15" fill="rgb(215,124,48)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="287.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="89.1349%" y="261" width="0.0186%" height="15" fill="rgb(216,46,13)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="271.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="89.1349%" y="245" width="0.0186%" height="15" fill="rgb(205,184,25)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="255.50"></text></g><g><title>enqueue_task (1 samples, 0.02%)</title><rect x="89.1349%" y="229" width="0.0186%" height="15" fill="rgb(228,1,10)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="239.50"></text></g><g><title>enqueue_task_rt (1 samples, 0.02%)</title><rect x="89.1349%" y="213" width="0.0186%" height="15" fill="rgb(213,116,27)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="223.50"></text></g><g><title>cpupri_set (1 samples, 0.02%)</title><rect x="89.1349%" y="197" width="0.0186%" height="15" fill="rgb(241,95,50)" fg:x="4791" fg:w="1"/><text x="89.2521%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,767 samples, 32.87%)</title><rect x="56.3721%" y="421" width="32.8744%" height="15" fill="rgb(238,48,32)" fg:x="3030" fg:w="1767"/><text x="56.4893%" y="431.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,760 samples, 32.74%)</title><rect x="56.5023%" y="405" width="32.7442%" height="15" fill="rgb(235,113,49)" fg:x="3037" fg:w="1760"/><text x="56.6195%" y="415.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (5 samples, 0.09%)</title><rect x="89.1535%" y="389" width="0.0930%" height="15" fill="rgb(205,127,43)" fg:x="4792" fg:w="5"/><text x="89.2707%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.2279%" y="373" width="0.0186%" height="15" fill="rgb(250,162,2)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.2279%" y="357" width="0.0186%" height="15" fill="rgb(220,13,41)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.2279%" y="341" width="0.0186%" height="15" fill="rgb(249,221,25)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="351.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="89.2279%" y="325" width="0.0186%" height="15" fill="rgb(215,208,19)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="335.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="89.2279%" y="309" width="0.0186%" height="15" fill="rgb(236,175,2)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="319.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="89.2279%" y="293" width="0.0186%" height="15" fill="rgb(241,52,2)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="303.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="89.2279%" y="277" width="0.0186%" height="15" fill="rgb(248,140,14)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="287.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="89.2279%" y="261" width="0.0186%" height="15" fill="rgb(253,22,42)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="271.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="89.2279%" y="245" width="0.0186%" height="15" fill="rgb(234,61,47)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="255.50"></text></g><g><title>trigger_load_balance (1 samples, 0.02%)</title><rect x="89.2279%" y="229" width="0.0186%" height="15" fill="rgb(208,226,15)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="239.50"></text></g><g><title>nohz_balancer_kick (1 samples, 0.02%)</title><rect x="89.2279%" y="213" width="0.0186%" height="15" fill="rgb(217,221,4)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="223.50"></text></g><g><title>idle_cpu (1 samples, 0.02%)</title><rect x="89.2279%" y="197" width="0.0186%" height="15" fill="rgb(212,174,34)" fg:x="4796" fg:w="1"/><text x="89.3451%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="89.2465%" y="389" width="0.0744%" height="15" fill="rgb(253,83,4)" fg:x="4797" fg:w="4"/><text x="89.3637%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 0.02%)</title><rect x="89.3395%" y="357" width="0.0186%" height="15" fill="rgb(250,195,49)" fg:x="4802" fg:w="1"/><text x="89.4567%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="89.3395%" y="341" width="0.0186%" height="15" fill="rgb(241,192,25)" fg:x="4802" fg:w="1"/><text x="89.4567%" y="351.50"></text></g><g><title>&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.06%)</title><rect x="89.3209%" y="373" width="0.0558%" height="15" fill="rgb(208,124,10)" fg:x="4801" fg:w="3"/><text x="89.4381%" y="383.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (1 samples, 0.02%)</title><rect x="89.3581%" y="357" width="0.0186%" height="15" fill="rgb(222,33,0)" fg:x="4803" fg:w="1"/><text x="89.4753%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (1 samples, 0.02%)</title><rect x="89.3581%" y="341" width="0.0186%" height="15" fill="rgb(234,209,28)" fg:x="4803" fg:w="1"/><text x="89.4753%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (1 samples, 0.02%)</title><rect x="89.3581%" y="325" width="0.0186%" height="15" fill="rgb(224,11,23)" fg:x="4803" fg:w="1"/><text x="89.4753%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.20%)</title><rect x="89.2465%" y="421" width="0.2047%" height="15" fill="rgb(232,99,1)" fg:x="4797" fg:w="11"/><text x="89.3637%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.20%)</title><rect x="89.2465%" y="405" width="0.2047%" height="15" fill="rgb(237,95,45)" fg:x="4797" fg:w="11"/><text x="89.3637%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.13%)</title><rect x="89.3209%" y="389" width="0.1302%" height="15" fill="rgb(208,109,11)" fg:x="4801" fg:w="7"/><text x="89.4381%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4 samples, 0.07%)</title><rect x="89.3767%" y="373" width="0.0744%" height="15" fill="rgb(216,190,48)" fg:x="4804" fg:w="4"/><text x="89.4939%" y="383.50"></text></g><g><title>checked_request2size (3 samples, 0.06%)</title><rect x="89.5628%" y="293" width="0.0558%" height="15" fill="rgb(251,171,36)" fg:x="4814" fg:w="3"/><text x="89.6800%" y="303.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.24%)</title><rect x="89.4884%" y="309" width="0.2419%" height="15" fill="rgb(230,62,22)" fg:x="4810" fg:w="13"/><text x="89.6056%" y="319.50"></text></g><g><title>tcache_get (6 samples, 0.11%)</title><rect x="89.6186%" y="293" width="0.1116%" height="15" fill="rgb(225,114,35)" fg:x="4817" fg:w="6"/><text x="89.7358%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.30%)</title><rect x="89.4512%" y="421" width="0.2977%" height="15" fill="rgb(215,118,42)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.30%)</title><rect x="89.4512%" y="405" width="0.2977%" height="15" fill="rgb(243,119,21)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.30%)</title><rect x="89.4512%" y="389" width="0.2977%" height="15" fill="rgb(252,177,53)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (16 samples, 0.30%)</title><rect x="89.4512%" y="373" width="0.2977%" height="15" fill="rgb(237,209,29)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.30%)</title><rect x="89.4512%" y="357" width="0.2977%" height="15" fill="rgb(212,65,23)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.30%)</title><rect x="89.4512%" y="341" width="0.2977%" height="15" fill="rgb(230,222,46)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="351.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.30%)</title><rect x="89.4512%" y="325" width="0.2977%" height="15" fill="rgb(215,135,32)" fg:x="4808" fg:w="16"/><text x="89.5684%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="89.7302%" y="309" width="0.0186%" height="15" fill="rgb(246,101,22)" fg:x="4823" fg:w="1"/><text x="89.8474%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,810 samples, 33.67%)</title><rect x="56.1302%" y="517" width="33.6744%" height="15" fill="rgb(206,107,13)" fg:x="3017" fg:w="1810"/><text x="56.2474%" y="527.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,810 samples, 33.67%)</title><rect x="56.1302%" y="501" width="33.6744%" height="15" fill="rgb(250,100,44)" fg:x="3017" fg:w="1810"/><text x="56.2474%" y="511.50">&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as alloc::collections::vec_deque::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::spec_from_iter (1,810 samples, 33.67%)</title><rect x="56.1302%" y="485" width="33.6744%" height="15" fill="rgb(231,147,38)" fg:x="3017" fg:w="1810"/><text x="56.2474%" y="495.50">&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as alloc::collections::vec_deque::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::spec_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,807 samples, 33.62%)</title><rect x="56.1860%" y="469" width="33.6186%" height="15" fill="rgb(229,8,40)" fg:x="3020" fg:w="1807"/><text x="56.3032%" y="479.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,804 samples, 33.56%)</title><rect x="56.2419%" y="453" width="33.5628%" height="15" fill="rgb(221,135,30)" fg:x="3023" fg:w="1804"/><text x="56.3590%" y="463.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,802 samples, 33.53%)</title><rect x="56.2791%" y="437" width="33.5256%" height="15" fill="rgb(249,193,18)" fg:x="3025" fg:w="1802"/><text x="56.3963%" y="447.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter</text></g><g><title>core::ptr::write (3 samples, 0.06%)</title><rect x="89.7488%" y="421" width="0.0558%" height="15" fill="rgb(209,133,39)" fg:x="4824" fg:w="3"/><text x="89.8660%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (3 samples, 0.06%)</title><rect x="89.8047%" y="517" width="0.0558%" height="15" fill="rgb(232,100,14)" fg:x="4827" fg:w="3"/><text x="89.9218%" y="527.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (3 samples, 0.06%)</title><rect x="89.8047%" y="501" width="0.0558%" height="15" fill="rgb(224,185,1)" fg:x="4827" fg:w="3"/><text x="89.9218%" y="511.50"></text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="90.4000%" y="405" width="0.0186%" height="15" fill="rgb(223,139,8)" fg:x="4859" fg:w="1"/><text x="90.5172%" y="415.50"></text></g><g><title>__GI___libc_free (33 samples, 0.61%)</title><rect x="89.8605%" y="437" width="0.6140%" height="15" fill="rgb(232,213,38)" fg:x="4830" fg:w="33"/><text x="89.9777%" y="447.50"></text></g><g><title>_int_free (29 samples, 0.54%)</title><rect x="89.9349%" y="421" width="0.5395%" height="15" fill="rgb(207,94,22)" fg:x="4834" fg:w="29"/><text x="90.0521%" y="431.50"></text></g><g><title>unlink_chunk (3 samples, 0.06%)</title><rect x="90.4186%" y="405" width="0.0558%" height="15" fill="rgb(219,183,54)" fg:x="4860" fg:w="3"/><text x="90.5358%" y="415.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Fringe::push_now (2,144 samples, 39.89%)</title><rect x="50.6047%" y="549" width="39.8884%" height="15" fill="rgb(216,185,54)" fg:x="2720" fg:w="2144"/><text x="50.7218%" y="559.50">fringe_vs_astar::algorithms::fringe::Fringe::push_now</text></g><g><title>fringe_vs_astar::algorithms::fringe::delete_from_fringe (1,848 samples, 34.38%)</title><rect x="56.1116%" y="533" width="34.3814%" height="15" fill="rgb(254,217,39)" fg:x="3016" fg:w="1848"/><text x="56.2288%" y="543.50">fringe_vs_astar::algorithms::fringe::delete_from_fringe</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;(usize,usize)&gt;&gt; (34 samples, 0.63%)</title><rect x="89.8605%" y="517" width="0.6326%" height="15" fill="rgb(240,178,23)" fg:x="4830" fg:w="34"/><text x="89.9777%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize)&gt;&gt; (34 samples, 0.63%)</title><rect x="89.8605%" y="501" width="0.6326%" height="15" fill="rgb(218,11,47)" fg:x="4830" fg:w="34"/><text x="89.9777%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.63%)</title><rect x="89.8605%" y="485" width="0.6326%" height="15" fill="rgb(218,51,51)" fg:x="4830" fg:w="34"/><text x="89.9777%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.63%)</title><rect x="89.8605%" y="469" width="0.6326%" height="15" fill="rgb(238,126,27)" fg:x="4830" fg:w="34"/><text x="89.9777%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.63%)</title><rect x="89.8605%" y="453" width="0.6326%" height="15" fill="rgb(249,202,22)" fg:x="4830" fg:w="34"/><text x="89.9777%" y="463.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="90.4744%" y="437" width="0.0186%" height="15" fill="rgb(254,195,49)" fg:x="4863" fg:w="1"/><text x="90.5916%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="90.4930%" y="533" width="0.0186%" height="15" fill="rgb(208,123,14)" fg:x="4864" fg:w="1"/><text x="90.6102%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="90.4930%" y="517" width="0.0186%" height="15" fill="rgb(224,200,8)" fg:x="4864" fg:w="1"/><text x="90.6102%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="90.4930%" y="501" width="0.0186%" height="15" fill="rgb(217,61,36)" fg:x="4864" fg:w="1"/><text x="90.6102%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="90.4930%" y="485" width="0.0186%" height="15" fill="rgb(206,35,45)" fg:x="4864" fg:w="1"/><text x="90.6102%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="90.4930%" y="469" width="0.0186%" height="15" fill="rgb(217,65,33)" fg:x="4864" fg:w="1"/><text x="90.6102%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="90.5116%" y="533" width="0.0186%" height="15" fill="rgb(222,158,48)" fg:x="4865" fg:w="1"/><text x="90.6288%" y="543.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::construct_path (4 samples, 0.07%)</title><rect x="90.4930%" y="549" width="0.0744%" height="15" fill="rgb(254,2,54)" fg:x="4864" fg:w="4"/><text x="90.6102%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(core::option::Option&lt;f64&gt;,core::option::Option&lt;(usize,usize)&gt;)&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="90.5302%" y="533" width="0.0372%" height="15" fill="rgb(250,143,38)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="90.5302%" y="517" width="0.0372%" height="15" fill="rgb(248,25,0)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;]&gt; (2 samples, 0.04%)</title><rect x="90.5302%" y="501" width="0.0372%" height="15" fill="rgb(206,152,27)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt; (2 samples, 0.04%)</title><rect x="90.5302%" y="485" width="0.0372%" height="15" fill="rgb(240,77,30)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(core::option::Option&lt;(usize,usize)&gt;,core::option::Option&lt;f64&gt;)&gt;&gt; (2 samples, 0.04%)</title><rect x="90.5302%" y="469" width="0.0372%" height="15" fill="rgb(231,5,3)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="90.5302%" y="453" width="0.0372%" height="15" fill="rgb(207,226,32)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="90.5302%" y="437" width="0.0372%" height="15" fill="rgb(222,207,47)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="90.5302%" y="421" width="0.0372%" height="15" fill="rgb(229,115,45)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="431.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="90.5302%" y="405" width="0.0372%" height="15" fill="rgb(224,191,6)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="90.5302%" y="389" width="0.0372%" height="15" fill="rgb(230,227,24)" fg:x="4866" fg:w="2"/><text x="90.6474%" y="399.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::fringe_simple (7 samples, 0.13%)</title><rect x="90.5674%" y="549" width="0.1302%" height="15" fill="rgb(228,80,19)" fg:x="4868" fg:w="7"/><text x="90.6846%" y="559.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::fringe_simple (225 samples, 4.19%)</title><rect x="90.6977%" y="533" width="4.1860%" height="15" fill="rgb(247,229,0)" fg:x="4875" fg:w="225"/><text x="90.8149%" y="543.50">fringe_vs_ast..</text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="94.8651%" y="517" width="0.0186%" height="15" fill="rgb(237,194,15)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="527.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="94.8651%" y="501" width="0.0186%" height="15" fill="rgb(219,203,20)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="511.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="94.8651%" y="485" width="0.0186%" height="15" fill="rgb(234,128,8)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="495.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="94.8651%" y="469" width="0.0186%" height="15" fill="rgb(248,202,8)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="479.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="94.8651%" y="453" width="0.0186%" height="15" fill="rgb(206,104,37)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="463.50"></text></g><g><title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="94.8651%" y="437" width="0.0186%" height="15" fill="rgb(223,8,27)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="447.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="94.8651%" y="421" width="0.0186%" height="15" fill="rgb(216,217,28)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="431.50"></text></g><g><title>usb_giveback_urb_bh (1 samples, 0.02%)</title><rect x="94.8651%" y="405" width="0.0186%" height="15" fill="rgb(249,199,1)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="415.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="94.8651%" y="389" width="0.0186%" height="15" fill="rgb(240,85,17)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="399.50"></text></g><g><title>btusb_intr_complete (1 samples, 0.02%)</title><rect x="94.8651%" y="373" width="0.0186%" height="15" fill="rgb(206,108,45)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="383.50"></text></g><g><title>usb_submit_urb (1 samples, 0.02%)</title><rect x="94.8651%" y="357" width="0.0186%" height="15" fill="rgb(245,210,41)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="367.50"></text></g><g><title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="94.8651%" y="341" width="0.0186%" height="15" fill="rgb(206,13,37)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="351.50"></text></g><g><title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="94.8651%" y="325" width="0.0186%" height="15" fill="rgb(250,61,18)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="335.50"></text></g><g><title>xhci_queue_intr_tx (1 samples, 0.02%)</title><rect x="94.8651%" y="309" width="0.0186%" height="15" fill="rgb(235,172,48)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="319.50"></text></g><g><title>xhci_queue_bulk_tx (1 samples, 0.02%)</title><rect x="94.8651%" y="293" width="0.0186%" height="15" fill="rgb(249,201,17)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="303.50"></text></g><g><title>xhci_ring_ep_doorbell (1 samples, 0.02%)</title><rect x="94.8651%" y="277" width="0.0186%" height="15" fill="rgb(219,208,6)" fg:x="5099" fg:w="1"/><text x="94.9823%" y="287.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::fringe_simple (5,067 samples, 94.27%)</title><rect x="5.2279%" y="565" width="94.2698%" height="15" fill="rgb(248,31,23)" fg:x="281" fg:w="5067"/><text x="5.3451%" y="575.50">fringe_vs_astar::algorithms::fringe::fringe_simple</text></g><g><title>fringe_vs_astar::algorithms::fringe::fringe_simple::_{{closure}} (473 samples, 8.80%)</title><rect x="90.6977%" y="549" width="8.8000%" height="15" fill="rgb(245,15,42)" fg:x="4875" fg:w="473"/><text x="90.8149%" y="559.50">fringe_vs_astar::algorithms::..</text></g><g><title>fringe_vs_astar::algorithms::heuristic (248 samples, 4.61%)</title><rect x="94.8837%" y="533" width="4.6140%" height="15" fill="rgb(222,217,39)" fg:x="5100" fg:w="248"/><text x="95.0009%" y="543.50">fringe_vs_asta..</text></g><g><title>std::f64::&lt;impl f64&gt;::abs (63 samples, 1.17%)</title><rect x="98.3256%" y="517" width="1.1721%" height="15" fill="rgb(210,219,27)" fg:x="5285" fg:w="63"/><text x="98.4428%" y="527.50">st..</text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="99.4791%" y="501" width="0.0186%" height="15" fill="rgb(252,166,36)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="511.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="99.4791%" y="485" width="0.0186%" height="15" fill="rgb(245,132,34)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="495.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="99.4791%" y="469" width="0.0186%" height="15" fill="rgb(236,54,3)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="479.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="99.4791%" y="453" width="0.0186%" height="15" fill="rgb(241,173,43)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="463.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="99.4791%" y="437" width="0.0186%" height="15" fill="rgb(215,190,9)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="447.50"></text></g><g><title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="99.4791%" y="421" width="0.0186%" height="15" fill="rgb(242,101,16)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="431.50"></text></g><g><title>tasklet_action_common.constprop.0 (1 samples, 0.02%)</title><rect x="99.4791%" y="405" width="0.0186%" height="15" fill="rgb(223,190,21)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="415.50"></text></g><g><title>usb_giveback_urb_bh (1 samples, 0.02%)</title><rect x="99.4791%" y="389" width="0.0186%" height="15" fill="rgb(215,228,25)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="399.50"></text></g><g><title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="99.4791%" y="373" width="0.0186%" height="15" fill="rgb(225,36,22)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="383.50"></text></g><g><title>btusb_intr_complete (1 samples, 0.02%)</title><rect x="99.4791%" y="357" width="0.0186%" height="15" fill="rgb(251,106,46)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="367.50"></text></g><g><title>usb_submit_urb (1 samples, 0.02%)</title><rect x="99.4791%" y="341" width="0.0186%" height="15" fill="rgb(208,90,1)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="351.50"></text></g><g><title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="99.4791%" y="325" width="0.0186%" height="15" fill="rgb(243,10,4)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="335.50"></text></g><g><title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="99.4791%" y="309" width="0.0186%" height="15" fill="rgb(212,137,27)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="319.50"></text></g><g><title>xhci_queue_intr_tx (1 samples, 0.02%)</title><rect x="99.4791%" y="293" width="0.0186%" height="15" fill="rgb(231,220,49)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="303.50"></text></g><g><title>xhci_queue_bulk_tx (1 samples, 0.02%)</title><rect x="99.4791%" y="277" width="0.0186%" height="15" fill="rgb(237,96,20)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="287.50"></text></g><g><title>xhci_ring_ep_doorbell (1 samples, 0.02%)</title><rect x="99.4791%" y="261" width="0.0186%" height="15" fill="rgb(239,229,30)" fg:x="5347" fg:w="1"/><text x="99.5963%" y="271.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.02%)</title><rect x="99.4977%" y="341" width="0.0186%" height="15" fill="rgb(219,65,33)" fg:x="5348" fg:w="1"/><text x="99.6149%" y="351.50"></text></g><g><title>rw_verify_area (1 samples, 0.02%)</title><rect x="99.5163%" y="341" width="0.0186%" height="15" fill="rgb(243,134,7)" fg:x="5349" fg:w="1"/><text x="99.6335%" y="351.50"></text></g><g><title>security_file_permission (1 samples, 0.02%)</title><rect x="99.5163%" y="325" width="0.0186%" height="15" fill="rgb(216,177,54)" fg:x="5349" fg:w="1"/><text x="99.6335%" y="335.50"></text></g><g><title>ktime_get_real_seconds (1 samples, 0.02%)</title><rect x="99.5349%" y="293" width="0.0186%" height="15" fill="rgb(211,160,20)" fg:x="5350" fg:w="1"/><text x="99.6521%" y="303.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (4 samples, 0.07%)</title><rect x="99.4977%" y="469" width="0.0744%" height="15" fill="rgb(239,85,39)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="479.50"></text></g><g><title>__GI___libc_write (4 samples, 0.07%)</title><rect x="99.4977%" y="453" width="0.0744%" height="15" fill="rgb(232,125,22)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="99.4977%" y="437" width="0.0744%" height="15" fill="rgb(244,57,34)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="447.50"></text></g><g><title>do_syscall_64 (4 samples, 0.07%)</title><rect x="99.4977%" y="421" width="0.0744%" height="15" fill="rgb(214,203,32)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="431.50"></text></g><g><title>x64_sys_call (4 samples, 0.07%)</title><rect x="99.4977%" y="405" width="0.0744%" height="15" fill="rgb(207,58,43)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="415.50"></text></g><g><title>__x64_sys_write (4 samples, 0.07%)</title><rect x="99.4977%" y="389" width="0.0744%" height="15" fill="rgb(215,193,15)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="399.50"></text></g><g><title>ksys_write (4 samples, 0.07%)</title><rect x="99.4977%" y="373" width="0.0744%" height="15" fill="rgb(232,15,44)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="383.50"></text></g><g><title>vfs_write (4 samples, 0.07%)</title><rect x="99.4977%" y="357" width="0.0744%" height="15" fill="rgb(212,3,48)" fg:x="5348" fg:w="4"/><text x="99.6149%" y="367.50"></text></g><g><title>tty_write (2 samples, 0.04%)</title><rect x="99.5349%" y="341" width="0.0372%" height="15" fill="rgb(218,128,7)" fg:x="5350" fg:w="2"/><text x="99.6521%" y="351.50"></text></g><g><title>file_tty_write.constprop.0 (2 samples, 0.04%)</title><rect x="99.5349%" y="325" width="0.0372%" height="15" fill="rgb(226,216,39)" fg:x="5350" fg:w="2"/><text x="99.6521%" y="335.50"></text></g><g><title>do_tty_write (2 samples, 0.04%)</title><rect x="99.5349%" y="309" width="0.0372%" height="15" fill="rgb(243,47,51)" fg:x="5350" fg:w="2"/><text x="99.6521%" y="319.50"></text></g><g><title>n_tty_write (1 samples, 0.02%)</title><rect x="99.5535%" y="293" width="0.0186%" height="15" fill="rgb(241,183,40)" fg:x="5351" fg:w="1"/><text x="99.6707%" y="303.50"></text></g><g><title>process_output_block (1 samples, 0.02%)</title><rect x="99.5535%" y="277" width="0.0186%" height="15" fill="rgb(231,217,32)" fg:x="5351" fg:w="1"/><text x="99.6707%" y="287.50"></text></g><g><title>pty_write (1 samples, 0.02%)</title><rect x="99.5535%" y="261" width="0.0186%" height="15" fill="rgb(229,61,38)" fg:x="5351" fg:w="1"/><text x="99.6707%" y="271.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (1 samples, 0.02%)</title><rect x="99.5535%" y="245" width="0.0186%" height="15" fill="rgb(225,210,5)" fg:x="5351" fg:w="1"/><text x="99.6707%" y="255.50"></text></g><g><title>queue_work_on (1 samples, 0.02%)</title><rect x="99.5535%" y="229" width="0.0186%" height="15" fill="rgb(231,79,45)" fg:x="5351" fg:w="1"/><text x="99.6707%" y="239.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.09%)</title><rect x="99.4977%" y="501" width="0.0930%" height="15" fill="rgb(224,100,7)" fg:x="5348" fg:w="5"/><text x="99.6149%" y="511.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.09%)</title><rect x="99.4977%" y="485" width="0.0930%" height="15" fill="rgb(241,198,18)" fg:x="5348" fg:w="5"/><text x="99.6149%" y="495.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.02%)</title><rect x="99.5721%" y="469" width="0.0186%" height="15" fill="rgb(252,97,53)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="479.50"></text></g><g><title>__GI___libc_write (1 samples, 0.02%)</title><rect x="99.5721%" y="453" width="0.0186%" height="15" fill="rgb(220,88,7)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.5721%" y="437" width="0.0186%" height="15" fill="rgb(213,176,14)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.5721%" y="421" width="0.0186%" height="15" fill="rgb(246,73,7)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="431.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="99.5721%" y="405" width="0.0186%" height="15" fill="rgb(245,64,36)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="415.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="99.5721%" y="389" width="0.0186%" height="15" fill="rgb(245,80,10)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="399.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="99.5721%" y="373" width="0.0186%" height="15" fill="rgb(232,107,50)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="383.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="99.5721%" y="357" width="0.0186%" height="15" fill="rgb(253,3,0)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="367.50"></text></g><g><title>tty_write (1 samples, 0.02%)</title><rect x="99.5721%" y="341" width="0.0186%" height="15" fill="rgb(212,99,53)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="351.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.02%)</title><rect x="99.5721%" y="325" width="0.0186%" height="15" fill="rgb(249,111,54)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="335.50"></text></g><g><title>do_tty_write (1 samples, 0.02%)</title><rect x="99.5721%" y="309" width="0.0186%" height="15" fill="rgb(249,55,30)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="319.50"></text></g><g><title>__check_object_size.part.0 (1 samples, 0.02%)</title><rect x="99.5721%" y="293" width="0.0186%" height="15" fill="rgb(237,47,42)" fg:x="5352" fg:w="1"/><text x="99.6893%" y="303.50"></text></g><g><title>fringe_vs_astar::context::Context::print_solution (6 samples, 0.11%)</title><rect x="99.4977%" y="565" width="0.1116%" height="15" fill="rgb(211,20,18)" fg:x="5348" fg:w="6"/><text x="99.6149%" y="575.50"></text></g><g><title>std::io::stdio::_print (6 samples, 0.11%)</title><rect x="99.4977%" y="549" width="0.1116%" height="15" fill="rgb(231,203,46)" fg:x="5348" fg:w="6"/><text x="99.6149%" y="559.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6 samples, 0.11%)</title><rect x="99.4977%" y="533" width="0.1116%" height="15" fill="rgb(237,142,3)" fg:x="5348" fg:w="6"/><text x="99.6149%" y="543.50"></text></g><g><title>core::fmt::write (6 samples, 0.11%)</title><rect x="99.4977%" y="517" width="0.1116%" height="15" fill="rgb(241,107,1)" fg:x="5348" fg:w="6"/><text x="99.6149%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.5907%" y="501" width="0.0186%" height="15" fill="rgb(229,83,13)" fg:x="5353" fg:w="1"/><text x="99.7079%" y="511.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.02%)</title><rect x="99.5907%" y="485" width="0.0186%" height="15" fill="rgb(241,91,40)" fg:x="5353" fg:w="1"/><text x="99.7079%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1 samples, 0.02%)</title><rect x="99.5907%" y="469" width="0.0186%" height="15" fill="rgb(225,3,45)" fg:x="5353" fg:w="1"/><text x="99.7079%" y="479.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.02%)</title><rect x="99.6093%" y="485" width="0.0186%" height="15" fill="rgb(244,223,14)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.02%)</title><rect x="99.6093%" y="469" width="0.0186%" height="15" fill="rgb(224,124,37)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="479.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1 samples, 0.02%)</title><rect x="99.6093%" y="453" width="0.0186%" height="15" fill="rgb(251,171,30)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.02%)</title><rect x="99.6093%" y="437" width="0.0186%" height="15" fill="rgb(236,46,54)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.02%)</title><rect x="99.6093%" y="421" width="0.0186%" height="15" fill="rgb(245,213,5)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.02%)</title><rect x="99.6093%" y="405" width="0.0186%" height="15" fill="rgb(230,144,27)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.6093%" y="389" width="0.0186%" height="15" fill="rgb(220,86,6)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.6093%" y="373" width="0.0186%" height="15" fill="rgb(240,20,13)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.02%)</title><rect x="99.6093%" y="357" width="0.0186%" height="15" fill="rgb(217,89,34)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.02%)</title><rect x="99.6093%" y="341" width="0.0186%" height="15" fill="rgb(229,13,5)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="99.6093%" y="325" width="0.0186%" height="15" fill="rgb(244,67,35)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="99.6093%" y="309" width="0.0186%" height="15" fill="rgb(221,40,2)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="99.6093%" y="293" width="0.0186%" height="15" fill="rgb(237,157,21)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="99.6093%" y="277" width="0.0186%" height="15" fill="rgb(222,94,11)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="99.6093%" y="261" width="0.0186%" height="15" fill="rgb(249,113,6)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="99.6093%" y="245" width="0.0186%" height="15" fill="rgb(238,137,36)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.02%)</title><rect x="99.6093%" y="229" width="0.0186%" height="15" fill="rgb(210,102,26)" fg:x="5354" fg:w="1"/><text x="99.7265%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.532341631749914866 (1 samples, 0.02%)</title><rect x="99.6279%" y="357" width="0.0186%" height="15" fill="rgb(218,30,30)" fg:x="5355" fg:w="1"/><text x="99.7451%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.04%)</title><rect x="99.6279%" y="485" width="0.0372%" height="15" fill="rgb(214,67,26)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.04%)</title><rect x="99.6279%" y="469" width="0.0372%" height="15" fill="rgb(251,9,53)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="99.6279%" y="453" width="0.0372%" height="15" fill="rgb(228,204,25)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.04%)</title><rect x="99.6279%" y="437" width="0.0372%" height="15" fill="rgb(207,153,8)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="99.6279%" y="421" width="0.0372%" height="15" fill="rgb(242,9,16)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="99.6279%" y="405" width="0.0372%" height="15" fill="rgb(217,211,10)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.04%)</title><rect x="99.6279%" y="389" width="0.0372%" height="15" fill="rgb(219,228,52)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.04%)</title><rect x="99.6279%" y="373" width="0.0372%" height="15" fill="rgb(231,92,29)" fg:x="5355" fg:w="2"/><text x="99.7451%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.6465%" y="357" width="0.0186%" height="15" fill="rgb(232,8,23)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.6465%" y="341" width="0.0186%" height="15" fill="rgb(216,211,34)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="99.6465%" y="325" width="0.0186%" height="15" fill="rgb(236,151,0)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.6465%" y="309" width="0.0186%" height="15" fill="rgb(209,168,3)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="319.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="99.6465%" y="293" width="0.0186%" height="15" fill="rgb(208,129,28)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="303.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="99.6465%" y="277" width="0.0186%" height="15" fill="rgb(229,78,22)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.6465%" y="261" width="0.0186%" height="15" fill="rgb(228,187,13)" fg:x="5356" fg:w="1"/><text x="99.7637%" y="271.50"></text></g><g><title>fringe_vs_astar::context::Context::solve (5,077 samples, 94.46%)</title><rect x="5.2279%" y="581" width="94.4558%" height="15" fill="rgb(240,119,24)" fg:x="281" fg:w="5077"/><text x="5.3451%" y="591.50">fringe_vs_astar::context::Context::solve</text></g><g><title>std::io::stdio::_print (4 samples, 0.07%)</title><rect x="99.6093%" y="565" width="0.0744%" height="15" fill="rgb(209,194,42)" fg:x="5354" fg:w="4"/><text x="99.7265%" y="575.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (4 samples, 0.07%)</title><rect x="99.6093%" y="549" width="0.0744%" height="15" fill="rgb(247,200,46)" fg:x="5354" fg:w="4"/><text x="99.7265%" y="559.50"></text></g><g><title>core::fmt::write (4 samples, 0.07%)</title><rect x="99.6093%" y="533" width="0.0744%" height="15" fill="rgb(218,76,16)" fg:x="5354" fg:w="4"/><text x="99.7265%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.07%)</title><rect x="99.6093%" y="517" width="0.0744%" height="15" fill="rgb(225,21,48)" fg:x="5354" fg:w="4"/><text x="99.7265%" y="527.50"></text></g><g><title>&lt;fringe_vs_astar::problem::Problem as core::fmt::Display&gt;::fmt (4 samples, 0.07%)</title><rect x="99.6093%" y="501" width="0.0744%" height="15" fill="rgb(239,223,50)" fg:x="5354" fg:w="4"/><text x="99.7265%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.02%)</title><rect x="99.6651%" y="485" width="0.0186%" height="15" fill="rgb(244,45,21)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.6651%" y="469" width="0.0186%" height="15" fill="rgb(232,33,43)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.02%)</title><rect x="99.6651%" y="453" width="0.0186%" height="15" fill="rgb(209,8,3)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="463.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="99.6651%" y="437" width="0.0186%" height="15" fill="rgb(214,25,53)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.6651%" y="421" width="0.0186%" height="15" fill="rgb(254,186,54)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="431.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.6651%" y="405" width="0.0186%" height="15" fill="rgb(208,174,49)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="415.50"></text></g><g><title>__GI___libc_write (1 samples, 0.02%)</title><rect x="99.6651%" y="389" width="0.0186%" height="15" fill="rgb(233,191,51)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.6651%" y="373" width="0.0186%" height="15" fill="rgb(222,134,10)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="383.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.6651%" y="357" width="0.0186%" height="15" fill="rgb(230,226,20)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="367.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="99.6651%" y="341" width="0.0186%" height="15" fill="rgb(251,111,25)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="351.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="99.6651%" y="325" width="0.0186%" height="15" fill="rgb(224,40,46)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="335.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="99.6651%" y="309" width="0.0186%" height="15" fill="rgb(236,108,47)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="319.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="99.6651%" y="293" width="0.0186%" height="15" fill="rgb(234,93,0)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="303.50"></text></g><g><title>tty_write (1 samples, 0.02%)</title><rect x="99.6651%" y="277" width="0.0186%" height="15" fill="rgb(224,213,32)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="287.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.02%)</title><rect x="99.6651%" y="261" width="0.0186%" height="15" fill="rgb(251,11,48)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="271.50"></text></g><g><title>do_tty_write (1 samples, 0.02%)</title><rect x="99.6651%" y="245" width="0.0186%" height="15" fill="rgb(236,173,5)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="255.50"></text></g><g><title>n_tty_write (1 samples, 0.02%)</title><rect x="99.6651%" y="229" width="0.0186%" height="15" fill="rgb(230,95,12)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="239.50"></text></g><g><title>do_output_char (1 samples, 0.02%)</title><rect x="99.6651%" y="213" width="0.0186%" height="15" fill="rgb(232,209,1)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="223.50"></text></g><g><title>tty_put_char (1 samples, 0.02%)</title><rect x="99.6651%" y="197" width="0.0186%" height="15" fill="rgb(232,6,1)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="207.50"></text></g><g><title>pty_write (1 samples, 0.02%)</title><rect x="99.6651%" y="181" width="0.0186%" height="15" fill="rgb(210,224,50)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="191.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (1 samples, 0.02%)</title><rect x="99.6651%" y="165" width="0.0186%" height="15" fill="rgb(228,127,35)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="175.50"></text></g><g><title>tty_insert_flip_string_fixed_flag (1 samples, 0.02%)</title><rect x="99.6651%" y="149" width="0.0186%" height="15" fill="rgb(245,102,45)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="159.50"></text></g><g><title>__tty_buffer_request_room (1 samples, 0.02%)</title><rect x="99.6651%" y="133" width="0.0186%" height="15" fill="rgb(214,1,49)" fg:x="5357" fg:w="1"/><text x="99.7823%" y="143.50"></text></g><g><title>fringe_vs_astar::context::Context::run_full_file (5,079 samples, 94.49%)</title><rect x="5.2093%" y="597" width="94.4930%" height="15" fill="rgb(226,163,40)" fg:x="280" fg:w="5079"/><text x="5.3265%" y="607.50">fringe_vs_astar::context::Context::run_full_file</text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="99.6837%" y="581" width="0.0186%" height="15" fill="rgb(239,212,28)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="591.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="99.6837%" y="565" width="0.0186%" height="15" fill="rgb(220,20,13)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="99.6837%" y="549" width="0.0186%" height="15" fill="rgb(210,164,35)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="559.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="99.6837%" y="533" width="0.0186%" height="15" fill="rgb(248,109,41)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.6837%" y="517" width="0.0186%" height="15" fill="rgb(238,23,50)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="527.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="99.6837%" y="501" width="0.0186%" height="15" fill="rgb(211,48,49)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="511.50"></text></g><g><title>__GI___libc_write (1 samples, 0.02%)</title><rect x="99.6837%" y="485" width="0.0186%" height="15" fill="rgb(223,36,21)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.6837%" y="469" width="0.0186%" height="15" fill="rgb(207,123,46)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.6837%" y="453" width="0.0186%" height="15" fill="rgb(240,218,32)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="463.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="99.6837%" y="437" width="0.0186%" height="15" fill="rgb(252,5,43)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="447.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="99.6837%" y="421" width="0.0186%" height="15" fill="rgb(252,84,19)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="431.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="99.6837%" y="405" width="0.0186%" height="15" fill="rgb(243,152,39)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="415.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="99.6837%" y="389" width="0.0186%" height="15" fill="rgb(234,160,15)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="399.50"></text></g><g><title>tty_write (1 samples, 0.02%)</title><rect x="99.6837%" y="373" width="0.0186%" height="15" fill="rgb(237,34,20)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="383.50"></text></g><g><title>file_tty_write.constprop.0 (1 samples, 0.02%)</title><rect x="99.6837%" y="357" width="0.0186%" height="15" fill="rgb(229,97,13)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="367.50"></text></g><g><title>do_tty_write (1 samples, 0.02%)</title><rect x="99.6837%" y="341" width="0.0186%" height="15" fill="rgb(234,71,50)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="351.50"></text></g><g><title>mutex_unlock (1 samples, 0.02%)</title><rect x="99.6837%" y="325" width="0.0186%" height="15" fill="rgb(253,155,4)" fg:x="5358" fg:w="1"/><text x="99.8009%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="99.7023%" y="453" width="0.0186%" height="15" fill="rgb(222,185,37)" fg:x="5359" fg:w="1"/><text x="99.8195%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="99.7023%" y="437" width="0.0186%" height="15" fill="rgb(251,177,13)" fg:x="5359" fg:w="1"/><text x="99.8195%" y="447.50"></text></g><g><title>__libc_start_main_impl (5,082 samples, 94.55%)</title><rect x="5.1907%" y="741" width="94.5488%" height="15" fill="rgb(250,179,40)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="751.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (5,082 samples, 94.55%)</title><rect x="5.1907%" y="725" width="94.5488%" height="15" fill="rgb(242,44,2)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="735.50">__libc_start_call_main</text></g><g><title>main (5,082 samples, 94.55%)</title><rect x="5.1907%" y="709" width="94.5488%" height="15" fill="rgb(216,177,13)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="719.50">main</text></g><g><title>std::rt::lang_start_internal (5,082 samples, 94.55%)</title><rect x="5.1907%" y="693" width="94.5488%" height="15" fill="rgb(216,106,43)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="703.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (5,082 samples, 94.55%)</title><rect x="5.1907%" y="677" width="94.5488%" height="15" fill="rgb(216,183,2)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="687.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,082 samples, 94.55%)</title><rect x="5.1907%" y="661" width="94.5488%" height="15" fill="rgb(249,75,3)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="671.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (5,082 samples, 94.55%)</title><rect x="5.1907%" y="645" width="94.5488%" height="15" fill="rgb(219,67,39)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="655.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (5,082 samples, 94.55%)</title><rect x="5.1907%" y="629" width="94.5488%" height="15" fill="rgb(253,228,2)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="639.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (5,082 samples, 94.55%)</title><rect x="5.1907%" y="613" width="94.5488%" height="15" fill="rgb(235,138,27)" fg:x="279" fg:w="5082"/><text x="5.3079%" y="623.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (2 samples, 0.04%)</title><rect x="99.7023%" y="597" width="0.0372%" height="15" fill="rgb(236,97,51)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyGridGraph::new (2 samples, 0.04%)</title><rect x="99.7023%" y="581" width="0.0372%" height="15" fill="rgb(240,80,30)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="591.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (2 samples, 0.04%)</title><rect x="99.7023%" y="565" width="0.0372%" height="15" fill="rgb(230,178,19)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.04%)</title><rect x="99.7023%" y="549" width="0.0372%" height="15" fill="rgb(210,190,27)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="99.7023%" y="533" width="0.0372%" height="15" fill="rgb(222,107,31)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="99.7023%" y="517" width="0.0372%" height="15" fill="rgb(216,127,34)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="99.7023%" y="501" width="0.0372%" height="15" fill="rgb(234,116,52)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.04%)</title><rect x="99.7023%" y="485" width="0.0372%" height="15" fill="rgb(222,124,15)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.04%)</title><rect x="99.7023%" y="469" width="0.0372%" height="15" fill="rgb(231,179,28)" fg:x="5359" fg:w="2"/><text x="99.8195%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="99.7209%" y="453" width="0.0186%" height="15" fill="rgb(226,93,45)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="99.7209%" y="437" width="0.0186%" height="15" fill="rgb(215,8,51)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="99.7209%" y="421" width="0.0186%" height="15" fill="rgb(223,106,5)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="99.7209%" y="405" width="0.0186%" height="15" fill="rgb(250,191,5)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.7209%" y="389" width="0.0186%" height="15" fill="rgb(242,132,44)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="99.7209%" y="373" width="0.0186%" height="15" fill="rgb(251,152,29)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="99.7209%" y="357" width="0.0186%" height="15" fill="rgb(218,179,5)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="99.7209%" y="341" width="0.0186%" height="15" fill="rgb(227,67,19)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="351.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="99.7209%" y="325" width="0.0186%" height="15" fill="rgb(233,119,31)" fg:x="5360" fg:w="1"/><text x="99.8381%" y="335.50"></text></g><g><title>_start (5,083 samples, 94.57%)</title><rect x="5.1907%" y="757" width="94.5674%" height="15" fill="rgb(241,120,22)" fg:x="279" fg:w="5083"/><text x="5.3079%" y="767.50">_start</text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="99.7395%" y="741" width="0.0186%" height="15" fill="rgb(224,102,30)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="751.50"></text></g><g><title>_dl_start_final (1 samples, 0.02%)</title><rect x="99.7395%" y="725" width="0.0186%" height="15" fill="rgb(210,164,37)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="735.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="99.7395%" y="709" width="0.0186%" height="15" fill="rgb(226,191,16)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="719.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="99.7395%" y="693" width="0.0186%" height="15" fill="rgb(214,40,45)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="703.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.7395%" y="677" width="0.0186%" height="15" fill="rgb(244,29,26)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="687.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.7395%" y="661" width="0.0186%" height="15" fill="rgb(216,16,5)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="671.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.7395%" y="645" width="0.0186%" height="15" fill="rgb(249,76,35)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="655.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.7395%" y="629" width="0.0186%" height="15" fill="rgb(207,11,44)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="639.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.02%)</title><rect x="99.7395%" y="613" width="0.0186%" height="15" fill="rgb(228,190,49)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="623.50"></text></g><g><title>search_cache (1 samples, 0.02%)</title><rect x="99.7395%" y="597" width="0.0186%" height="15" fill="rgb(214,173,12)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="607.50"></text></g><g><title>_dl_cache_libcmp (1 samples, 0.02%)</title><rect x="99.7395%" y="581" width="0.0186%" height="15" fill="rgb(218,26,35)" fg:x="5361" fg:w="1"/><text x="99.8567%" y="591.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.09%)</title><rect x="99.7581%" y="757" width="0.0930%" height="15" fill="rgb(220,200,19)" fg:x="5362" fg:w="5"/><text x="99.8753%" y="767.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="99.8512%" y="757" width="0.0186%" height="15" fill="rgb(239,95,49)" fg:x="5367" fg:w="1"/><text x="99.9684%" y="767.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.8698%" y="709" width="0.0186%" height="15" fill="rgb(235,85,53)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="719.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.8698%" y="693" width="0.0186%" height="15" fill="rgb(233,133,31)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="703.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.8698%" y="677" width="0.0186%" height="15" fill="rgb(218,25,20)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="687.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="99.8698%" y="661" width="0.0186%" height="15" fill="rgb(252,210,38)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="671.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.8698%" y="645" width="0.0186%" height="15" fill="rgb(242,134,21)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="655.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.8698%" y="629" width="0.0186%" height="15" fill="rgb(213,28,48)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="639.50"></text></g><g><title>randomize_stack_top (1 samples, 0.02%)</title><rect x="99.8698%" y="613" width="0.0186%" height="15" fill="rgb(250,196,2)" fg:x="5368" fg:w="1"/><text x="99.9870%" y="623.50"></text></g><g><title>fringe-vs-astar (5,370 samples, 99.91%)</title><rect x="0.0000%" y="773" width="99.9070%" height="15" fill="rgb(227,5,17)" fg:x="0" fg:w="5370"/><text x="0.1172%" y="783.50">fringe-vs-astar</text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="99.8698%" y="757" width="0.0372%" height="15" fill="rgb(221,226,24)" fg:x="5368" fg:w="2"/><text x="99.9870%" y="767.50"></text></g><g><title>do_syscall_64 (2 samples, 0.04%)</title><rect x="99.8698%" y="741" width="0.0372%" height="15" fill="rgb(211,5,48)" fg:x="5368" fg:w="2"/><text x="99.9870%" y="751.50"></text></g><g><title>x64_sys_call (2 samples, 0.04%)</title><rect x="99.8698%" y="725" width="0.0372%" height="15" fill="rgb(219,150,6)" fg:x="5368" fg:w="2"/><text x="99.9870%" y="735.50"></text></g><g><title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="99.8884%" y="709" width="0.0186%" height="15" fill="rgb(251,46,16)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="719.50"></text></g><g><title>do_group_exit (1 samples, 0.02%)</title><rect x="99.8884%" y="693" width="0.0186%" height="15" fill="rgb(220,204,40)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="703.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="99.8884%" y="677" width="0.0186%" height="15" fill="rgb(211,85,2)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="687.50"></text></g><g><title>exit_mm (1 samples, 0.02%)</title><rect x="99.8884%" y="661" width="0.0186%" height="15" fill="rgb(229,17,7)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="671.50"></text></g><g><title>mmput (1 samples, 0.02%)</title><rect x="99.8884%" y="645" width="0.0186%" height="15" fill="rgb(239,72,28)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="655.50"></text></g><g><title>__mmput (1 samples, 0.02%)</title><rect x="99.8884%" y="629" width="0.0186%" height="15" fill="rgb(230,47,54)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="639.50"></text></g><g><title>exit_mmap (1 samples, 0.02%)</title><rect x="99.8884%" y="613" width="0.0186%" height="15" fill="rgb(214,50,8)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="623.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="99.8884%" y="597" width="0.0186%" height="15" fill="rgb(216,198,43)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="607.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="99.8884%" y="581" width="0.0186%" height="15" fill="rgb(234,20,35)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="591.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="99.8884%" y="565" width="0.0186%" height="15" fill="rgb(254,45,19)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="575.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="99.8884%" y="549" width="0.0186%" height="15" fill="rgb(219,14,44)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="559.50"></text></g><g><title>_compound_head (1 samples, 0.02%)</title><rect x="99.8884%" y="533" width="0.0186%" height="15" fill="rgb(217,220,26)" fg:x="5369" fg:w="1"/><text x="100.0056%" y="543.50"></text></g><g><title>all (5,375 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(213,158,28)" fg:x="0" fg:w="5375"/><text x="0.1172%" y="799.50"></text></g><g><title>perf-exec (5 samples, 0.09%)</title><rect x="99.9070%" y="773" width="0.0930%" height="15" fill="rgb(252,51,52)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="99.9070%" y="757" width="0.0930%" height="15" fill="rgb(246,89,16)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="767.50"></text></g><g><title>do_syscall_64 (5 samples, 0.09%)</title><rect x="99.9070%" y="741" width="0.0930%" height="15" fill="rgb(216,158,49)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="751.50"></text></g><g><title>x64_sys_call (5 samples, 0.09%)</title><rect x="99.9070%" y="725" width="0.0930%" height="15" fill="rgb(236,107,19)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="735.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.09%)</title><rect x="99.9070%" y="709" width="0.0930%" height="15" fill="rgb(228,185,30)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="719.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.09%)</title><rect x="99.9070%" y="693" width="0.0930%" height="15" fill="rgb(246,134,8)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="703.50"></text></g><g><title>bprm_execve (5 samples, 0.09%)</title><rect x="99.9070%" y="677" width="0.0930%" height="15" fill="rgb(214,143,50)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="687.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.09%)</title><rect x="99.9070%" y="661" width="0.0930%" height="15" fill="rgb(228,75,8)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="671.50"></text></g><g><title>exec_binprm (5 samples, 0.09%)</title><rect x="99.9070%" y="645" width="0.0930%" height="15" fill="rgb(207,175,4)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="655.50"></text></g><g><title>search_binary_handler (5 samples, 0.09%)</title><rect x="99.9070%" y="629" width="0.0930%" height="15" fill="rgb(205,108,24)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="639.50"></text></g><g><title>load_elf_binary (5 samples, 0.09%)</title><rect x="99.9070%" y="613" width="0.0930%" height="15" fill="rgb(244,120,49)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="623.50"></text></g><g><title>begin_new_exec (5 samples, 0.09%)</title><rect x="99.9070%" y="597" width="0.0930%" height="15" fill="rgb(223,47,38)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="607.50"></text></g><g><title>perf_event_exec (5 samples, 0.09%)</title><rect x="99.9070%" y="581" width="0.0930%" height="15" fill="rgb(229,179,11)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="591.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.09%)</title><rect x="99.9070%" y="565" width="0.0930%" height="15" fill="rgb(231,122,1)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="575.50"></text></g><g><title>ctx_resched (5 samples, 0.09%)</title><rect x="99.9070%" y="549" width="0.0930%" height="15" fill="rgb(245,119,9)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="559.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.09%)</title><rect x="99.9070%" y="533" width="0.0930%" height="15" fill="rgb(241,163,25)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="543.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="99.9070%" y="517" width="0.0930%" height="15" fill="rgb(217,214,3)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="527.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.09%)</title><rect x="99.9070%" y="501" width="0.0930%" height="15" fill="rgb(240,86,28)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="511.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="99.9070%" y="485" width="0.0930%" height="15" fill="rgb(215,47,9)" fg:x="5370" fg:w="5"/><text x="100.0242%" y="495.50"></text></g></svg></svg>