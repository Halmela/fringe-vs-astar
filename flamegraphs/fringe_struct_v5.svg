<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="790" onload="init(evt)" viewBox="0 0 2560 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="773.00"> </text><svg id="frames" x="10" width="2540" total_samples="6060"><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.05%)</title><rect x="0.0660%" y="661" width="0.0495%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="3"/><text x="0.1832%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.05%)</title><rect x="0.0660%" y="645" width="0.0495%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="3"/><text x="0.1832%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.05%)</title><rect x="0.0660%" y="629" width="0.0495%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="3"/><text x="0.1832%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.07%)</title><rect x="0.0660%" y="677" width="0.0660%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="4"/><text x="0.1832%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="0.1155%" y="661" width="0.0165%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="1"/><text x="0.2327%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="0.1155%" y="645" width="0.0165%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="1"/><text x="0.2327%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.1155%" y="629" width="0.0165%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="1"/><text x="0.2327%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="0.1155%" y="613" width="0.0165%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="1"/><text x="0.2327%" y="623.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.1155%" y="597" width="0.0165%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="1"/><text x="0.2327%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.1155%" y="581" width="0.0165%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="1"/><text x="0.2327%" y="591.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="0.1155%" y="565" width="0.0165%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="0.2327%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.15%)</title><rect x="0.0000%" y="709" width="0.1485%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="9"/><text x="0.1172%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="0.0165%" y="693" width="0.1320%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="8"/><text x="0.1337%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="0.1320%" y="677" width="0.0165%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="1"/><text x="0.2492%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.1320%" y="661" width="0.0165%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="1"/><text x="0.2492%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="0.1320%" y="645" width="0.0165%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="1"/><text x="0.2492%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="0.1320%" y="629" width="0.0165%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="0.2492%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.1320%" y="613" width="0.0165%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="0.2492%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.1320%" y="597" width="0.0165%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.2492%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.1320%" y="581" width="0.0165%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="0.2492%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="0.1485%" y="693" width="0.0165%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="1"/><text x="0.2657%" y="703.50"></text></g><g><title>__GI___libc_read (1 samples, 0.02%)</title><rect x="0.1650%" y="693" width="0.0165%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="0.2822%" y="703.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="0.1650%" y="677" width="0.0165%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="0.2822%" y="687.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="0.1815%" y="693" width="0.0495%" height="15" fill="rgb(247,18,42)" fg:x="11" fg:w="3"/><text x="0.2987%" y="703.50"></text></g><g><title>_int_free (17 samples, 0.28%)</title><rect x="0.2310%" y="693" width="0.2805%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="17"/><text x="0.3482%" y="703.50"></text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="0.4950%" y="677" width="0.0165%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="1"/><text x="0.6122%" y="687.50"></text></g><g><title>_int_malloc (3 samples, 0.05%)</title><rect x="0.5116%" y="693" width="0.0495%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="3"/><text x="0.6287%" y="703.50"></text></g><g><title>[[heap]] (29 samples, 0.48%)</title><rect x="0.1485%" y="709" width="0.4785%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="29"/><text x="0.2657%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.07%)</title><rect x="0.5611%" y="693" width="0.0660%" height="15" fill="rgb(214,148,48)" fg:x="34" fg:w="4"/><text x="0.6782%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.05%)</title><rect x="0.5776%" y="677" width="0.0495%" height="15" fill="rgb(232,36,49)" fg:x="35" fg:w="3"/><text x="0.6947%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.6271%" y="693" width="0.0165%" height="15" fill="rgb(209,103,24)" fg:x="38" fg:w="1"/><text x="0.7443%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="0.6271%" y="677" width="0.0165%" height="15" fill="rgb(229,88,8)" fg:x="38" fg:w="1"/><text x="0.7443%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="0.6271%" y="661" width="0.0165%" height="15" fill="rgb(213,181,19)" fg:x="38" fg:w="1"/><text x="0.7443%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="0.6271%" y="645" width="0.0165%" height="15" fill="rgb(254,191,54)" fg:x="38" fg:w="1"/><text x="0.7443%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="0.6271%" y="629" width="0.0165%" height="15" fill="rgb(241,83,37)" fg:x="38" fg:w="1"/><text x="0.7443%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.6271%" y="613" width="0.0165%" height="15" fill="rgb(233,36,39)" fg:x="38" fg:w="1"/><text x="0.7443%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="0.6271%" y="597" width="0.0165%" height="15" fill="rgb(226,3,54)" fg:x="38" fg:w="1"/><text x="0.7443%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.6271%" y="581" width="0.0165%" height="15" fill="rgb(245,192,40)" fg:x="38" fg:w="1"/><text x="0.7443%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.6271%" y="565" width="0.0165%" height="15" fill="rgb(238,167,29)" fg:x="38" fg:w="1"/><text x="0.7443%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.6436%" y="693" width="0.0165%" height="15" fill="rgb(232,182,51)" fg:x="39" fg:w="1"/><text x="0.7608%" y="703.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="0.6601%" y="693" width="0.0165%" height="15" fill="rgb(231,60,39)" fg:x="40" fg:w="1"/><text x="0.7773%" y="703.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="0.6766%" y="693" width="0.0165%" height="15" fill="rgb(208,69,12)" fg:x="41" fg:w="1"/><text x="0.7938%" y="703.50"></text></g><g><title>_int_free (7 samples, 0.12%)</title><rect x="0.6931%" y="693" width="0.1155%" height="15" fill="rgb(235,93,37)" fg:x="42" fg:w="7"/><text x="0.8103%" y="703.50"></text></g><g><title>[[stack]] (15 samples, 0.25%)</title><rect x="0.6271%" y="709" width="0.2475%" height="15" fill="rgb(213,116,39)" fg:x="38" fg:w="15"/><text x="0.7443%" y="719.50"></text></g><g><title>_int_malloc (4 samples, 0.07%)</title><rect x="0.8086%" y="693" width="0.0660%" height="15" fill="rgb(222,207,29)" fg:x="49" fg:w="4"/><text x="0.9258%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.10%)</title><rect x="0.8746%" y="693" width="0.0990%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="6"/><text x="0.9918%" y="703.50"></text></g><g><title>__GI___libc_free (8 samples, 0.13%)</title><rect x="0.9736%" y="693" width="0.1320%" height="15" fill="rgb(218,138,4)" fg:x="59" fg:w="8"/><text x="1.0908%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="1.1056%" y="693" width="0.0495%" height="15" fill="rgb(250,191,14)" fg:x="67" fg:w="3"/><text x="1.2228%" y="703.50"></text></g><g><title>_int_free (5 samples, 0.08%)</title><rect x="1.1551%" y="693" width="0.0825%" height="15" fill="rgb(239,60,40)" fg:x="70" fg:w="5"/><text x="1.2723%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.2376%" y="693" width="0.0165%" height="15" fill="rgb(206,27,48)" fg:x="75" fg:w="1"/><text x="1.3548%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.2541%" y="693" width="0.0165%" height="15" fill="rgb(225,35,8)" fg:x="76" fg:w="1"/><text x="1.3713%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="1.2706%" y="693" width="0.0330%" height="15" fill="rgb(250,213,24)" fg:x="77" fg:w="2"/><text x="1.3878%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="1.2706%" y="677" width="0.0330%" height="15" fill="rgb(247,123,22)" fg:x="77" fg:w="2"/><text x="1.3878%" y="687.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="1.2871%" y="661" width="0.0165%" height="15" fill="rgb(231,138,38)" fg:x="78" fg:w="1"/><text x="1.4043%" y="671.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="1.2871%" y="645" width="0.0165%" height="15" fill="rgb(231,145,46)" fg:x="78" fg:w="1"/><text x="1.4043%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.2871%" y="629" width="0.0165%" height="15" fill="rgb(251,118,11)" fg:x="78" fg:w="1"/><text x="1.4043%" y="639.50"></text></g><g><title>[anon] (27 samples, 0.45%)</title><rect x="0.8746%" y="709" width="0.4455%" height="15" fill="rgb(217,147,25)" fg:x="53" fg:w="27"/><text x="0.9918%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1 samples, 0.02%)</title><rect x="1.3036%" y="693" width="0.0165%" height="15" fill="rgb(247,81,37)" fg:x="79" fg:w="1"/><text x="1.4208%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="1.3036%" y="677" width="0.0165%" height="15" fill="rgb(209,12,38)" fg:x="79" fg:w="1"/><text x="1.4208%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="1.3036%" y="661" width="0.0165%" height="15" fill="rgb(227,1,9)" fg:x="79" fg:w="1"/><text x="1.4208%" y="671.50"></text></g><g><title>_int_free (8 samples, 0.13%)</title><rect x="1.3201%" y="693" width="0.1320%" height="15" fill="rgb(248,47,43)" fg:x="80" fg:w="8"/><text x="1.4373%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.4521%" y="693" width="0.0165%" height="15" fill="rgb(221,10,30)" fg:x="88" fg:w="1"/><text x="1.5693%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.4686%" y="693" width="0.0165%" height="15" fill="rgb(210,229,1)" fg:x="89" fg:w="1"/><text x="1.5858%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.4686%" y="677" width="0.0165%" height="15" fill="rgb(222,148,37)" fg:x="89" fg:w="1"/><text x="1.5858%" y="687.50"></text></g><g><title>[fringe-vs-astar] (16 samples, 0.26%)</title><rect x="1.3201%" y="709" width="0.2640%" height="15" fill="rgb(234,67,33)" fg:x="80" fg:w="16"/><text x="1.4373%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.10%)</title><rect x="1.4851%" y="693" width="0.0990%" height="15" fill="rgb(247,98,35)" fg:x="90" fg:w="6"/><text x="1.6023%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.10%)</title><rect x="1.4851%" y="677" width="0.0990%" height="15" fill="rgb(247,138,52)" fg:x="90" fg:w="6"/><text x="1.6023%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.10%)</title><rect x="1.4851%" y="661" width="0.0990%" height="15" fill="rgb(213,79,30)" fg:x="90" fg:w="6"/><text x="1.6023%" y="671.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.10%)</title><rect x="1.4851%" y="645" width="0.0990%" height="15" fill="rgb(246,177,23)" fg:x="90" fg:w="6"/><text x="1.6023%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="1.5842%" y="709" width="0.0165%" height="15" fill="rgb(230,62,27)" fg:x="96" fg:w="1"/><text x="1.7013%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.5842%" y="693" width="0.0165%" height="15" fill="rgb(216,154,8)" fg:x="96" fg:w="1"/><text x="1.7013%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.5842%" y="677" width="0.0165%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="1"/><text x="1.7013%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.5842%" y="661" width="0.0165%" height="15" fill="rgb(251,115,12)" fg:x="96" fg:w="1"/><text x="1.7013%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.02%)</title><rect x="1.5842%" y="645" width="0.0165%" height="15" fill="rgb(240,54,50)" fg:x="96" fg:w="1"/><text x="1.7013%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="1.5842%" y="629" width="0.0165%" height="15" fill="rgb(233,84,52)" fg:x="96" fg:w="1"/><text x="1.7013%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="1.5842%" y="613" width="0.0165%" height="15" fill="rgb(207,117,47)" fg:x="96" fg:w="1"/><text x="1.7013%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="1.5842%" y="597" width="0.0165%" height="15" fill="rgb(249,43,39)" fg:x="96" fg:w="1"/><text x="1.7013%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.5842%" y="581" width="0.0165%" height="15" fill="rgb(209,38,44)" fg:x="96" fg:w="1"/><text x="1.7013%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="1.5842%" y="565" width="0.0165%" height="15" fill="rgb(236,212,23)" fg:x="96" fg:w="1"/><text x="1.7013%" y="575.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="1.6007%" y="693" width="0.0165%" height="15" fill="rgb(242,79,21)" fg:x="97" fg:w="1"/><text x="1.7178%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.6007%" y="677" width="0.0165%" height="15" fill="rgb(211,96,35)" fg:x="97" fg:w="1"/><text x="1.7178%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.6007%" y="661" width="0.0165%" height="15" fill="rgb(253,215,40)" fg:x="97" fg:w="1"/><text x="1.7178%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.6832%" y="677" width="0.0165%" height="15" fill="rgb(211,81,21)" fg:x="102" fg:w="1"/><text x="1.8004%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (1 samples, 0.02%)</title><rect x="1.7327%" y="565" width="0.0165%" height="15" fill="rgb(208,190,38)" fg:x="105" fg:w="1"/><text x="1.8499%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="1.7327%" y="549" width="0.0165%" height="15" fill="rgb(235,213,38)" fg:x="105" fg:w="1"/><text x="1.8499%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="1.7327%" y="533" width="0.0165%" height="15" fill="rgb(237,122,38)" fg:x="105" fg:w="1"/><text x="1.8499%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="1.7327%" y="517" width="0.0165%" height="15" fill="rgb(244,218,35)" fg:x="105" fg:w="1"/><text x="1.8499%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="1.7327%" y="501" width="0.0165%" height="15" fill="rgb(240,68,47)" fg:x="105" fg:w="1"/><text x="1.8499%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="1.7327%" y="485" width="0.0165%" height="15" fill="rgb(210,16,53)" fg:x="105" fg:w="1"/><text x="1.8499%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (1 samples, 0.02%)</title><rect x="1.7327%" y="469" width="0.0165%" height="15" fill="rgb(235,124,12)" fg:x="105" fg:w="1"/><text x="1.8499%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="1.7327%" y="453" width="0.0165%" height="15" fill="rgb(224,169,11)" fg:x="105" fg:w="1"/><text x="1.8499%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.7327%" y="437" width="0.0165%" height="15" fill="rgb(250,166,2)" fg:x="105" fg:w="1"/><text x="1.8499%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.7327%" y="421" width="0.0165%" height="15" fill="rgb(242,216,29)" fg:x="105" fg:w="1"/><text x="1.8499%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="1.7327%" y="405" width="0.0165%" height="15" fill="rgb(230,116,27)" fg:x="105" fg:w="1"/><text x="1.8499%" y="415.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (2 samples, 0.03%)</title><rect x="1.7327%" y="581" width="0.0330%" height="15" fill="rgb(228,99,48)" fg:x="105" fg:w="2"/><text x="1.8499%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="1.7492%" y="565" width="0.0165%" height="15" fill="rgb(253,11,6)" fg:x="106" fg:w="1"/><text x="1.8664%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.07%)</title><rect x="1.7327%" y="629" width="0.0660%" height="15" fill="rgb(247,143,39)" fg:x="105" fg:w="4"/><text x="1.8499%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.07%)</title><rect x="1.7327%" y="613" width="0.0660%" height="15" fill="rgb(236,97,10)" fg:x="105" fg:w="4"/><text x="1.8499%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (4 samples, 0.07%)</title><rect x="1.7327%" y="597" width="0.0660%" height="15" fill="rgb(233,208,19)" fg:x="105" fg:w="4"/><text x="1.8499%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.03%)</title><rect x="1.7657%" y="581" width="0.0330%" height="15" fill="rgb(216,164,2)" fg:x="107" fg:w="2"/><text x="1.8829%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (2 samples, 0.03%)</title><rect x="1.7657%" y="565" width="0.0330%" height="15" fill="rgb(220,129,5)" fg:x="107" fg:w="2"/><text x="1.8829%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.03%)</title><rect x="1.7657%" y="549" width="0.0330%" height="15" fill="rgb(242,17,10)" fg:x="107" fg:w="2"/><text x="1.8829%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.03%)</title><rect x="1.7657%" y="533" width="0.0330%" height="15" fill="rgb(242,107,0)" fg:x="107" fg:w="2"/><text x="1.8829%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.03%)</title><rect x="1.7657%" y="517" width="0.0330%" height="15" fill="rgb(251,28,31)" fg:x="107" fg:w="2"/><text x="1.8829%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.03%)</title><rect x="1.7657%" y="501" width="0.0330%" height="15" fill="rgb(233,223,10)" fg:x="107" fg:w="2"/><text x="1.8829%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.03%)</title><rect x="1.7657%" y="485" width="0.0330%" height="15" fill="rgb(215,21,27)" fg:x="107" fg:w="2"/><text x="1.8829%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.03%)</title><rect x="1.7657%" y="469" width="0.0330%" height="15" fill="rgb(232,23,21)" fg:x="107" fg:w="2"/><text x="1.8829%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.03%)</title><rect x="1.7657%" y="453" width="0.0330%" height="15" fill="rgb(244,5,23)" fg:x="107" fg:w="2"/><text x="1.8829%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="1.7657%" y="437" width="0.0330%" height="15" fill="rgb(226,81,46)" fg:x="107" fg:w="2"/><text x="1.8829%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="1.7657%" y="421" width="0.0330%" height="15" fill="rgb(247,70,30)" fg:x="107" fg:w="2"/><text x="1.8829%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="1.7822%" y="405" width="0.0165%" height="15" fill="rgb(212,68,19)" fg:x="108" fg:w="1"/><text x="1.8994%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.08%)</title><rect x="1.7327%" y="645" width="0.0825%" height="15" fill="rgb(240,187,13)" fg:x="105" fg:w="5"/><text x="1.8499%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="1.7987%" y="629" width="0.0165%" height="15" fill="rgb(223,113,26)" fg:x="109" fg:w="1"/><text x="1.9159%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.13%)</title><rect x="1.7327%" y="661" width="0.1320%" height="15" fill="rgb(206,192,2)" fg:x="105" fg:w="8"/><text x="1.8499%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.05%)</title><rect x="1.8152%" y="645" width="0.0495%" height="15" fill="rgb(241,108,4)" fg:x="110" fg:w="3"/><text x="1.9324%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.05%)</title><rect x="1.8152%" y="629" width="0.0495%" height="15" fill="rgb(247,173,49)" fg:x="110" fg:w="3"/><text x="1.9324%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.05%)</title><rect x="1.8152%" y="613" width="0.0495%" height="15" fill="rgb(224,114,35)" fg:x="110" fg:w="3"/><text x="1.9324%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.05%)</title><rect x="1.8152%" y="597" width="0.0495%" height="15" fill="rgb(245,159,27)" fg:x="110" fg:w="3"/><text x="1.9324%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="1.8152%" y="581" width="0.0495%" height="15" fill="rgb(245,172,44)" fg:x="110" fg:w="3"/><text x="1.9324%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="1.8152%" y="565" width="0.0495%" height="15" fill="rgb(236,23,11)" fg:x="110" fg:w="3"/><text x="1.9324%" y="575.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.03%)</title><rect x="1.8317%" y="549" width="0.0330%" height="15" fill="rgb(205,117,38)" fg:x="111" fg:w="2"/><text x="1.9489%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.30%)</title><rect x="1.6172%" y="693" width="0.2970%" height="15" fill="rgb(237,72,25)" fg:x="98" fg:w="18"/><text x="1.7343%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.21%)</title><rect x="1.6997%" y="677" width="0.2145%" height="15" fill="rgb(244,70,9)" fg:x="103" fg:w="13"/><text x="1.8169%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.05%)</title><rect x="1.8647%" y="661" width="0.0495%" height="15" fill="rgb(217,125,39)" fg:x="113" fg:w="3"/><text x="1.9819%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="1.8647%" y="645" width="0.0495%" height="15" fill="rgb(235,36,10)" fg:x="113" fg:w="3"/><text x="1.9819%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="1.8647%" y="629" width="0.0495%" height="15" fill="rgb(251,123,47)" fg:x="113" fg:w="3"/><text x="1.9819%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3 samples, 0.05%)</title><rect x="1.8647%" y="613" width="0.0495%" height="15" fill="rgb(221,13,13)" fg:x="113" fg:w="3"/><text x="1.9819%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="1.8647%" y="597" width="0.0495%" height="15" fill="rgb(238,131,9)" fg:x="113" fg:w="3"/><text x="1.9819%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="1.8647%" y="581" width="0.0495%" height="15" fill="rgb(211,50,8)" fg:x="113" fg:w="3"/><text x="1.9819%" y="591.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="1.8647%" y="565" width="0.0495%" height="15" fill="rgb(245,182,24)" fg:x="113" fg:w="3"/><text x="1.9819%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.10%)</title><rect x="1.9142%" y="693" width="0.0990%" height="15" fill="rgb(242,14,37)" fg:x="116" fg:w="6"/><text x="2.0314%" y="703.50"></text></g><g><title>__GI___libc_free (9 samples, 0.15%)</title><rect x="2.0132%" y="693" width="0.1485%" height="15" fill="rgb(246,228,12)" fg:x="122" fg:w="9"/><text x="2.1304%" y="703.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.18%)</title><rect x="2.1617%" y="693" width="0.1815%" height="15" fill="rgb(213,55,15)" fg:x="131" fg:w="11"/><text x="2.2789%" y="703.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.08%)</title><rect x="2.3432%" y="693" width="0.0825%" height="15" fill="rgb(209,9,3)" fg:x="142" fg:w="5"/><text x="2.4604%" y="703.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.05%)</title><rect x="2.4257%" y="693" width="0.0495%" height="15" fill="rgb(230,59,30)" fg:x="147" fg:w="3"/><text x="2.5429%" y="703.50"></text></g><g><title>__rdl_realloc (3 samples, 0.05%)</title><rect x="2.4752%" y="693" width="0.0495%" height="15" fill="rgb(209,121,21)" fg:x="150" fg:w="3"/><text x="2.5924%" y="703.50"></text></g><g><title>__rust_dealloc (2 samples, 0.03%)</title><rect x="2.5248%" y="693" width="0.0330%" height="15" fill="rgb(220,109,13)" fg:x="153" fg:w="2"/><text x="2.6419%" y="703.50"></text></g><g><title>_int_free (9 samples, 0.15%)</title><rect x="2.5578%" y="693" width="0.1485%" height="15" fill="rgb(232,18,1)" fg:x="155" fg:w="9"/><text x="2.6749%" y="703.50"></text></g><g><title>_int_malloc (8 samples, 0.13%)</title><rect x="2.7063%" y="693" width="0.1320%" height="15" fill="rgb(215,41,42)" fg:x="164" fg:w="8"/><text x="2.8235%" y="703.50"></text></g><g><title>_int_realloc (8 samples, 0.13%)</title><rect x="2.8383%" y="693" width="0.1320%" height="15" fill="rgb(224,123,36)" fg:x="172" fg:w="8"/><text x="2.9555%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="3.0033%" y="661" width="0.0165%" height="15" fill="rgb(240,125,3)" fg:x="182" fg:w="1"/><text x="3.1205%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.07%)</title><rect x="2.9703%" y="693" width="0.0660%" height="15" fill="rgb(205,98,50)" fg:x="180" fg:w="4"/><text x="3.0875%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="3.0033%" y="677" width="0.0330%" height="15" fill="rgb(205,185,37)" fg:x="182" fg:w="2"/><text x="3.1205%" y="687.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="3.0198%" y="661" width="0.0165%" height="15" fill="rgb(238,207,15)" fg:x="183" fg:w="1"/><text x="3.1370%" y="671.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="3.0198%" y="645" width="0.0165%" height="15" fill="rgb(213,199,42)" fg:x="183" fg:w="1"/><text x="3.1370%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="3.0198%" y="629" width="0.0165%" height="15" fill="rgb(235,201,11)" fg:x="183" fg:w="1"/><text x="3.1370%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="3.0363%" y="693" width="0.0495%" height="15" fill="rgb(207,46,11)" fg:x="184" fg:w="3"/><text x="3.1535%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="3.0693%" y="677" width="0.0165%" height="15" fill="rgb(241,35,35)" fg:x="186" fg:w="1"/><text x="3.1865%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="3.0693%" y="661" width="0.0165%" height="15" fill="rgb(243,32,47)" fg:x="186" fg:w="1"/><text x="3.1865%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="3.0693%" y="645" width="0.0165%" height="15" fill="rgb(247,202,23)" fg:x="186" fg:w="1"/><text x="3.1865%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="3.1683%" y="565" width="0.0330%" height="15" fill="rgb(219,102,11)" fg:x="192" fg:w="2"/><text x="3.2855%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="3.1683%" y="549" width="0.0330%" height="15" fill="rgb(243,110,44)" fg:x="192" fg:w="2"/><text x="3.2855%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (8 samples, 0.13%)</title><rect x="3.0858%" y="693" width="0.1320%" height="15" fill="rgb(222,74,54)" fg:x="187" fg:w="8"/><text x="3.2030%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (8 samples, 0.13%)</title><rect x="3.0858%" y="677" width="0.1320%" height="15" fill="rgb(216,99,12)" fg:x="187" fg:w="8"/><text x="3.2030%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt;&gt; (8 samples, 0.13%)</title><rect x="3.0858%" y="661" width="0.1320%" height="15" fill="rgb(226,22,26)" fg:x="187" fg:w="8"/><text x="3.2030%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.13%)</title><rect x="3.0858%" y="645" width="0.1320%" height="15" fill="rgb(217,163,10)" fg:x="187" fg:w="8"/><text x="3.2030%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f32)&gt;]&gt; (8 samples, 0.13%)</title><rect x="3.0858%" y="629" width="0.1320%" height="15" fill="rgb(213,25,53)" fg:x="187" fg:w="8"/><text x="3.2030%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt; (8 samples, 0.13%)</title><rect x="3.0858%" y="613" width="0.1320%" height="15" fill="rgb(252,105,26)" fg:x="187" fg:w="8"/><text x="3.2030%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f32)&gt;&gt; (8 samples, 0.13%)</title><rect x="3.0858%" y="597" width="0.1320%" height="15" fill="rgb(220,39,43)" fg:x="187" fg:w="8"/><text x="3.2030%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.13%)</title><rect x="3.0858%" y="581" width="0.1320%" height="15" fill="rgb(229,68,48)" fg:x="187" fg:w="8"/><text x="3.2030%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="3.2013%" y="565" width="0.0165%" height="15" fill="rgb(252,8,32)" fg:x="194" fg:w="1"/><text x="3.3185%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="3.2178%" y="661" width="0.0165%" height="15" fill="rgb(223,20,43)" fg:x="195" fg:w="1"/><text x="3.3350%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="3.2178%" y="645" width="0.0165%" height="15" fill="rgb(229,81,49)" fg:x="195" fg:w="1"/><text x="3.3350%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="3.2178%" y="629" width="0.0165%" height="15" fill="rgb(236,28,36)" fg:x="195" fg:w="1"/><text x="3.3350%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="3.2178%" y="613" width="0.0165%" height="15" fill="rgb(249,185,26)" fg:x="195" fg:w="1"/><text x="3.3350%" y="623.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (2 samples, 0.03%)</title><rect x="3.2178%" y="693" width="0.0330%" height="15" fill="rgb(249,174,33)" fg:x="195" fg:w="2"/><text x="3.3350%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (2 samples, 0.03%)</title><rect x="3.2178%" y="677" width="0.0330%" height="15" fill="rgb(233,201,37)" fg:x="195" fg:w="2"/><text x="3.3350%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="3.2343%" y="661" width="0.0165%" height="15" fill="rgb(221,78,26)" fg:x="196" fg:w="1"/><text x="3.3515%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (1 samples, 0.02%)</title><rect x="3.2343%" y="645" width="0.0165%" height="15" fill="rgb(250,127,30)" fg:x="196" fg:w="1"/><text x="3.3515%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (1 samples, 0.02%)</title><rect x="3.2343%" y="629" width="0.0165%" height="15" fill="rgb(230,49,44)" fg:x="196" fg:w="1"/><text x="3.3515%" y="639.50"></text></g><g><title>[unknown] (102 samples, 1.68%)</title><rect x="1.6007%" y="709" width="1.6832%" height="15" fill="rgb(229,67,23)" fg:x="97" fg:w="102"/><text x="1.7178%" y="719.50">[unk..</text></g><g><title>std::io::stdio::_print (2 samples, 0.03%)</title><rect x="3.2508%" y="693" width="0.0330%" height="15" fill="rgb(249,83,47)" fg:x="197" fg:w="2"/><text x="3.3680%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.03%)</title><rect x="3.2508%" y="677" width="0.0330%" height="15" fill="rgb(215,43,3)" fg:x="197" fg:w="2"/><text x="3.3680%" y="687.50"></text></g><g><title>_IO_wide_data_0 (1 samples, 0.02%)</title><rect x="3.2838%" y="709" width="0.0165%" height="15" fill="rgb(238,154,13)" fg:x="199" fg:w="1"/><text x="3.4010%" y="719.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="3.2838%" y="693" width="0.0165%" height="15" fill="rgb(219,56,2)" fg:x="199" fg:w="1"/><text x="3.4010%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="3.3003%" y="709" width="0.0165%" height="15" fill="rgb(233,0,4)" fg:x="200" fg:w="1"/><text x="3.4175%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (2 samples, 0.03%)</title><rect x="3.5149%" y="517" width="0.0330%" height="15" fill="rgb(235,30,7)" fg:x="213" fg:w="2"/><text x="3.6320%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.03%)</title><rect x="3.5149%" y="501" width="0.0330%" height="15" fill="rgb(250,79,13)" fg:x="213" fg:w="2"/><text x="3.6320%" y="511.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="4.3894%" y="485" width="0.0165%" height="15" fill="rgb(211,146,34)" fg:x="266" fg:w="1"/><text x="4.5066%" y="495.50"></text></g><g><title>down_read_trylock (2 samples, 0.03%)</title><rect x="4.4719%" y="437" width="0.0330%" height="15" fill="rgb(228,22,38)" fg:x="271" fg:w="2"/><text x="4.5891%" y="447.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="4.5875%" y="389" width="0.0165%" height="15" fill="rgb(235,168,5)" fg:x="278" fg:w="1"/><text x="4.7046%" y="399.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="4.6040%" y="389" width="0.0165%" height="15" fill="rgb(221,155,16)" fg:x="279" fg:w="1"/><text x="4.7211%" y="399.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="4.6205%" y="373" width="0.0165%" height="15" fill="rgb(215,215,53)" fg:x="280" fg:w="1"/><text x="4.7376%" y="383.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.02%)</title><rect x="4.6205%" y="357" width="0.0165%" height="15" fill="rgb(223,4,10)" fg:x="280" fg:w="1"/><text x="4.7376%" y="367.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.03%)</title><rect x="4.6370%" y="357" width="0.0330%" height="15" fill="rgb(234,103,6)" fg:x="281" fg:w="2"/><text x="4.7542%" y="367.50"></text></g><g><title>__rcu_read_unlock (14 samples, 0.23%)</title><rect x="4.6700%" y="357" width="0.2310%" height="15" fill="rgb(227,97,0)" fg:x="283" fg:w="14"/><text x="4.7872%" y="367.50"></text></g><g><title>__count_memcg_events (3 samples, 0.05%)</title><rect x="5.0000%" y="341" width="0.0495%" height="15" fill="rgb(234,150,53)" fg:x="303" fg:w="3"/><text x="5.1172%" y="351.50"></text></g><g><title>cgroup_rstat_updated (3 samples, 0.05%)</title><rect x="5.0000%" y="325" width="0.0495%" height="15" fill="rgb(228,201,54)" fg:x="303" fg:w="3"/><text x="5.1172%" y="335.50"></text></g><g><title>charge_memcg (15 samples, 0.25%)</title><rect x="4.9010%" y="357" width="0.2475%" height="15" fill="rgb(222,22,37)" fg:x="297" fg:w="15"/><text x="5.0182%" y="367.50"></text></g><g><title>try_charge_memcg (6 samples, 0.10%)</title><rect x="5.0495%" y="341" width="0.0990%" height="15" fill="rgb(237,53,32)" fg:x="306" fg:w="6"/><text x="5.1667%" y="351.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="5.1320%" y="325" width="0.0165%" height="15" fill="rgb(233,25,53)" fg:x="311" fg:w="1"/><text x="5.2492%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (7 samples, 0.12%)</title><rect x="5.1485%" y="357" width="0.1155%" height="15" fill="rgb(210,40,34)" fg:x="312" fg:w="7"/><text x="5.2657%" y="367.50"></text></g><g><title>__mem_cgroup_charge (39 samples, 0.64%)</title><rect x="4.6370%" y="373" width="0.6436%" height="15" fill="rgb(241,220,44)" fg:x="281" fg:w="39"/><text x="4.7542%" y="383.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="5.2640%" y="357" width="0.0165%" height="15" fill="rgb(235,28,35)" fg:x="319" fg:w="1"/><text x="5.3812%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="5.2805%" y="373" width="0.0165%" height="15" fill="rgb(210,56,17)" fg:x="320" fg:w="1"/><text x="5.3977%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="5.2970%" y="373" width="0.0165%" height="15" fill="rgb(224,130,29)" fg:x="321" fg:w="1"/><text x="5.4142%" y="383.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.02%)</title><rect x="5.3795%" y="325" width="0.0165%" height="15" fill="rgb(235,212,8)" fg:x="326" fg:w="1"/><text x="5.4967%" y="335.50"></text></g><g><title>lru_add_fn (5 samples, 0.08%)</title><rect x="5.3960%" y="325" width="0.0825%" height="15" fill="rgb(223,33,50)" fg:x="327" fg:w="5"/><text x="5.5132%" y="335.50"></text></g><g><title>lru_gen_add_folio (4 samples, 0.07%)</title><rect x="5.4125%" y="309" width="0.0660%" height="15" fill="rgb(219,149,13)" fg:x="328" fg:w="4"/><text x="5.5297%" y="319.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="5.4620%" y="293" width="0.0165%" height="15" fill="rgb(250,156,29)" fg:x="331" fg:w="1"/><text x="5.5792%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="5.4620%" y="277" width="0.0165%" height="15" fill="rgb(216,193,19)" fg:x="331" fg:w="1"/><text x="5.5792%" y="287.50"></text></g><g><title>folio_batch_move_lru (7 samples, 0.12%)</title><rect x="5.3795%" y="341" width="0.1155%" height="15" fill="rgb(216,135,14)" fg:x="326" fg:w="7"/><text x="5.4967%" y="351.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="5.4785%" y="325" width="0.0165%" height="15" fill="rgb(241,47,5)" fg:x="332" fg:w="1"/><text x="5.5957%" y="335.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="5.4785%" y="309" width="0.0165%" height="15" fill="rgb(233,42,35)" fg:x="332" fg:w="1"/><text x="5.5957%" y="319.50"></text></g><g><title>folio_add_lru_vma (12 samples, 0.20%)</title><rect x="5.3135%" y="373" width="0.1980%" height="15" fill="rgb(231,13,6)" fg:x="322" fg:w="12"/><text x="5.4307%" y="383.50"></text></g><g><title>folio_add_lru (12 samples, 0.20%)</title><rect x="5.3135%" y="357" width="0.1980%" height="15" fill="rgb(207,181,40)" fg:x="322" fg:w="12"/><text x="5.4307%" y="367.50"></text></g><g><title>lru_add_fn (1 samples, 0.02%)</title><rect x="5.4950%" y="341" width="0.0165%" height="15" fill="rgb(254,173,49)" fg:x="333" fg:w="1"/><text x="5.6122%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="5.6106%" y="325" width="0.0330%" height="15" fill="rgb(221,1,38)" fg:x="340" fg:w="2"/><text x="5.7277%" y="335.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="5.6436%" y="325" width="0.0165%" height="15" fill="rgb(206,124,46)" fg:x="342" fg:w="1"/><text x="5.7608%" y="335.50"></text></g><g><title>folio_add_new_anon_rmap (10 samples, 0.17%)</title><rect x="5.5116%" y="373" width="0.1650%" height="15" fill="rgb(249,21,11)" fg:x="334" fg:w="10"/><text x="5.6287%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (7 samples, 0.12%)</title><rect x="5.5611%" y="357" width="0.1155%" height="15" fill="rgb(222,201,40)" fg:x="337" fg:w="7"/><text x="5.6782%" y="367.50"></text></g><g><title>__mod_lruvec_state (5 samples, 0.08%)</title><rect x="5.5941%" y="341" width="0.0825%" height="15" fill="rgb(235,61,29)" fg:x="339" fg:w="5"/><text x="5.7112%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="5.6601%" y="325" width="0.0165%" height="15" fill="rgb(219,207,3)" fg:x="343" fg:w="1"/><text x="5.7773%" y="335.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="5.6766%" y="373" width="0.0165%" height="15" fill="rgb(222,56,46)" fg:x="344" fg:w="1"/><text x="5.7938%" y="383.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="5.6766%" y="357" width="0.0165%" height="15" fill="rgb(239,76,54)" fg:x="344" fg:w="1"/><text x="5.7938%" y="367.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.02%)</title><rect x="5.7756%" y="309" width="0.0165%" height="15" fill="rgb(231,124,27)" fg:x="350" fg:w="1"/><text x="5.8928%" y="319.50"></text></g><g><title>clear_page_erms (4 samples, 0.07%)</title><rect x="5.7921%" y="309" width="0.0660%" height="15" fill="rgb(249,195,6)" fg:x="351" fg:w="4"/><text x="5.9093%" y="319.50"></text></g><g><title>post_alloc_hook (2 samples, 0.03%)</title><rect x="5.8581%" y="309" width="0.0330%" height="15" fill="rgb(237,174,47)" fg:x="355" fg:w="2"/><text x="5.9753%" y="319.50"></text></g><g><title>__folio_alloc (17 samples, 0.28%)</title><rect x="5.7096%" y="357" width="0.2805%" height="15" fill="rgb(206,201,31)" fg:x="346" fg:w="17"/><text x="5.8268%" y="367.50"></text></g><g><title>__alloc_pages (17 samples, 0.28%)</title><rect x="5.7096%" y="341" width="0.2805%" height="15" fill="rgb(231,57,52)" fg:x="346" fg:w="17"/><text x="5.8268%" y="351.50"></text></g><g><title>get_page_from_freelist (16 samples, 0.26%)</title><rect x="5.7261%" y="325" width="0.2640%" height="15" fill="rgb(248,177,22)" fg:x="347" fg:w="16"/><text x="5.8433%" y="335.50"></text></g><g><title>rmqueue (6 samples, 0.10%)</title><rect x="5.8911%" y="309" width="0.0990%" height="15" fill="rgb(215,211,37)" fg:x="357" fg:w="6"/><text x="6.0083%" y="319.50"></text></g><g><title>__rmqueue_pcplist (3 samples, 0.05%)</title><rect x="5.9406%" y="293" width="0.0495%" height="15" fill="rgb(241,128,51)" fg:x="360" fg:w="3"/><text x="6.0578%" y="303.50"></text></g><g><title>rmqueue_bulk (3 samples, 0.05%)</title><rect x="5.9406%" y="277" width="0.0495%" height="15" fill="rgb(227,165,31)" fg:x="360" fg:w="3"/><text x="6.0578%" y="287.50"></text></g><g><title>do_anonymous_page (84 samples, 1.39%)</title><rect x="4.6205%" y="389" width="1.3861%" height="15" fill="rgb(228,167,24)" fg:x="280" fg:w="84"/><text x="4.7376%" y="399.50">do_..</text></g><g><title>vma_alloc_folio (19 samples, 0.31%)</title><rect x="5.6931%" y="373" width="0.3135%" height="15" fill="rgb(228,143,12)" fg:x="345" fg:w="19"/><text x="5.8103%" y="383.50"></text></g><g><title>policy_node (1 samples, 0.02%)</title><rect x="5.9901%" y="357" width="0.0165%" height="15" fill="rgb(249,149,8)" fg:x="363" fg:w="1"/><text x="6.1073%" y="367.50"></text></g><g><title>__handle_mm_fault (92 samples, 1.52%)</title><rect x="4.5050%" y="421" width="1.5182%" height="15" fill="rgb(243,35,44)" fg:x="273" fg:w="92"/><text x="4.6221%" y="431.50">__h..</text></g><g><title>handle_pte_fault (87 samples, 1.44%)</title><rect x="4.5875%" y="405" width="1.4356%" height="15" fill="rgb(246,89,9)" fg:x="278" fg:w="87"/><text x="4.7046%" y="415.50">han..</text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="6.0066%" y="389" width="0.0165%" height="15" fill="rgb(233,213,13)" fg:x="364" fg:w="1"/><text x="6.1238%" y="399.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.02%)</title><rect x="6.0231%" y="421" width="0.0165%" height="15" fill="rgb(233,141,41)" fg:x="365" fg:w="1"/><text x="6.1403%" y="431.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="6.0231%" y="405" width="0.0165%" height="15" fill="rgb(239,167,4)" fg:x="365" fg:w="1"/><text x="6.1403%" y="415.50"></text></g><g><title>handle_mm_fault (94 samples, 1.55%)</title><rect x="4.5050%" y="437" width="1.5512%" height="15" fill="rgb(209,217,16)" fg:x="273" fg:w="94"/><text x="4.6221%" y="447.50">han..</text></g><g><title>pud_val (1 samples, 0.02%)</title><rect x="6.0396%" y="421" width="0.0165%" height="15" fill="rgb(219,88,35)" fg:x="366" fg:w="1"/><text x="6.1568%" y="431.50"></text></g><g><title>lock_vma_under_rcu (2 samples, 0.03%)</title><rect x="6.0561%" y="437" width="0.0330%" height="15" fill="rgb(220,193,23)" fg:x="367" fg:w="2"/><text x="6.1733%" y="447.50"></text></g><g><title>asm_exc_page_fault (104 samples, 1.72%)</title><rect x="4.4059%" y="485" width="1.7162%" height="15" fill="rgb(230,90,52)" fg:x="267" fg:w="104"/><text x="4.5231%" y="495.50">asm_..</text></g><g><title>exc_page_fault (104 samples, 1.72%)</title><rect x="4.4059%" y="469" width="1.7162%" height="15" fill="rgb(252,106,19)" fg:x="267" fg:w="104"/><text x="4.5231%" y="479.50">exc_..</text></g><g><title>do_user_addr_fault (103 samples, 1.70%)</title><rect x="4.4224%" y="453" width="1.6997%" height="15" fill="rgb(206,74,20)" fg:x="268" fg:w="103"/><text x="4.5396%" y="463.50">do_u..</text></g><g><title>up_read (2 samples, 0.03%)</title><rect x="6.0891%" y="437" width="0.0330%" height="15" fill="rgb(230,138,44)" fg:x="369" fg:w="2"/><text x="6.2063%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="6.1221%" y="485" width="0.0165%" height="15" fill="rgb(235,182,43)" fg:x="371" fg:w="1"/><text x="6.2393%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="6.1221%" y="469" width="0.0165%" height="15" fill="rgb(242,16,51)" fg:x="371" fg:w="1"/><text x="6.2393%" y="479.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="6.1221%" y="453" width="0.0165%" height="15" fill="rgb(248,9,4)" fg:x="371" fg:w="1"/><text x="6.2393%" y="463.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="6.1221%" y="437" width="0.0165%" height="15" fill="rgb(210,31,22)" fg:x="371" fg:w="1"/><text x="6.2393%" y="447.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="6.1221%" y="421" width="0.0165%" height="15" fill="rgb(239,54,39)" fg:x="371" fg:w="1"/><text x="6.2393%" y="431.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="6.1221%" y="405" width="0.0165%" height="15" fill="rgb(230,99,41)" fg:x="371" fg:w="1"/><text x="6.2393%" y="415.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="6.1221%" y="389" width="0.0165%" height="15" fill="rgb(253,106,12)" fg:x="371" fg:w="1"/><text x="6.2393%" y="399.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="6.1221%" y="373" width="0.0165%" height="15" fill="rgb(213,46,41)" fg:x="371" fg:w="1"/><text x="6.2393%" y="383.50"></text></g><g><title>account_process_tick (1 samples, 0.02%)</title><rect x="6.1221%" y="357" width="0.0165%" height="15" fill="rgb(215,133,35)" fg:x="371" fg:w="1"/><text x="6.2393%" y="367.50"></text></g><g><title>account_user_time (1 samples, 0.02%)</title><rect x="6.1221%" y="341" width="0.0165%" height="15" fill="rgb(213,28,5)" fg:x="371" fg:w="1"/><text x="6.2393%" y="351.50"></text></g><g><title>__cgroup_account_cputime_field (1 samples, 0.02%)</title><rect x="6.1221%" y="325" width="0.0165%" height="15" fill="rgb(215,77,49)" fg:x="371" fg:w="1"/><text x="6.2393%" y="335.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="6.1386%" y="485" width="0.0165%" height="15" fill="rgb(248,100,22)" fg:x="372" fg:w="1"/><text x="6.2558%" y="495.50"></text></g><g><title>exc_page_fault (2 samples, 0.03%)</title><rect x="6.1551%" y="485" width="0.0330%" height="15" fill="rgb(208,67,9)" fg:x="373" fg:w="2"/><text x="6.2723%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (169 samples, 2.79%)</title><rect x="3.5479%" y="517" width="2.7888%" height="15" fill="rgb(219,133,21)" fg:x="215" fg:w="169"/><text x="3.6650%" y="527.50">alloc::v..</text></g><g><title>core::ptr::write (153 samples, 2.52%)</title><rect x="3.8119%" y="501" width="2.5248%" height="15" fill="rgb(246,46,29)" fg:x="231" fg:w="153"/><text x="3.9291%" y="511.50">core::p..</text></g><g><title>sync_regs (9 samples, 0.15%)</title><rect x="6.1881%" y="485" width="0.1485%" height="15" fill="rgb(246,185,52)" fg:x="375" fg:w="9"/><text x="6.3053%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.15%)</title><rect x="6.3366%" y="517" width="0.1485%" height="15" fill="rgb(252,136,11)" fg:x="384" fg:w="9"/><text x="6.4538%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.15%)</title><rect x="6.3366%" y="501" width="0.1485%" height="15" fill="rgb(219,138,53)" fg:x="384" fg:w="9"/><text x="6.4538%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.15%)</title><rect x="6.3366%" y="485" width="0.1485%" height="15" fill="rgb(211,51,23)" fg:x="384" fg:w="9"/><text x="6.4538%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="6.5677%" y="421" width="0.0330%" height="15" fill="rgb(247,221,28)" fg:x="398" fg:w="2"/><text x="6.6848%" y="431.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="6.5677%" y="405" width="0.0330%" height="15" fill="rgb(251,222,45)" fg:x="398" fg:w="2"/><text x="6.6848%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.03%)</title><rect x="6.5677%" y="389" width="0.0330%" height="15" fill="rgb(217,162,53)" fg:x="398" fg:w="2"/><text x="6.6848%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="6.5677%" y="373" width="0.0330%" height="15" fill="rgb(229,93,14)" fg:x="398" fg:w="2"/><text x="6.6848%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.03%)</title><rect x="6.5677%" y="357" width="0.0330%" height="15" fill="rgb(209,67,49)" fg:x="398" fg:w="2"/><text x="6.6848%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="6.6007%" y="421" width="0.0330%" height="15" fill="rgb(213,87,29)" fg:x="400" fg:w="2"/><text x="6.7178%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.03%)</title><rect x="6.6007%" y="405" width="0.0330%" height="15" fill="rgb(205,151,52)" fg:x="400" fg:w="2"/><text x="6.7178%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.40%)</title><rect x="6.6337%" y="357" width="0.3960%" height="15" fill="rgb(253,215,39)" fg:x="402" fg:w="24"/><text x="6.7509%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.20%)</title><rect x="6.8317%" y="341" width="0.1980%" height="15" fill="rgb(221,220,41)" fg:x="414" fg:w="12"/><text x="6.9489%" y="351.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.43%)</title><rect x="6.6337%" y="373" width="0.4290%" height="15" fill="rgb(218,133,21)" fg:x="402" fg:w="26"/><text x="6.7509%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.03%)</title><rect x="7.0297%" y="357" width="0.0330%" height="15" fill="rgb(221,193,43)" fg:x="426" fg:w="2"/><text x="7.1469%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.03%)</title><rect x="7.0627%" y="357" width="0.0330%" height="15" fill="rgb(240,128,52)" fg:x="428" fg:w="2"/><text x="7.1799%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (2 samples, 0.03%)</title><rect x="7.0627%" y="341" width="0.0330%" height="15" fill="rgb(253,114,12)" fg:x="428" fg:w="2"/><text x="7.1799%" y="351.50"></text></g><g><title>core::ptr::write (2 samples, 0.03%)</title><rect x="7.0627%" y="325" width="0.0330%" height="15" fill="rgb(215,223,47)" fg:x="428" fg:w="2"/><text x="7.1799%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (51 samples, 0.84%)</title><rect x="6.5347%" y="453" width="0.8416%" height="15" fill="rgb(248,225,23)" fg:x="396" fg:w="51"/><text x="6.6518%" y="463.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (51 samples, 0.84%)</title><rect x="6.5347%" y="437" width="0.8416%" height="15" fill="rgb(250,108,0)" fg:x="396" fg:w="51"/><text x="6.6518%" y="447.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (45 samples, 0.74%)</title><rect x="6.6337%" y="421" width="0.7426%" height="15" fill="rgb(228,208,7)" fg:x="402" fg:w="45"/><text x="6.7509%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.74%)</title><rect x="6.6337%" y="405" width="0.7426%" height="15" fill="rgb(244,45,10)" fg:x="402" fg:w="45"/><text x="6.7509%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.74%)</title><rect x="6.6337%" y="389" width="0.7426%" height="15" fill="rgb(207,125,25)" fg:x="402" fg:w="45"/><text x="6.7509%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (19 samples, 0.31%)</title><rect x="7.0627%" y="373" width="0.3135%" height="15" fill="rgb(210,195,18)" fg:x="428" fg:w="19"/><text x="7.1799%" y="383.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (17 samples, 0.28%)</title><rect x="7.0957%" y="357" width="0.2805%" height="15" fill="rgb(249,80,12)" fg:x="430" fg:w="17"/><text x="7.2129%" y="367.50"></text></g><g><title>fringe_vs_astar::xy_to_index (17 samples, 0.28%)</title><rect x="7.0957%" y="341" width="0.2805%" height="15" fill="rgb(221,65,9)" fg:x="430" fg:w="17"/><text x="7.2129%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.07%)</title><rect x="7.3762%" y="453" width="0.0660%" height="15" fill="rgb(235,49,36)" fg:x="447" fg:w="4"/><text x="7.4934%" y="463.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.07%)</title><rect x="7.3762%" y="437" width="0.0660%" height="15" fill="rgb(225,32,20)" fg:x="447" fg:w="4"/><text x="7.4934%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.07%)</title><rect x="7.3762%" y="421" width="0.0660%" height="15" fill="rgb(215,141,46)" fg:x="447" fg:w="4"/><text x="7.4934%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (4 samples, 0.07%)</title><rect x="7.3762%" y="405" width="0.0660%" height="15" fill="rgb(250,160,47)" fg:x="447" fg:w="4"/><text x="7.4934%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (4 samples, 0.07%)</title><rect x="7.3762%" y="389" width="0.0660%" height="15" fill="rgb(216,222,40)" fg:x="447" fg:w="4"/><text x="7.4934%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="7.4587%" y="405" width="0.0330%" height="15" fill="rgb(234,217,39)" fg:x="452" fg:w="2"/><text x="7.5759%" y="415.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.05%)</title><rect x="8.7624%" y="309" width="0.0495%" height="15" fill="rgb(207,178,40)" fg:x="531" fg:w="3"/><text x="8.8796%" y="319.50"></text></g><g><title>alloc_perturb (1 samples, 0.02%)</title><rect x="8.8119%" y="309" width="0.0165%" height="15" fill="rgb(221,136,13)" fg:x="534" fg:w="1"/><text x="8.9291%" y="319.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="8.8779%" y="293" width="0.0165%" height="15" fill="rgb(249,199,10)" fg:x="538" fg:w="1"/><text x="8.9951%" y="303.50"></text></g><g><title>access_error (1 samples, 0.02%)</title><rect x="8.9109%" y="277" width="0.0165%" height="15" fill="rgb(249,222,13)" fg:x="540" fg:w="1"/><text x="9.0281%" y="287.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="8.9439%" y="261" width="0.0165%" height="15" fill="rgb(244,185,38)" fg:x="542" fg:w="1"/><text x="9.0611%" y="271.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="8.9604%" y="261" width="0.0165%" height="15" fill="rgb(236,202,9)" fg:x="543" fg:w="1"/><text x="9.0776%" y="271.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.02%)</title><rect x="9.1584%" y="197" width="0.0165%" height="15" fill="rgb(250,229,37)" fg:x="555" fg:w="1"/><text x="9.2756%" y="207.50"></text></g><g><title>__get_vma_policy (2 samples, 0.03%)</title><rect x="9.1749%" y="197" width="0.0330%" height="15" fill="rgb(206,174,23)" fg:x="556" fg:w="2"/><text x="9.2921%" y="207.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="9.2574%" y="181" width="0.0165%" height="15" fill="rgb(211,33,43)" fg:x="561" fg:w="1"/><text x="9.3746%" y="191.50"></text></g><g><title>__rcu_read_unlock (17 samples, 0.28%)</title><rect x="9.2739%" y="181" width="0.2805%" height="15" fill="rgb(245,58,50)" fg:x="562" fg:w="17"/><text x="9.3911%" y="191.50"></text></g><g><title>__count_memcg_events (5 samples, 0.08%)</title><rect x="9.6040%" y="165" width="0.0825%" height="15" fill="rgb(244,68,36)" fg:x="582" fg:w="5"/><text x="9.7211%" y="175.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.03%)</title><rect x="9.6535%" y="149" width="0.0330%" height="15" fill="rgb(232,229,15)" fg:x="585" fg:w="2"/><text x="9.7707%" y="159.50"></text></g><g><title>charge_memcg (22 samples, 0.36%)</title><rect x="9.5545%" y="181" width="0.3630%" height="15" fill="rgb(254,30,23)" fg:x="579" fg:w="22"/><text x="9.6716%" y="191.50"></text></g><g><title>try_charge_memcg (14 samples, 0.23%)</title><rect x="9.6865%" y="165" width="0.2310%" height="15" fill="rgb(235,160,14)" fg:x="587" fg:w="14"/><text x="9.8037%" y="175.50"></text></g><g><title>consume_stock (3 samples, 0.05%)</title><rect x="9.8680%" y="149" width="0.0495%" height="15" fill="rgb(212,155,44)" fg:x="598" fg:w="3"/><text x="9.9852%" y="159.50"></text></g><g><title>get_mem_cgroup_from_mm (9 samples, 0.15%)</title><rect x="9.9175%" y="181" width="0.1485%" height="15" fill="rgb(226,2,50)" fg:x="601" fg:w="9"/><text x="10.0347%" y="191.50"></text></g><g><title>memcg_check_events (1 samples, 0.02%)</title><rect x="10.0660%" y="181" width="0.0165%" height="15" fill="rgb(234,177,6)" fg:x="610" fg:w="1"/><text x="10.1832%" y="191.50"></text></g><g><title>__mem_cgroup_charge (54 samples, 0.89%)</title><rect x="9.2079%" y="197" width="0.8911%" height="15" fill="rgb(217,24,9)" fg:x="558" fg:w="54"/><text x="9.3251%" y="207.50">_..</text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="10.0825%" y="181" width="0.0165%" height="15" fill="rgb(220,13,46)" fg:x="611" fg:w="1"/><text x="10.1997%" y="191.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.02%)</title><rect x="10.0990%" y="197" width="0.0165%" height="15" fill="rgb(239,221,27)" fg:x="612" fg:w="1"/><text x="10.2162%" y="207.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="10.0990%" y="181" width="0.0165%" height="15" fill="rgb(222,198,25)" fg:x="612" fg:w="1"/><text x="10.2162%" y="191.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="10.1155%" y="197" width="0.0495%" height="15" fill="rgb(211,99,13)" fg:x="613" fg:w="3"/><text x="10.2327%" y="207.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="10.1650%" y="197" width="0.0165%" height="15" fill="rgb(232,111,31)" fg:x="616" fg:w="1"/><text x="10.2822%" y="207.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="10.2805%" y="149" width="0.0165%" height="15" fill="rgb(245,82,37)" fg:x="623" fg:w="1"/><text x="10.3977%" y="159.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="10.3960%" y="117" width="0.0330%" height="15" fill="rgb(227,149,46)" fg:x="630" fg:w="2"/><text x="10.5132%" y="127.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="10.4125%" y="101" width="0.0165%" height="15" fill="rgb(218,36,50)" fg:x="631" fg:w="1"/><text x="10.5297%" y="111.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="10.4290%" y="117" width="0.0165%" height="15" fill="rgb(226,80,48)" fg:x="632" fg:w="1"/><text x="10.5462%" y="127.50"></text></g><g><title>folio_add_lru_vma (17 samples, 0.28%)</title><rect x="10.1815%" y="197" width="0.2805%" height="15" fill="rgb(238,224,15)" fg:x="617" fg:w="17"/><text x="10.2987%" y="207.50"></text></g><g><title>folio_add_lru (16 samples, 0.26%)</title><rect x="10.1980%" y="181" width="0.2640%" height="15" fill="rgb(241,136,10)" fg:x="618" fg:w="16"/><text x="10.3152%" y="191.50"></text></g><g><title>folio_batch_move_lru (12 samples, 0.20%)</title><rect x="10.2640%" y="165" width="0.1980%" height="15" fill="rgb(208,32,45)" fg:x="622" fg:w="12"/><text x="10.3812%" y="175.50"></text></g><g><title>lru_add_fn (10 samples, 0.17%)</title><rect x="10.2970%" y="149" width="0.1650%" height="15" fill="rgb(207,135,9)" fg:x="624" fg:w="10"/><text x="10.4142%" y="159.50"></text></g><g><title>lru_gen_add_folio (9 samples, 0.15%)</title><rect x="10.3135%" y="133" width="0.1485%" height="15" fill="rgb(206,86,44)" fg:x="625" fg:w="9"/><text x="10.4307%" y="143.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="10.4455%" y="117" width="0.0165%" height="15" fill="rgb(245,177,15)" fg:x="633" fg:w="1"/><text x="10.5627%" y="127.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="10.5116%" y="165" width="0.0165%" height="15" fill="rgb(206,64,50)" fg:x="637" fg:w="1"/><text x="10.6287%" y="175.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="10.5116%" y="149" width="0.0165%" height="15" fill="rgb(234,36,40)" fg:x="637" fg:w="1"/><text x="10.6287%" y="159.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.05%)</title><rect x="10.4950%" y="181" width="0.0495%" height="15" fill="rgb(213,64,8)" fg:x="636" fg:w="3"/><text x="10.6122%" y="191.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="10.5281%" y="165" width="0.0165%" height="15" fill="rgb(210,75,36)" fg:x="638" fg:w="1"/><text x="10.6452%" y="175.50"></text></g><g><title>folio_add_new_anon_rmap (6 samples, 0.10%)</title><rect x="10.4620%" y="197" width="0.0990%" height="15" fill="rgb(229,88,21)" fg:x="634" fg:w="6"/><text x="10.5792%" y="207.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="10.5446%" y="181" width="0.0165%" height="15" fill="rgb(252,204,47)" fg:x="639" fg:w="1"/><text x="10.6617%" y="191.50"></text></g><g><title>inc_mm_counter (2 samples, 0.03%)</title><rect x="10.5611%" y="197" width="0.0330%" height="15" fill="rgb(208,77,27)" fg:x="640" fg:w="2"/><text x="10.6782%" y="207.50"></text></g><g><title>percpu_counter_add_batch (2 samples, 0.03%)</title><rect x="10.5611%" y="181" width="0.0330%" height="15" fill="rgb(221,76,26)" fg:x="640" fg:w="2"/><text x="10.6782%" y="191.50"></text></g><g><title>policy_nodemask (1 samples, 0.02%)</title><rect x="10.5941%" y="197" width="0.0165%" height="15" fill="rgb(225,139,18)" fg:x="642" fg:w="1"/><text x="10.7112%" y="207.50"></text></g><g><title>__next_zones_zonelist (4 samples, 0.07%)</title><rect x="10.6931%" y="149" width="0.0660%" height="15" fill="rgb(230,137,11)" fg:x="648" fg:w="4"/><text x="10.8103%" y="159.50"></text></g><g><title>_raw_spin_trylock (2 samples, 0.03%)</title><rect x="10.8416%" y="133" width="0.0330%" height="15" fill="rgb(212,28,1)" fg:x="657" fg:w="2"/><text x="10.9588%" y="143.50"></text></g><g><title>clear_page_erms (4 samples, 0.07%)</title><rect x="10.8746%" y="133" width="0.0660%" height="15" fill="rgb(248,164,17)" fg:x="659" fg:w="4"/><text x="10.9918%" y="143.50"></text></g><g><title>get_page_from_freelist (23 samples, 0.38%)</title><rect x="10.7591%" y="149" width="0.3795%" height="15" fill="rgb(222,171,42)" fg:x="652" fg:w="23"/><text x="10.8763%" y="159.50"></text></g><g><title>rmqueue (12 samples, 0.20%)</title><rect x="10.9406%" y="133" width="0.1980%" height="15" fill="rgb(243,84,45)" fg:x="663" fg:w="12"/><text x="11.0578%" y="143.50"></text></g><g><title>__rmqueue_pcplist (9 samples, 0.15%)</title><rect x="10.9901%" y="117" width="0.1485%" height="15" fill="rgb(252,49,23)" fg:x="666" fg:w="9"/><text x="11.1073%" y="127.50"></text></g><g><title>rmqueue_bulk (9 samples, 0.15%)</title><rect x="10.9901%" y="101" width="0.1485%" height="15" fill="rgb(215,19,7)" fg:x="666" fg:w="9"/><text x="11.1073%" y="111.50"></text></g><g><title>__folio_alloc (31 samples, 0.51%)</title><rect x="10.6436%" y="181" width="0.5116%" height="15" fill="rgb(238,81,41)" fg:x="645" fg:w="31"/><text x="10.7608%" y="191.50"></text></g><g><title>__alloc_pages (31 samples, 0.51%)</title><rect x="10.6436%" y="165" width="0.5116%" height="15" fill="rgb(210,199,37)" fg:x="645" fg:w="31"/><text x="10.7608%" y="175.50"></text></g><g><title>post_alloc_hook (1 samples, 0.02%)</title><rect x="11.1386%" y="149" width="0.0165%" height="15" fill="rgb(244,192,49)" fg:x="675" fg:w="1"/><text x="11.2558%" y="159.50"></text></g><g><title>_find_first_bit (1 samples, 0.02%)</title><rect x="11.1551%" y="181" width="0.0165%" height="15" fill="rgb(226,211,11)" fg:x="676" fg:w="1"/><text x="11.2723%" y="191.50"></text></g><g><title>do_anonymous_page (126 samples, 2.08%)</title><rect x="9.1089%" y="213" width="2.0792%" height="15" fill="rgb(236,162,54)" fg:x="552" fg:w="126"/><text x="9.2261%" y="223.50">do_an..</text></g><g><title>vma_alloc_folio (35 samples, 0.58%)</title><rect x="10.6106%" y="197" width="0.5776%" height="15" fill="rgb(220,229,9)" fg:x="643" fg:w="35"/><text x="10.7277%" y="207.50"></text></g><g><title>policy_node (1 samples, 0.02%)</title><rect x="11.1716%" y="181" width="0.0165%" height="15" fill="rgb(250,87,22)" fg:x="677" fg:w="1"/><text x="11.2888%" y="191.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="11.1881%" y="213" width="0.0165%" height="15" fill="rgb(239,43,17)" fg:x="678" fg:w="1"/><text x="11.3053%" y="223.50"></text></g><g><title>handle_pte_fault (129 samples, 2.13%)</title><rect x="9.1089%" y="229" width="2.1287%" height="15" fill="rgb(231,177,25)" fg:x="552" fg:w="129"/><text x="9.2261%" y="239.50">handl..</text></g><g><title>pte_offset_map_nolock (2 samples, 0.03%)</title><rect x="11.2046%" y="213" width="0.0330%" height="15" fill="rgb(219,179,1)" fg:x="679" fg:w="2"/><text x="11.3218%" y="223.50"></text></g><g><title>__pte_offset_map (2 samples, 0.03%)</title><rect x="11.2046%" y="197" width="0.0330%" height="15" fill="rgb(238,219,53)" fg:x="679" fg:w="2"/><text x="11.3218%" y="207.50"></text></g><g><title>__handle_mm_fault (135 samples, 2.23%)</title><rect x="9.0429%" y="245" width="2.2277%" height="15" fill="rgb(232,167,36)" fg:x="548" fg:w="135"/><text x="9.1601%" y="255.50">__hand..</text></g><g><title>pud_val (2 samples, 0.03%)</title><rect x="11.2376%" y="229" width="0.0330%" height="15" fill="rgb(244,19,51)" fg:x="681" fg:w="2"/><text x="11.3548%" y="239.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.02%)</title><rect x="11.2706%" y="245" width="0.0165%" height="15" fill="rgb(224,6,22)" fg:x="683" fg:w="1"/><text x="11.3878%" y="255.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="11.2706%" y="229" width="0.0165%" height="15" fill="rgb(224,145,5)" fg:x="683" fg:w="1"/><text x="11.3878%" y="239.50"></text></g><g><title>handle_mm_fault (142 samples, 2.34%)</title><rect x="8.9769%" y="261" width="2.3432%" height="15" fill="rgb(234,130,49)" fg:x="544" fg:w="142"/><text x="9.0941%" y="271.50">handle..</text></g><g><title>pmd_val (2 samples, 0.03%)</title><rect x="11.2871%" y="245" width="0.0330%" height="15" fill="rgb(254,6,2)" fg:x="684" fg:w="2"/><text x="11.4043%" y="255.50"></text></g><g><title>do_user_addr_fault (150 samples, 2.48%)</title><rect x="8.9274%" y="277" width="2.4752%" height="15" fill="rgb(208,96,46)" fg:x="541" fg:w="150"/><text x="9.0446%" y="287.50">do_use..</text></g><g><title>lock_vma_under_rcu (5 samples, 0.08%)</title><rect x="11.3201%" y="261" width="0.0825%" height="15" fill="rgb(239,3,39)" fg:x="686" fg:w="5"/><text x="11.4373%" y="271.50"></text></g><g><title>mas_walk (5 samples, 0.08%)</title><rect x="11.3201%" y="245" width="0.0825%" height="15" fill="rgb(233,210,1)" fg:x="686" fg:w="5"/><text x="11.4373%" y="255.50"></text></g><g><title>mtree_range_walk (5 samples, 0.08%)</title><rect x="11.3201%" y="229" width="0.0825%" height="15" fill="rgb(244,137,37)" fg:x="686" fg:w="5"/><text x="11.4373%" y="239.50"></text></g><g><title>exc_page_fault (157 samples, 2.59%)</title><rect x="8.8944%" y="293" width="2.5908%" height="15" fill="rgb(240,136,2)" fg:x="539" fg:w="157"/><text x="9.0116%" y="303.50">exc_pag..</text></g><g><title>irqentry_exit (5 samples, 0.08%)</title><rect x="11.4026%" y="277" width="0.0825%" height="15" fill="rgb(239,18,37)" fg:x="691" fg:w="5"/><text x="11.5198%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.08%)</title><rect x="11.4026%" y="261" width="0.0825%" height="15" fill="rgb(218,185,22)" fg:x="691" fg:w="5"/><text x="11.5198%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.08%)</title><rect x="11.4026%" y="245" width="0.0825%" height="15" fill="rgb(225,218,4)" fg:x="691" fg:w="5"/><text x="11.5198%" y="255.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.08%)</title><rect x="11.4026%" y="229" width="0.0825%" height="15" fill="rgb(230,182,32)" fg:x="691" fg:w="5"/><text x="11.5198%" y="239.50"></text></g><g><title>schedule (5 samples, 0.08%)</title><rect x="11.4026%" y="213" width="0.0825%" height="15" fill="rgb(242,56,43)" fg:x="691" fg:w="5"/><text x="11.5198%" y="223.50"></text></g><g><title>__schedule (5 samples, 0.08%)</title><rect x="11.4026%" y="197" width="0.0825%" height="15" fill="rgb(233,99,24)" fg:x="691" fg:w="5"/><text x="11.5198%" y="207.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.08%)</title><rect x="11.4026%" y="181" width="0.0825%" height="15" fill="rgb(234,209,42)" fg:x="691" fg:w="5"/><text x="11.5198%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.08%)</title><rect x="11.4026%" y="165" width="0.0825%" height="15" fill="rgb(227,7,12)" fg:x="691" fg:w="5"/><text x="11.5198%" y="175.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.08%)</title><rect x="11.4026%" y="149" width="0.0825%" height="15" fill="rgb(245,203,43)" fg:x="691" fg:w="5"/><text x="11.5198%" y="159.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.08%)</title><rect x="11.4026%" y="133" width="0.0825%" height="15" fill="rgb(238,205,33)" fg:x="691" fg:w="5"/><text x="11.5198%" y="143.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.08%)</title><rect x="11.4026%" y="117" width="0.0825%" height="15" fill="rgb(231,56,7)" fg:x="691" fg:w="5"/><text x="11.5198%" y="127.50"></text></g><g><title>native_write_msr (5 samples, 0.08%)</title><rect x="11.4026%" y="101" width="0.0825%" height="15" fill="rgb(244,186,29)" fg:x="691" fg:w="5"/><text x="11.5198%" y="111.50"></text></g><g><title>asm_exc_page_fault (163 samples, 2.69%)</title><rect x="8.8284%" y="309" width="2.6898%" height="15" fill="rgb(234,111,31)" fg:x="535" fg:w="163"/><text x="8.9456%" y="319.50">asm_exc..</text></g><g><title>irqentry_enter (2 samples, 0.03%)</title><rect x="11.4851%" y="293" width="0.0330%" height="15" fill="rgb(241,149,10)" fg:x="696" fg:w="2"/><text x="11.6023%" y="303.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="11.5182%" y="309" width="0.0165%" height="15" fill="rgb(249,206,44)" fg:x="698" fg:w="1"/><text x="11.6353%" y="319.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="11.5347%" y="309" width="0.0165%" height="15" fill="rgb(251,153,30)" fg:x="699" fg:w="1"/><text x="11.6518%" y="319.50"></text></g><g><title>native_irq_return_iret (1 samples, 0.02%)</title><rect x="11.5512%" y="309" width="0.0165%" height="15" fill="rgb(239,152,38)" fg:x="700" fg:w="1"/><text x="11.6683%" y="319.50"></text></g><g><title>sync_regs (18 samples, 0.30%)</title><rect x="11.5677%" y="309" width="0.2970%" height="15" fill="rgb(249,139,47)" fg:x="701" fg:w="18"/><text x="11.6848%" y="319.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="11.8977%" y="229" width="0.0165%" height="15" fill="rgb(244,64,35)" fg:x="721" fg:w="1"/><text x="12.0149%" y="239.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.02%)</title><rect x="11.9307%" y="117" width="0.0165%" height="15" fill="rgb(216,46,15)" fg:x="723" fg:w="1"/><text x="12.0479%" y="127.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="11.9472%" y="101" width="0.0165%" height="15" fill="rgb(250,74,19)" fg:x="724" fg:w="1"/><text x="12.0644%" y="111.50"></text></g><g><title>__glibc_morecore (5 samples, 0.08%)</title><rect x="11.8977%" y="293" width="0.0825%" height="15" fill="rgb(249,42,33)" fg:x="721" fg:w="5"/><text x="12.0149%" y="303.50"></text></g><g><title>__GI___sbrk (5 samples, 0.08%)</title><rect x="11.8977%" y="277" width="0.0825%" height="15" fill="rgb(242,149,17)" fg:x="721" fg:w="5"/><text x="12.0149%" y="287.50"></text></g><g><title>__GI___sbrk (5 samples, 0.08%)</title><rect x="11.8977%" y="261" width="0.0825%" height="15" fill="rgb(244,29,21)" fg:x="721" fg:w="5"/><text x="12.0149%" y="271.50"></text></g><g><title>__brk (5 samples, 0.08%)</title><rect x="11.8977%" y="245" width="0.0825%" height="15" fill="rgb(220,130,37)" fg:x="721" fg:w="5"/><text x="12.0149%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="11.9142%" y="229" width="0.0660%" height="15" fill="rgb(211,67,2)" fg:x="722" fg:w="4"/><text x="12.0314%" y="239.50"></text></g><g><title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.9142%" y="213" width="0.0660%" height="15" fill="rgb(235,68,52)" fg:x="722" fg:w="4"/><text x="12.0314%" y="223.50"></text></g><g><title>x64_sys_call (4 samples, 0.07%)</title><rect x="11.9142%" y="197" width="0.0660%" height="15" fill="rgb(246,142,3)" fg:x="722" fg:w="4"/><text x="12.0314%" y="207.50"></text></g><g><title>__x64_sys_brk (4 samples, 0.07%)</title><rect x="11.9142%" y="181" width="0.0660%" height="15" fill="rgb(241,25,7)" fg:x="722" fg:w="4"/><text x="12.0314%" y="191.50"></text></g><g><title>__do_sys_brk (4 samples, 0.07%)</title><rect x="11.9142%" y="165" width="0.0660%" height="15" fill="rgb(242,119,39)" fg:x="722" fg:w="4"/><text x="12.0314%" y="175.50"></text></g><g><title>do_brk_flags (3 samples, 0.05%)</title><rect x="11.9307%" y="149" width="0.0495%" height="15" fill="rgb(241,98,45)" fg:x="723" fg:w="3"/><text x="12.0479%" y="159.50"></text></g><g><title>mas_preallocate (3 samples, 0.05%)</title><rect x="11.9307%" y="133" width="0.0495%" height="15" fill="rgb(254,28,30)" fg:x="723" fg:w="3"/><text x="12.0479%" y="143.50"></text></g><g><title>mas_alloc_nodes (2 samples, 0.03%)</title><rect x="11.9472%" y="117" width="0.0330%" height="15" fill="rgb(241,142,54)" fg:x="724" fg:w="2"/><text x="12.0644%" y="127.50"></text></g><g><title>kmem_cache_alloc_bulk (1 samples, 0.02%)</title><rect x="11.9637%" y="101" width="0.0165%" height="15" fill="rgb(222,85,15)" fg:x="725" fg:w="1"/><text x="12.0809%" y="111.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="11.9637%" y="85" width="0.0165%" height="15" fill="rgb(210,85,47)" fg:x="725" fg:w="1"/><text x="12.0809%" y="95.50"></text></g><g><title>handle_mm_fault (2 samples, 0.03%)</title><rect x="11.9802%" y="245" width="0.0330%" height="15" fill="rgb(224,206,25)" fg:x="726" fg:w="2"/><text x="12.0974%" y="255.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="11.9802%" y="229" width="0.0330%" height="15" fill="rgb(243,201,19)" fg:x="726" fg:w="2"/><text x="12.0974%" y="239.50"></text></g><g><title>handle_pte_fault (2 samples, 0.03%)</title><rect x="11.9802%" y="213" width="0.0330%" height="15" fill="rgb(236,59,4)" fg:x="726" fg:w="2"/><text x="12.0974%" y="223.50"></text></g><g><title>do_anonymous_page (2 samples, 0.03%)</title><rect x="11.9802%" y="197" width="0.0330%" height="15" fill="rgb(254,179,45)" fg:x="726" fg:w="2"/><text x="12.0974%" y="207.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="11.9967%" y="181" width="0.0165%" height="15" fill="rgb(226,14,10)" fg:x="727" fg:w="1"/><text x="12.1139%" y="191.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="11.9967%" y="165" width="0.0165%" height="15" fill="rgb(244,27,41)" fg:x="727" fg:w="1"/><text x="12.1139%" y="175.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="11.9967%" y="149" width="0.0165%" height="15" fill="rgb(235,35,32)" fg:x="727" fg:w="1"/><text x="12.1139%" y="159.50"></text></g><g><title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="11.9967%" y="133" width="0.0165%" height="15" fill="rgb(218,68,31)" fg:x="727" fg:w="1"/><text x="12.1139%" y="143.50"></text></g><g><title>_int_malloc (261 samples, 4.31%)</title><rect x="7.7228%" y="325" width="4.3069%" height="15" fill="rgb(207,120,37)" fg:x="468" fg:w="261"/><text x="7.8400%" y="335.50">_int_malloc</text></g><g><title>sysmalloc (10 samples, 0.17%)</title><rect x="11.8647%" y="309" width="0.1650%" height="15" fill="rgb(227,98,0)" fg:x="719" fg:w="10"/><text x="11.9819%" y="319.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.05%)</title><rect x="11.9802%" y="293" width="0.0495%" height="15" fill="rgb(207,7,3)" fg:x="726" fg:w="3"/><text x="12.0974%" y="303.50"></text></g><g><title>exc_page_fault (3 samples, 0.05%)</title><rect x="11.9802%" y="277" width="0.0495%" height="15" fill="rgb(206,98,19)" fg:x="726" fg:w="3"/><text x="12.0974%" y="287.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.05%)</title><rect x="11.9802%" y="261" width="0.0495%" height="15" fill="rgb(217,5,26)" fg:x="726" fg:w="3"/><text x="12.0974%" y="271.50"></text></g><g><title>up_read (1 samples, 0.02%)</title><rect x="12.0132%" y="245" width="0.0165%" height="15" fill="rgb(235,190,38)" fg:x="728" fg:w="1"/><text x="12.1304%" y="255.50"></text></g><g><title>arena_for_chunk (3 samples, 0.05%)</title><rect x="12.0297%" y="325" width="0.0495%" height="15" fill="rgb(247,86,24)" fg:x="729" fg:w="3"/><text x="12.1469%" y="335.50"></text></g><g><title>__GI___libc_malloc (280 samples, 4.62%)</title><rect x="7.5083%" y="341" width="4.6205%" height="15" fill="rgb(205,101,16)" fg:x="455" fg:w="280"/><text x="7.6254%" y="351.50">__GI___libc_ma..</text></g><g><title>checked_request2size (3 samples, 0.05%)</title><rect x="12.0792%" y="325" width="0.0495%" height="15" fill="rgb(246,168,33)" fg:x="732" fg:w="3"/><text x="12.1964%" y="335.50"></text></g><g><title>__rdl_alloc (3 samples, 0.05%)</title><rect x="12.1287%" y="341" width="0.0495%" height="15" fill="rgb(231,114,1)" fg:x="735" fg:w="3"/><text x="12.2459%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (346 samples, 5.71%)</title><rect x="6.4851%" y="517" width="5.7096%" height="15" fill="rgb(207,184,53)" fg:x="393" fg:w="346"/><text x="6.6023%" y="527.50">core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (346 samples, 5.71%)</title><rect x="6.4851%" y="501" width="5.7096%" height="15" fill="rgb(224,95,51)" fg:x="393" fg:w="346"/><text x="6.6023%" y="511.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (346 samples, 5.71%)</title><rect x="6.4851%" y="485" width="5.7096%" height="15" fill="rgb(212,188,45)" fg:x="393" fg:w="346"/><text x="6.6023%" y="495.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (345 samples, 5.69%)</title><rect x="6.5017%" y="469" width="5.6931%" height="15" fill="rgb(223,154,38)" fg:x="394" fg:w="345"/><text x="6.6188%" y="479.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (288 samples, 4.75%)</title><rect x="7.4422%" y="453" width="4.7525%" height="15" fill="rgb(251,22,52)" fg:x="451" fg:w="288"/><text x="7.5594%" y="463.50">alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (288 samples, 4.75%)</title><rect x="7.4422%" y="437" width="4.7525%" height="15" fill="rgb(229,209,22)" fg:x="451" fg:w="288"/><text x="7.5594%" y="447.50">alloc::vec::Vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (287 samples, 4.74%)</title><rect x="7.4587%" y="421" width="4.7360%" height="15" fill="rgb(234,138,34)" fg:x="452" fg:w="287"/><text x="7.5759%" y="431.50">alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (285 samples, 4.70%)</title><rect x="7.4917%" y="405" width="4.7030%" height="15" fill="rgb(212,95,11)" fg:x="454" fg:w="285"/><text x="7.6089%" y="415.50">alloc::raw_vec:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (284 samples, 4.69%)</title><rect x="7.5083%" y="389" width="4.6865%" height="15" fill="rgb(240,179,47)" fg:x="455" fg:w="284"/><text x="7.6254%" y="399.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (284 samples, 4.69%)</title><rect x="7.5083%" y="373" width="4.6865%" height="15" fill="rgb(240,163,11)" fg:x="455" fg:w="284"/><text x="7.6254%" y="383.50">alloc::alloc::..</text></g><g><title>alloc::alloc::alloc (284 samples, 4.69%)</title><rect x="7.5083%" y="357" width="4.6865%" height="15" fill="rgb(236,37,12)" fg:x="455" fg:w="284"/><text x="7.6254%" y="367.50">alloc::alloc::..</text></g><g><title>core::ptr::read_volatile (1 samples, 0.02%)</title><rect x="12.1782%" y="341" width="0.0165%" height="15" fill="rgb(232,164,16)" fg:x="738" fg:w="1"/><text x="12.2954%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="12.2607%" y="437" width="0.0165%" height="15" fill="rgb(244,205,15)" fg:x="743" fg:w="1"/><text x="12.3779%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="12.2607%" y="421" width="0.0165%" height="15" fill="rgb(223,117,47)" fg:x="743" fg:w="1"/><text x="12.3779%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="12.2607%" y="405" width="0.0165%" height="15" fill="rgb(244,107,35)" fg:x="743" fg:w="1"/><text x="12.3779%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="12.2607%" y="389" width="0.0165%" height="15" fill="rgb(205,140,8)" fg:x="743" fg:w="1"/><text x="12.3779%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="12.2607%" y="373" width="0.0165%" height="15" fill="rgb(228,84,46)" fg:x="743" fg:w="1"/><text x="12.3779%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.02%)</title><rect x="12.2607%" y="357" width="0.0165%" height="15" fill="rgb(254,188,9)" fg:x="743" fg:w="1"/><text x="12.3779%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="12.2607%" y="341" width="0.0165%" height="15" fill="rgb(206,112,54)" fg:x="743" fg:w="1"/><text x="12.3779%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="12.2607%" y="325" width="0.0165%" height="15" fill="rgb(216,84,49)" fg:x="743" fg:w="1"/><text x="12.3779%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="12.2607%" y="309" width="0.0165%" height="15" fill="rgb(214,194,35)" fg:x="743" fg:w="1"/><text x="12.3779%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="12.2607%" y="293" width="0.0165%" height="15" fill="rgb(249,28,3)" fg:x="743" fg:w="1"/><text x="12.3779%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="12.2607%" y="277" width="0.0165%" height="15" fill="rgb(222,56,52)" fg:x="743" fg:w="1"/><text x="12.3779%" y="287.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="12.2607%" y="261" width="0.0165%" height="15" fill="rgb(245,217,50)" fg:x="743" fg:w="1"/><text x="12.3779%" y="271.50"></text></g><g><title>_int_free (31 samples, 0.51%)</title><rect x="12.3597%" y="421" width="0.5116%" height="15" fill="rgb(213,201,24)" fg:x="749" fg:w="31"/><text x="12.4769%" y="431.50"></text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="12.8548%" y="405" width="0.0165%" height="15" fill="rgb(248,116,28)" fg:x="779" fg:w="1"/><text x="12.9720%" y="415.50"></text></g><g><title>__GI___libc_free (38 samples, 0.63%)</title><rect x="12.2772%" y="437" width="0.6271%" height="15" fill="rgb(219,72,43)" fg:x="744" fg:w="38"/><text x="12.3944%" y="447.50"></text></g><g><title>arena_for_chunk (2 samples, 0.03%)</title><rect x="12.8713%" y="421" width="0.0330%" height="15" fill="rgb(209,138,14)" fg:x="780" fg:w="2"/><text x="12.9885%" y="431.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="12.9043%" y="437" width="0.0330%" height="15" fill="rgb(222,18,33)" fg:x="782" fg:w="2"/><text x="13.0215%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f32)&gt;&gt; (46 samples, 0.76%)</title><rect x="12.1947%" y="517" width="0.7591%" height="15" fill="rgb(213,199,7)" fg:x="739" fg:w="46"/><text x="12.3119%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f32)&gt;&gt; (46 samples, 0.76%)</title><rect x="12.1947%" y="501" width="0.7591%" height="15" fill="rgb(250,110,10)" fg:x="739" fg:w="46"/><text x="12.3119%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.76%)</title><rect x="12.1947%" y="485" width="0.7591%" height="15" fill="rgb(248,123,6)" fg:x="739" fg:w="46"/><text x="12.3119%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45 samples, 0.74%)</title><rect x="12.2112%" y="469" width="0.7426%" height="15" fill="rgb(206,91,31)" fg:x="740" fg:w="45"/><text x="12.3284%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (45 samples, 0.74%)</title><rect x="12.2112%" y="453" width="0.7426%" height="15" fill="rgb(211,154,13)" fg:x="740" fg:w="45"/><text x="12.3284%" y="463.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="12.9373%" y="437" width="0.0165%" height="15" fill="rgb(225,148,7)" fg:x="784" fg:w="1"/><text x="13.0545%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt; (1 samples, 0.02%)</title><rect x="12.9538%" y="517" width="0.0165%" height="15" fill="rgb(220,160,43)" fg:x="785" fg:w="1"/><text x="13.0710%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f32)&gt;&gt; (1 samples, 0.02%)</title><rect x="12.9538%" y="501" width="0.0165%" height="15" fill="rgb(213,52,39)" fg:x="785" fg:w="1"/><text x="13.0710%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.9538%" y="485" width="0.0165%" height="15" fill="rgb(243,137,7)" fg:x="785" fg:w="1"/><text x="13.0710%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="12.9538%" y="469" width="0.0165%" height="15" fill="rgb(230,79,13)" fg:x="785" fg:w="1"/><text x="13.0710%" y="479.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (7 samples, 0.12%)</title><rect x="12.9703%" y="517" width="0.1155%" height="15" fill="rgb(247,105,23)" fg:x="786" fg:w="7"/><text x="13.0875%" y="527.50"></text></g><g><title>checked_request2size (7 samples, 0.12%)</title><rect x="13.9769%" y="421" width="0.1155%" height="15" fill="rgb(223,179,41)" fg:x="847" fg:w="7"/><text x="14.0941%" y="431.50"></text></g><g><title>__GI___libc_malloc (41 samples, 0.68%)</title><rect x="13.6634%" y="437" width="0.6766%" height="15" fill="rgb(218,9,34)" fg:x="828" fg:w="41"/><text x="13.7806%" y="447.50"></text></g><g><title>tcache_get (15 samples, 0.25%)</title><rect x="14.0924%" y="421" width="0.2475%" height="15" fill="rgb(222,106,8)" fg:x="854" fg:w="15"/><text x="14.2096%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.3234%" y="405" width="0.0165%" height="15" fill="rgb(211,220,0)" fg:x="868" fg:w="1"/><text x="14.4406%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.3234%" y="389" width="0.0165%" height="15" fill="rgb(229,52,16)" fg:x="868" fg:w="1"/><text x="14.4406%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="14.3234%" y="373" width="0.0165%" height="15" fill="rgb(212,155,18)" fg:x="868" fg:w="1"/><text x="14.4406%" y="383.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="14.3234%" y="357" width="0.0165%" height="15" fill="rgb(242,21,14)" fg:x="868" fg:w="1"/><text x="14.4406%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="14.3234%" y="341" width="0.0165%" height="15" fill="rgb(222,19,48)" fg:x="868" fg:w="1"/><text x="14.4406%" y="351.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="14.3234%" y="325" width="0.0165%" height="15" fill="rgb(232,45,27)" fg:x="868" fg:w="1"/><text x="14.4406%" y="335.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="14.3234%" y="309" width="0.0165%" height="15" fill="rgb(249,103,42)" fg:x="868" fg:w="1"/><text x="14.4406%" y="319.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="14.3234%" y="293" width="0.0165%" height="15" fill="rgb(246,81,33)" fg:x="868" fg:w="1"/><text x="14.4406%" y="303.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="14.3234%" y="277" width="0.0165%" height="15" fill="rgb(252,33,42)" fg:x="868" fg:w="1"/><text x="14.4406%" y="287.50"></text></g><g><title>trigger_load_balance (1 samples, 0.02%)</title><rect x="14.3234%" y="261" width="0.0165%" height="15" fill="rgb(209,212,41)" fg:x="868" fg:w="1"/><text x="14.4406%" y="271.50"></text></g><g><title>__rdl_alloc (7 samples, 0.12%)</title><rect x="14.3399%" y="437" width="0.1155%" height="15" fill="rgb(207,154,6)" fg:x="869" fg:w="7"/><text x="14.4571%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (53 samples, 0.87%)</title><rect x="13.6304%" y="501" width="0.8746%" height="15" fill="rgb(223,64,47)" fg:x="826" fg:w="53"/><text x="13.7476%" y="511.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.87%)</title><rect x="13.6304%" y="485" width="0.8746%" height="15" fill="rgb(211,161,38)" fg:x="826" fg:w="53"/><text x="13.7476%" y="495.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.87%)</title><rect x="13.6304%" y="469" width="0.8746%" height="15" fill="rgb(219,138,40)" fg:x="826" fg:w="53"/><text x="13.7476%" y="479.50">a..</text></g><g><title>alloc::alloc::alloc (53 samples, 0.87%)</title><rect x="13.6304%" y="453" width="0.8746%" height="15" fill="rgb(241,228,46)" fg:x="826" fg:w="53"/><text x="13.7476%" y="463.50">a..</text></g><g><title>__rust_alloc (3 samples, 0.05%)</title><rect x="14.4554%" y="437" width="0.0495%" height="15" fill="rgb(223,209,38)" fg:x="876" fg:w="3"/><text x="14.5726%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (3 samples, 0.05%)</title><rect x="14.5050%" y="501" width="0.0495%" height="15" fill="rgb(236,164,45)" fg:x="879" fg:w="3"/><text x="14.6221%" y="511.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (3 samples, 0.05%)</title><rect x="14.5050%" y="485" width="0.0495%" height="15" fill="rgb(231,15,5)" fg:x="879" fg:w="3"/><text x="14.6221%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="14.5545%" y="453" width="0.1320%" height="15" fill="rgb(252,35,15)" fg:x="882" fg:w="8"/><text x="14.6716%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.10%)</title><rect x="14.8350%" y="421" width="0.0990%" height="15" fill="rgb(248,181,18)" fg:x="899" fg:w="6"/><text x="14.9522%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="15.0330%" y="357" width="0.0495%" height="15" fill="rgb(233,39,42)" fg:x="911" fg:w="3"/><text x="15.1502%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.08%)</title><rect x="15.0825%" y="197" width="0.0825%" height="15" fill="rgb(238,110,33)" fg:x="914" fg:w="5"/><text x="15.1997%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.18%)</title><rect x="15.1650%" y="197" width="0.1815%" height="15" fill="rgb(233,195,10)" fg:x="919" fg:w="11"/><text x="15.2822%" y="207.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.13%)</title><rect x="15.2145%" y="181" width="0.1320%" height="15" fill="rgb(254,105,3)" fg:x="922" fg:w="8"/><text x="15.3317%" y="191.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.28%)</title><rect x="15.0825%" y="213" width="0.2805%" height="15" fill="rgb(221,225,9)" fg:x="914" fg:w="17"/><text x="15.1997%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="15.3465%" y="197" width="0.0165%" height="15" fill="rgb(224,227,45)" fg:x="930" fg:w="1"/><text x="15.4637%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (21 samples, 0.35%)</title><rect x="15.0825%" y="341" width="0.3465%" height="15" fill="rgb(229,198,43)" fg:x="914" fg:w="21"/><text x="15.1997%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (21 samples, 0.35%)</title><rect x="15.0825%" y="325" width="0.3465%" height="15" fill="rgb(206,209,35)" fg:x="914" fg:w="21"/><text x="15.1997%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.35%)</title><rect x="15.0825%" y="309" width="0.3465%" height="15" fill="rgb(245,195,53)" fg:x="914" fg:w="21"/><text x="15.1997%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.35%)</title><rect x="15.0825%" y="293" width="0.3465%" height="15" fill="rgb(240,92,26)" fg:x="914" fg:w="21"/><text x="15.1997%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.35%)</title><rect x="15.0825%" y="277" width="0.3465%" height="15" fill="rgb(207,40,23)" fg:x="914" fg:w="21"/><text x="15.1997%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.35%)</title><rect x="15.0825%" y="261" width="0.3465%" height="15" fill="rgb(223,111,35)" fg:x="914" fg:w="21"/><text x="15.1997%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (21 samples, 0.35%)</title><rect x="15.0825%" y="245" width="0.3465%" height="15" fill="rgb(229,147,28)" fg:x="914" fg:w="21"/><text x="15.1997%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.35%)</title><rect x="15.0825%" y="229" width="0.3465%" height="15" fill="rgb(211,29,28)" fg:x="914" fg:w="21"/><text x="15.1997%" y="239.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (4 samples, 0.07%)</title><rect x="15.3630%" y="213" width="0.0660%" height="15" fill="rgb(228,72,33)" fg:x="931" fg:w="4"/><text x="15.4802%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 0.07%)</title><rect x="15.3630%" y="197" width="0.0660%" height="15" fill="rgb(205,214,31)" fg:x="931" fg:w="4"/><text x="15.4802%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (4 samples, 0.07%)</title><rect x="15.3630%" y="181" width="0.0660%" height="15" fill="rgb(224,111,15)" fg:x="931" fg:w="4"/><text x="15.4802%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (13 samples, 0.21%)</title><rect x="15.4290%" y="341" width="0.2145%" height="15" fill="rgb(253,21,26)" fg:x="935" fg:w="13"/><text x="15.5462%" y="351.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (35 samples, 0.58%)</title><rect x="15.0825%" y="357" width="0.5776%" height="15" fill="rgb(245,139,43)" fg:x="914" fg:w="35"/><text x="15.1997%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="341" width="0.0165%" height="15" fill="rgb(252,170,7)" fg:x="948" fg:w="1"/><text x="15.7608%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="325" width="0.0165%" height="15" fill="rgb(231,118,14)" fg:x="948" fg:w="1"/><text x="15.7608%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="309" width="0.0165%" height="15" fill="rgb(238,83,0)" fg:x="948" fg:w="1"/><text x="15.7608%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="293" width="0.0165%" height="15" fill="rgb(221,39,39)" fg:x="948" fg:w="1"/><text x="15.7608%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="277" width="0.0165%" height="15" fill="rgb(222,119,46)" fg:x="948" fg:w="1"/><text x="15.7608%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="261" width="0.0165%" height="15" fill="rgb(222,165,49)" fg:x="948" fg:w="1"/><text x="15.7608%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6436%" y="245" width="0.0165%" height="15" fill="rgb(219,113,52)" fg:x="948" fg:w="1"/><text x="15.7608%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="15.6436%" y="229" width="0.0165%" height="15" fill="rgb(214,7,15)" fg:x="948" fg:w="1"/><text x="15.7608%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="15.6601%" y="197" width="0.0165%" height="15" fill="rgb(235,32,4)" fg:x="949" fg:w="1"/><text x="15.7773%" y="207.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.20%)</title><rect x="15.6601%" y="213" width="0.1980%" height="15" fill="rgb(238,90,54)" fg:x="949" fg:w="12"/><text x="15.7773%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.18%)</title><rect x="15.6766%" y="197" width="0.1815%" height="15" fill="rgb(213,208,19)" fg:x="950" fg:w="11"/><text x="15.7938%" y="207.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.15%)</title><rect x="15.7096%" y="181" width="0.1485%" height="15" fill="rgb(233,156,4)" fg:x="952" fg:w="9"/><text x="15.8268%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.94%)</title><rect x="15.0330%" y="405" width="0.9406%" height="15" fill="rgb(207,194,5)" fg:x="911" fg:w="57"/><text x="15.1502%" y="415.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.94%)</title><rect x="15.0330%" y="389" width="0.9406%" height="15" fill="rgb(206,111,30)" fg:x="911" fg:w="57"/><text x="15.1502%" y="399.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (57 samples, 0.94%)</title><rect x="15.0330%" y="373" width="0.9406%" height="15" fill="rgb(243,70,54)" fg:x="911" fg:w="57"/><text x="15.1502%" y="383.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (19 samples, 0.31%)</title><rect x="15.6601%" y="357" width="0.3135%" height="15" fill="rgb(242,28,8)" fg:x="949" fg:w="19"/><text x="15.7773%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (19 samples, 0.31%)</title><rect x="15.6601%" y="341" width="0.3135%" height="15" fill="rgb(219,106,18)" fg:x="949" fg:w="19"/><text x="15.7773%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (19 samples, 0.31%)</title><rect x="15.6601%" y="325" width="0.3135%" height="15" fill="rgb(244,222,10)" fg:x="949" fg:w="19"/><text x="15.7773%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.31%)</title><rect x="15.6601%" y="309" width="0.3135%" height="15" fill="rgb(236,179,52)" fg:x="949" fg:w="19"/><text x="15.7773%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.31%)</title><rect x="15.6601%" y="293" width="0.3135%" height="15" fill="rgb(213,23,39)" fg:x="949" fg:w="19"/><text x="15.7773%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.31%)</title><rect x="15.6601%" y="277" width="0.3135%" height="15" fill="rgb(238,48,10)" fg:x="949" fg:w="19"/><text x="15.7773%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.31%)</title><rect x="15.6601%" y="261" width="0.3135%" height="15" fill="rgb(251,196,23)" fg:x="949" fg:w="19"/><text x="15.7773%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (19 samples, 0.31%)</title><rect x="15.6601%" y="245" width="0.3135%" height="15" fill="rgb(250,152,24)" fg:x="949" fg:w="19"/><text x="15.7773%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.31%)</title><rect x="15.6601%" y="229" width="0.3135%" height="15" fill="rgb(209,150,17)" fg:x="949" fg:w="19"/><text x="15.7773%" y="239.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (7 samples, 0.12%)</title><rect x="15.8581%" y="213" width="0.1155%" height="15" fill="rgb(234,202,34)" fg:x="961" fg:w="7"/><text x="15.9753%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (7 samples, 0.12%)</title><rect x="15.8581%" y="197" width="0.1155%" height="15" fill="rgb(253,148,53)" fg:x="961" fg:w="7"/><text x="15.9753%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (7 samples, 0.12%)</title><rect x="15.8581%" y="181" width="0.1155%" height="15" fill="rgb(218,129,16)" fg:x="961" fg:w="7"/><text x="15.9753%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="15.9736%" y="405" width="0.0330%" height="15" fill="rgb(216,85,19)" fg:x="968" fg:w="2"/><text x="16.0908%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="15.9736%" y="389" width="0.0330%" height="15" fill="rgb(235,228,7)" fg:x="968" fg:w="2"/><text x="16.0908%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.05%)</title><rect x="16.1056%" y="341" width="0.0495%" height="15" fill="rgb(245,175,0)" fg:x="976" fg:w="3"/><text x="16.2228%" y="351.50"></text></g><g><title>__memcpy_evex_unaligned_erms (10 samples, 0.17%)</title><rect x="16.6667%" y="245" width="0.1650%" height="15" fill="rgb(208,168,36)" fg:x="1010" fg:w="10"/><text x="16.7839%" y="255.50"></text></g><g><title>_int_free (22 samples, 0.36%)</title><rect x="16.8317%" y="245" width="0.3630%" height="15" fill="rgb(246,171,24)" fg:x="1020" fg:w="22"/><text x="16.9489%" y="255.50"></text></g><g><title>tcache_put (2 samples, 0.03%)</title><rect x="17.1617%" y="229" width="0.0330%" height="15" fill="rgb(215,142,24)" fg:x="1040" fg:w="2"/><text x="17.2789%" y="239.50"></text></g><g><title>alloc_perturb (2 samples, 0.03%)</title><rect x="17.9868%" y="229" width="0.0330%" height="15" fill="rgb(250,187,7)" fg:x="1090" fg:w="2"/><text x="18.1040%" y="239.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="18.0198%" y="181" width="0.0165%" height="15" fill="rgb(228,66,33)" fg:x="1092" fg:w="1"/><text x="18.1370%" y="191.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="18.0198%" y="165" width="0.0165%" height="15" fill="rgb(234,215,21)" fg:x="1092" fg:w="1"/><text x="18.1370%" y="175.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="18.0198%" y="149" width="0.0165%" height="15" fill="rgb(222,191,20)" fg:x="1092" fg:w="1"/><text x="18.1370%" y="159.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="18.0198%" y="133" width="0.0165%" height="15" fill="rgb(245,79,54)" fg:x="1092" fg:w="1"/><text x="18.1370%" y="143.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="18.0198%" y="117" width="0.0165%" height="15" fill="rgb(240,10,37)" fg:x="1092" fg:w="1"/><text x="18.1370%" y="127.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="18.0198%" y="101" width="0.0165%" height="15" fill="rgb(214,192,32)" fg:x="1092" fg:w="1"/><text x="18.1370%" y="111.50"></text></g><g><title>_int_malloc (52 samples, 0.86%)</title><rect x="17.1947%" y="245" width="0.8581%" height="15" fill="rgb(209,36,54)" fg:x="1042" fg:w="52"/><text x="17.3119%" y="255.50">_..</text></g><g><title>asm_exc_page_fault (2 samples, 0.03%)</title><rect x="18.0198%" y="229" width="0.0330%" height="15" fill="rgb(220,10,11)" fg:x="1092" fg:w="2"/><text x="18.1370%" y="239.50"></text></g><g><title>exc_page_fault (2 samples, 0.03%)</title><rect x="18.0198%" y="213" width="0.0330%" height="15" fill="rgb(221,106,17)" fg:x="1092" fg:w="2"/><text x="18.1370%" y="223.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="18.0198%" y="197" width="0.0330%" height="15" fill="rgb(251,142,44)" fg:x="1092" fg:w="2"/><text x="18.1370%" y="207.50"></text></g><g><title>up_read (1 samples, 0.02%)</title><rect x="18.0363%" y="181" width="0.0165%" height="15" fill="rgb(238,13,15)" fg:x="1093" fg:w="1"/><text x="18.1535%" y="191.50"></text></g><g><title>_int_realloc (102 samples, 1.68%)</title><rect x="16.4026%" y="261" width="1.6832%" height="15" fill="rgb(208,107,27)" fg:x="994" fg:w="102"/><text x="16.5198%" y="271.50">_int..</text></g><g><title>memcpy@@GLIBC_2.14@plt (2 samples, 0.03%)</title><rect x="18.0528%" y="245" width="0.0330%" height="15" fill="rgb(205,136,37)" fg:x="1094" fg:w="2"/><text x="18.1700%" y="255.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="18.0858%" y="261" width="0.0165%" height="15" fill="rgb(250,205,27)" fg:x="1096" fg:w="1"/><text x="18.2030%" y="271.50"></text></g><g><title>__GI___libc_realloc (118 samples, 1.95%)</title><rect x="16.2211%" y="277" width="1.9472%" height="15" fill="rgb(210,80,43)" fg:x="983" fg:w="118"/><text x="16.3383%" y="287.50">__GI_..</text></g><g><title>checked_request2size (4 samples, 0.07%)</title><rect x="18.1023%" y="261" width="0.0660%" height="15" fill="rgb(247,160,36)" fg:x="1097" fg:w="4"/><text x="18.2195%" y="271.50"></text></g><g><title>__rdl_realloc (3 samples, 0.05%)</title><rect x="18.1683%" y="277" width="0.0495%" height="15" fill="rgb(234,13,49)" fg:x="1101" fg:w="3"/><text x="18.2855%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (124 samples, 2.05%)</title><rect x="16.2211%" y="325" width="2.0462%" height="15" fill="rgb(234,122,0)" fg:x="983" fg:w="124"/><text x="16.3383%" y="335.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::grow_impl (124 samples, 2.05%)</title><rect x="16.2211%" y="309" width="2.0462%" height="15" fill="rgb(207,146,38)" fg:x="983" fg:w="124"/><text x="16.3383%" y="319.50">alloc..</text></g><g><title>alloc::alloc::realloc (124 samples, 2.05%)</title><rect x="16.2211%" y="293" width="2.0462%" height="15" fill="rgb(207,177,25)" fg:x="983" fg:w="124"/><text x="16.3383%" y="303.50">alloc..</text></g><g><title>__rust_realloc (3 samples, 0.05%)</title><rect x="18.2178%" y="277" width="0.0495%" height="15" fill="rgb(211,178,42)" fg:x="1104" fg:w="3"/><text x="18.3350%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.6728943472654785223 (1 samples, 0.02%)</title><rect x="18.2673%" y="325" width="0.0165%" height="15" fill="rgb(230,69,54)" fg:x="1107" fg:w="1"/><text x="18.3845%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 samples, 2.18%)</title><rect x="16.1551%" y="341" width="2.1782%" height="15" fill="rgb(214,135,41)" fg:x="979" fg:w="132"/><text x="16.2723%" y="351.50">alloc..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.05%)</title><rect x="18.2838%" y="325" width="0.0495%" height="15" fill="rgb(237,67,25)" fg:x="1108" fg:w="3"/><text x="18.4010%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.03%)</title><rect x="18.3333%" y="341" width="0.0330%" height="15" fill="rgb(222,189,50)" fg:x="1111" fg:w="2"/><text x="18.4505%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.03%)</title><rect x="18.3333%" y="325" width="0.0330%" height="15" fill="rgb(245,148,34)" fg:x="1111" fg:w="2"/><text x="18.4505%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (145 samples, 2.39%)</title><rect x="16.0066%" y="405" width="2.3927%" height="15" fill="rgb(222,29,6)" fg:x="970" fg:w="145"/><text x="16.1238%" y="415.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (145 samples, 2.39%)</title><rect x="16.0066%" y="389" width="2.3927%" height="15" fill="rgb(221,189,43)" fg:x="970" fg:w="145"/><text x="16.1238%" y="399.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (143 samples, 2.36%)</title><rect x="16.0396%" y="373" width="2.3597%" height="15" fill="rgb(207,36,27)" fg:x="972" fg:w="143"/><text x="16.1568%" y="383.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (143 samples, 2.36%)</title><rect x="16.0396%" y="357" width="2.3597%" height="15" fill="rgb(217,90,24)" fg:x="972" fg:w="143"/><text x="16.1568%" y="367.50">alloc:..</text></g><g><title>core::cmp::max (2 samples, 0.03%)</title><rect x="18.3663%" y="341" width="0.0330%" height="15" fill="rgb(224,66,35)" fg:x="1113" fg:w="2"/><text x="18.4835%" y="351.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.03%)</title><rect x="18.3663%" y="325" width="0.0330%" height="15" fill="rgb(221,13,50)" fg:x="1113" fg:w="2"/><text x="18.4835%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="18.3663%" y="309" width="0.0330%" height="15" fill="rgb(236,68,49)" fg:x="1113" fg:w="2"/><text x="18.4835%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (16 samples, 0.26%)</title><rect x="18.3993%" y="405" width="0.2640%" height="15" fill="rgb(229,146,28)" fg:x="1115" fg:w="16"/><text x="18.5165%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="405" width="0.0495%" height="15" fill="rgb(225,31,38)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="389" width="0.0495%" height="15" fill="rgb(250,208,3)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="373" width="0.0495%" height="15" fill="rgb(246,54,23)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="357" width="0.0495%" height="15" fill="rgb(243,76,11)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="341" width="0.0495%" height="15" fill="rgb(245,21,50)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="325" width="0.0495%" height="15" fill="rgb(228,9,43)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="309" width="0.0495%" height="15" fill="rgb(208,100,47)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="293" width="0.0495%" height="15" fill="rgb(232,26,8)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="277" width="0.0495%" height="15" fill="rgb(216,166,38)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="261" width="0.0495%" height="15" fill="rgb(251,202,51)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="271.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="18.6634%" y="245" width="0.0495%" height="15" fill="rgb(254,216,34)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.05%)</title><rect x="18.6634%" y="229" width="0.0495%" height="15" fill="rgb(251,32,27)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="239.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="18.6634%" y="213" width="0.0495%" height="15" fill="rgb(208,127,28)" fg:x="1131" fg:w="3"/><text x="18.7806%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="18.7129%" y="405" width="0.0165%" height="15" fill="rgb(224,137,22)" fg:x="1134" fg:w="1"/><text x="18.8301%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (248 samples, 4.09%)</title><rect x="14.8350%" y="437" width="4.0924%" height="15" fill="rgb(254,70,32)" fg:x="899" fg:w="248"/><text x="14.9522%" y="447.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (242 samples, 3.99%)</title><rect x="14.9340%" y="421" width="3.9934%" height="15" fill="rgb(229,75,37)" fg:x="905" fg:w="242"/><text x="15.0512%" y="431.50">alloc::vec::..</text></g><g><title>core::ptr::write (12 samples, 0.20%)</title><rect x="18.7294%" y="405" width="0.1980%" height="15" fill="rgb(252,64,23)" fg:x="1135" fg:w="12"/><text x="18.8466%" y="415.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.0099%" y="245" width="0.0165%" height="15" fill="rgb(232,162,48)" fg:x="1152" fg:w="1"/><text x="19.1271%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.0099%" y="229" width="0.0165%" height="15" fill="rgb(246,160,12)" fg:x="1152" fg:w="1"/><text x="19.1271%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="19.0099%" y="213" width="0.0165%" height="15" fill="rgb(247,166,0)" fg:x="1152" fg:w="1"/><text x="19.1271%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.12%)</title><rect x="18.9274%" y="421" width="0.1155%" height="15" fill="rgb(249,219,21)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (7 samples, 0.12%)</title><rect x="18.9274%" y="405" width="0.1155%" height="15" fill="rgb(205,209,3)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="415.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (7 samples, 0.12%)</title><rect x="18.9274%" y="389" width="0.1155%" height="15" fill="rgb(243,44,1)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (7 samples, 0.12%)</title><rect x="18.9274%" y="373" width="0.1155%" height="15" fill="rgb(206,159,16)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.12%)</title><rect x="18.9274%" y="357" width="0.1155%" height="15" fill="rgb(244,77,30)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.12%)</title><rect x="18.9274%" y="341" width="0.1155%" height="15" fill="rgb(218,69,12)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.12%)</title><rect x="18.9274%" y="325" width="0.1155%" height="15" fill="rgb(212,87,7)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.12%)</title><rect x="18.9274%" y="309" width="0.1155%" height="15" fill="rgb(245,114,25)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.12%)</title><rect x="18.9274%" y="293" width="0.1155%" height="15" fill="rgb(210,61,42)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (7 samples, 0.12%)</title><rect x="18.9274%" y="277" width="0.1155%" height="15" fill="rgb(211,52,33)" fg:x="1147" fg:w="7"/><text x="19.0446%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.05%)</title><rect x="18.9934%" y="261" width="0.0495%" height="15" fill="rgb(234,58,33)" fg:x="1151" fg:w="3"/><text x="19.1106%" y="271.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (1 samples, 0.02%)</title><rect x="19.0264%" y="245" width="0.0165%" height="15" fill="rgb(220,115,36)" fg:x="1153" fg:w="1"/><text x="19.1436%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.02%)</title><rect x="19.0264%" y="229" width="0.0165%" height="15" fill="rgb(243,153,54)" fg:x="1153" fg:w="1"/><text x="19.1436%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.02%)</title><rect x="19.0264%" y="213" width="0.0165%" height="15" fill="rgb(251,47,18)" fg:x="1153" fg:w="1"/><text x="19.1436%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.15%)</title><rect x="18.9274%" y="437" width="0.1485%" height="15" fill="rgb(242,102,42)" fg:x="1147" fg:w="9"/><text x="19.0446%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.03%)</title><rect x="19.0429%" y="421" width="0.0330%" height="15" fill="rgb(234,31,38)" fg:x="1154" fg:w="2"/><text x="19.1601%" y="431.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6 samples, 0.10%)</title><rect x="19.0759%" y="437" width="0.0990%" height="15" fill="rgb(221,117,51)" fg:x="1156" fg:w="6"/><text x="19.1931%" y="447.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.21%)</title><rect x="19.1749%" y="325" width="0.2145%" height="15" fill="rgb(212,20,18)" fg:x="1162" fg:w="13"/><text x="19.2921%" y="335.50"></text></g><g><title>tcache_get (6 samples, 0.10%)</title><rect x="19.2904%" y="309" width="0.0990%" height="15" fill="rgb(245,133,36)" fg:x="1169" fg:w="6"/><text x="19.4076%" y="319.50"></text></g><g><title>__rdl_alloc (6 samples, 0.10%)</title><rect x="19.3894%" y="325" width="0.0990%" height="15" fill="rgb(212,6,19)" fg:x="1175" fg:w="6"/><text x="19.5066%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.33%)</title><rect x="19.1749%" y="437" width="0.3300%" height="15" fill="rgb(218,1,36)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.33%)</title><rect x="19.1749%" y="421" width="0.3300%" height="15" fill="rgb(246,84,54)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.33%)</title><rect x="19.1749%" y="405" width="0.3300%" height="15" fill="rgb(242,110,6)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (20 samples, 0.33%)</title><rect x="19.1749%" y="389" width="0.3300%" height="15" fill="rgb(214,47,5)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.33%)</title><rect x="19.1749%" y="373" width="0.3300%" height="15" fill="rgb(218,159,25)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.33%)</title><rect x="19.1749%" y="357" width="0.3300%" height="15" fill="rgb(215,211,28)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="367.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.33%)</title><rect x="19.1749%" y="341" width="0.3300%" height="15" fill="rgb(238,59,32)" fg:x="1162" fg:w="20"/><text x="19.2921%" y="351.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="19.4884%" y="325" width="0.0165%" height="15" fill="rgb(226,82,3)" fg:x="1181" fg:w="1"/><text x="19.6056%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (303 samples, 5.00%)</title><rect x="14.5545%" y="501" width="5.0000%" height="15" fill="rgb(240,164,32)" fg:x="882" fg:w="303"/><text x="14.6716%" y="511.50">core::iter::trai..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (303 samples, 5.00%)</title><rect x="14.5545%" y="485" width="5.0000%" height="15" fill="rgb(232,46,7)" fg:x="882" fg:w="303"/><text x="14.6716%" y="495.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (303 samples, 5.00%)</title><rect x="14.5545%" y="469" width="5.0000%" height="15" fill="rgb(229,129,53)" fg:x="882" fg:w="303"/><text x="14.6716%" y="479.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (295 samples, 4.87%)</title><rect x="14.6865%" y="453" width="4.8680%" height="15" fill="rgb(234,188,29)" fg:x="890" fg:w="295"/><text x="14.8037%" y="463.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::write (3 samples, 0.05%)</title><rect x="19.5050%" y="437" width="0.0495%" height="15" fill="rgb(246,141,4)" fg:x="1182" fg:w="3"/><text x="19.6221%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (4 samples, 0.07%)</title><rect x="19.5545%" y="501" width="0.0660%" height="15" fill="rgb(229,23,39)" fg:x="1185" fg:w="4"/><text x="19.6716%" y="511.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (4 samples, 0.07%)</title><rect x="19.5545%" y="485" width="0.0660%" height="15" fill="rgb(206,12,3)" fg:x="1185" fg:w="4"/><text x="19.6716%" y="495.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (4 samples, 0.07%)</title><rect x="19.5545%" y="469" width="0.0660%" height="15" fill="rgb(252,226,20)" fg:x="1185" fg:w="4"/><text x="19.6716%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (4 samples, 0.07%)</title><rect x="19.5545%" y="453" width="0.0660%" height="15" fill="rgb(216,123,35)" fg:x="1185" fg:w="4"/><text x="19.6716%" y="463.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (4 samples, 0.07%)</title><rect x="19.5545%" y="437" width="0.0660%" height="15" fill="rgb(212,68,40)" fg:x="1185" fg:w="4"/><text x="19.6716%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (4 samples, 0.07%)</title><rect x="19.6205%" y="501" width="0.0660%" height="15" fill="rgb(254,125,32)" fg:x="1189" fg:w="4"/><text x="19.7376%" y="511.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (4 samples, 0.07%)</title><rect x="19.6205%" y="485" width="0.0660%" height="15" fill="rgb(253,97,22)" fg:x="1189" fg:w="4"/><text x="19.7376%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (4 samples, 0.07%)</title><rect x="19.6865%" y="501" width="0.0660%" height="15" fill="rgb(241,101,14)" fg:x="1193" fg:w="4"/><text x="19.8037%" y="511.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (2 samples, 0.03%)</title><rect x="19.7195%" y="485" width="0.0330%" height="15" fill="rgb(238,103,29)" fg:x="1195" fg:w="2"/><text x="19.8367%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (7 samples, 0.12%)</title><rect x="19.7525%" y="501" width="0.1155%" height="15" fill="rgb(233,195,47)" fg:x="1197" fg:w="7"/><text x="19.8697%" y="511.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (7 samples, 0.12%)</title><rect x="19.7525%" y="485" width="0.1155%" height="15" fill="rgb(246,218,30)" fg:x="1197" fg:w="7"/><text x="19.8697%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.12%)</title><rect x="19.7525%" y="469" width="0.1155%" height="15" fill="rgb(219,145,47)" fg:x="1197" fg:w="7"/><text x="19.8697%" y="479.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (7 samples, 0.12%)</title><rect x="19.7525%" y="453" width="0.1155%" height="15" fill="rgb(243,12,26)" fg:x="1197" fg:w="7"/><text x="19.8697%" y="463.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (7 samples, 0.12%)</title><rect x="19.7525%" y="437" width="0.1155%" height="15" fill="rgb(214,87,16)" fg:x="1197" fg:w="7"/><text x="19.8697%" y="447.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (2 samples, 0.03%)</title><rect x="19.8680%" y="469" width="0.0330%" height="15" fill="rgb(208,99,42)" fg:x="1204" fg:w="2"/><text x="19.9852%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.08%)</title><rect x="19.8680%" y="501" width="0.0825%" height="15" fill="rgb(253,99,2)" fg:x="1204" fg:w="5"/><text x="19.9852%" y="511.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (5 samples, 0.08%)</title><rect x="19.8680%" y="485" width="0.0825%" height="15" fill="rgb(220,168,23)" fg:x="1204" fg:w="5"/><text x="19.9852%" y="495.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (3 samples, 0.05%)</title><rect x="19.9010%" y="469" width="0.0495%" height="15" fill="rgb(242,38,24)" fg:x="1206" fg:w="3"/><text x="20.0182%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="19.9340%" y="453" width="0.0165%" height="15" fill="rgb(225,182,9)" fg:x="1208" fg:w="1"/><text x="20.0512%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="19.9340%" y="437" width="0.0165%" height="15" fill="rgb(243,178,37)" fg:x="1208" fg:w="1"/><text x="20.0512%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="19.9340%" y="421" width="0.0165%" height="15" fill="rgb(232,139,19)" fg:x="1208" fg:w="1"/><text x="20.0512%" y="431.50"></text></g><g><title>_int_free (30 samples, 0.50%)</title><rect x="20.1815%" y="405" width="0.4950%" height="15" fill="rgb(225,201,24)" fg:x="1223" fg:w="30"/><text x="20.2987%" y="415.50"></text></g><g><title>tcache_put (5 samples, 0.08%)</title><rect x="20.5941%" y="389" width="0.0825%" height="15" fill="rgb(221,47,46)" fg:x="1248" fg:w="5"/><text x="20.7112%" y="399.50"></text></g><g><title>__GI___libc_free (42 samples, 0.69%)</title><rect x="20.0000%" y="421" width="0.6931%" height="15" fill="rgb(249,23,13)" fg:x="1212" fg:w="42"/><text x="20.1172%" y="431.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="20.6766%" y="405" width="0.0165%" height="15" fill="rgb(219,9,5)" fg:x="1253" fg:w="1"/><text x="20.7938%" y="415.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.07%)</title><rect x="20.6931%" y="421" width="0.0660%" height="15" fill="rgb(254,171,16)" fg:x="1254" fg:w="4"/><text x="20.8103%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.84%)</title><rect x="20.0000%" y="453" width="0.8416%" height="15" fill="rgb(230,171,20)" fg:x="1212" fg:w="51"/><text x="20.1172%" y="463.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (51 samples, 0.84%)</title><rect x="20.0000%" y="437" width="0.8416%" height="15" fill="rgb(210,71,41)" fg:x="1212" fg:w="51"/><text x="20.1172%" y="447.50">a..</text></g><g><title>__rust_dealloc (5 samples, 0.08%)</title><rect x="20.7591%" y="421" width="0.0825%" height="15" fill="rgb(206,173,20)" fg:x="1258" fg:w="5"/><text x="20.8763%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (56 samples, 0.92%)</title><rect x="19.9505%" y="501" width="0.9241%" height="15" fill="rgb(233,88,34)" fg:x="1209" fg:w="56"/><text x="20.0677%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (56 samples, 0.92%)</title><rect x="19.9505%" y="485" width="0.9241%" height="15" fill="rgb(223,209,46)" fg:x="1209" fg:w="56"/><text x="20.0677%" y="495.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.92%)</title><rect x="19.9505%" y="469" width="0.9241%" height="15" fill="rgb(250,43,18)" fg:x="1209" fg:w="56"/><text x="20.0677%" y="479.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="20.8416%" y="453" width="0.0330%" height="15" fill="rgb(208,13,10)" fg:x="1263" fg:w="2"/><text x="20.9588%" y="463.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (484 samples, 7.99%)</title><rect x="13.0858%" y="517" width="7.9868%" height="15" fill="rgb(212,200,36)" fg:x="793" fg:w="484"/><text x="13.2030%" y="527.50">fringe_vs_astar::structure..</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (12 samples, 0.20%)</title><rect x="20.8746%" y="501" width="0.1980%" height="15" fill="rgb(225,90,30)" fg:x="1265" fg:w="12"/><text x="20.9918%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.10%)</title><rect x="20.9736%" y="485" width="0.0990%" height="15" fill="rgb(236,182,39)" fg:x="1271" fg:w="6"/><text x="21.0908%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.10%)</title><rect x="20.9736%" y="469" width="0.0990%" height="15" fill="rgb(212,144,35)" fg:x="1271" fg:w="6"/><text x="21.0908%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.10%)</title><rect x="20.9736%" y="453" width="0.0990%" height="15" fill="rgb(228,63,44)" fg:x="1271" fg:w="6"/><text x="21.0908%" y="463.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,084 samples, 17.89%)</title><rect x="3.3168%" y="533" width="17.8878%" height="15" fill="rgb(228,109,6)" fg:x="201" fg:w="1084"/><text x="3.4340%" y="543.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (8 samples, 0.13%)</title><rect x="21.0726%" y="517" width="0.1320%" height="15" fill="rgb(238,117,24)" fg:x="1277" fg:w="8"/><text x="21.1898%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.13%)</title><rect x="21.0726%" y="501" width="0.1320%" height="15" fill="rgb(242,26,26)" fg:x="1277" fg:w="8"/><text x="21.1898%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.13%)</title><rect x="21.0726%" y="485" width="0.1320%" height="15" fill="rgb(221,92,48)" fg:x="1277" fg:w="8"/><text x="21.1898%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.13%)</title><rect x="21.0726%" y="469" width="0.1320%" height="15" fill="rgb(209,209,32)" fg:x="1277" fg:w="8"/><text x="21.1898%" y="479.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,085 samples, 17.90%)</title><rect x="3.3168%" y="549" width="17.9043%" height="15" fill="rgb(221,70,22)" fg:x="201" fg:w="1085"/><text x="3.4340%" y="559.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="21.2046%" y="533" width="0.0165%" height="15" fill="rgb(248,145,5)" fg:x="1285" fg:w="1"/><text x="21.3218%" y="543.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1 samples, 0.02%)</title><rect x="21.2046%" y="517" width="0.0165%" height="15" fill="rgb(226,116,26)" fg:x="1285" fg:w="1"/><text x="21.3218%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::get_cell (1 samples, 0.02%)</title><rect x="21.2046%" y="501" width="0.0165%" height="15" fill="rgb(244,5,17)" fg:x="1285" fg:w="1"/><text x="21.3218%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="21.2046%" y="485" width="0.0165%" height="15" fill="rgb(252,159,33)" fg:x="1285" fg:w="1"/><text x="21.3218%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="21.2046%" y="469" width="0.0165%" height="15" fill="rgb(206,71,0)" fg:x="1285" fg:w="1"/><text x="21.3218%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="21.2046%" y="453" width="0.0165%" height="15" fill="rgb(233,118,54)" fg:x="1285" fg:w="1"/><text x="21.3218%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="21.2376%" y="405" width="0.0495%" height="15" fill="rgb(234,83,48)" fg:x="1287" fg:w="3"/><text x="21.3548%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="21.2871%" y="373" width="0.0165%" height="15" fill="rgb(228,3,54)" fg:x="1290" fg:w="1"/><text x="21.4043%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.2871%" y="357" width="0.0165%" height="15" fill="rgb(226,155,13)" fg:x="1290" fg:w="1"/><text x="21.4043%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="21.2871%" y="341" width="0.0165%" height="15" fill="rgb(241,28,37)" fg:x="1290" fg:w="1"/><text x="21.4043%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.10%)</title><rect x="21.2376%" y="421" width="0.0990%" height="15" fill="rgb(233,93,10)" fg:x="1287" fg:w="6"/><text x="21.3548%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="21.2871%" y="405" width="0.0495%" height="15" fill="rgb(225,113,19)" fg:x="1290" fg:w="3"/><text x="21.4043%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (3 samples, 0.05%)</title><rect x="21.2871%" y="389" width="0.0495%" height="15" fill="rgb(241,2,18)" fg:x="1290" fg:w="3"/><text x="21.4043%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.03%)</title><rect x="21.3036%" y="373" width="0.0330%" height="15" fill="rgb(228,207,21)" fg:x="1291" fg:w="2"/><text x="21.4208%" y="383.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (8 samples, 0.13%)</title><rect x="21.2211%" y="533" width="0.1320%" height="15" fill="rgb(213,211,35)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.13%)</title><rect x="21.2211%" y="517" width="0.1320%" height="15" fill="rgb(209,83,10)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.2211%" y="501" width="0.1320%" height="15" fill="rgb(209,164,1)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.2211%" y="485" width="0.1320%" height="15" fill="rgb(213,184,43)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.2211%" y="469" width="0.1320%" height="15" fill="rgb(231,61,34)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.13%)</title><rect x="21.2211%" y="453" width="0.1320%" height="15" fill="rgb(235,75,3)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.13%)</title><rect x="21.2211%" y="437" width="0.1320%" height="15" fill="rgb(220,106,47)" fg:x="1286" fg:w="8"/><text x="21.3383%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="21.3366%" y="421" width="0.0165%" height="15" fill="rgb(210,196,33)" fg:x="1293" fg:w="1"/><text x="21.4538%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="21.3531%" y="325" width="0.0165%" height="15" fill="rgb(229,154,42)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="21.3531%" y="309" width="0.0165%" height="15" fill="rgb(228,114,26)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="21.3531%" y="293" width="0.0165%" height="15" fill="rgb(208,144,1)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="21.3531%" y="277" width="0.0165%" height="15" fill="rgb(239,112,37)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="21.3531%" y="261" width="0.0165%" height="15" fill="rgb(210,96,50)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="21.3531%" y="245" width="0.0165%" height="15" fill="rgb(222,178,2)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="21.3531%" y="229" width="0.0165%" height="15" fill="rgb(226,74,18)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="21.3531%" y="213" width="0.0165%" height="15" fill="rgb(225,67,54)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="21.3531%" y="197" width="0.0165%" height="15" fill="rgb(251,92,32)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="21.3531%" y="181" width="0.0165%" height="15" fill="rgb(228,149,22)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="21.3531%" y="165" width="0.0165%" height="15" fill="rgb(243,54,13)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="175.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="21.3531%" y="149" width="0.0165%" height="15" fill="rgb(243,180,28)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="159.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="21.3531%" y="133" width="0.0165%" height="15" fill="rgb(208,167,24)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="143.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="21.3531%" y="117" width="0.0165%" height="15" fill="rgb(245,73,45)" fg:x="1294" fg:w="1"/><text x="21.4703%" y="127.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (2 samples, 0.03%)</title><rect x="21.3531%" y="533" width="0.0330%" height="15" fill="rgb(237,203,48)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.03%)</title><rect x="21.3531%" y="517" width="0.0330%" height="15" fill="rgb(211,197,16)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="21.3531%" y="501" width="0.0330%" height="15" fill="rgb(243,99,51)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="21.3531%" y="485" width="0.0330%" height="15" fill="rgb(215,123,29)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="21.3531%" y="469" width="0.0330%" height="15" fill="rgb(239,186,37)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.03%)</title><rect x="21.3531%" y="453" width="0.0330%" height="15" fill="rgb(252,136,39)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.03%)</title><rect x="21.3531%" y="437" width="0.0330%" height="15" fill="rgb(223,213,32)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="21.3531%" y="421" width="0.0330%" height="15" fill="rgb(233,115,5)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="431.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="21.3531%" y="405" width="0.0330%" height="15" fill="rgb(207,226,44)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="415.50"></text></g><g><title>std::io::BufRead::read_line (2 samples, 0.03%)</title><rect x="21.3531%" y="389" width="0.0330%" height="15" fill="rgb(208,126,0)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="399.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.03%)</title><rect x="21.3531%" y="373" width="0.0330%" height="15" fill="rgb(244,66,21)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="383.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (2 samples, 0.03%)</title><rect x="21.3531%" y="357" width="0.0330%" height="15" fill="rgb(222,97,12)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="367.50"></text></g><g><title>std::io::read_until (2 samples, 0.03%)</title><rect x="21.3531%" y="341" width="0.0330%" height="15" fill="rgb(219,213,19)" fg:x="1294" fg:w="2"/><text x="21.4703%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.02%)</title><rect x="21.3696%" y="325" width="0.0165%" height="15" fill="rgb(252,169,30)" fg:x="1295" fg:w="1"/><text x="21.4868%" y="335.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.02%)</title><rect x="21.3696%" y="309" width="0.0165%" height="15" fill="rgb(206,32,51)" fg:x="1295" fg:w="1"/><text x="21.4868%" y="319.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.02%)</title><rect x="21.3696%" y="293" width="0.0165%" height="15" fill="rgb(250,172,42)" fg:x="1295" fg:w="1"/><text x="21.4868%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="21.3861%" y="213" width="0.0330%" height="15" fill="rgb(209,34,43)" fg:x="1296" fg:w="2"/><text x="21.5033%" y="223.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="21.3861%" y="229" width="0.0825%" height="15" fill="rgb(223,11,35)" fg:x="1296" fg:w="5"/><text x="21.5033%" y="239.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.05%)</title><rect x="21.4191%" y="213" width="0.0495%" height="15" fill="rgb(251,219,26)" fg:x="1298" fg:w="3"/><text x="21.5363%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="21.4191%" y="197" width="0.0495%" height="15" fill="rgb(231,119,3)" fg:x="1298" fg:w="3"/><text x="21.5363%" y="207.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.05%)</title><rect x="21.4191%" y="181" width="0.0495%" height="15" fill="rgb(216,97,11)" fg:x="1298" fg:w="3"/><text x="21.5363%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.10%)</title><rect x="21.3861%" y="245" width="0.0990%" height="15" fill="rgb(223,59,9)" fg:x="1296" fg:w="6"/><text x="21.5033%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="21.4686%" y="229" width="0.0165%" height="15" fill="rgb(233,93,31)" fg:x="1301" fg:w="1"/><text x="21.5858%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="21.4686%" y="213" width="0.0165%" height="15" fill="rgb(239,81,33)" fg:x="1301" fg:w="1"/><text x="21.5858%" y="223.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="21.4686%" y="197" width="0.0165%" height="15" fill="rgb(213,120,34)" fg:x="1301" fg:w="1"/><text x="21.5858%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="21.4851%" y="245" width="0.0165%" height="15" fill="rgb(243,49,53)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="21.4851%" y="229" width="0.0165%" height="15" fill="rgb(247,216,33)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="21.4851%" y="213" width="0.0165%" height="15" fill="rgb(226,26,14)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="21.4851%" y="197" width="0.0165%" height="15" fill="rgb(215,49,53)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="21.4851%" y="181" width="0.0165%" height="15" fill="rgb(245,162,40)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="21.4851%" y="165" width="0.0165%" height="15" fill="rgb(229,68,17)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="21.4851%" y="149" width="0.0165%" height="15" fill="rgb(213,182,10)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="21.4851%" y="133" width="0.0165%" height="15" fill="rgb(245,125,30)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="143.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="21.4851%" y="117" width="0.0165%" height="15" fill="rgb(232,202,2)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="127.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="21.4851%" y="101" width="0.0165%" height="15" fill="rgb(237,140,51)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="111.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="21.4851%" y="85" width="0.0165%" height="15" fill="rgb(236,157,25)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="95.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="21.4851%" y="69" width="0.0165%" height="15" fill="rgb(219,209,0)" fg:x="1302" fg:w="1"/><text x="21.6023%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.3861%" y="485" width="0.1320%" height="15" fill="rgb(240,116,54)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.3861%" y="469" width="0.1320%" height="15" fill="rgb(216,10,36)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.13%)</title><rect x="21.3861%" y="453" width="0.1320%" height="15" fill="rgb(222,72,44)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (8 samples, 0.13%)</title><rect x="21.3861%" y="437" width="0.1320%" height="15" fill="rgb(232,159,9)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.13%)</title><rect x="21.3861%" y="421" width="0.1320%" height="15" fill="rgb(210,39,32)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.13%)</title><rect x="21.3861%" y="405" width="0.1320%" height="15" fill="rgb(216,194,45)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.13%)</title><rect x="21.3861%" y="389" width="0.1320%" height="15" fill="rgb(218,18,35)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8 samples, 0.13%)</title><rect x="21.3861%" y="373" width="0.1320%" height="15" fill="rgb(207,83,51)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="383.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (8 samples, 0.13%)</title><rect x="21.3861%" y="357" width="0.1320%" height="15" fill="rgb(225,63,43)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.13%)</title><rect x="21.3861%" y="341" width="0.1320%" height="15" fill="rgb(207,57,36)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.3861%" y="325" width="0.1320%" height="15" fill="rgb(216,99,33)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.3861%" y="309" width="0.1320%" height="15" fill="rgb(225,42,16)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="21.3861%" y="293" width="0.1320%" height="15" fill="rgb(220,201,45)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.13%)</title><rect x="21.3861%" y="277" width="0.1320%" height="15" fill="rgb(225,33,4)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.13%)</title><rect x="21.3861%" y="261" width="0.1320%" height="15" fill="rgb(224,33,50)" fg:x="1296" fg:w="8"/><text x="21.5033%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="21.5017%" y="245" width="0.0165%" height="15" fill="rgb(246,198,51)" fg:x="1303" fg:w="1"/><text x="21.6188%" y="255.50"></text></g><g><title>fringe_vs_astar::context::Context::new (1,104 samples, 18.22%)</title><rect x="3.3168%" y="565" width="18.2178%" height="15" fill="rgb(205,22,4)" fg:x="201" fg:w="1104"/><text x="3.4340%" y="575.50">fringe_vs_astar::context::Context::new</text></g><g><title>fringe_vs_astar::structures::map::map_builder (19 samples, 0.31%)</title><rect x="21.2211%" y="549" width="0.3135%" height="15" fill="rgb(206,3,8)" fg:x="1286" fg:w="19"/><text x="21.3383%" y="559.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map (9 samples, 0.15%)</title><rect x="21.3861%" y="533" width="0.1485%" height="15" fill="rgb(251,23,15)" fg:x="1296" fg:w="9"/><text x="21.5033%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.15%)</title><rect x="21.3861%" y="517" width="0.1485%" height="15" fill="rgb(252,88,28)" fg:x="1296" fg:w="9"/><text x="21.5033%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.15%)</title><rect x="21.3861%" y="501" width="0.1485%" height="15" fill="rgb(212,127,14)" fg:x="1296" fg:w="9"/><text x="21.5033%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="21.5182%" y="485" width="0.0165%" height="15" fill="rgb(247,145,37)" fg:x="1304" fg:w="1"/><text x="21.6353%" y="495.50"></text></g><g><title>__GI___libc_free (12 samples, 0.20%)</title><rect x="21.5347%" y="389" width="0.1980%" height="15" fill="rgb(209,117,53)" fg:x="1305" fg:w="12"/><text x="21.6518%" y="399.50"></text></g><g><title>_int_free (12 samples, 0.20%)</title><rect x="21.5347%" y="373" width="0.1980%" height="15" fill="rgb(212,90,42)" fg:x="1305" fg:w="12"/><text x="21.6518%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.21%)</title><rect x="21.5347%" y="501" width="0.2145%" height="15" fill="rgb(218,164,37)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f32)&gt;]&gt; (13 samples, 0.21%)</title><rect x="21.5347%" y="485" width="0.2145%" height="15" fill="rgb(246,65,34)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt; (13 samples, 0.21%)</title><rect x="21.5347%" y="469" width="0.2145%" height="15" fill="rgb(231,100,33)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f32)&gt;&gt; (13 samples, 0.21%)</title><rect x="21.5347%" y="453" width="0.2145%" height="15" fill="rgb(228,126,14)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.21%)</title><rect x="21.5347%" y="437" width="0.2145%" height="15" fill="rgb(215,173,21)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.21%)</title><rect x="21.5347%" y="421" width="0.2145%" height="15" fill="rgb(210,6,40)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.21%)</title><rect x="21.5347%" y="405" width="0.2145%" height="15" fill="rgb(212,48,18)" fg:x="1305" fg:w="13"/><text x="21.6518%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (1 samples, 0.02%)</title><rect x="21.7327%" y="389" width="0.0165%" height="15" fill="rgb(230,214,11)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (1 samples, 0.02%)</title><rect x="21.7327%" y="373" width="0.0165%" height="15" fill="rgb(254,105,39)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="21.7327%" y="357" width="0.0165%" height="15" fill="rgb(245,158,5)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="21.7327%" y="341" width="0.0165%" height="15" fill="rgb(249,208,11)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f32)&gt;]&gt; (1 samples, 0.02%)</title><rect x="21.7327%" y="325" width="0.0165%" height="15" fill="rgb(210,39,28)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt; (1 samples, 0.02%)</title><rect x="21.7327%" y="309" width="0.0165%" height="15" fill="rgb(211,56,53)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f32)&gt;&gt; (1 samples, 0.02%)</title><rect x="21.7327%" y="293" width="0.0165%" height="15" fill="rgb(226,201,30)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="21.7327%" y="277" width="0.0165%" height="15" fill="rgb(239,101,34)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="21.7327%" y="261" width="0.0165%" height="15" fill="rgb(226,209,5)" fg:x="1317" fg:w="1"/><text x="21.8499%" y="271.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="21.7492%" y="277" width="0.0165%" height="15" fill="rgb(250,105,47)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="287.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="21.7492%" y="261" width="0.0165%" height="15" fill="rgb(230,72,3)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="271.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="21.7492%" y="245" width="0.0165%" height="15" fill="rgb(232,218,39)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="255.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="21.7492%" y="229" width="0.0165%" height="15" fill="rgb(248,166,6)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="239.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="21.7492%" y="213" width="0.0165%" height="15" fill="rgb(247,89,20)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="223.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="21.7492%" y="197" width="0.0165%" height="15" fill="rgb(248,130,54)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="207.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="21.7492%" y="181" width="0.0165%" height="15" fill="rgb(234,196,4)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="191.50"></text></g><g><title>__free_one_page (1 samples, 0.02%)</title><rect x="21.7492%" y="165" width="0.0165%" height="15" fill="rgb(250,143,31)" fg:x="1318" fg:w="1"/><text x="21.8664%" y="175.50"></text></g><g><title>_compound_head (1 samples, 0.02%)</title><rect x="21.7657%" y="213" width="0.0165%" height="15" fill="rgb(211,110,34)" fg:x="1319" fg:w="1"/><text x="21.8829%" y="223.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="21.7822%" y="213" width="0.0165%" height="15" fill="rgb(215,124,48)" fg:x="1320" fg:w="1"/><text x="21.8994%" y="223.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="21.7987%" y="197" width="0.0165%" height="15" fill="rgb(216,46,13)" fg:x="1321" fg:w="1"/><text x="21.9159%" y="207.50"></text></g><g><title>free_unref_page_list (2 samples, 0.03%)</title><rect x="21.8152%" y="133" width="0.0330%" height="15" fill="rgb(205,184,25)" fg:x="1322" fg:w="2"/><text x="21.9324%" y="143.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.03%)</title><rect x="21.8152%" y="117" width="0.0330%" height="15" fill="rgb(228,1,10)" fg:x="1322" fg:w="2"/><text x="21.9324%" y="127.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.03%)</title><rect x="21.8152%" y="101" width="0.0330%" height="15" fill="rgb(213,116,27)" fg:x="1322" fg:w="2"/><text x="21.9324%" y="111.50"></text></g><g><title>__free_one_page (1 samples, 0.02%)</title><rect x="21.8317%" y="85" width="0.0165%" height="15" fill="rgb(241,95,50)" fg:x="1323" fg:w="1"/><text x="21.9489%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (20 samples, 0.33%)</title><rect x="21.5347%" y="533" width="0.3300%" height="15" fill="rgb(238,48,32)" fg:x="1305" fg:w="20"/><text x="21.6518%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt;&gt; (20 samples, 0.33%)</title><rect x="21.5347%" y="517" width="0.3300%" height="15" fill="rgb(235,113,49)" fg:x="1305" fg:w="20"/><text x="21.6518%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;(usize,f32)&gt;&gt;&gt; (7 samples, 0.12%)</title><rect x="21.7492%" y="501" width="0.1155%" height="15" fill="rgb(205,127,43)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.12%)</title><rect x="21.7492%" y="485" width="0.1155%" height="15" fill="rgb(250,162,2)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.12%)</title><rect x="21.7492%" y="469" width="0.1155%" height="15" fill="rgb(220,13,41)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.12%)</title><rect x="21.7492%" y="453" width="0.1155%" height="15" fill="rgb(249,221,25)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="463.50"></text></g><g><title>__GI___libc_free (7 samples, 0.12%)</title><rect x="21.7492%" y="437" width="0.1155%" height="15" fill="rgb(215,208,19)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="447.50"></text></g><g><title>__GI___munmap (7 samples, 0.12%)</title><rect x="21.7492%" y="421" width="0.1155%" height="15" fill="rgb(236,175,2)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="21.7492%" y="405" width="0.1155%" height="15" fill="rgb(241,52,2)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="415.50"></text></g><g><title>do_syscall_64 (7 samples, 0.12%)</title><rect x="21.7492%" y="389" width="0.1155%" height="15" fill="rgb(248,140,14)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="399.50"></text></g><g><title>x64_sys_call (7 samples, 0.12%)</title><rect x="21.7492%" y="373" width="0.1155%" height="15" fill="rgb(253,22,42)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="383.50"></text></g><g><title>__x64_sys_munmap (7 samples, 0.12%)</title><rect x="21.7492%" y="357" width="0.1155%" height="15" fill="rgb(234,61,47)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="367.50"></text></g><g><title>__vm_munmap (7 samples, 0.12%)</title><rect x="21.7492%" y="341" width="0.1155%" height="15" fill="rgb(208,226,15)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="351.50"></text></g><g><title>do_vmi_munmap (7 samples, 0.12%)</title><rect x="21.7492%" y="325" width="0.1155%" height="15" fill="rgb(217,221,4)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="335.50"></text></g><g><title>do_vmi_align_munmap (7 samples, 0.12%)</title><rect x="21.7492%" y="309" width="0.1155%" height="15" fill="rgb(212,174,34)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="319.50"></text></g><g><title>unmap_region (7 samples, 0.12%)</title><rect x="21.7492%" y="293" width="0.1155%" height="15" fill="rgb(253,83,4)" fg:x="1318" fg:w="7"/><text x="21.8664%" y="303.50"></text></g><g><title>unmap_vmas (6 samples, 0.10%)</title><rect x="21.7657%" y="277" width="0.0990%" height="15" fill="rgb(250,195,49)" fg:x="1319" fg:w="6"/><text x="21.8829%" y="287.50"></text></g><g><title>unmap_single_vma (6 samples, 0.10%)</title><rect x="21.7657%" y="261" width="0.0990%" height="15" fill="rgb(241,192,25)" fg:x="1319" fg:w="6"/><text x="21.8829%" y="271.50"></text></g><g><title>unmap_page_range (6 samples, 0.10%)</title><rect x="21.7657%" y="245" width="0.0990%" height="15" fill="rgb(208,124,10)" fg:x="1319" fg:w="6"/><text x="21.8829%" y="255.50"></text></g><g><title>zap_pmd_range.isra.0 (6 samples, 0.10%)</title><rect x="21.7657%" y="229" width="0.0990%" height="15" fill="rgb(222,33,0)" fg:x="1319" fg:w="6"/><text x="21.8829%" y="239.50"></text></g><g><title>zap_pte_range (4 samples, 0.07%)</title><rect x="21.7987%" y="213" width="0.0660%" height="15" fill="rgb(234,209,28)" fg:x="1321" fg:w="4"/><text x="21.9159%" y="223.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.05%)</title><rect x="21.8152%" y="197" width="0.0495%" height="15" fill="rgb(224,11,23)" fg:x="1322" fg:w="3"/><text x="21.9324%" y="207.50"></text></g><g><title>tlb_batch_pages_flush (3 samples, 0.05%)</title><rect x="21.8152%" y="181" width="0.0495%" height="15" fill="rgb(232,99,1)" fg:x="1322" fg:w="3"/><text x="21.9324%" y="191.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.05%)</title><rect x="21.8152%" y="165" width="0.0495%" height="15" fill="rgb(237,95,45)" fg:x="1322" fg:w="3"/><text x="21.9324%" y="175.50"></text></g><g><title>release_pages (3 samples, 0.05%)</title><rect x="21.8152%" y="149" width="0.0495%" height="15" fill="rgb(208,109,11)" fg:x="1322" fg:w="3"/><text x="21.9324%" y="159.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.02%)</title><rect x="21.8482%" y="133" width="0.0165%" height="15" fill="rgb(216,190,48)" fg:x="1324" fg:w="1"/><text x="21.9654%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (21 samples, 0.35%)</title><rect x="21.5347%" y="549" width="0.3465%" height="15" fill="rgb(251,171,36)" fg:x="1305" fg:w="21"/><text x="21.6518%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::map::ArrayMap&gt; (1 samples, 0.02%)</title><rect x="21.8647%" y="533" width="0.0165%" height="15" fill="rgb(230,62,22)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (1 samples, 0.02%)</title><rect x="21.8647%" y="517" width="0.0165%" height="15" fill="rgb(225,114,35)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (1 samples, 0.02%)</title><rect x="21.8647%" y="501" width="0.0165%" height="15" fill="rgb(215,118,42)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="21.8647%" y="485" width="0.0165%" height="15" fill="rgb(243,119,21)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="21.8647%" y="469" width="0.0165%" height="15" fill="rgb(252,177,53)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="21.8647%" y="453" width="0.0165%" height="15" fill="rgb(237,209,29)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="463.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="21.8647%" y="437" width="0.0165%" height="15" fill="rgb(212,65,23)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="447.50"></text></g><g><title>__GI___munmap (1 samples, 0.02%)</title><rect x="21.8647%" y="421" width="0.0165%" height="15" fill="rgb(230,222,46)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="21.8647%" y="405" width="0.0165%" height="15" fill="rgb(215,135,32)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="415.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="21.8647%" y="389" width="0.0165%" height="15" fill="rgb(246,101,22)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="399.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="21.8647%" y="373" width="0.0165%" height="15" fill="rgb(206,107,13)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="383.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="21.8647%" y="357" width="0.0165%" height="15" fill="rgb(250,100,44)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="367.50"></text></g><g><title>__vm_munmap (1 samples, 0.02%)</title><rect x="21.8647%" y="341" width="0.0165%" height="15" fill="rgb(231,147,38)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="351.50"></text></g><g><title>do_vmi_munmap (1 samples, 0.02%)</title><rect x="21.8647%" y="325" width="0.0165%" height="15" fill="rgb(229,8,40)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="335.50"></text></g><g><title>do_vmi_align_munmap (1 samples, 0.02%)</title><rect x="21.8647%" y="309" width="0.0165%" height="15" fill="rgb(221,135,30)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="319.50"></text></g><g><title>unmap_region (1 samples, 0.02%)</title><rect x="21.8647%" y="293" width="0.0165%" height="15" fill="rgb(249,193,18)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="303.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="21.8647%" y="277" width="0.0165%" height="15" fill="rgb(209,133,39)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="287.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="21.8647%" y="261" width="0.0165%" height="15" fill="rgb(232,100,14)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="271.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="21.8647%" y="245" width="0.0165%" height="15" fill="rgb(224,185,1)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="255.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="21.8647%" y="229" width="0.0165%" height="15" fill="rgb(223,139,8)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="239.50"></text></g><g><title>_compound_head (1 samples, 0.02%)</title><rect x="21.8647%" y="213" width="0.0165%" height="15" fill="rgb(232,213,38)" fg:x="1325" fg:w="1"/><text x="21.9819%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.07%)</title><rect x="21.8812%" y="421" width="0.0660%" height="15" fill="rgb(207,94,22)" fg:x="1326" fg:w="4"/><text x="21.9984%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.07%)</title><rect x="21.8812%" y="405" width="0.0660%" height="15" fill="rgb(219,183,54)" fg:x="1326" fg:w="4"/><text x="21.9984%" y="415.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="22.6073%" y="277" width="0.0165%" height="15" fill="rgb(216,185,54)" fg:x="1370" fg:w="1"/><text x="22.7244%" y="287.50"></text></g><g><title>__folio_throttle_swaprate (4 samples, 0.07%)</title><rect x="22.6073%" y="293" width="0.0660%" height="15" fill="rgb(254,217,39)" fg:x="1370" fg:w="4"/><text x="22.7244%" y="303.50"></text></g><g><title>blk_cgroup_congested (3 samples, 0.05%)</title><rect x="22.6238%" y="277" width="0.0495%" height="15" fill="rgb(240,178,23)" fg:x="1371" fg:w="3"/><text x="22.7409%" y="287.50"></text></g><g><title>__rcu_read_unlock (16 samples, 0.26%)</title><rect x="22.6898%" y="277" width="0.2640%" height="15" fill="rgb(218,11,47)" fg:x="1375" fg:w="16"/><text x="22.8070%" y="287.50"></text></g><g><title>__count_memcg_events (2 samples, 0.03%)</title><rect x="23.0693%" y="261" width="0.0330%" height="15" fill="rgb(218,51,51)" fg:x="1398" fg:w="2"/><text x="23.1865%" y="271.50"></text></g><g><title>charge_memcg (15 samples, 0.25%)</title><rect x="22.9538%" y="277" width="0.2475%" height="15" fill="rgb(238,126,27)" fg:x="1391" fg:w="15"/><text x="23.0710%" y="287.50"></text></g><g><title>try_charge_memcg (6 samples, 0.10%)</title><rect x="23.1023%" y="261" width="0.0990%" height="15" fill="rgb(249,202,22)" fg:x="1400" fg:w="6"/><text x="23.2195%" y="271.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="23.1848%" y="245" width="0.0165%" height="15" fill="rgb(254,195,49)" fg:x="1405" fg:w="1"/><text x="23.3020%" y="255.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.02%)</title><rect x="23.1848%" y="229" width="0.0165%" height="15" fill="rgb(208,123,14)" fg:x="1405" fg:w="1"/><text x="23.3020%" y="239.50"></text></g><g><title>get_mem_cgroup_from_mm (3 samples, 0.05%)</title><rect x="23.2013%" y="277" width="0.0495%" height="15" fill="rgb(224,200,8)" fg:x="1406" fg:w="3"/><text x="23.3185%" y="287.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="23.2343%" y="261" width="0.0165%" height="15" fill="rgb(217,61,36)" fg:x="1408" fg:w="1"/><text x="23.3515%" y="271.50"></text></g><g><title>__mem_cgroup_charge (37 samples, 0.61%)</title><rect x="22.6733%" y="293" width="0.6106%" height="15" fill="rgb(206,35,45)" fg:x="1374" fg:w="37"/><text x="22.7905%" y="303.50"></text></g><g><title>memcg_check_events (2 samples, 0.03%)</title><rect x="23.2508%" y="277" width="0.0330%" height="15" fill="rgb(217,65,33)" fg:x="1409" fg:w="2"/><text x="23.3680%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="23.4323%" y="213" width="0.0165%" height="15" fill="rgb(222,158,48)" fg:x="1420" fg:w="1"/><text x="23.5495%" y="223.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="23.4488%" y="213" width="0.0165%" height="15" fill="rgb(254,2,54)" fg:x="1421" fg:w="1"/><text x="23.5660%" y="223.50"></text></g><g><title>lru_add_fn (8 samples, 0.13%)</title><rect x="23.3498%" y="245" width="0.1320%" height="15" fill="rgb(250,143,38)" fg:x="1415" fg:w="8"/><text x="23.4670%" y="255.50"></text></g><g><title>lru_gen_add_folio (8 samples, 0.13%)</title><rect x="23.3498%" y="229" width="0.1320%" height="15" fill="rgb(248,25,0)" fg:x="1415" fg:w="8"/><text x="23.4670%" y="239.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="23.4653%" y="213" width="0.0165%" height="15" fill="rgb(206,152,27)" fg:x="1422" fg:w="1"/><text x="23.5825%" y="223.50"></text></g><g><title>folio_batch_move_lru (11 samples, 0.18%)</title><rect x="23.3333%" y="261" width="0.1815%" height="15" fill="rgb(240,77,30)" fg:x="1414" fg:w="11"/><text x="23.4505%" y="271.50"></text></g><g><title>release_pages (2 samples, 0.03%)</title><rect x="23.4818%" y="245" width="0.0330%" height="15" fill="rgb(231,5,3)" fg:x="1423" fg:w="2"/><text x="23.5990%" y="255.50"></text></g><g><title>folio_add_lru_vma (15 samples, 0.25%)</title><rect x="23.2838%" y="293" width="0.2475%" height="15" fill="rgb(207,226,32)" fg:x="1411" fg:w="15"/><text x="23.4010%" y="303.50"></text></g><g><title>folio_add_lru (15 samples, 0.25%)</title><rect x="23.2838%" y="277" width="0.2475%" height="15" fill="rgb(222,207,47)" fg:x="1411" fg:w="15"/><text x="23.4010%" y="287.50"></text></g><g><title>lru_add_fn (1 samples, 0.02%)</title><rect x="23.5149%" y="261" width="0.0165%" height="15" fill="rgb(229,115,45)" fg:x="1425" fg:w="1"/><text x="23.6320%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="23.5314%" y="277" width="0.0165%" height="15" fill="rgb(224,191,6)" fg:x="1426" fg:w="1"/><text x="23.6485%" y="287.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="23.5314%" y="261" width="0.0165%" height="15" fill="rgb(230,227,24)" fg:x="1426" fg:w="1"/><text x="23.6485%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="23.5314%" y="245" width="0.0165%" height="15" fill="rgb(228,80,19)" fg:x="1426" fg:w="1"/><text x="23.6485%" y="255.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="23.5479%" y="277" width="0.0165%" height="15" fill="rgb(247,229,0)" fg:x="1427" fg:w="1"/><text x="23.6650%" y="287.50"></text></g><g><title>folio_add_new_anon_rmap (3 samples, 0.05%)</title><rect x="23.5314%" y="293" width="0.0495%" height="15" fill="rgb(237,194,15)" fg:x="1426" fg:w="3"/><text x="23.6485%" y="303.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="23.5644%" y="277" width="0.0165%" height="15" fill="rgb(219,203,20)" fg:x="1428" fg:w="1"/><text x="23.6815%" y="287.50"></text></g><g><title>inc_mm_counter (2 samples, 0.03%)</title><rect x="23.5809%" y="293" width="0.0330%" height="15" fill="rgb(234,128,8)" fg:x="1429" fg:w="2"/><text x="23.6980%" y="303.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="23.5974%" y="277" width="0.0165%" height="15" fill="rgb(248,202,8)" fg:x="1430" fg:w="1"/><text x="23.7145%" y="287.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.02%)</title><rect x="23.6469%" y="245" width="0.0165%" height="15" fill="rgb(206,104,37)" fg:x="1433" fg:w="1"/><text x="23.7641%" y="255.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="23.7789%" y="229" width="0.0165%" height="15" fill="rgb(223,8,27)" fg:x="1441" fg:w="1"/><text x="23.8961%" y="239.50"></text></g><g><title>clear_page_erms (2 samples, 0.03%)</title><rect x="23.7954%" y="229" width="0.0330%" height="15" fill="rgb(216,217,28)" fg:x="1442" fg:w="2"/><text x="23.9126%" y="239.50"></text></g><g><title>post_alloc_hook (2 samples, 0.03%)</title><rect x="23.8284%" y="229" width="0.0330%" height="15" fill="rgb(249,199,1)" fg:x="1444" fg:w="2"/><text x="23.9456%" y="239.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.08%)</title><rect x="23.8779%" y="213" width="0.0825%" height="15" fill="rgb(240,85,17)" fg:x="1447" fg:w="5"/><text x="23.9951%" y="223.50"></text></g><g><title>rmqueue_bulk (4 samples, 0.07%)</title><rect x="23.8944%" y="197" width="0.0660%" height="15" fill="rgb(206,108,45)" fg:x="1448" fg:w="4"/><text x="24.0116%" y="207.50"></text></g><g><title>__folio_alloc (20 samples, 0.33%)</title><rect x="23.6469%" y="277" width="0.3300%" height="15" fill="rgb(245,210,41)" fg:x="1433" fg:w="20"/><text x="23.7641%" y="287.50"></text></g><g><title>__alloc_pages (20 samples, 0.33%)</title><rect x="23.6469%" y="261" width="0.3300%" height="15" fill="rgb(206,13,37)" fg:x="1433" fg:w="20"/><text x="23.7641%" y="271.50"></text></g><g><title>get_page_from_freelist (19 samples, 0.31%)</title><rect x="23.6634%" y="245" width="0.3135%" height="15" fill="rgb(250,61,18)" fg:x="1434" fg:w="19"/><text x="23.7806%" y="255.50"></text></g><g><title>rmqueue (7 samples, 0.12%)</title><rect x="23.8614%" y="229" width="0.1155%" height="15" fill="rgb(235,172,48)" fg:x="1446" fg:w="7"/><text x="23.9786%" y="239.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="23.9604%" y="213" width="0.0165%" height="15" fill="rgb(249,201,17)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="223.50"></text></g><g><title>common_interrupt (1 samples, 0.02%)</title><rect x="23.9604%" y="197" width="0.0165%" height="15" fill="rgb(219,208,6)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="207.50"></text></g><g><title>__common_interrupt (1 samples, 0.02%)</title><rect x="23.9604%" y="181" width="0.0165%" height="15" fill="rgb(248,31,23)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="191.50"></text></g><g><title>handle_edge_irq (1 samples, 0.02%)</title><rect x="23.9604%" y="165" width="0.0165%" height="15" fill="rgb(245,15,42)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="175.50"></text></g><g><title>handle_irq_event (1 samples, 0.02%)</title><rect x="23.9604%" y="149" width="0.0165%" height="15" fill="rgb(222,217,39)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="23.9604%" y="133" width="0.0165%" height="15" fill="rgb(210,219,27)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="143.50"></text></g><g><title>gen11_irq_handler (1 samples, 0.02%)</title><rect x="23.9604%" y="117" width="0.0165%" height="15" fill="rgb(252,166,36)" fg:x="1452" fg:w="1"/><text x="24.0776%" y="127.50"></text></g><g><title>do_anonymous_page (85 samples, 1.40%)</title><rect x="22.6073%" y="309" width="1.4026%" height="15" fill="rgb(245,132,34)" fg:x="1370" fg:w="85"/><text x="22.7244%" y="319.50">do_..</text></g><g><title>vma_alloc_folio (24 samples, 0.40%)</title><rect x="23.6139%" y="293" width="0.3960%" height="15" fill="rgb(236,54,3)" fg:x="1431" fg:w="24"/><text x="23.7310%" y="303.50"></text></g><g><title>_find_first_bit (2 samples, 0.03%)</title><rect x="23.9769%" y="277" width="0.0330%" height="15" fill="rgb(241,173,43)" fg:x="1453" fg:w="2"/><text x="24.0941%" y="287.50"></text></g><g><title>__handle_mm_fault (89 samples, 1.47%)</title><rect x="22.5578%" y="341" width="1.4686%" height="15" fill="rgb(215,190,9)" fg:x="1367" fg:w="89"/><text x="22.6749%" y="351.50">__h..</text></g><g><title>handle_pte_fault (87 samples, 1.44%)</title><rect x="22.5908%" y="325" width="1.4356%" height="15" fill="rgb(242,101,16)" fg:x="1369" fg:w="87"/><text x="22.7079%" y="335.50">han..</text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="24.0099%" y="309" width="0.0165%" height="15" fill="rgb(223,190,21)" fg:x="1455" fg:w="1"/><text x="24.1271%" y="319.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.02%)</title><rect x="24.0264%" y="341" width="0.0165%" height="15" fill="rgb(215,228,25)" fg:x="1456" fg:w="1"/><text x="24.1436%" y="351.50"></text></g><g><title>pmd_val (1 samples, 0.02%)</title><rect x="24.0429%" y="341" width="0.0165%" height="15" fill="rgb(225,36,22)" fg:x="1457" fg:w="1"/><text x="24.1601%" y="351.50"></text></g><g><title>handle_mm_fault (96 samples, 1.58%)</title><rect x="22.4917%" y="357" width="1.5842%" height="15" fill="rgb(251,106,46)" fg:x="1363" fg:w="96"/><text x="22.6089%" y="367.50">han..</text></g><g><title>pud_val (1 samples, 0.02%)</title><rect x="24.0594%" y="341" width="0.0165%" height="15" fill="rgb(208,90,1)" fg:x="1458" fg:w="1"/><text x="24.1766%" y="351.50"></text></g><g><title>asm_exc_page_fault (104 samples, 1.72%)</title><rect x="22.4257%" y="405" width="1.7162%" height="15" fill="rgb(243,10,4)" fg:x="1359" fg:w="104"/><text x="22.5429%" y="415.50">asm_..</text></g><g><title>exc_page_fault (104 samples, 1.72%)</title><rect x="22.4257%" y="389" width="1.7162%" height="15" fill="rgb(212,137,27)" fg:x="1359" fg:w="104"/><text x="22.5429%" y="399.50">exc_..</text></g><g><title>do_user_addr_fault (104 samples, 1.72%)</title><rect x="22.4257%" y="373" width="1.7162%" height="15" fill="rgb(231,220,49)" fg:x="1359" fg:w="104"/><text x="22.5429%" y="383.50">do_u..</text></g><g><title>lock_vma_under_rcu (4 samples, 0.07%)</title><rect x="24.0759%" y="357" width="0.0660%" height="15" fill="rgb(237,96,20)" fg:x="1459" fg:w="4"/><text x="24.1931%" y="367.50"></text></g><g><title>mas_walk (3 samples, 0.05%)</title><rect x="24.0924%" y="341" width="0.0495%" height="15" fill="rgb(239,229,30)" fg:x="1460" fg:w="3"/><text x="24.2096%" y="351.50"></text></g><g><title>mtree_range_walk (3 samples, 0.05%)</title><rect x="24.0924%" y="325" width="0.0495%" height="15" fill="rgb(219,65,33)" fg:x="1460" fg:w="3"/><text x="24.2096%" y="335.50"></text></g><g><title>error_entry (3 samples, 0.05%)</title><rect x="24.1419%" y="405" width="0.0495%" height="15" fill="rgb(243,134,7)" fg:x="1463" fg:w="3"/><text x="24.2591%" y="415.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (156 samples, 2.57%)</title><rect x="21.8812%" y="501" width="2.5743%" height="15" fill="rgb(216,177,54)" fg:x="1326" fg:w="156"/><text x="21.9984%" y="511.50">fringe_..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::new (156 samples, 2.57%)</title><rect x="21.8812%" y="485" width="2.5743%" height="15" fill="rgb(211,160,20)" fg:x="1326" fg:w="156"/><text x="21.9984%" y="495.50">fringe_..</text></g><g><title>alloc::vec::from_elem (156 samples, 2.57%)</title><rect x="21.8812%" y="469" width="2.5743%" height="15" fill="rgb(239,85,39)" fg:x="1326" fg:w="156"/><text x="21.9984%" y="479.50">alloc::..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (156 samples, 2.57%)</title><rect x="21.8812%" y="453" width="2.5743%" height="15" fill="rgb(232,125,22)" fg:x="1326" fg:w="156"/><text x="21.9984%" y="463.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (156 samples, 2.57%)</title><rect x="21.8812%" y="437" width="2.5743%" height="15" fill="rgb(244,57,34)" fg:x="1326" fg:w="156"/><text x="21.9984%" y="447.50">alloc::..</text></g><g><title>core::ptr::write (152 samples, 2.51%)</title><rect x="21.9472%" y="421" width="2.5083%" height="15" fill="rgb(214,203,32)" fg:x="1330" fg:w="152"/><text x="22.0644%" y="431.50">core::p..</text></g><g><title>sync_regs (16 samples, 0.26%)</title><rect x="24.1914%" y="405" width="0.2640%" height="15" fill="rgb(207,58,43)" fg:x="1466" fg:w="16"/><text x="24.3086%" y="415.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="29.5545%" y="53" width="0.0165%" height="15" fill="rgb(215,193,15)" fg:x="1791" fg:w="1"/><text x="29.6716%" y="63.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.02%)</title><rect x="29.5545%" y="37" width="0.0165%" height="15" fill="rgb(232,15,44)" fg:x="1791" fg:w="1"/><text x="29.6716%" y="47.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::construct_path (3 samples, 0.05%)</title><rect x="29.5380%" y="485" width="0.0495%" height="15" fill="rgb(212,3,48)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringe::FringeSearch&gt; (3 samples, 0.05%)</title><rect x="29.5380%" y="469" width="0.0495%" height="15" fill="rgb(218,128,7)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::algorithms::fringe::cache::Cache&gt; (3 samples, 0.05%)</title><rect x="29.5380%" y="453" width="0.0495%" height="15" fill="rgb(226,216,39)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fringe_vs_astar::algorithms::fringe::cache::CacheValue&gt;&gt; (3 samples, 0.05%)</title><rect x="29.5380%" y="437" width="0.0495%" height="15" fill="rgb(243,47,51)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fringe_vs_astar::algorithms::fringe::cache::CacheValue&gt;&gt; (3 samples, 0.05%)</title><rect x="29.5380%" y="421" width="0.0495%" height="15" fill="rgb(241,183,40)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="29.5380%" y="405" width="0.0495%" height="15" fill="rgb(231,217,32)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="29.5380%" y="389" width="0.0495%" height="15" fill="rgb(229,61,38)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="29.5380%" y="373" width="0.0495%" height="15" fill="rgb(225,210,5)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="383.50"></text></g><g><title>__GI___libc_free (3 samples, 0.05%)</title><rect x="29.5380%" y="357" width="0.0495%" height="15" fill="rgb(231,79,45)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="367.50"></text></g><g><title>__GI___munmap (3 samples, 0.05%)</title><rect x="29.5380%" y="341" width="0.0495%" height="15" fill="rgb(224,100,7)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="29.5380%" y="325" width="0.0495%" height="15" fill="rgb(241,198,18)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="335.50"></text></g><g><title>do_syscall_64 (3 samples, 0.05%)</title><rect x="29.5380%" y="309" width="0.0495%" height="15" fill="rgb(252,97,53)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="319.50"></text></g><g><title>x64_sys_call (3 samples, 0.05%)</title><rect x="29.5380%" y="293" width="0.0495%" height="15" fill="rgb(220,88,7)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="303.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.05%)</title><rect x="29.5380%" y="277" width="0.0495%" height="15" fill="rgb(213,176,14)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="287.50"></text></g><g><title>__vm_munmap (3 samples, 0.05%)</title><rect x="29.5380%" y="261" width="0.0495%" height="15" fill="rgb(246,73,7)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="271.50"></text></g><g><title>do_vmi_munmap (3 samples, 0.05%)</title><rect x="29.5380%" y="245" width="0.0495%" height="15" fill="rgb(245,64,36)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="255.50"></text></g><g><title>do_vmi_align_munmap (3 samples, 0.05%)</title><rect x="29.5380%" y="229" width="0.0495%" height="15" fill="rgb(245,80,10)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="239.50"></text></g><g><title>unmap_region (3 samples, 0.05%)</title><rect x="29.5380%" y="213" width="0.0495%" height="15" fill="rgb(232,107,50)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="223.50"></text></g><g><title>unmap_vmas (3 samples, 0.05%)</title><rect x="29.5380%" y="197" width="0.0495%" height="15" fill="rgb(253,3,0)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="207.50"></text></g><g><title>unmap_single_vma (3 samples, 0.05%)</title><rect x="29.5380%" y="181" width="0.0495%" height="15" fill="rgb(212,99,53)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="191.50"></text></g><g><title>unmap_page_range (3 samples, 0.05%)</title><rect x="29.5380%" y="165" width="0.0495%" height="15" fill="rgb(249,111,54)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="175.50"></text></g><g><title>zap_pmd_range.isra.0 (3 samples, 0.05%)</title><rect x="29.5380%" y="149" width="0.0495%" height="15" fill="rgb(249,55,30)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="159.50"></text></g><g><title>zap_pte_range (3 samples, 0.05%)</title><rect x="29.5380%" y="133" width="0.0495%" height="15" fill="rgb(237,47,42)" fg:x="1790" fg:w="3"/><text x="29.6551%" y="143.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.03%)</title><rect x="29.5545%" y="117" width="0.0330%" height="15" fill="rgb(211,20,18)" fg:x="1791" fg:w="2"/><text x="29.6716%" y="127.50"></text></g><g><title>tlb_batch_pages_flush (2 samples, 0.03%)</title><rect x="29.5545%" y="101" width="0.0330%" height="15" fill="rgb(231,203,46)" fg:x="1791" fg:w="2"/><text x="29.6716%" y="111.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="29.5545%" y="85" width="0.0330%" height="15" fill="rgb(237,142,3)" fg:x="1791" fg:w="2"/><text x="29.6716%" y="95.50"></text></g><g><title>release_pages (2 samples, 0.03%)</title><rect x="29.5545%" y="69" width="0.0330%" height="15" fill="rgb(241,107,1)" fg:x="1791" fg:w="2"/><text x="29.6716%" y="79.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.02%)</title><rect x="29.5710%" y="53" width="0.0165%" height="15" fill="rgb(229,83,13)" fg:x="1792" fg:w="1"/><text x="29.6881%" y="63.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 1.20%)</title><rect x="29.5875%" y="373" width="1.2046%" height="15" fill="rgb(241,91,40)" fg:x="1793" fg:w="73"/><text x="29.7046%" y="383.50">&lt;c..</text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (58 samples, 0.96%)</title><rect x="29.8350%" y="357" width="0.9571%" height="15" fill="rgb(225,3,45)" fg:x="1808" fg:w="58"/><text x="29.9522%" y="367.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (58 samples, 0.96%)</title><rect x="29.8350%" y="341" width="0.9571%" height="15" fill="rgb(244,223,14)" fg:x="1808" fg:w="58"/><text x="29.9522%" y="351.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (58 samples, 0.96%)</title><rect x="29.8350%" y="325" width="0.9571%" height="15" fill="rgb(224,124,37)" fg:x="1808" fg:w="58"/><text x="29.9522%" y="335.50">a..</text></g><g><title>core::ptr::write (58 samples, 0.96%)</title><rect x="29.8350%" y="309" width="0.9571%" height="15" fill="rgb(251,171,30)" fg:x="1808" fg:w="58"/><text x="29.9522%" y="319.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (107 samples, 1.77%)</title><rect x="29.5875%" y="453" width="1.7657%" height="15" fill="rgb(236,46,54)" fg:x="1793" fg:w="107"/><text x="29.7046%" y="463.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (107 samples, 1.77%)</title><rect x="29.5875%" y="437" width="1.7657%" height="15" fill="rgb(245,213,5)" fg:x="1793" fg:w="107"/><text x="29.7046%" y="447.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (107 samples, 1.77%)</title><rect x="29.5875%" y="421" width="1.7657%" height="15" fill="rgb(230,144,27)" fg:x="1793" fg:w="107"/><text x="29.7046%" y="431.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (107 samples, 1.77%)</title><rect x="29.5875%" y="405" width="1.7657%" height="15" fill="rgb(220,86,6)" fg:x="1793" fg:w="107"/><text x="29.7046%" y="415.50">core..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (107 samples, 1.77%)</title><rect x="29.5875%" y="389" width="1.7657%" height="15" fill="rgb(240,20,13)" fg:x="1793" fg:w="107"/><text x="29.7046%" y="399.50">&lt;cor..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (34 samples, 0.56%)</title><rect x="30.7921%" y="373" width="0.5611%" height="15" fill="rgb(217,89,34)" fg:x="1866" fg:w="34"/><text x="30.9093%" y="383.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::prepare_next_iteration (108 samples, 1.78%)</title><rect x="29.5875%" y="485" width="1.7822%" height="15" fill="rgb(229,13,5)" fg:x="1793" fg:w="108"/><text x="29.7046%" y="495.50">frin..</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (108 samples, 1.78%)</title><rect x="29.5875%" y="469" width="1.7822%" height="15" fill="rgb(244,67,35)" fg:x="1793" fg:w="108"/><text x="29.7046%" y="479.50">frin..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="31.3531%" y="453" width="0.0165%" height="15" fill="rgb(221,40,2)" fg:x="1900" fg:w="1"/><text x="31.4703%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="31.3531%" y="437" width="0.0165%" height="15" fill="rgb(237,157,21)" fg:x="1900" fg:w="1"/><text x="31.4703%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="31.4356%" y="405" width="0.0165%" height="15" fill="rgb(222,94,11)" fg:x="1905" fg:w="1"/><text x="31.5528%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.02%)</title><rect x="31.4521%" y="389" width="0.0165%" height="15" fill="rgb(249,113,6)" fg:x="1906" fg:w="1"/><text x="31.5693%" y="399.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (1 samples, 0.02%)</title><rect x="31.4521%" y="373" width="0.0165%" height="15" fill="rgb(238,137,36)" fg:x="1906" fg:w="1"/><text x="31.5693%" y="383.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_now (1 samples, 0.02%)</title><rect x="31.4521%" y="357" width="0.0165%" height="15" fill="rgb(210,102,26)" fg:x="1906" fg:w="1"/><text x="31.5693%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="31.4521%" y="341" width="0.0165%" height="15" fill="rgb(218,30,30)" fg:x="1906" fg:w="1"/><text x="31.5693%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="31.4521%" y="325" width="0.0165%" height="15" fill="rgb(214,67,26)" fg:x="1906" fg:w="1"/><text x="31.5693%" y="335.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.02%)</title><rect x="31.4686%" y="373" width="0.0165%" height="15" fill="rgb(251,9,53)" fg:x="1907" fg:w="1"/><text x="31.5858%" y="383.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (6 samples, 0.10%)</title><rect x="34.3894%" y="357" width="0.0990%" height="15" fill="rgb(228,204,25)" fg:x="2084" fg:w="6"/><text x="34.5066%" y="367.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u32&gt;::try_from (6 samples, 0.10%)</title><rect x="34.3894%" y="341" width="0.0990%" height="15" fill="rgb(207,153,8)" fg:x="2084" fg:w="6"/><text x="34.5066%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.07%)</title><rect x="34.4884%" y="309" width="0.0660%" height="15" fill="rgb(242,9,16)" fg:x="2090" fg:w="4"/><text x="34.6056%" y="319.50"></text></g><g><title>&lt;fringe_vs_astar::algorithms::fringe::cache::Cache as core::ops::index::Index&lt;u32&gt;&gt;::index (5 samples, 0.08%)</title><rect x="34.4884%" y="357" width="0.0825%" height="15" fill="rgb(217,211,10)" fg:x="2090" fg:w="5"/><text x="34.6056%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.08%)</title><rect x="34.4884%" y="341" width="0.0825%" height="15" fill="rgb(219,228,52)" fg:x="2090" fg:w="5"/><text x="34.6056%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.08%)</title><rect x="34.4884%" y="325" width="0.0825%" height="15" fill="rgb(231,92,29)" fg:x="2090" fg:w="5"/><text x="34.6056%" y="335.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.02%)</title><rect x="34.5545%" y="309" width="0.0165%" height="15" fill="rgb(232,8,23)" fg:x="2094" fg:w="1"/><text x="34.6716%" y="319.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (2 samples, 0.03%)</title><rect x="34.5875%" y="309" width="0.0330%" height="15" fill="rgb(216,211,34)" fg:x="2096" fg:w="2"/><text x="34.7046%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (198 samples, 3.27%)</title><rect x="31.3861%" y="453" width="3.2673%" height="15" fill="rgb(236,151,0)" fg:x="1902" fg:w="198"/><text x="31.5033%" y="463.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (198 samples, 3.27%)</title><rect x="31.3861%" y="437" width="3.2673%" height="15" fill="rgb(209,168,3)" fg:x="1902" fg:w="198"/><text x="31.5033%" y="447.50">&lt;core::it..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (198 samples, 3.27%)</title><rect x="31.3861%" y="421" width="3.2673%" height="15" fill="rgb(208,129,28)" fg:x="1902" fg:w="198"/><text x="31.5033%" y="431.50">&lt;core::sl..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (194 samples, 3.20%)</title><rect x="31.4521%" y="405" width="3.2013%" height="15" fill="rgb(229,78,22)" fg:x="1906" fg:w="194"/><text x="31.5693%" y="415.50">core::ite..</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors::_{{closure}} (193 samples, 3.18%)</title><rect x="31.4686%" y="389" width="3.1848%" height="15" fill="rgb(228,187,13)" fg:x="1907" fg:w="193"/><text x="31.5858%" y="399.50">fringe_vs..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::check (192 samples, 3.17%)</title><rect x="31.4851%" y="373" width="3.1683%" height="15" fill="rgb(240,119,24)" fg:x="1908" fg:w="192"/><text x="31.6023%" y="383.50">fringe_vs..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::update (5 samples, 0.08%)</title><rect x="34.5710%" y="357" width="0.0825%" height="15" fill="rgb(209,194,42)" fg:x="2095" fg:w="5"/><text x="34.6881%" y="367.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::get_heuristic (4 samples, 0.07%)</title><rect x="34.5875%" y="341" width="0.0660%" height="15" fill="rgb(247,200,46)" fg:x="2096" fg:w="4"/><text x="34.7046%" y="351.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::Heuristic::get (4 samples, 0.07%)</title><rect x="34.5875%" y="325" width="0.0660%" height="15" fill="rgb(218,76,16)" fg:x="2096" fg:w="4"/><text x="34.7046%" y="335.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (2 samples, 0.03%)</title><rect x="34.6205%" y="309" width="0.0330%" height="15" fill="rgb(225,21,48)" fg:x="2098" fg:w="2"/><text x="34.7376%" y="319.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_neighbors (264 samples, 4.36%)</title><rect x="31.3861%" y="469" width="4.3564%" height="15" fill="rgb(239,223,50)" fg:x="1902" fg:w="264"/><text x="31.5033%" y="479.50">fringe_vs_ast..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::neighbors (66 samples, 1.09%)</title><rect x="34.6535%" y="453" width="1.0891%" height="15" fill="rgb(244,45,21)" fg:x="2100" fg:w="66"/><text x="34.7707%" y="463.50">f..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.02%)</title><rect x="35.7261%" y="437" width="0.0165%" height="15" fill="rgb(232,33,43)" fg:x="2165" fg:w="1"/><text x="35.8433%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="35.7261%" y="421" width="0.0165%" height="15" fill="rgb(209,8,3)" fg:x="2165" fg:w="1"/><text x="35.8433%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="35.7261%" y="405" width="0.0165%" height="15" fill="rgb(214,25,53)" fg:x="2165" fg:w="1"/><text x="35.8433%" y="415.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (7 samples, 0.12%)</title><rect x="35.7426%" y="469" width="0.1155%" height="15" fill="rgb(254,186,54)" fg:x="2166" fg:w="7"/><text x="35.8598%" y="479.50"></text></g><g><title>&lt;fringe_vs_astar::algorithms::fringe::cache::Cache as core::ops::index::Index&lt;u32&gt;&gt;::index (352 samples, 5.81%)</title><rect x="69.3729%" y="453" width="5.8086%" height="15" fill="rgb(208,174,49)" fg:x="4204" fg:w="352"/><text x="69.4901%" y="463.50">&lt;fringe_vs_astar::a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (351 samples, 5.79%)</title><rect x="69.3894%" y="437" width="5.7921%" height="15" fill="rgb(233,191,51)" fg:x="4205" fg:w="351"/><text x="69.5066%" y="447.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (351 samples, 5.79%)</title><rect x="69.3894%" y="421" width="5.7921%" height="15" fill="rgb(222,134,10)" fg:x="4205" fg:w="351"/><text x="69.5066%" y="431.50">core::slice::index..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (351 samples, 5.79%)</title><rect x="69.3894%" y="405" width="5.7921%" height="15" fill="rgb(230,226,20)" fg:x="4205" fg:w="351"/><text x="69.5066%" y="415.50">&lt;usize as core::sl..</text></g><g><title>acpi_ec_gpe_handler (1 samples, 0.02%)</title><rect x="75.1815%" y="293" width="0.0165%" height="15" fill="rgb(251,111,25)" fg:x="4556" fg:w="1"/><text x="75.2987%" y="303.50"></text></g><g><title>clear_gpe_and_advance_transaction.constprop.0 (1 samples, 0.02%)</title><rect x="75.1815%" y="277" width="0.0165%" height="15" fill="rgb(224,40,46)" fg:x="4556" fg:w="1"/><text x="75.2987%" y="287.50"></text></g><g><title>advance_transaction (1 samples, 0.02%)</title><rect x="75.1815%" y="261" width="0.0165%" height="15" fill="rgb(236,108,47)" fg:x="4556" fg:w="1"/><text x="75.2987%" y="271.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.05%)</title><rect x="75.1815%" y="453" width="0.0495%" height="15" fill="rgb(234,93,0)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="463.50"></text></g><g><title>common_interrupt (3 samples, 0.05%)</title><rect x="75.1815%" y="437" width="0.0495%" height="15" fill="rgb(224,213,32)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="447.50"></text></g><g><title>__common_interrupt (3 samples, 0.05%)</title><rect x="75.1815%" y="421" width="0.0495%" height="15" fill="rgb(251,11,48)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="431.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.05%)</title><rect x="75.1815%" y="405" width="0.0495%" height="15" fill="rgb(236,173,5)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="415.50"></text></g><g><title>handle_irq_event (3 samples, 0.05%)</title><rect x="75.1815%" y="389" width="0.0495%" height="15" fill="rgb(230,95,12)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="399.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.05%)</title><rect x="75.1815%" y="373" width="0.0495%" height="15" fill="rgb(232,209,1)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="383.50"></text></g><g><title>acpi_irq (3 samples, 0.05%)</title><rect x="75.1815%" y="357" width="0.0495%" height="15" fill="rgb(232,6,1)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="367.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (3 samples, 0.05%)</title><rect x="75.1815%" y="341" width="0.0495%" height="15" fill="rgb(210,224,50)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="351.50"></text></g><g><title>acpi_ev_gpe_detect (3 samples, 0.05%)</title><rect x="75.1815%" y="325" width="0.0495%" height="15" fill="rgb(228,127,35)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="335.50"></text></g><g><title>acpi_ev_detect_gpe (3 samples, 0.05%)</title><rect x="75.1815%" y="309" width="0.0495%" height="15" fill="rgb(245,102,45)" fg:x="4556" fg:w="3"/><text x="75.2987%" y="319.50"></text></g><g><title>acpi_hw_gpe_read (2 samples, 0.03%)</title><rect x="75.1980%" y="293" width="0.0330%" height="15" fill="rgb(214,1,49)" fg:x="4557" fg:w="2"/><text x="75.3152%" y="303.50"></text></g><g><title>acpi_os_read_port (2 samples, 0.03%)</title><rect x="75.1980%" y="277" width="0.0330%" height="15" fill="rgb(226,163,40)" fg:x="4557" fg:w="2"/><text x="75.3152%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="75.2310%" y="453" width="0.0330%" height="15" fill="rgb(239,212,28)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="463.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="75.2310%" y="437" width="0.0330%" height="15" fill="rgb(220,20,13)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="447.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="75.2310%" y="421" width="0.0330%" height="15" fill="rgb(210,164,35)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="431.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="75.2310%" y="405" width="0.0330%" height="15" fill="rgb(248,109,41)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="415.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="75.2310%" y="389" width="0.0330%" height="15" fill="rgb(238,23,50)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="399.50"></text></g><g><title>tick_sched_timer (2 samples, 0.03%)</title><rect x="75.2310%" y="373" width="0.0330%" height="15" fill="rgb(211,48,49)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="383.50"></text></g><g><title>tick_sched_handle (2 samples, 0.03%)</title><rect x="75.2310%" y="357" width="0.0330%" height="15" fill="rgb(223,36,21)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="367.50"></text></g><g><title>update_process_times (2 samples, 0.03%)</title><rect x="75.2310%" y="341" width="0.0330%" height="15" fill="rgb(207,123,46)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="351.50"></text></g><g><title>scheduler_tick (2 samples, 0.03%)</title><rect x="75.2310%" y="325" width="0.0330%" height="15" fill="rgb(240,218,32)" fg:x="4559" fg:w="2"/><text x="75.3482%" y="335.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="75.2475%" y="309" width="0.0165%" height="15" fill="rgb(252,5,43)" fg:x="4560" fg:w="1"/><text x="75.3647%" y="319.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="75.2475%" y="293" width="0.0165%" height="15" fill="rgb(252,84,19)" fg:x="4560" fg:w="1"/><text x="75.3647%" y="303.50"></text></g><g><title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="75.2475%" y="277" width="0.0165%" height="15" fill="rgb(243,152,39)" fg:x="4560" fg:w="1"/><text x="75.3647%" y="287.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (289 samples, 4.77%)</title><rect x="75.2640%" y="453" width="4.7690%" height="15" fill="rgb(234,160,15)" fg:x="4561" fg:w="289"/><text x="75.3812%" y="463.50">fringe_vs_astar..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::to_later (74 samples, 1.22%)</title><rect x="80.0330%" y="453" width="1.2211%" height="15" fill="rgb(237,34,20)" fg:x="4850" fg:w="74"/><text x="80.1502%" y="463.50">fr..</text></g><g><title>fringe_vs_astar::algorithms::fringe::cache::Cache::check_estimate (2,752 samples, 45.41%)</title><rect x="35.8581%" y="469" width="45.4125%" height="15" fill="rgb(229,97,13)" fg:x="2173" fg:w="2752"/><text x="35.9753%" y="479.50">fringe_vs_astar::algorithms::fringe::cache::Cache::check_estimate</text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="81.2541%" y="453" width="0.0165%" height="15" fill="rgb(234,71,50)" fg:x="4924" fg:w="1"/><text x="81.3713%" y="463.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::process_node (3,708 samples, 61.19%)</title><rect x="31.3696%" y="485" width="61.1881%" height="15" fill="rgb(253,155,4)" fg:x="1901" fg:w="3708"/><text x="31.4868%" y="495.50">fringe_vs_astar::algorithms::fringe::FringeSearch::process_node</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (684 samples, 11.29%)</title><rect x="81.2706%" y="469" width="11.2871%" height="15" fill="rgb(222,185,37)" fg:x="4925" fg:w="684"/><text x="81.3878%" y="479.50">fringe_vs_astar::structures::fringe::F..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (684 samples, 11.29%)</title><rect x="81.2706%" y="453" width="11.2871%" height="15" fill="rgb(251,177,13)" fg:x="4925" fg:w="684"/><text x="81.3878%" y="463.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (4 samples, 0.07%)</title><rect x="92.4917%" y="437" width="0.0660%" height="15" fill="rgb(250,179,40)" fg:x="5605" fg:w="4"/><text x="92.6089%" y="447.50"></text></g><g><title>_start (5,733 samples, 94.60%)</title><rect x="3.3168%" y="709" width="94.6040%" height="15" fill="rgb(242,44,2)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="719.50">_start</text></g><g><title>__libc_start_main_impl (5,733 samples, 94.60%)</title><rect x="3.3168%" y="693" width="94.6040%" height="15" fill="rgb(216,177,13)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="703.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (5,733 samples, 94.60%)</title><rect x="3.3168%" y="677" width="94.6040%" height="15" fill="rgb(216,106,43)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="687.50">__libc_start_call_main</text></g><g><title>main (5,733 samples, 94.60%)</title><rect x="3.3168%" y="661" width="94.6040%" height="15" fill="rgb(216,183,2)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="671.50">main</text></g><g><title>std::rt::lang_start_internal (5,733 samples, 94.60%)</title><rect x="3.3168%" y="645" width="94.6040%" height="15" fill="rgb(249,75,3)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="655.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (5,733 samples, 94.60%)</title><rect x="3.3168%" y="629" width="94.6040%" height="15" fill="rgb(219,67,39)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="639.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,733 samples, 94.60%)</title><rect x="3.3168%" y="613" width="94.6040%" height="15" fill="rgb(253,228,2)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="623.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (5,733 samples, 94.60%)</title><rect x="3.3168%" y="597" width="94.6040%" height="15" fill="rgb(235,138,27)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="607.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (5,733 samples, 94.60%)</title><rect x="3.3168%" y="581" width="94.6040%" height="15" fill="rgb(236,97,51)" fg:x="201" fg:w="5733"/><text x="3.4340%" y="591.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (4,629 samples, 76.39%)</title><rect x="21.5347%" y="565" width="76.3861%" height="15" fill="rgb(240,80,30)" fg:x="1305" fg:w="4629"/><text x="21.6518%" y="575.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::context::Context::solve_mode (4,608 samples, 76.04%)</title><rect x="21.8812%" y="549" width="76.0396%" height="15" fill="rgb(230,178,19)" fg:x="1326" fg:w="4608"/><text x="21.9984%" y="559.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (4,608 samples, 76.04%)</title><rect x="21.8812%" y="533" width="76.0396%" height="15" fill="rgb(210,190,27)" fg:x="1326" fg:w="4608"/><text x="21.9984%" y="543.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::context::Context::timed_fringe (4,608 samples, 76.04%)</title><rect x="21.8812%" y="517" width="76.0396%" height="15" fill="rgb(222,107,31)" fg:x="1326" fg:w="4608"/><text x="21.9984%" y="527.50">fringe_vs_astar::context::Context::timed_fringe</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (4,452 samples, 73.47%)</title><rect x="24.4554%" y="501" width="73.4653%" height="15" fill="rgb(216,127,34)" fg:x="1482" fg:w="4452"/><text x="24.5726%" y="511.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (325 samples, 5.36%)</title><rect x="92.5578%" y="485" width="5.3630%" height="15" fill="rgb(234,116,52)" fg:x="5609" fg:w="325"/><text x="92.6749%" y="495.50">fringe_vs_astar::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (325 samples, 5.36%)</title><rect x="92.5578%" y="469" width="5.3630%" height="15" fill="rgb(222,124,15)" fg:x="5609" fg:w="325"/><text x="92.6749%" y="479.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::read (2 samples, 0.03%)</title><rect x="97.8878%" y="453" width="0.0330%" height="15" fill="rgb(231,179,28)" fg:x="5932" fg:w="2"/><text x="98.0050%" y="463.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.05%)</title><rect x="97.9208%" y="709" width="0.0495%" height="15" fill="rgb(226,93,45)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="719.50"></text></g><g><title>common_interrupt (3 samples, 0.05%)</title><rect x="97.9208%" y="693" width="0.0495%" height="15" fill="rgb(215,8,51)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="703.50"></text></g><g><title>__common_interrupt (3 samples, 0.05%)</title><rect x="97.9208%" y="677" width="0.0495%" height="15" fill="rgb(223,106,5)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="687.50"></text></g><g><title>handle_fasteoi_irq (3 samples, 0.05%)</title><rect x="97.9208%" y="661" width="0.0495%" height="15" fill="rgb(250,191,5)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="671.50"></text></g><g><title>handle_irq_event (3 samples, 0.05%)</title><rect x="97.9208%" y="645" width="0.0495%" height="15" fill="rgb(242,132,44)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="655.50"></text></g><g><title>__handle_irq_event_percpu (3 samples, 0.05%)</title><rect x="97.9208%" y="629" width="0.0495%" height="15" fill="rgb(251,152,29)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="639.50"></text></g><g><title>acpi_irq (3 samples, 0.05%)</title><rect x="97.9208%" y="613" width="0.0495%" height="15" fill="rgb(218,179,5)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="623.50"></text></g><g><title>acpi_ev_sci_xrupt_handler (3 samples, 0.05%)</title><rect x="97.9208%" y="597" width="0.0495%" height="15" fill="rgb(227,67,19)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="607.50"></text></g><g><title>acpi_ev_gpe_detect (3 samples, 0.05%)</title><rect x="97.9208%" y="581" width="0.0495%" height="15" fill="rgb(233,119,31)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="591.50"></text></g><g><title>acpi_ev_detect_gpe (3 samples, 0.05%)</title><rect x="97.9208%" y="565" width="0.0495%" height="15" fill="rgb(241,120,22)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="575.50"></text></g><g><title>acpi_hw_gpe_read (3 samples, 0.05%)</title><rect x="97.9208%" y="549" width="0.0495%" height="15" fill="rgb(224,102,30)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="559.50"></text></g><g><title>acpi_os_read_port (3 samples, 0.05%)</title><rect x="97.9208%" y="533" width="0.0495%" height="15" fill="rgb(210,164,37)" fg:x="5934" fg:w="3"/><text x="98.0380%" y="543.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="99.1584%" y="581" width="0.0165%" height="15" fill="rgb(226,191,16)" fg:x="6009" fg:w="1"/><text x="99.2756%" y="591.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.03%)</title><rect x="99.1749%" y="581" width="0.0330%" height="15" fill="rgb(214,40,45)" fg:x="6010" fg:w="2"/><text x="99.2921%" y="591.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="99.2079%" y="581" width="0.0165%" height="15" fill="rgb(244,29,26)" fg:x="6012" fg:w="1"/><text x="99.3251%" y="591.50"></text></g><g><title>__mem_cgroup_charge (6 samples, 0.10%)</title><rect x="99.1584%" y="597" width="0.0990%" height="15" fill="rgb(216,16,5)" fg:x="6009" fg:w="6"/><text x="99.2756%" y="607.50"></text></g><g><title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="99.2244%" y="581" width="0.0330%" height="15" fill="rgb(249,76,35)" fg:x="6013" fg:w="2"/><text x="99.3416%" y="591.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="99.2574%" y="581" width="0.0165%" height="15" fill="rgb(207,11,44)" fg:x="6015" fg:w="1"/><text x="99.3746%" y="591.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.2574%" y="565" width="0.0165%" height="15" fill="rgb(228,190,49)" fg:x="6015" fg:w="1"/><text x="99.3746%" y="575.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="99.2574%" y="549" width="0.0165%" height="15" fill="rgb(214,173,12)" fg:x="6015" fg:w="1"/><text x="99.3746%" y="559.50"></text></g><g><title>folio_add_new_anon_rmap (2 samples, 0.03%)</title><rect x="99.2574%" y="597" width="0.0330%" height="15" fill="rgb(218,26,35)" fg:x="6015" fg:w="2"/><text x="99.3746%" y="607.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.2739%" y="581" width="0.0165%" height="15" fill="rgb(220,200,19)" fg:x="6016" fg:w="1"/><text x="99.3911%" y="591.50"></text></g><g><title>inc_mm_counter (1 samples, 0.02%)</title><rect x="99.2904%" y="597" width="0.0165%" height="15" fill="rgb(239,95,49)" fg:x="6017" fg:w="1"/><text x="99.4076%" y="607.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="99.2904%" y="581" width="0.0165%" height="15" fill="rgb(235,85,53)" fg:x="6017" fg:w="1"/><text x="99.4076%" y="591.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="99.3069%" y="549" width="0.0165%" height="15" fill="rgb(233,133,31)" fg:x="6018" fg:w="1"/><text x="99.4241%" y="559.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="99.3069%" y="533" width="0.0165%" height="15" fill="rgb(218,25,20)" fg:x="6018" fg:w="1"/><text x="99.4241%" y="543.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.02%)</title><rect x="99.3069%" y="517" width="0.0165%" height="15" fill="rgb(252,210,38)" fg:x="6018" fg:w="1"/><text x="99.4241%" y="527.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="99.3069%" y="501" width="0.0165%" height="15" fill="rgb(242,134,21)" fg:x="6018" fg:w="1"/><text x="99.4241%" y="511.50"></text></g><g><title>do_anonymous_page (11 samples, 0.18%)</title><rect x="99.1584%" y="613" width="0.1815%" height="15" fill="rgb(213,28,48)" fg:x="6009" fg:w="11"/><text x="99.2756%" y="623.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.03%)</title><rect x="99.3069%" y="597" width="0.0330%" height="15" fill="rgb(250,196,2)" fg:x="6018" fg:w="2"/><text x="99.4241%" y="607.50"></text></g><g><title>__folio_alloc (2 samples, 0.03%)</title><rect x="99.3069%" y="581" width="0.0330%" height="15" fill="rgb(227,5,17)" fg:x="6018" fg:w="2"/><text x="99.4241%" y="591.50"></text></g><g><title>__alloc_pages (2 samples, 0.03%)</title><rect x="99.3069%" y="565" width="0.0330%" height="15" fill="rgb(221,226,24)" fg:x="6018" fg:w="2"/><text x="99.4241%" y="575.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="99.3234%" y="549" width="0.0165%" height="15" fill="rgb(211,5,48)" fg:x="6019" fg:w="1"/><text x="99.4406%" y="559.50"></text></g><g><title>asm_exc_page_fault (84 samples, 1.39%)</title><rect x="97.9703%" y="709" width="1.3861%" height="15" fill="rgb(219,150,6)" fg:x="5937" fg:w="84"/><text x="98.0875%" y="719.50">asm..</text></g><g><title>exc_page_fault (13 samples, 0.21%)</title><rect x="99.1419%" y="693" width="0.2145%" height="15" fill="rgb(251,46,16)" fg:x="6008" fg:w="13"/><text x="99.2591%" y="703.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.21%)</title><rect x="99.1419%" y="677" width="0.2145%" height="15" fill="rgb(220,204,40)" fg:x="6008" fg:w="13"/><text x="99.2591%" y="687.50"></text></g><g><title>handle_mm_fault (13 samples, 0.21%)</title><rect x="99.1419%" y="661" width="0.2145%" height="15" fill="rgb(211,85,2)" fg:x="6008" fg:w="13"/><text x="99.2591%" y="671.50"></text></g><g><title>__handle_mm_fault (12 samples, 0.20%)</title><rect x="99.1584%" y="645" width="0.1980%" height="15" fill="rgb(229,17,7)" fg:x="6009" fg:w="12"/><text x="99.2756%" y="655.50"></text></g><g><title>handle_pte_fault (12 samples, 0.20%)</title><rect x="99.1584%" y="629" width="0.1980%" height="15" fill="rgb(239,72,28)" fg:x="6009" fg:w="12"/><text x="99.2756%" y="639.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.02%)</title><rect x="99.3399%" y="613" width="0.0165%" height="15" fill="rgb(230,47,54)" fg:x="6020" fg:w="1"/><text x="99.4571%" y="623.50"></text></g><g><title>__pte_offset_map (1 samples, 0.02%)</title><rect x="99.3399%" y="597" width="0.0165%" height="15" fill="rgb(214,50,8)" fg:x="6020" fg:w="1"/><text x="99.4571%" y="607.50"></text></g><g><title>_compound_head (1 samples, 0.02%)</title><rect x="99.3564%" y="485" width="0.0165%" height="15" fill="rgb(216,198,43)" fg:x="6021" fg:w="1"/><text x="99.4736%" y="495.50"></text></g><g><title>vm_normal_page (1 samples, 0.02%)</title><rect x="99.3729%" y="485" width="0.0165%" height="15" fill="rgb(234,20,35)" fg:x="6022" fg:w="1"/><text x="99.4901%" y="495.50"></text></g><g><title>page_remove_rmap (2 samples, 0.03%)</title><rect x="99.3894%" y="469" width="0.0330%" height="15" fill="rgb(254,45,19)" fg:x="6023" fg:w="2"/><text x="99.5066%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="99.4059%" y="453" width="0.0165%" height="15" fill="rgb(219,14,44)" fg:x="6024" fg:w="1"/><text x="99.5231%" y="463.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.4059%" y="437" width="0.0165%" height="15" fill="rgb(217,220,26)" fg:x="6024" fg:w="1"/><text x="99.5231%" y="447.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="99.4059%" y="421" width="0.0165%" height="15" fill="rgb(213,158,28)" fg:x="6024" fg:w="1"/><text x="99.5231%" y="431.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="99.4554%" y="405" width="0.0165%" height="15" fill="rgb(252,51,52)" fg:x="6027" fg:w="1"/><text x="99.5726%" y="415.50"></text></g><g><title>uncharge_folio (1 samples, 0.02%)</title><rect x="99.4554%" y="389" width="0.0165%" height="15" fill="rgb(246,89,16)" fg:x="6027" fg:w="1"/><text x="99.5726%" y="399.50"></text></g><g><title>free_unref_page_list (2 samples, 0.03%)</title><rect x="99.4719%" y="405" width="0.0330%" height="15" fill="rgb(216,158,49)" fg:x="6028" fg:w="2"/><text x="99.5891%" y="415.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="99.4884%" y="389" width="0.0165%" height="15" fill="rgb(236,107,19)" fg:x="6029" fg:w="1"/><text x="99.6056%" y="399.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="99.4884%" y="373" width="0.0165%" height="15" fill="rgb(228,185,30)" fg:x="6029" fg:w="1"/><text x="99.6056%" y="383.50"></text></g><g><title>__free_one_page (1 samples, 0.02%)</title><rect x="99.4884%" y="357" width="0.0165%" height="15" fill="rgb(246,134,8)" fg:x="6029" fg:w="1"/><text x="99.6056%" y="367.50"></text></g><g><title>__x64_sys_exit_group (11 samples, 0.18%)</title><rect x="99.3564%" y="661" width="0.1815%" height="15" fill="rgb(214,143,50)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="671.50"></text></g><g><title>do_group_exit (11 samples, 0.18%)</title><rect x="99.3564%" y="645" width="0.1815%" height="15" fill="rgb(228,75,8)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="655.50"></text></g><g><title>do_exit (11 samples, 0.18%)</title><rect x="99.3564%" y="629" width="0.1815%" height="15" fill="rgb(207,175,4)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="639.50"></text></g><g><title>exit_mm (11 samples, 0.18%)</title><rect x="99.3564%" y="613" width="0.1815%" height="15" fill="rgb(205,108,24)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="623.50"></text></g><g><title>mmput (11 samples, 0.18%)</title><rect x="99.3564%" y="597" width="0.1815%" height="15" fill="rgb(244,120,49)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="607.50"></text></g><g><title>__mmput (11 samples, 0.18%)</title><rect x="99.3564%" y="581" width="0.1815%" height="15" fill="rgb(223,47,38)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="591.50"></text></g><g><title>exit_mmap (11 samples, 0.18%)</title><rect x="99.3564%" y="565" width="0.1815%" height="15" fill="rgb(229,179,11)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="575.50"></text></g><g><title>unmap_vmas (11 samples, 0.18%)</title><rect x="99.3564%" y="549" width="0.1815%" height="15" fill="rgb(231,122,1)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="559.50"></text></g><g><title>unmap_single_vma (11 samples, 0.18%)</title><rect x="99.3564%" y="533" width="0.1815%" height="15" fill="rgb(245,119,9)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="543.50"></text></g><g><title>unmap_page_range (11 samples, 0.18%)</title><rect x="99.3564%" y="517" width="0.1815%" height="15" fill="rgb(241,163,25)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="527.50"></text></g><g><title>zap_pmd_range.isra.0 (11 samples, 0.18%)</title><rect x="99.3564%" y="501" width="0.1815%" height="15" fill="rgb(217,214,3)" fg:x="6021" fg:w="11"/><text x="99.4736%" y="511.50"></text></g><g><title>zap_pte_range (9 samples, 0.15%)</title><rect x="99.3894%" y="485" width="0.1485%" height="15" fill="rgb(240,86,28)" fg:x="6023" fg:w="9"/><text x="99.5066%" y="495.50"></text></g><g><title>tlb_flush_mmu (7 samples, 0.12%)</title><rect x="99.4224%" y="469" width="0.1155%" height="15" fill="rgb(215,47,9)" fg:x="6025" fg:w="7"/><text x="99.5396%" y="479.50"></text></g><g><title>tlb_batch_pages_flush (7 samples, 0.12%)</title><rect x="99.4224%" y="453" width="0.1155%" height="15" fill="rgb(252,25,45)" fg:x="6025" fg:w="7"/><text x="99.5396%" y="463.50"></text></g><g><title>free_pages_and_swap_cache (7 samples, 0.12%)</title><rect x="99.4224%" y="437" width="0.1155%" height="15" fill="rgb(251,164,9)" fg:x="6025" fg:w="7"/><text x="99.5396%" y="447.50"></text></g><g><title>release_pages (7 samples, 0.12%)</title><rect x="99.4224%" y="421" width="0.1155%" height="15" fill="rgb(233,194,0)" fg:x="6025" fg:w="7"/><text x="99.5396%" y="431.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (2 samples, 0.03%)</title><rect x="99.5050%" y="405" width="0.0330%" height="15" fill="rgb(249,111,24)" fg:x="6030" fg:w="2"/><text x="99.6221%" y="415.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="99.5215%" y="389" width="0.0165%" height="15" fill="rgb(250,223,3)" fg:x="6031" fg:w="1"/><text x="99.6386%" y="399.50"></text></g><g><title>_compound_head (1 samples, 0.02%)</title><rect x="99.5380%" y="517" width="0.0165%" height="15" fill="rgb(236,178,37)" fg:x="6032" fg:w="1"/><text x="99.6551%" y="527.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="99.5380%" y="661" width="0.0330%" height="15" fill="rgb(241,158,50)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="671.50"></text></g><g><title>__vm_munmap (2 samples, 0.03%)</title><rect x="99.5380%" y="645" width="0.0330%" height="15" fill="rgb(213,121,41)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="655.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.03%)</title><rect x="99.5380%" y="629" width="0.0330%" height="15" fill="rgb(240,92,3)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="639.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.03%)</title><rect x="99.5380%" y="613" width="0.0330%" height="15" fill="rgb(205,123,3)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="623.50"></text></g><g><title>unmap_region (2 samples, 0.03%)</title><rect x="99.5380%" y="597" width="0.0330%" height="15" fill="rgb(205,97,47)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="607.50"></text></g><g><title>unmap_vmas (2 samples, 0.03%)</title><rect x="99.5380%" y="581" width="0.0330%" height="15" fill="rgb(247,152,14)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="591.50"></text></g><g><title>unmap_single_vma (2 samples, 0.03%)</title><rect x="99.5380%" y="565" width="0.0330%" height="15" fill="rgb(248,195,53)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="575.50"></text></g><g><title>unmap_page_range (2 samples, 0.03%)</title><rect x="99.5380%" y="549" width="0.0330%" height="15" fill="rgb(226,201,16)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="559.50"></text></g><g><title>zap_pmd_range.isra.0 (2 samples, 0.03%)</title><rect x="99.5380%" y="533" width="0.0330%" height="15" fill="rgb(205,98,0)" fg:x="6032" fg:w="2"/><text x="99.6551%" y="543.50"></text></g><g><title>zap_pte_range (1 samples, 0.02%)</title><rect x="99.5545%" y="517" width="0.0165%" height="15" fill="rgb(214,191,48)" fg:x="6033" fg:w="1"/><text x="99.6716%" y="527.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="99.5545%" y="501" width="0.0165%" height="15" fill="rgb(237,112,39)" fg:x="6033" fg:w="1"/><text x="99.6716%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.23%)</title><rect x="99.3564%" y="709" width="0.2310%" height="15" fill="rgb(247,203,27)" fg:x="6021" fg:w="14"/><text x="99.4736%" y="719.50"></text></g><g><title>do_syscall_64 (14 samples, 0.23%)</title><rect x="99.3564%" y="693" width="0.2310%" height="15" fill="rgb(235,124,28)" fg:x="6021" fg:w="14"/><text x="99.4736%" y="703.50"></text></g><g><title>x64_sys_call (14 samples, 0.23%)</title><rect x="99.3564%" y="677" width="0.2310%" height="15" fill="rgb(208,207,46)" fg:x="6021" fg:w="14"/><text x="99.4736%" y="687.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="99.5710%" y="661" width="0.0165%" height="15" fill="rgb(234,176,4)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="671.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.5710%" y="645" width="0.0165%" height="15" fill="rgb(230,133,28)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="655.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.5710%" y="629" width="0.0165%" height="15" fill="rgb(211,137,40)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="639.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="99.5710%" y="613" width="0.0165%" height="15" fill="rgb(254,35,13)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="623.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="99.5710%" y="597" width="0.0165%" height="15" fill="rgb(225,49,51)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="607.50"></text></g><g><title>filemap_read (1 samples, 0.02%)</title><rect x="99.5710%" y="581" width="0.0165%" height="15" fill="rgb(251,10,15)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="591.50"></text></g><g><title>folio_mark_accessed (1 samples, 0.02%)</title><rect x="99.5710%" y="565" width="0.0165%" height="15" fill="rgb(228,207,15)" fg:x="6034" fg:w="1"/><text x="99.6881%" y="575.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="99.5875%" y="709" width="0.0165%" height="15" fill="rgb(241,99,19)" fg:x="6035" fg:w="1"/><text x="99.7046%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.08%)</title><rect x="99.6040%" y="693" width="0.0825%" height="15" fill="rgb(207,104,49)" fg:x="6036" fg:w="5"/><text x="99.7211%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.08%)</title><rect x="99.6040%" y="677" width="0.0825%" height="15" fill="rgb(234,99,18)" fg:x="6036" fg:w="5"/><text x="99.7211%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f32)&gt;&gt; (5 samples, 0.08%)</title><rect x="99.6865%" y="693" width="0.0825%" height="15" fill="rgb(213,191,49)" fg:x="6041" fg:w="5"/><text x="99.8037%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f32)&gt;&gt; (5 samples, 0.08%)</title><rect x="99.6865%" y="677" width="0.0825%" height="15" fill="rgb(210,226,19)" fg:x="6041" fg:w="5"/><text x="99.8037%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="99.6865%" y="661" width="0.0825%" height="15" fill="rgb(229,97,18)" fg:x="6041" fg:w="5"/><text x="99.8037%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.08%)</title><rect x="99.6865%" y="645" width="0.0825%" height="15" fill="rgb(211,167,15)" fg:x="6041" fg:w="5"/><text x="99.8037%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.08%)</title><rect x="99.6865%" y="629" width="0.0825%" height="15" fill="rgb(210,169,34)" fg:x="6041" fg:w="5"/><text x="99.8037%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.10%)</title><rect x="99.7855%" y="677" width="0.0990%" height="15" fill="rgb(241,121,31)" fg:x="6047" fg:w="6"/><text x="99.9027%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.10%)</title><rect x="99.7855%" y="661" width="0.0990%" height="15" fill="rgb(232,40,11)" fg:x="6047" fg:w="6"/><text x="99.9027%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.10%)</title><rect x="99.7855%" y="645" width="0.0990%" height="15" fill="rgb(205,86,26)" fg:x="6047" fg:w="6"/><text x="99.9027%" y="655.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.10%)</title><rect x="99.7855%" y="629" width="0.0990%" height="15" fill="rgb(231,126,28)" fg:x="6047" fg:w="6"/><text x="99.9027%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.03%)</title><rect x="99.8845%" y="677" width="0.0330%" height="15" fill="rgb(219,221,18)" fg:x="6053" fg:w="2"/><text x="100.0017%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="99.8845%" y="661" width="0.0330%" height="15" fill="rgb(211,40,0)" fg:x="6053" fg:w="2"/><text x="100.0017%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (22 samples, 0.36%)</title><rect x="99.6040%" y="709" width="0.3630%" height="15" fill="rgb(239,85,43)" fg:x="6036" fg:w="22"/><text x="99.7211%" y="719.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (12 samples, 0.20%)</title><rect x="99.7690%" y="693" width="0.1980%" height="15" fill="rgb(231,55,21)" fg:x="6046" fg:w="12"/><text x="99.8862%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="99.9175%" y="677" width="0.0495%" height="15" fill="rgb(225,184,43)" fg:x="6055" fg:w="3"/><text x="100.0347%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="99.9175%" y="661" width="0.0495%" height="15" fill="rgb(251,158,41)" fg:x="6055" fg:w="3"/><text x="100.0347%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="99.9175%" y="645" width="0.0495%" height="15" fill="rgb(234,159,37)" fg:x="6055" fg:w="3"/><text x="100.0347%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="99.9175%" y="629" width="0.0495%" height="15" fill="rgb(216,204,22)" fg:x="6055" fg:w="3"/><text x="100.0347%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="99.9175%" y="613" width="0.0495%" height="15" fill="rgb(214,17,3)" fg:x="6055" fg:w="3"/><text x="100.0347%" y="623.50"></text></g><g><title>fringe-vs-astar (6,059 samples, 99.98%)</title><rect x="0.0000%" y="725" width="99.9835%" height="15" fill="rgb(212,111,17)" fg:x="0" fg:w="6059"/><text x="0.1172%" y="735.50">fringe-vs-astar</text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="99.9670%" y="709" width="0.0165%" height="15" fill="rgb(221,157,24)" fg:x="6058" fg:w="1"/><text x="100.0842%" y="719.50"></text></g><g><title>all (6,060 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(252,16,13)" fg:x="0" fg:w="6060"/><text x="0.1172%" y="751.50"></text></g><g><title>perf-exec (1 samples, 0.02%)</title><rect x="99.9835%" y="725" width="0.0165%" height="15" fill="rgb(221,62,2)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.9835%" y="709" width="0.0165%" height="15" fill="rgb(247,87,22)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="719.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.9835%" y="693" width="0.0165%" height="15" fill="rgb(215,73,9)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="703.50"></text></g><g><title>x64_sys_call (1 samples, 0.02%)</title><rect x="99.9835%" y="677" width="0.0165%" height="15" fill="rgb(207,175,33)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="687.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="99.9835%" y="661" width="0.0165%" height="15" fill="rgb(243,129,54)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="671.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.9835%" y="645" width="0.0165%" height="15" fill="rgb(227,119,45)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="655.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.9835%" y="629" width="0.0165%" height="15" fill="rgb(205,109,36)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="639.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="99.9835%" y="613" width="0.0165%" height="15" fill="rgb(205,6,39)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="623.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="99.9835%" y="597" width="0.0165%" height="15" fill="rgb(221,32,16)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="607.50"></text></g><g><title>filemap_read (1 samples, 0.02%)</title><rect x="99.9835%" y="581" width="0.0165%" height="15" fill="rgb(228,144,50)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="591.50"></text></g><g><title>folio_mark_accessed (1 samples, 0.02%)</title><rect x="99.9835%" y="565" width="0.0165%" height="15" fill="rgb(229,201,53)" fg:x="6059" fg:w="1"/><text x="100.1007%" y="575.50"></text></g></svg></svg>