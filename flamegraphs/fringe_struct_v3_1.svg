<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2560" height="966" onload="init(evt)" viewBox="0 0 2560 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2550" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2550" y="949.00"> </text><svg id="frames" x="10" width="2540" total_samples="3409"><g><title>_int_free (8 samples, 0.23%)</title><rect x="0.0000%" y="869" width="0.2347%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.1172%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.21%)</title><rect x="0.2347%" y="869" width="0.2053%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="7"/><text x="0.3519%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.15%)</title><rect x="0.2933%" y="853" width="0.1467%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="5"/><text x="0.4105%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (5 samples, 0.15%)</title><rect x="0.4400%" y="869" width="0.1467%" height="15" fill="rgb(248,212,6)" fg:x="15" fg:w="5"/><text x="0.5572%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (5 samples, 0.15%)</title><rect x="0.4400%" y="853" width="0.1467%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="5"/><text x="0.5572%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.15%)</title><rect x="0.4400%" y="837" width="0.1467%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="5"/><text x="0.5572%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (5 samples, 0.15%)</title><rect x="0.4400%" y="821" width="0.1467%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="5"/><text x="0.5572%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (5 samples, 0.15%)</title><rect x="0.4400%" y="805" width="0.1467%" height="15" fill="rgb(228,23,34)" fg:x="15" fg:w="5"/><text x="0.5572%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (5 samples, 0.15%)</title><rect x="0.4400%" y="789" width="0.1467%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="5"/><text x="0.5572%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.15%)</title><rect x="0.4400%" y="773" width="0.1467%" height="15" fill="rgb(220,122,19)" fg:x="15" fg:w="5"/><text x="0.5572%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.15%)</title><rect x="0.4400%" y="757" width="0.1467%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="5"/><text x="0.5572%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.15%)</title><rect x="0.4400%" y="741" width="0.1467%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="5"/><text x="0.5572%" y="751.50"></text></g><g><title>[[heap]] (21 samples, 0.62%)</title><rect x="0.0000%" y="885" width="0.6160%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="21"/><text x="0.1172%" y="895.50"></text></g><g><title>unlink_chunk (1 samples, 0.03%)</title><rect x="0.5867%" y="869" width="0.0293%" height="15" fill="rgb(206,188,39)" fg:x="20" fg:w="1"/><text x="0.7039%" y="879.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_width (14 samples, 0.41%)</title><rect x="0.6160%" y="869" width="0.4107%" height="15" fill="rgb(217,207,13)" fg:x="21" fg:w="14"/><text x="0.7332%" y="879.50"></text></g><g><title>__GI___libc_free (6 samples, 0.18%)</title><rect x="1.0267%" y="869" width="0.1760%" height="15" fill="rgb(231,73,38)" fg:x="35" fg:w="6"/><text x="1.1439%" y="879.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.15%)</title><rect x="1.2027%" y="869" width="0.1467%" height="15" fill="rgb(225,20,46)" fg:x="41" fg:w="5"/><text x="1.3199%" y="879.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.12%)</title><rect x="1.3494%" y="869" width="0.1173%" height="15" fill="rgb(210,31,41)" fg:x="46" fg:w="4"/><text x="1.4666%" y="879.50"></text></g><g><title>__rdl_realloc (1 samples, 0.03%)</title><rect x="1.4667%" y="869" width="0.0293%" height="15" fill="rgb(221,200,47)" fg:x="50" fg:w="1"/><text x="1.5839%" y="879.50"></text></g><g><title>_int_malloc (7 samples, 0.21%)</title><rect x="1.4960%" y="869" width="0.2053%" height="15" fill="rgb(226,26,5)" fg:x="51" fg:w="7"/><text x="1.6132%" y="879.50"></text></g><g><title>[[stack]] (38 samples, 1.11%)</title><rect x="0.6160%" y="885" width="1.1147%" height="15" fill="rgb(249,33,26)" fg:x="21" fg:w="38"/><text x="0.7332%" y="895.50">[[..</text></g><g><title>unlink_chunk (1 samples, 0.03%)</title><rect x="1.7014%" y="869" width="0.0293%" height="15" fill="rgb(235,183,28)" fg:x="58" fg:w="1"/><text x="1.8186%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.23%)</title><rect x="1.7307%" y="869" width="0.2347%" height="15" fill="rgb(221,5,38)" fg:x="59" fg:w="8"/><text x="1.8479%" y="879.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (28 samples, 0.82%)</title><rect x="1.9654%" y="869" width="0.8214%" height="15" fill="rgb(247,18,42)" fg:x="67" fg:w="28"/><text x="2.0826%" y="879.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_width (12 samples, 0.35%)</title><rect x="2.7867%" y="869" width="0.3520%" height="15" fill="rgb(241,131,45)" fg:x="95" fg:w="12"/><text x="2.9039%" y="879.50"></text></g><g><title>__GI___libc_free (15 samples, 0.44%)</title><rect x="3.1388%" y="869" width="0.4400%" height="15" fill="rgb(249,31,29)" fg:x="107" fg:w="15"/><text x="3.2559%" y="879.50"></text></g><g><title>[anon] (68 samples, 1.99%)</title><rect x="1.7307%" y="885" width="1.9947%" height="15" fill="rgb(225,111,53)" fg:x="59" fg:w="68"/><text x="1.8479%" y="895.50">[anon]</text></g><g><title>__GI___libc_malloc (5 samples, 0.15%)</title><rect x="3.5788%" y="869" width="0.1467%" height="15" fill="rgb(238,160,17)" fg:x="122" fg:w="5"/><text x="3.6959%" y="879.50"></text></g><g><title>[fringe-vs-astar] (5 samples, 0.15%)</title><rect x="3.7254%" y="885" width="0.1467%" height="15" fill="rgb(214,148,48)" fg:x="127" fg:w="5"/><text x="3.8426%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.15%)</title><rect x="3.7254%" y="869" width="0.1467%" height="15" fill="rgb(232,36,49)" fg:x="127" fg:w="5"/><text x="3.8426%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.15%)</title><rect x="3.7254%" y="853" width="0.1467%" height="15" fill="rgb(209,103,24)" fg:x="127" fg:w="5"/><text x="3.8426%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.15%)</title><rect x="3.7254%" y="837" width="0.1467%" height="15" fill="rgb(229,88,8)" fg:x="127" fg:w="5"/><text x="3.8426%" y="847.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.15%)</title><rect x="3.7254%" y="821" width="0.1467%" height="15" fill="rgb(213,181,19)" fg:x="127" fg:w="5"/><text x="3.8426%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.06%)</title><rect x="4.3121%" y="821" width="0.0587%" height="15" fill="rgb(254,191,54)" fg:x="147" fg:w="2"/><text x="4.4293%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="4.3121%" y="805" width="0.0587%" height="15" fill="rgb(241,83,37)" fg:x="147" fg:w="2"/><text x="4.4293%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="4.3121%" y="789" width="0.0587%" height="15" fill="rgb(233,36,39)" fg:x="147" fg:w="2"/><text x="4.4293%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.56%)</title><rect x="4.3121%" y="837" width="0.5573%" height="15" fill="rgb(226,3,54)" fg:x="147" fg:w="19"/><text x="4.4293%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (17 samples, 0.50%)</title><rect x="4.3708%" y="821" width="0.4987%" height="15" fill="rgb(245,192,40)" fg:x="149" fg:w="17"/><text x="4.4880%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.50%)</title><rect x="4.3708%" y="805" width="0.4987%" height="15" fill="rgb(238,167,29)" fg:x="149" fg:w="17"/><text x="4.4880%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.50%)</title><rect x="4.3708%" y="789" width="0.4987%" height="15" fill="rgb(232,182,51)" fg:x="149" fg:w="17"/><text x="4.4880%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.50%)</title><rect x="4.3708%" y="773" width="0.4987%" height="15" fill="rgb(231,60,39)" fg:x="149" fg:w="17"/><text x="4.4880%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17 samples, 0.50%)</title><rect x="4.3708%" y="757" width="0.4987%" height="15" fill="rgb(208,69,12)" fg:x="149" fg:w="17"/><text x="4.4880%" y="767.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new::_{{closure}} (17 samples, 0.50%)</title><rect x="4.3708%" y="741" width="0.4987%" height="15" fill="rgb(235,93,37)" fg:x="149" fg:w="17"/><text x="4.4880%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 1.23%)</title><rect x="3.8721%" y="869" width="1.2320%" height="15" fill="rgb(213,116,39)" fg:x="132" fg:w="42"/><text x="3.9893%" y="879.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (36 samples, 1.06%)</title><rect x="4.0481%" y="853" width="1.0560%" height="15" fill="rgb(222,207,29)" fg:x="138" fg:w="36"/><text x="4.1653%" y="863.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.23%)</title><rect x="4.8695%" y="837" width="0.2347%" height="15" fill="rgb(206,96,30)" fg:x="166" fg:w="8"/><text x="4.9867%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="4.8695%" y="821" width="0.2347%" height="15" fill="rgb(218,138,4)" fg:x="166" fg:w="8"/><text x="4.9867%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.23%)</title><rect x="4.8695%" y="805" width="0.2347%" height="15" fill="rgb(250,191,14)" fg:x="166" fg:w="8"/><text x="4.9867%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.23%)</title><rect x="4.8695%" y="789" width="0.2347%" height="15" fill="rgb(239,60,40)" fg:x="166" fg:w="8"/><text x="4.9867%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.23%)</title><rect x="4.8695%" y="773" width="0.2347%" height="15" fill="rgb(206,27,48)" fg:x="166" fg:w="8"/><text x="4.9867%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.23%)</title><rect x="4.8695%" y="757" width="0.2347%" height="15" fill="rgb(225,35,8)" fg:x="166" fg:w="8"/><text x="4.9867%" y="767.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.23%)</title><rect x="4.8695%" y="741" width="0.2347%" height="15" fill="rgb(250,213,24)" fg:x="166" fg:w="8"/><text x="4.9867%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.21%)</title><rect x="5.1041%" y="869" width="0.2053%" height="15" fill="rgb(247,123,22)" fg:x="174" fg:w="7"/><text x="5.2213%" y="879.50"></text></g><g><title>__GI___libc_free (5 samples, 0.15%)</title><rect x="5.3095%" y="869" width="0.1467%" height="15" fill="rgb(231,138,38)" fg:x="181" fg:w="5"/><text x="5.4267%" y="879.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.38%)</title><rect x="5.4561%" y="869" width="0.3813%" height="15" fill="rgb(231,145,46)" fg:x="186" fg:w="13"/><text x="5.5733%" y="879.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.23%)</title><rect x="5.8375%" y="869" width="0.2347%" height="15" fill="rgb(251,118,11)" fg:x="199" fg:w="8"/><text x="5.9547%" y="879.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.03%)</title><rect x="6.0722%" y="869" width="0.0293%" height="15" fill="rgb(217,147,25)" fg:x="207" fg:w="1"/><text x="6.1893%" y="879.50"></text></g><g><title>__rdl_realloc (2 samples, 0.06%)</title><rect x="6.1015%" y="869" width="0.0587%" height="15" fill="rgb(247,81,37)" fg:x="208" fg:w="2"/><text x="6.2187%" y="879.50"></text></g><g><title>_int_free (17 samples, 0.50%)</title><rect x="6.1602%" y="869" width="0.4987%" height="15" fill="rgb(209,12,38)" fg:x="210" fg:w="17"/><text x="6.2774%" y="879.50"></text></g><g><title>_int_malloc (11 samples, 0.32%)</title><rect x="6.6588%" y="869" width="0.3227%" height="15" fill="rgb(227,1,9)" fg:x="227" fg:w="11"/><text x="6.7760%" y="879.50"></text></g><g><title>_int_realloc (20 samples, 0.59%)</title><rect x="6.9815%" y="869" width="0.5867%" height="15" fill="rgb(248,47,43)" fg:x="238" fg:w="20"/><text x="7.0987%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.09%)</title><rect x="7.5682%" y="869" width="0.0880%" height="15" fill="rgb(221,10,30)" fg:x="258" fg:w="3"/><text x="7.6854%" y="879.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.03%)</title><rect x="7.6562%" y="869" width="0.0293%" height="15" fill="rgb(210,229,1)" fg:x="261" fg:w="1"/><text x="7.7734%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="8.4189%" y="837" width="0.0587%" height="15" fill="rgb(222,148,37)" fg:x="287" fg:w="2"/><text x="8.5361%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="8.4189%" y="821" width="0.0587%" height="15" fill="rgb(234,67,33)" fg:x="287" fg:w="2"/><text x="8.5361%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.18%)</title><rect x="8.4776%" y="837" width="0.1760%" height="15" fill="rgb(247,98,35)" fg:x="289" fg:w="6"/><text x="8.5947%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (6 samples, 0.18%)</title><rect x="8.4776%" y="821" width="0.1760%" height="15" fill="rgb(247,138,52)" fg:x="289" fg:w="6"/><text x="8.5947%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.18%)</title><rect x="8.4776%" y="805" width="0.1760%" height="15" fill="rgb(213,79,30)" fg:x="289" fg:w="6"/><text x="8.5947%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.18%)</title><rect x="8.4776%" y="789" width="0.1760%" height="15" fill="rgb(246,177,23)" fg:x="289" fg:w="6"/><text x="8.5947%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.18%)</title><rect x="8.4776%" y="773" width="0.1760%" height="15" fill="rgb(230,62,27)" fg:x="289" fg:w="6"/><text x="8.5947%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.18%)</title><rect x="8.8296%" y="821" width="0.1760%" height="15" fill="rgb(216,154,8)" fg:x="301" fg:w="6"/><text x="8.9468%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.18%)</title><rect x="8.8296%" y="805" width="0.1760%" height="15" fill="rgb(244,35,45)" fg:x="301" fg:w="6"/><text x="8.9468%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.18%)</title><rect x="8.8296%" y="789" width="0.1760%" height="15" fill="rgb(251,115,12)" fg:x="301" fg:w="6"/><text x="8.9468%" y="799.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.18%)</title><rect x="8.8296%" y="773" width="0.1760%" height="15" fill="rgb(240,54,50)" fg:x="301" fg:w="6"/><text x="8.9468%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="9.0056%" y="821" width="0.0587%" height="15" fill="rgb(233,84,52)" fg:x="307" fg:w="2"/><text x="9.1228%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="9.0056%" y="805" width="0.0587%" height="15" fill="rgb(207,117,47)" fg:x="307" fg:w="2"/><text x="9.1228%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="9.0642%" y="821" width="0.0293%" height="15" fill="rgb(249,43,39)" fg:x="309" fg:w="1"/><text x="9.1814%" y="831.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (1 samples, 0.03%)</title><rect x="9.0642%" y="805" width="0.0293%" height="15" fill="rgb(209,38,44)" fg:x="309" fg:w="1"/><text x="9.1814%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="9.0642%" y="789" width="0.0293%" height="15" fill="rgb(236,212,23)" fg:x="309" fg:w="1"/><text x="9.1814%" y="799.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="9.0642%" y="773" width="0.0293%" height="15" fill="rgb(242,79,21)" fg:x="309" fg:w="1"/><text x="9.1814%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.32%)</title><rect x="9.0936%" y="821" width="0.3227%" height="15" fill="rgb(211,96,35)" fg:x="310" fg:w="11"/><text x="9.2108%" y="831.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (11 samples, 0.32%)</title><rect x="9.0936%" y="805" width="0.3227%" height="15" fill="rgb(253,215,40)" fg:x="310" fg:w="11"/><text x="9.2108%" y="815.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (77 samples, 2.26%)</title><rect x="7.6855%" y="869" width="2.2587%" height="15" fill="rgb(211,81,21)" fg:x="262" fg:w="77"/><text x="7.8027%" y="879.50">fringe..</text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (77 samples, 2.26%)</title><rect x="7.6855%" y="853" width="2.2587%" height="15" fill="rgb(208,190,38)" fg:x="262" fg:w="77"/><text x="7.8027%" y="863.50">fringe..</text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (44 samples, 1.29%)</title><rect x="8.6536%" y="837" width="1.2907%" height="15" fill="rgb(235,213,38)" fg:x="295" fg:w="44"/><text x="8.7708%" y="847.50">fr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (18 samples, 0.53%)</title><rect x="9.4163%" y="821" width="0.5280%" height="15" fill="rgb(237,122,38)" fg:x="321" fg:w="18"/><text x="9.5334%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (18 samples, 0.53%)</title><rect x="9.4163%" y="805" width="0.5280%" height="15" fill="rgb(244,218,35)" fg:x="321" fg:w="18"/><text x="9.5334%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.53%)</title><rect x="9.4163%" y="789" width="0.5280%" height="15" fill="rgb(240,68,47)" fg:x="321" fg:w="18"/><text x="9.5334%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.53%)</title><rect x="9.4163%" y="773" width="0.5280%" height="15" fill="rgb(210,16,53)" fg:x="321" fg:w="18"/><text x="9.5334%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.53%)</title><rect x="9.4163%" y="757" width="0.5280%" height="15" fill="rgb(235,124,12)" fg:x="321" fg:w="18"/><text x="9.5334%" y="767.50"></text></g><g><title>[unknown] (209 samples, 6.13%)</title><rect x="3.8721%" y="885" width="6.1308%" height="15" fill="rgb(224,169,11)" fg:x="132" fg:w="209"/><text x="3.9893%" y="895.50">[unknown]</text></g><g><title>unlink_chunk (2 samples, 0.06%)</title><rect x="9.9443%" y="869" width="0.0587%" height="15" fill="rgb(250,166,2)" fg:x="339" fg:w="2"/><text x="10.0615%" y="879.50"></text></g><g><title>_int_malloc (6 samples, 0.18%)</title><rect x="10.0029%" y="869" width="0.1760%" height="15" fill="rgb(242,216,29)" fg:x="341" fg:w="6"/><text x="10.1201%" y="879.50"></text></g><g><title>_IO_wide_data_0 (9 samples, 0.26%)</title><rect x="10.0029%" y="885" width="0.2640%" height="15" fill="rgb(230,116,27)" fg:x="341" fg:w="9"/><text x="10.1201%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="10.1789%" y="869" width="0.0880%" height="15" fill="rgb(228,99,48)" fg:x="347" fg:w="3"/><text x="10.2961%" y="879.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="10.2669%" y="885" width="0.0293%" height="15" fill="rgb(253,11,6)" fg:x="350" fg:w="1"/><text x="10.3841%" y="895.50"></text></g><g><title>__irqentry_text_start (1 samples, 0.03%)</title><rect x="10.2963%" y="885" width="0.0293%" height="15" fill="rgb(247,143,39)" fg:x="351" fg:w="1"/><text x="10.4135%" y="895.50"></text></g><g><title>_int_free (17 samples, 0.50%)</title><rect x="10.3256%" y="885" width="0.4987%" height="15" fill="rgb(236,97,10)" fg:x="352" fg:w="17"/><text x="10.4428%" y="895.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="10.8243%" y="517" width="0.0293%" height="15" fill="rgb(233,208,19)" fg:x="369" fg:w="1"/><text x="10.9415%" y="527.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="10.8243%" y="501" width="0.0293%" height="15" fill="rgb(216,164,2)" fg:x="369" fg:w="1"/><text x="10.9415%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="10.8243%" y="485" width="0.0293%" height="15" fill="rgb(220,129,5)" fg:x="369" fg:w="1"/><text x="10.9415%" y="495.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="10.8243%" y="469" width="0.0293%" height="15" fill="rgb(242,17,10)" fg:x="369" fg:w="1"/><text x="10.9415%" y="479.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.03%)</title><rect x="10.8243%" y="453" width="0.0293%" height="15" fill="rgb(242,107,0)" fg:x="369" fg:w="1"/><text x="10.9415%" y="463.50"></text></g><g><title>_compound_head (4 samples, 0.12%)</title><rect x="10.8536%" y="453" width="0.1173%" height="15" fill="rgb(251,28,31)" fg:x="370" fg:w="4"/><text x="10.9708%" y="463.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.03%)</title><rect x="11.0296%" y="437" width="0.0293%" height="15" fill="rgb(233,223,10)" fg:x="376" fg:w="1"/><text x="11.1468%" y="447.50"></text></g><g><title>page_remove_rmap (2 samples, 0.06%)</title><rect x="11.0590%" y="437" width="0.0587%" height="15" fill="rgb(215,21,27)" fg:x="377" fg:w="2"/><text x="11.1761%" y="447.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="11.0883%" y="421" width="0.0293%" height="15" fill="rgb(232,23,21)" fg:x="378" fg:w="1"/><text x="11.2055%" y="431.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="11.2350%" y="373" width="0.0293%" height="15" fill="rgb(244,5,23)" fg:x="383" fg:w="1"/><text x="11.3522%" y="383.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="11.2350%" y="357" width="0.0293%" height="15" fill="rgb(226,81,46)" fg:x="383" fg:w="1"/><text x="11.3522%" y="367.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.09%)</title><rect x="11.2643%" y="357" width="0.0880%" height="15" fill="rgb(247,70,30)" fg:x="384" fg:w="3"/><text x="11.3815%" y="367.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.09%)</title><rect x="11.2643%" y="341" width="0.0880%" height="15" fill="rgb(212,68,19)" fg:x="384" fg:w="3"/><text x="11.3815%" y="351.50"></text></g><g><title>__free_one_page (2 samples, 0.06%)</title><rect x="11.2936%" y="325" width="0.0587%" height="15" fill="rgb(240,187,13)" fg:x="385" fg:w="2"/><text x="11.4108%" y="335.50"></text></g><g><title>free_unref_page_list (6 samples, 0.18%)</title><rect x="11.2643%" y="373" width="0.1760%" height="15" fill="rgb(223,113,26)" fg:x="384" fg:w="6"/><text x="11.3815%" y="383.50"></text></g><g><title>free_unref_page_prepare (3 samples, 0.09%)</title><rect x="11.3523%" y="357" width="0.0880%" height="15" fill="rgb(206,192,2)" fg:x="387" fg:w="3"/><text x="11.4695%" y="367.50"></text></g><g><title>free_pages_and_swap_cache (17 samples, 0.50%)</title><rect x="11.1176%" y="405" width="0.4987%" height="15" fill="rgb(241,108,4)" fg:x="379" fg:w="17"/><text x="11.2348%" y="415.50"></text></g><g><title>release_pages (17 samples, 0.50%)</title><rect x="11.1176%" y="389" width="0.4987%" height="15" fill="rgb(247,173,49)" fg:x="379" fg:w="17"/><text x="11.2348%" y="399.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.18%)</title><rect x="11.4403%" y="373" width="0.1760%" height="15" fill="rgb(224,114,35)" fg:x="390" fg:w="6"/><text x="11.5575%" y="383.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="11.5870%" y="357" width="0.0293%" height="15" fill="rgb(245,159,27)" fg:x="395" fg:w="1"/><text x="11.7042%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="11.5870%" y="341" width="0.0293%" height="15" fill="rgb(245,172,44)" fg:x="395" fg:w="1"/><text x="11.7042%" y="351.50"></text></g><g><title>tlb_flush_mmu (19 samples, 0.56%)</title><rect x="11.1176%" y="437" width="0.5573%" height="15" fill="rgb(236,23,11)" fg:x="379" fg:w="19"/><text x="11.2348%" y="447.50"></text></g><g><title>tlb_batch_pages_flush (19 samples, 0.56%)</title><rect x="11.1176%" y="421" width="0.5573%" height="15" fill="rgb(205,117,38)" fg:x="379" fg:w="19"/><text x="11.2348%" y="431.50"></text></g><g><title>free_swap_cache (2 samples, 0.06%)</title><rect x="11.6163%" y="405" width="0.0587%" height="15" fill="rgb(237,72,25)" fg:x="396" fg:w="2"/><text x="11.7335%" y="415.50"></text></g><g><title>__GI___libc_free (30 samples, 0.88%)</title><rect x="10.8243%" y="677" width="0.8800%" height="15" fill="rgb(244,70,9)" fg:x="369" fg:w="30"/><text x="10.9415%" y="687.50">_..</text></g><g><title>__GI___munmap (30 samples, 0.88%)</title><rect x="10.8243%" y="661" width="0.8800%" height="15" fill="rgb(217,125,39)" fg:x="369" fg:w="30"/><text x="10.9415%" y="671.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.88%)</title><rect x="10.8243%" y="645" width="0.8800%" height="15" fill="rgb(235,36,10)" fg:x="369" fg:w="30"/><text x="10.9415%" y="655.50">e..</text></g><g><title>do_syscall_64 (30 samples, 0.88%)</title><rect x="10.8243%" y="629" width="0.8800%" height="15" fill="rgb(251,123,47)" fg:x="369" fg:w="30"/><text x="10.9415%" y="639.50">d..</text></g><g><title>x64_sys_call (30 samples, 0.88%)</title><rect x="10.8243%" y="613" width="0.8800%" height="15" fill="rgb(221,13,13)" fg:x="369" fg:w="30"/><text x="10.9415%" y="623.50">x..</text></g><g><title>__x64_sys_munmap (30 samples, 0.88%)</title><rect x="10.8243%" y="597" width="0.8800%" height="15" fill="rgb(238,131,9)" fg:x="369" fg:w="30"/><text x="10.9415%" y="607.50">_..</text></g><g><title>__vm_munmap (30 samples, 0.88%)</title><rect x="10.8243%" y="581" width="0.8800%" height="15" fill="rgb(211,50,8)" fg:x="369" fg:w="30"/><text x="10.9415%" y="591.50">_..</text></g><g><title>do_vmi_munmap (30 samples, 0.88%)</title><rect x="10.8243%" y="565" width="0.8800%" height="15" fill="rgb(245,182,24)" fg:x="369" fg:w="30"/><text x="10.9415%" y="575.50">d..</text></g><g><title>do_vmi_align_munmap (30 samples, 0.88%)</title><rect x="10.8243%" y="549" width="0.8800%" height="15" fill="rgb(242,14,37)" fg:x="369" fg:w="30"/><text x="10.9415%" y="559.50">d..</text></g><g><title>unmap_region (30 samples, 0.88%)</title><rect x="10.8243%" y="533" width="0.8800%" height="15" fill="rgb(246,228,12)" fg:x="369" fg:w="30"/><text x="10.9415%" y="543.50">u..</text></g><g><title>unmap_vmas (29 samples, 0.85%)</title><rect x="10.8536%" y="517" width="0.8507%" height="15" fill="rgb(213,55,15)" fg:x="370" fg:w="29"/><text x="10.9708%" y="527.50">u..</text></g><g><title>unmap_single_vma (29 samples, 0.85%)</title><rect x="10.8536%" y="501" width="0.8507%" height="15" fill="rgb(209,9,3)" fg:x="370" fg:w="29"/><text x="10.9708%" y="511.50">u..</text></g><g><title>unmap_page_range (29 samples, 0.85%)</title><rect x="10.8536%" y="485" width="0.8507%" height="15" fill="rgb(230,59,30)" fg:x="370" fg:w="29"/><text x="10.9708%" y="495.50">u..</text></g><g><title>zap_pmd_range.isra.0 (29 samples, 0.85%)</title><rect x="10.8536%" y="469" width="0.8507%" height="15" fill="rgb(209,121,21)" fg:x="370" fg:w="29"/><text x="10.9708%" y="479.50">z..</text></g><g><title>zap_pte_range (25 samples, 0.73%)</title><rect x="10.9710%" y="453" width="0.7334%" height="15" fill="rgb(220,109,13)" fg:x="374" fg:w="25"/><text x="11.0881%" y="463.50"></text></g><g><title>vm_normal_page (1 samples, 0.03%)</title><rect x="11.6750%" y="437" width="0.0293%" height="15" fill="rgb(232,18,1)" fg:x="398" fg:w="1"/><text x="11.7922%" y="447.50"></text></g><g><title>malloc_consolidate (10 samples, 0.29%)</title><rect x="15.8991%" y="501" width="0.2933%" height="15" fill="rgb(215,41,42)" fg:x="542" fg:w="10"/><text x="16.0163%" y="511.50"></text></g><g><title>unlink_chunk (1 samples, 0.03%)</title><rect x="16.1631%" y="485" width="0.0293%" height="15" fill="rgb(224,123,36)" fg:x="551" fg:w="1"/><text x="16.2803%" y="495.50"></text></g><g><title>_int_free (125 samples, 3.67%)</title><rect x="12.7897%" y="517" width="3.6668%" height="15" fill="rgb(240,125,3)" fg:x="436" fg:w="125"/><text x="12.9069%" y="527.50">_int_free</text></g><g><title>unlink_chunk (9 samples, 0.26%)</title><rect x="16.1924%" y="501" width="0.2640%" height="15" fill="rgb(205,98,50)" fg:x="552" fg:w="9"/><text x="16.3096%" y="511.50"></text></g><g><title>__GI___libc_free (137 samples, 4.02%)</title><rect x="12.4963%" y="533" width="4.0188%" height="15" fill="rgb(205,185,37)" fg:x="426" fg:w="137"/><text x="12.6135%" y="543.50">__GI___libc_..</text></g><g><title>arena_for_chunk (2 samples, 0.06%)</title><rect x="16.4564%" y="517" width="0.0587%" height="15" fill="rgb(238,207,15)" fg:x="561" fg:w="2"/><text x="16.5736%" y="527.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.09%)</title><rect x="16.5151%" y="533" width="0.0880%" height="15" fill="rgb(213,199,42)" fg:x="563" fg:w="3"/><text x="16.6323%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (141 samples, 4.14%)</title><rect x="12.4963%" y="549" width="4.1361%" height="15" fill="rgb(235,201,11)" fg:x="426" fg:w="141"/><text x="12.6135%" y="559.50">alloc::alloc..</text></g><g><title>__rust_dealloc (1 samples, 0.03%)</title><rect x="16.6031%" y="533" width="0.0293%" height="15" fill="rgb(207,46,11)" fg:x="566" fg:w="1"/><text x="16.7203%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (144 samples, 4.22%)</title><rect x="12.4963%" y="565" width="4.2241%" height="15" fill="rgb(241,35,35)" fg:x="426" fg:w="144"/><text x="12.6135%" y="575.50">&lt;alloc::alloc..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (3 samples, 0.09%)</title><rect x="16.6324%" y="549" width="0.0880%" height="15" fill="rgb(243,32,47)" fg:x="567" fg:w="3"/><text x="16.7496%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::graph::Graph&gt;&gt; (206 samples, 6.04%)</title><rect x="10.8243%" y="693" width="6.0428%" height="15" fill="rgb(247,202,23)" fg:x="369" fg:w="206"/><text x="10.9415%" y="703.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::structures::graph::AdjacencyListGraph&gt; (176 samples, 5.16%)</title><rect x="11.7043%" y="677" width="5.1628%" height="15" fill="rgb(219,102,11)" fg:x="399" fg:w="176"/><text x="11.8215%" y="687.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt;&gt; (176 samples, 5.16%)</title><rect x="11.7043%" y="661" width="5.1628%" height="15" fill="rgb(243,110,44)" fg:x="399" fg:w="176"/><text x="11.8215%" y="671.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (176 samples, 5.16%)</title><rect x="11.7043%" y="645" width="5.1628%" height="15" fill="rgb(222,74,54)" fg:x="399" fg:w="176"/><text x="11.8215%" y="655.50">&lt;alloc::vec::Vec..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;(usize,f64)&gt;]&gt; (176 samples, 5.16%)</title><rect x="11.7043%" y="629" width="5.1628%" height="15" fill="rgb(216,99,12)" fg:x="399" fg:w="176"/><text x="11.8215%" y="639.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (176 samples, 5.16%)</title><rect x="11.7043%" y="613" width="5.1628%" height="15" fill="rgb(226,22,26)" fg:x="399" fg:w="176"/><text x="11.8215%" y="623.50">core::ptr::drop_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (176 samples, 5.16%)</title><rect x="11.7043%" y="597" width="5.1628%" height="15" fill="rgb(217,163,10)" fg:x="399" fg:w="176"/><text x="11.8215%" y="607.50">core::ptr::drop_..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (176 samples, 5.16%)</title><rect x="11.7043%" y="581" width="5.1628%" height="15" fill="rgb(213,25,53)" fg:x="399" fg:w="176"/><text x="11.8215%" y="591.50">&lt;alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.15%)</title><rect x="16.7204%" y="565" width="0.1467%" height="15" fill="rgb(252,105,26)" fg:x="570" fg:w="5"/><text x="16.8376%" y="575.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="16.8671%" y="517" width="0.0293%" height="15" fill="rgb(220,39,43)" fg:x="575" fg:w="1"/><text x="16.9843%" y="527.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="16.8671%" y="501" width="0.0293%" height="15" fill="rgb(229,68,48)" fg:x="575" fg:w="1"/><text x="16.9843%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="16.8671%" y="485" width="0.0293%" height="15" fill="rgb(252,8,32)" fg:x="575" fg:w="1"/><text x="16.9843%" y="495.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="16.8671%" y="469" width="0.0293%" height="15" fill="rgb(223,20,43)" fg:x="575" fg:w="1"/><text x="16.9843%" y="479.50"></text></g><g><title>free_unref_page_list (1 samples, 0.03%)</title><rect x="16.8671%" y="453" width="0.0293%" height="15" fill="rgb(229,81,49)" fg:x="575" fg:w="1"/><text x="16.9843%" y="463.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.03%)</title><rect x="16.8671%" y="437" width="0.0293%" height="15" fill="rgb(236,28,36)" fg:x="575" fg:w="1"/><text x="16.9843%" y="447.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.03%)</title><rect x="16.8671%" y="421" width="0.0293%" height="15" fill="rgb(249,185,26)" fg:x="575" fg:w="1"/><text x="16.9843%" y="431.50"></text></g><g><title>__free_one_page (1 samples, 0.03%)</title><rect x="16.8671%" y="405" width="0.0293%" height="15" fill="rgb(249,174,33)" fg:x="575" fg:w="1"/><text x="16.9843%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;fringe_vs_astar::context::Context&gt; (208 samples, 6.10%)</title><rect x="10.8243%" y="709" width="6.1015%" height="15" fill="rgb(233,201,37)" fg:x="369" fg:w="208"/><text x="10.9415%" y="719.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn fringe_vs_astar::structures::map::Map&gt;&gt; (2 samples, 0.06%)</title><rect x="16.8671%" y="693" width="0.0587%" height="15" fill="rgb(221,78,26)" fg:x="575" fg:w="2"/><text x="16.9843%" y="703.50"></text></g><g><title>__GI___libc_free (2 samples, 0.06%)</title><rect x="16.8671%" y="677" width="0.0587%" height="15" fill="rgb(250,127,30)" fg:x="575" fg:w="2"/><text x="16.9843%" y="687.50"></text></g><g><title>__GI___munmap (2 samples, 0.06%)</title><rect x="16.8671%" y="661" width="0.0587%" height="15" fill="rgb(230,49,44)" fg:x="575" fg:w="2"/><text x="16.9843%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="16.8671%" y="645" width="0.0587%" height="15" fill="rgb(229,67,23)" fg:x="575" fg:w="2"/><text x="16.9843%" y="655.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="16.8671%" y="629" width="0.0587%" height="15" fill="rgb(249,83,47)" fg:x="575" fg:w="2"/><text x="16.9843%" y="639.50"></text></g><g><title>x64_sys_call (2 samples, 0.06%)</title><rect x="16.8671%" y="613" width="0.0587%" height="15" fill="rgb(215,43,3)" fg:x="575" fg:w="2"/><text x="16.9843%" y="623.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.06%)</title><rect x="16.8671%" y="597" width="0.0587%" height="15" fill="rgb(238,154,13)" fg:x="575" fg:w="2"/><text x="16.9843%" y="607.50"></text></g><g><title>__vm_munmap (2 samples, 0.06%)</title><rect x="16.8671%" y="581" width="0.0587%" height="15" fill="rgb(219,56,2)" fg:x="575" fg:w="2"/><text x="16.9843%" y="591.50"></text></g><g><title>do_vmi_munmap (2 samples, 0.06%)</title><rect x="16.8671%" y="565" width="0.0587%" height="15" fill="rgb(233,0,4)" fg:x="575" fg:w="2"/><text x="16.9843%" y="575.50"></text></g><g><title>do_vmi_align_munmap (2 samples, 0.06%)</title><rect x="16.8671%" y="549" width="0.0587%" height="15" fill="rgb(235,30,7)" fg:x="575" fg:w="2"/><text x="16.9843%" y="559.50"></text></g><g><title>unmap_region (2 samples, 0.06%)</title><rect x="16.8671%" y="533" width="0.0587%" height="15" fill="rgb(250,79,13)" fg:x="575" fg:w="2"/><text x="16.9843%" y="543.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="16.8965%" y="517" width="0.0293%" height="15" fill="rgb(211,146,34)" fg:x="576" fg:w="1"/><text x="17.0136%" y="527.50"></text></g><g><title>unmap_single_vma (1 samples, 0.03%)</title><rect x="16.8965%" y="501" width="0.0293%" height="15" fill="rgb(228,22,38)" fg:x="576" fg:w="1"/><text x="17.0136%" y="511.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="16.8965%" y="485" width="0.0293%" height="15" fill="rgb(235,168,5)" fg:x="576" fg:w="1"/><text x="17.0136%" y="495.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.03%)</title><rect x="16.8965%" y="469" width="0.0293%" height="15" fill="rgb(221,155,16)" fg:x="576" fg:w="1"/><text x="17.0136%" y="479.50"></text></g><g><title>_compound_head (1 samples, 0.03%)</title><rect x="16.8965%" y="453" width="0.0293%" height="15" fill="rgb(215,215,53)" fg:x="576" fg:w="1"/><text x="17.0136%" y="463.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="18.6565%" y="485" width="0.0293%" height="15" fill="rgb(223,4,10)" fg:x="636" fg:w="1"/><text x="18.7737%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="18.8032%" y="437" width="0.0293%" height="15" fill="rgb(234,103,6)" fg:x="641" fg:w="1"/><text x="18.9204%" y="447.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="18.8325%" y="437" width="0.0293%" height="15" fill="rgb(227,97,0)" fg:x="642" fg:w="1"/><text x="18.9497%" y="447.50"></text></g><g><title>down_read_trylock (1 samples, 0.03%)</title><rect x="18.8618%" y="437" width="0.0293%" height="15" fill="rgb(234,150,53)" fg:x="643" fg:w="1"/><text x="18.9790%" y="447.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="19.1552%" y="389" width="0.0293%" height="15" fill="rgb(228,201,54)" fg:x="653" fg:w="1"/><text x="19.2724%" y="399.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="19.3018%" y="373" width="0.0293%" height="15" fill="rgb(222,22,37)" fg:x="658" fg:w="1"/><text x="19.4190%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="19.3605%" y="357" width="0.0293%" height="15" fill="rgb(237,53,32)" fg:x="660" fg:w="1"/><text x="19.4777%" y="367.50"></text></g><g><title>blk_cgroup_congested (4 samples, 0.12%)</title><rect x="19.3899%" y="357" width="0.1173%" height="15" fill="rgb(233,25,53)" fg:x="661" fg:w="4"/><text x="19.5070%" y="367.50"></text></g><g><title>__folio_throttle_swaprate (7 samples, 0.21%)</title><rect x="19.3312%" y="373" width="0.2053%" height="15" fill="rgb(210,40,34)" fg:x="659" fg:w="7"/><text x="19.4484%" y="383.50"></text></g><g><title>kthread_blkcg (1 samples, 0.03%)</title><rect x="19.5072%" y="357" width="0.0293%" height="15" fill="rgb(241,220,44)" fg:x="665" fg:w="1"/><text x="19.6244%" y="367.50"></text></g><g><title>__rcu_read_unlock (38 samples, 1.11%)</title><rect x="19.7419%" y="357" width="1.1147%" height="15" fill="rgb(235,28,35)" fg:x="673" fg:w="38"/><text x="19.8590%" y="367.50">__..</text></g><g><title>__count_memcg_events (4 samples, 0.12%)</title><rect x="21.0326%" y="341" width="0.1173%" height="15" fill="rgb(210,56,17)" fg:x="717" fg:w="4"/><text x="21.1497%" y="351.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.06%)</title><rect x="21.0912%" y="325" width="0.0587%" height="15" fill="rgb(224,130,29)" fg:x="719" fg:w="2"/><text x="21.2084%" y="335.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="21.1499%" y="341" width="0.0293%" height="15" fill="rgb(235,212,8)" fg:x="721" fg:w="1"/><text x="21.2671%" y="351.50"></text></g><g><title>memcg_check_events (1 samples, 0.03%)</title><rect x="21.1792%" y="341" width="0.0293%" height="15" fill="rgb(223,33,50)" fg:x="722" fg:w="1"/><text x="21.2964%" y="351.50"></text></g><g><title>refill_stock (1 samples, 0.03%)</title><rect x="21.2086%" y="341" width="0.0293%" height="15" fill="rgb(219,149,13)" fg:x="723" fg:w="1"/><text x="21.3258%" y="351.50"></text></g><g><title>charge_memcg (24 samples, 0.70%)</title><rect x="20.8566%" y="357" width="0.7040%" height="15" fill="rgb(250,156,29)" fg:x="711" fg:w="24"/><text x="20.9737%" y="367.50"></text></g><g><title>try_charge_memcg (11 samples, 0.32%)</title><rect x="21.2379%" y="341" width="0.3227%" height="15" fill="rgb(216,193,19)" fg:x="724" fg:w="11"/><text x="21.3551%" y="351.50"></text></g><g><title>consume_stock (2 samples, 0.06%)</title><rect x="21.5019%" y="325" width="0.0587%" height="15" fill="rgb(216,135,14)" fg:x="733" fg:w="2"/><text x="21.6191%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (10 samples, 0.29%)</title><rect x="21.5606%" y="357" width="0.2933%" height="15" fill="rgb(241,47,5)" fg:x="735" fg:w="10"/><text x="21.6778%" y="367.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="21.8246%" y="341" width="0.0293%" height="15" fill="rgb(233,42,35)" fg:x="744" fg:w="1"/><text x="21.9418%" y="351.50"></text></g><g><title>__mem_cgroup_charge (80 samples, 2.35%)</title><rect x="19.5365%" y="373" width="2.3467%" height="15" fill="rgb(231,13,6)" fg:x="666" fg:w="80"/><text x="19.6537%" y="383.50">__mem_..</text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="21.8539%" y="357" width="0.0293%" height="15" fill="rgb(207,181,40)" fg:x="745" fg:w="1"/><text x="21.9711%" y="367.50"></text></g><g><title>__pte_offset_map_lock (3 samples, 0.09%)</title><rect x="21.8833%" y="373" width="0.0880%" height="15" fill="rgb(254,173,49)" fg:x="746" fg:w="3"/><text x="22.0004%" y="383.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="21.9713%" y="373" width="0.0587%" height="15" fill="rgb(221,1,38)" fg:x="749" fg:w="2"/><text x="22.0884%" y="383.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.09%)</title><rect x="22.0299%" y="373" width="0.0880%" height="15" fill="rgb(206,124,46)" fg:x="751" fg:w="3"/><text x="22.1471%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="22.3233%" y="325" width="0.0293%" height="15" fill="rgb(249,21,11)" fg:x="761" fg:w="1"/><text x="22.4404%" y="335.50"></text></g><g><title>folio_lruvec_lock_irqsave (1 samples, 0.03%)</title><rect x="22.3526%" y="325" width="0.0293%" height="15" fill="rgb(222,201,40)" fg:x="762" fg:w="1"/><text x="22.4698%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="22.3526%" y="309" width="0.0293%" height="15" fill="rgb(235,61,29)" fg:x="762" fg:w="1"/><text x="22.4698%" y="319.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="22.3526%" y="293" width="0.0293%" height="15" fill="rgb(219,207,3)" fg:x="762" fg:w="1"/><text x="22.4698%" y="303.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="22.5286%" y="293" width="0.0293%" height="15" fill="rgb(222,56,46)" fg:x="768" fg:w="1"/><text x="22.6458%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="22.5286%" y="277" width="0.0293%" height="15" fill="rgb(239,76,54)" fg:x="768" fg:w="1"/><text x="22.6458%" y="287.50"></text></g><g><title>lru_add_fn (7 samples, 0.21%)</title><rect x="22.3819%" y="325" width="0.2053%" height="15" fill="rgb(231,124,27)" fg:x="763" fg:w="7"/><text x="22.4991%" y="335.50"></text></g><g><title>lru_gen_add_folio (5 samples, 0.15%)</title><rect x="22.4406%" y="309" width="0.1467%" height="15" fill="rgb(249,195,6)" fg:x="765" fg:w="5"/><text x="22.5578%" y="319.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="22.5579%" y="293" width="0.0293%" height="15" fill="rgb(237,174,47)" fg:x="769" fg:w="1"/><text x="22.6751%" y="303.50"></text></g><g><title>folio_add_lru_vma (17 samples, 0.50%)</title><rect x="22.1179%" y="373" width="0.4987%" height="15" fill="rgb(206,201,31)" fg:x="754" fg:w="17"/><text x="22.2351%" y="383.50"></text></g><g><title>folio_add_lru (17 samples, 0.50%)</title><rect x="22.1179%" y="357" width="0.4987%" height="15" fill="rgb(231,57,52)" fg:x="754" fg:w="17"/><text x="22.2351%" y="367.50"></text></g><g><title>folio_batch_move_lru (12 samples, 0.35%)</title><rect x="22.2646%" y="341" width="0.3520%" height="15" fill="rgb(248,177,22)" fg:x="759" fg:w="12"/><text x="22.3818%" y="351.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="22.5873%" y="325" width="0.0293%" height="15" fill="rgb(215,211,37)" fg:x="770" fg:w="1"/><text x="22.7045%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="22.8513%" y="325" width="0.0293%" height="15" fill="rgb(241,128,51)" fg:x="779" fg:w="1"/><text x="22.9685%" y="335.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.09%)</title><rect x="22.8513%" y="341" width="0.0880%" height="15" fill="rgb(227,165,31)" fg:x="779" fg:w="3"/><text x="22.9685%" y="351.50"></text></g><g><title>__mod_node_page_state (2 samples, 0.06%)</title><rect x="22.8806%" y="325" width="0.0587%" height="15" fill="rgb(228,167,24)" fg:x="780" fg:w="2"/><text x="22.9978%" y="335.50"></text></g><g><title>folio_add_new_anon_rmap (12 samples, 0.35%)</title><rect x="22.6166%" y="373" width="0.3520%" height="15" fill="rgb(228,143,12)" fg:x="771" fg:w="12"/><text x="22.7338%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (5 samples, 0.15%)</title><rect x="22.8219%" y="357" width="0.1467%" height="15" fill="rgb(249,149,8)" fg:x="778" fg:w="5"/><text x="22.9391%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="22.9393%" y="341" width="0.0293%" height="15" fill="rgb(243,35,44)" fg:x="782" fg:w="1"/><text x="23.0565%" y="351.50"></text></g><g><title>inc_mm_counter (1 samples, 0.03%)</title><rect x="22.9686%" y="373" width="0.0293%" height="15" fill="rgb(246,89,9)" fg:x="783" fg:w="1"/><text x="23.0858%" y="383.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="22.9686%" y="357" width="0.0293%" height="15" fill="rgb(233,213,13)" fg:x="783" fg:w="1"/><text x="23.0858%" y="367.50"></text></g><g><title>policy_nodemask (1 samples, 0.03%)</title><rect x="22.9979%" y="373" width="0.0293%" height="15" fill="rgb(233,141,41)" fg:x="784" fg:w="1"/><text x="23.1151%" y="383.50"></text></g><g><title>set_pte (1 samples, 0.03%)</title><rect x="23.0273%" y="373" width="0.0293%" height="15" fill="rgb(239,167,4)" fg:x="785" fg:w="1"/><text x="23.1445%" y="383.50"></text></g><g><title>__next_zones_zonelist (2 samples, 0.06%)</title><rect x="23.2033%" y="325" width="0.0587%" height="15" fill="rgb(209,217,16)" fg:x="791" fg:w="2"/><text x="23.3205%" y="335.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="23.3500%" y="309" width="0.0293%" height="15" fill="rgb(219,88,35)" fg:x="796" fg:w="1"/><text x="23.4671%" y="319.50"></text></g><g><title>_raw_spin_trylock (4 samples, 0.12%)</title><rect x="23.3793%" y="309" width="0.1173%" height="15" fill="rgb(220,193,23)" fg:x="797" fg:w="4"/><text x="23.4965%" y="319.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="23.4966%" y="309" width="0.0293%" height="15" fill="rgb(230,90,52)" fg:x="801" fg:w="1"/><text x="23.6138%" y="319.50"></text></g><g><title>clear_page_erms (10 samples, 0.29%)</title><rect x="23.5260%" y="309" width="0.2933%" height="15" fill="rgb(252,106,19)" fg:x="802" fg:w="10"/><text x="23.6431%" y="319.50"></text></g><g><title>post_alloc_hook (1 samples, 0.03%)</title><rect x="23.8193%" y="309" width="0.0293%" height="15" fill="rgb(206,74,20)" fg:x="812" fg:w="1"/><text x="23.9365%" y="319.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.88%)</title><rect x="23.2620%" y="325" width="0.8800%" height="15" fill="rgb(230,138,44)" fg:x="793" fg:w="30"/><text x="23.3791%" y="335.50">g..</text></g><g><title>rmqueue (10 samples, 0.29%)</title><rect x="23.8486%" y="309" width="0.2933%" height="15" fill="rgb(235,182,43)" fg:x="813" fg:w="10"/><text x="23.9658%" y="319.50"></text></g><g><title>__rmqueue_pcplist (8 samples, 0.23%)</title><rect x="23.9073%" y="293" width="0.2347%" height="15" fill="rgb(242,16,51)" fg:x="815" fg:w="8"/><text x="24.0245%" y="303.50"></text></g><g><title>rmqueue_bulk (8 samples, 0.23%)</title><rect x="23.9073%" y="277" width="0.2347%" height="15" fill="rgb(248,9,4)" fg:x="815" fg:w="8"/><text x="24.0245%" y="287.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="24.1420%" y="325" width="0.0293%" height="15" fill="rgb(210,31,22)" fg:x="823" fg:w="1"/><text x="24.2592%" y="335.50"></text></g><g><title>__alloc_pages (37 samples, 1.09%)</title><rect x="23.1446%" y="341" width="1.0854%" height="15" fill="rgb(239,54,39)" fg:x="789" fg:w="37"/><text x="23.2618%" y="351.50">_..</text></g><g><title>should_fail_alloc_page (2 samples, 0.06%)</title><rect x="24.1713%" y="325" width="0.0587%" height="15" fill="rgb(230,99,41)" fg:x="824" fg:w="2"/><text x="24.2885%" y="335.50"></text></g><g><title>__folio_alloc (39 samples, 1.14%)</title><rect x="23.1446%" y="357" width="1.1440%" height="15" fill="rgb(253,106,12)" fg:x="789" fg:w="39"/><text x="23.2618%" y="367.50">__..</text></g><g><title>__next_zones_zonelist (2 samples, 0.06%)</title><rect x="24.2300%" y="341" width="0.0587%" height="15" fill="rgb(213,46,41)" fg:x="826" fg:w="2"/><text x="24.3472%" y="351.50"></text></g><g><title>do_anonymous_page (175 samples, 5.13%)</title><rect x="19.1845%" y="389" width="5.1335%" height="15" fill="rgb(215,133,35)" fg:x="654" fg:w="175"/><text x="19.3017%" y="399.50">do_anonymous_page</text></g><g><title>vma_alloc_folio (43 samples, 1.26%)</title><rect x="23.0566%" y="373" width="1.2614%" height="15" fill="rgb(213,28,5)" fg:x="786" fg:w="43"/><text x="23.1738%" y="383.50">vm..</text></g><g><title>policy_node (1 samples, 0.03%)</title><rect x="24.2886%" y="357" width="0.0293%" height="15" fill="rgb(215,77,49)" fg:x="828" fg:w="1"/><text x="24.4058%" y="367.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="24.3180%" y="389" width="0.0293%" height="15" fill="rgb(248,100,22)" fg:x="829" fg:w="1"/><text x="24.4352%" y="399.50"></text></g><g><title>__handle_mm_fault (187 samples, 5.49%)</title><rect x="18.9205%" y="421" width="5.4855%" height="15" fill="rgb(208,67,9)" fg:x="645" fg:w="187"/><text x="19.0377%" y="431.50">__handle_mm_fault</text></g><g><title>handle_pte_fault (180 samples, 5.28%)</title><rect x="19.1258%" y="405" width="5.2801%" height="15" fill="rgb(219,133,21)" fg:x="652" fg:w="180"/><text x="19.2430%" y="415.50">handle_pte_fault</text></g><g><title>pte_offset_map_nolock (2 samples, 0.06%)</title><rect x="24.3473%" y="389" width="0.0587%" height="15" fill="rgb(246,46,29)" fg:x="830" fg:w="2"/><text x="24.4645%" y="399.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="24.3767%" y="373" width="0.0293%" height="15" fill="rgb(246,185,52)" fg:x="831" fg:w="1"/><text x="24.4938%" y="383.50"></text></g><g><title>count_memcg_events.constprop.0 (5 samples, 0.15%)</title><rect x="24.4060%" y="421" width="0.1467%" height="15" fill="rgb(252,136,11)" fg:x="832" fg:w="5"/><text x="24.5232%" y="431.50"></text></g><g><title>__count_memcg_events (4 samples, 0.12%)</title><rect x="24.4353%" y="405" width="0.1173%" height="15" fill="rgb(219,138,53)" fg:x="833" fg:w="4"/><text x="24.5525%" y="415.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.06%)</title><rect x="24.4940%" y="389" width="0.0587%" height="15" fill="rgb(211,51,23)" fg:x="835" fg:w="2"/><text x="24.6112%" y="399.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="24.5527%" y="421" width="0.0293%" height="15" fill="rgb(247,221,28)" fg:x="837" fg:w="1"/><text x="24.6698%" y="431.50"></text></g><g><title>p4d_offset (1 samples, 0.03%)</title><rect x="24.5820%" y="421" width="0.0293%" height="15" fill="rgb(251,222,45)" fg:x="838" fg:w="1"/><text x="24.6992%" y="431.50"></text></g><g><title>handle_mm_fault (196 samples, 5.75%)</title><rect x="18.8912%" y="437" width="5.7495%" height="15" fill="rgb(217,162,53)" fg:x="644" fg:w="196"/><text x="19.0084%" y="447.50">handle_mm_fault</text></g><g><title>pud_val (1 samples, 0.03%)</title><rect x="24.6113%" y="421" width="0.0293%" height="15" fill="rgb(229,93,14)" fg:x="839" fg:w="1"/><text x="24.7285%" y="431.50"></text></g><g><title>mas_walk (5 samples, 0.15%)</title><rect x="24.6700%" y="421" width="0.1467%" height="15" fill="rgb(209,67,49)" fg:x="841" fg:w="5"/><text x="24.7872%" y="431.50"></text></g><g><title>mtree_range_walk (5 samples, 0.15%)</title><rect x="24.6700%" y="405" width="0.1467%" height="15" fill="rgb(213,87,29)" fg:x="841" fg:w="5"/><text x="24.7872%" y="415.50"></text></g><g><title>lock_vma_under_rcu (7 samples, 0.21%)</title><rect x="24.6407%" y="437" width="0.2053%" height="15" fill="rgb(205,151,52)" fg:x="840" fg:w="7"/><text x="24.7578%" y="447.50"></text></g><g><title>mtree_range_walk (1 samples, 0.03%)</title><rect x="24.8167%" y="421" width="0.0293%" height="15" fill="rgb(253,215,39)" fg:x="846" fg:w="1"/><text x="24.9338%" y="431.50"></text></g><g><title>do_user_addr_fault (210 samples, 6.16%)</title><rect x="18.7738%" y="453" width="6.1602%" height="15" fill="rgb(221,220,41)" fg:x="640" fg:w="210"/><text x="18.8910%" y="463.50">do_user_addr_fault</text></g><g><title>up_read (3 samples, 0.09%)</title><rect x="24.8460%" y="437" width="0.0880%" height="15" fill="rgb(218,133,21)" fg:x="847" fg:w="3"/><text x="24.9632%" y="447.50"></text></g><g><title>irqentry_exit (5 samples, 0.15%)</title><rect x="24.9340%" y="453" width="0.1467%" height="15" fill="rgb(221,193,43)" fg:x="850" fg:w="5"/><text x="25.0512%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.15%)</title><rect x="24.9340%" y="437" width="0.1467%" height="15" fill="rgb(240,128,52)" fg:x="850" fg:w="5"/><text x="25.0512%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.09%)</title><rect x="24.9927%" y="421" width="0.0880%" height="15" fill="rgb(253,114,12)" fg:x="852" fg:w="3"/><text x="25.1099%" y="431.50"></text></g><g><title>asm_exc_page_fault (219 samples, 6.42%)</title><rect x="18.6858%" y="485" width="6.4242%" height="15" fill="rgb(215,223,47)" fg:x="637" fg:w="219"/><text x="18.8030%" y="495.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (216 samples, 6.34%)</title><rect x="18.7738%" y="469" width="6.3362%" height="15" fill="rgb(248,225,23)" fg:x="640" fg:w="216"/><text x="18.8910%" y="479.50">exc_page_fault</text></g><g><title>lock_vma_under_rcu (1 samples, 0.03%)</title><rect x="25.0807%" y="453" width="0.0293%" height="15" fill="rgb(250,108,0)" fg:x="855" fg:w="1"/><text x="25.1979%" y="463.50"></text></g><g><title>error_entry (1 samples, 0.03%)</title><rect x="25.1100%" y="485" width="0.0293%" height="15" fill="rgb(228,208,7)" fg:x="856" fg:w="1"/><text x="25.2272%" y="495.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::new (305 samples, 8.95%)</title><rect x="16.9258%" y="693" width="8.9469%" height="15" fill="rgb(244,45,10)" fg:x="577" fg:w="305"/><text x="17.0430%" y="703.50">fringe_vs_astar::algorithms::f..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (305 samples, 8.95%)</title><rect x="16.9258%" y="677" width="8.9469%" height="15" fill="rgb(207,125,25)" fg:x="577" fg:w="305"/><text x="17.0430%" y="687.50">core::iter::traits::iterator::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (305 samples, 8.95%)</title><rect x="16.9258%" y="661" width="8.9469%" height="15" fill="rgb(210,195,18)" fg:x="577" fg:w="305"/><text x="17.0430%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (305 samples, 8.95%)</title><rect x="16.9258%" y="645" width="8.9469%" height="15" fill="rgb(249,80,12)" fg:x="577" fg:w="305"/><text x="17.0430%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (305 samples, 8.95%)</title><rect x="16.9258%" y="629" width="8.9469%" height="15" fill="rgb(221,65,9)" fg:x="577" fg:w="305"/><text x="17.0430%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (305 samples, 8.95%)</title><rect x="16.9258%" y="613" width="8.9469%" height="15" fill="rgb(235,49,36)" fg:x="577" fg:w="305"/><text x="17.0430%" y="623.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (305 samples, 8.95%)</title><rect x="16.9258%" y="597" width="8.9469%" height="15" fill="rgb(225,32,20)" fg:x="577" fg:w="305"/><text x="17.0430%" y="607.50">alloc::vec::Vec&lt;T,A&gt;::extend_t..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (305 samples, 8.95%)</title><rect x="16.9258%" y="581" width="8.9469%" height="15" fill="rgb(215,141,46)" fg:x="577" fg:w="305"/><text x="17.0430%" y="591.50">&lt;core::iter::adapters::take::T..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (305 samples, 8.95%)</title><rect x="16.9258%" y="565" width="8.9469%" height="15" fill="rgb(250,160,47)" fg:x="577" fg:w="305"/><text x="17.0430%" y="575.50">&lt;core::iter::adapters::take::T..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (305 samples, 8.95%)</title><rect x="16.9258%" y="549" width="8.9469%" height="15" fill="rgb(216,222,40)" fg:x="577" fg:w="305"/><text x="17.0430%" y="559.50">core::iter::traits::iterator::..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (303 samples, 8.89%)</title><rect x="16.9845%" y="533" width="8.8882%" height="15" fill="rgb(234,217,39)" fg:x="579" fg:w="303"/><text x="17.1016%" y="543.50">&lt;core::iter::adapters::take::T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (303 samples, 8.89%)</title><rect x="16.9845%" y="517" width="8.8882%" height="15" fill="rgb(207,178,40)" fg:x="579" fg:w="303"/><text x="17.1016%" y="527.50">alloc::vec::Vec&lt;T,A&gt;::extend_t..</text></g><g><title>core::ptr::write (303 samples, 8.89%)</title><rect x="16.9845%" y="501" width="8.8882%" height="15" fill="rgb(221,136,13)" fg:x="579" fg:w="303"/><text x="17.1016%" y="511.50">core::ptr::write</text></g><g><title>sync_regs (25 samples, 0.73%)</title><rect x="25.1393%" y="485" width="0.7334%" height="15" fill="rgb(249,199,10)" fg:x="857" fg:w="25"/><text x="25.2565%" y="495.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.41%)</title><rect x="42.0651%" y="677" width="0.4107%" height="15" fill="rgb(249,222,13)" fg:x="1434" fg:w="14"/><text x="42.1823%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (36 samples, 1.06%)</title><rect x="42.4758%" y="677" width="1.0560%" height="15" fill="rgb(244,185,38)" fg:x="1448" fg:w="36"/><text x="42.5930%" y="687.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (36 samples, 1.06%)</title><rect x="42.4758%" y="661" width="1.0560%" height="15" fill="rgb(236,202,9)" fg:x="1448" fg:w="36"/><text x="42.5930%" y="671.50">c..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (36 samples, 1.06%)</title><rect x="42.4758%" y="645" width="1.0560%" height="15" fill="rgb(250,229,37)" fg:x="1448" fg:w="36"/><text x="42.5930%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="43.5318%" y="677" width="0.0293%" height="15" fill="rgb(206,174,23)" fg:x="1484" fg:w="1"/><text x="43.6490%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="43.5318%" y="661" width="0.0293%" height="15" fill="rgb(211,33,43)" fg:x="1484" fg:w="1"/><text x="43.6490%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="43.5318%" y="645" width="0.0293%" height="15" fill="rgb(245,58,50)" fg:x="1484" fg:w="1"/><text x="43.6490%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="43.5612%" y="677" width="0.0587%" height="15" fill="rgb(244,68,36)" fg:x="1485" fg:w="2"/><text x="43.6783%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.06%)</title><rect x="43.5612%" y="661" width="0.0587%" height="15" fill="rgb(232,229,15)" fg:x="1485" fg:w="2"/><text x="43.6783%" y="671.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="43.6198%" y="581" width="0.0293%" height="15" fill="rgb(254,30,23)" fg:x="1487" fg:w="1"/><text x="43.7370%" y="591.50"></text></g><g><title>tick_do_update_jiffies64 (1 samples, 0.03%)</title><rect x="43.6198%" y="565" width="0.0293%" height="15" fill="rgb(235,160,14)" fg:x="1487" fg:w="1"/><text x="43.7370%" y="575.50"></text></g><g><title>calc_global_load (1 samples, 0.03%)</title><rect x="43.6198%" y="549" width="0.0293%" height="15" fill="rgb(212,155,44)" fg:x="1487" fg:w="1"/><text x="43.7370%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="43.6198%" y="677" width="0.0587%" height="15" fill="rgb(226,2,50)" fg:x="1487" fg:w="2"/><text x="43.7370%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="43.6198%" y="661" width="0.0587%" height="15" fill="rgb(234,177,6)" fg:x="1487" fg:w="2"/><text x="43.7370%" y="671.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="43.6198%" y="645" width="0.0587%" height="15" fill="rgb(217,24,9)" fg:x="1487" fg:w="2"/><text x="43.7370%" y="655.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.06%)</title><rect x="43.6198%" y="629" width="0.0587%" height="15" fill="rgb(220,13,46)" fg:x="1487" fg:w="2"/><text x="43.7370%" y="639.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.06%)</title><rect x="43.6198%" y="613" width="0.0587%" height="15" fill="rgb(239,221,27)" fg:x="1487" fg:w="2"/><text x="43.7370%" y="623.50"></text></g><g><title>tick_sched_timer (2 samples, 0.06%)</title><rect x="43.6198%" y="597" width="0.0587%" height="15" fill="rgb(222,198,25)" fg:x="1487" fg:w="2"/><text x="43.7370%" y="607.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="43.6492%" y="581" width="0.0293%" height="15" fill="rgb(211,99,13)" fg:x="1488" fg:w="1"/><text x="43.7664%" y="591.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="43.6492%" y="565" width="0.0293%" height="15" fill="rgb(232,111,31)" fg:x="1488" fg:w="1"/><text x="43.7664%" y="575.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="43.6492%" y="549" width="0.0293%" height="15" fill="rgb(245,82,37)" fg:x="1488" fg:w="1"/><text x="43.7664%" y="559.50"></text></g><g><title>task_tick_fair (1 samples, 0.03%)</title><rect x="43.6492%" y="533" width="0.0293%" height="15" fill="rgb(227,149,46)" fg:x="1488" fg:w="1"/><text x="43.7664%" y="543.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="43.6492%" y="517" width="0.0293%" height="15" fill="rgb(218,36,50)" fg:x="1488" fg:w="1"/><text x="43.7664%" y="527.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (1 samples, 0.03%)</title><rect x="43.6785%" y="661" width="0.0293%" height="15" fill="rgb(226,80,48)" fg:x="1489" fg:w="1"/><text x="43.7957%" y="671.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve::_{{closure}} (3 samples, 0.09%)</title><rect x="43.6785%" y="677" width="0.0880%" height="15" fill="rgb(238,224,15)" fg:x="1489" fg:w="3"/><text x="43.7957%" y="687.50"></text></g><g><title>fringe_vs_astar::algorithms::heuristic (2 samples, 0.06%)</title><rect x="43.7078%" y="661" width="0.0587%" height="15" fill="rgb(241,136,10)" fg:x="1490" fg:w="2"/><text x="43.8250%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="43.7665%" y="517" width="0.0293%" height="15" fill="rgb(208,32,45)" fg:x="1492" fg:w="1"/><text x="43.8837%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="43.7665%" y="501" width="0.0293%" height="15" fill="rgb(207,135,9)" fg:x="1492" fg:w="1"/><text x="43.8837%" y="511.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="43.7665%" y="485" width="0.0293%" height="15" fill="rgb(206,86,44)" fg:x="1492" fg:w="1"/><text x="43.8837%" y="495.50"></text></g><g><title>_compound_head (4 samples, 0.12%)</title><rect x="43.7958%" y="357" width="0.1173%" height="15" fill="rgb(245,177,15)" fg:x="1493" fg:w="4"/><text x="43.9130%" y="367.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="44.0305%" y="309" width="0.0293%" height="15" fill="rgb(206,64,50)" fg:x="1501" fg:w="1"/><text x="44.1477%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="44.0305%" y="293" width="0.0293%" height="15" fill="rgb(234,36,40)" fg:x="1501" fg:w="1"/><text x="44.1477%" y="303.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="44.0305%" y="277" width="0.0293%" height="15" fill="rgb(213,64,8)" fg:x="1501" fg:w="1"/><text x="44.1477%" y="287.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.09%)</title><rect x="44.0012%" y="325" width="0.0880%" height="15" fill="rgb(210,75,36)" fg:x="1500" fg:w="3"/><text x="44.1184%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="44.0598%" y="309" width="0.0293%" height="15" fill="rgb(229,88,21)" fg:x="1502" fg:w="1"/><text x="44.1770%" y="319.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="44.0892%" y="325" width="0.0293%" height="15" fill="rgb(252,204,47)" fg:x="1503" fg:w="1"/><text x="44.2064%" y="335.50"></text></g><g><title>page_remove_rmap (6 samples, 0.18%)</title><rect x="43.9718%" y="341" width="0.1760%" height="15" fill="rgb(208,77,27)" fg:x="1499" fg:w="6"/><text x="44.0890%" y="351.50"></text></g><g><title>folio_test_hugetlb (1 samples, 0.03%)</title><rect x="44.1185%" y="325" width="0.0293%" height="15" fill="rgb(221,76,26)" fg:x="1504" fg:w="1"/><text x="44.2357%" y="335.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.06%)</title><rect x="44.2065%" y="277" width="0.0587%" height="15" fill="rgb(225,139,18)" fg:x="1507" fg:w="2"/><text x="44.3237%" y="287.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="44.2358%" y="261" width="0.0293%" height="15" fill="rgb(230,137,11)" fg:x="1508" fg:w="1"/><text x="44.3530%" y="271.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.03%)</title><rect x="44.2652%" y="277" width="0.0293%" height="15" fill="rgb(212,28,1)" fg:x="1509" fg:w="1"/><text x="44.3824%" y="287.50"></text></g><g><title>free_unref_page_commit (7 samples, 0.21%)</title><rect x="44.3238%" y="261" width="0.2053%" height="15" fill="rgb(248,164,17)" fg:x="1511" fg:w="7"/><text x="44.4410%" y="271.50"></text></g><g><title>free_pcppages_bulk (7 samples, 0.21%)</title><rect x="44.3238%" y="245" width="0.2053%" height="15" fill="rgb(222,171,42)" fg:x="1511" fg:w="7"/><text x="44.4410%" y="255.50"></text></g><g><title>__free_one_page (7 samples, 0.21%)</title><rect x="44.3238%" y="229" width="0.2053%" height="15" fill="rgb(243,84,45)" fg:x="1511" fg:w="7"/><text x="44.4410%" y="239.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="44.4999%" y="213" width="0.0293%" height="15" fill="rgb(252,49,23)" fg:x="1517" fg:w="1"/><text x="44.6170%" y="223.50"></text></g><g><title>free_unref_page_list (11 samples, 0.32%)</title><rect x="44.2945%" y="277" width="0.3227%" height="15" fill="rgb(215,19,7)" fg:x="1510" fg:w="11"/><text x="44.4117%" y="287.50"></text></g><g><title>free_unref_page_prepare (3 samples, 0.09%)</title><rect x="44.5292%" y="261" width="0.0880%" height="15" fill="rgb(238,81,41)" fg:x="1518" fg:w="3"/><text x="44.6464%" y="271.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="44.6172%" y="277" width="0.0293%" height="15" fill="rgb(210,199,37)" fg:x="1521" fg:w="1"/><text x="44.7344%" y="287.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (6 samples, 0.18%)</title><rect x="44.6465%" y="277" width="0.1760%" height="15" fill="rgb(244,192,49)" fg:x="1522" fg:w="6"/><text x="44.7637%" y="287.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="44.7932%" y="261" width="0.0293%" height="15" fill="rgb(226,211,11)" fg:x="1527" fg:w="1"/><text x="44.9104%" y="271.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::construct_path (37 samples, 1.09%)</title><rect x="43.7665%" y="677" width="1.0854%" height="15" fill="rgb(236,162,54)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="687.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(f64,usize,bool,core::option::Option&lt;f64&gt;)&gt;&gt; (37 samples, 1.09%)</title><rect x="43.7665%" y="661" width="1.0854%" height="15" fill="rgb(220,229,9)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(f64,usize,bool,core::option::Option&lt;f64&gt;)&gt;&gt; (37 samples, 1.09%)</title><rect x="43.7665%" y="645" width="1.0854%" height="15" fill="rgb(250,87,22)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="655.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 1.09%)</title><rect x="43.7665%" y="629" width="1.0854%" height="15" fill="rgb(239,43,17)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 1.09%)</title><rect x="43.7665%" y="613" width="1.0854%" height="15" fill="rgb(231,177,25)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="623.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (37 samples, 1.09%)</title><rect x="43.7665%" y="597" width="1.0854%" height="15" fill="rgb(219,179,1)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="607.50">a..</text></g><g><title>__GI___libc_free (37 samples, 1.09%)</title><rect x="43.7665%" y="581" width="1.0854%" height="15" fill="rgb(238,219,53)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="591.50">_..</text></g><g><title>__GI___munmap (37 samples, 1.09%)</title><rect x="43.7665%" y="565" width="1.0854%" height="15" fill="rgb(232,167,36)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="575.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 1.09%)</title><rect x="43.7665%" y="549" width="1.0854%" height="15" fill="rgb(244,19,51)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="559.50">e..</text></g><g><title>do_syscall_64 (37 samples, 1.09%)</title><rect x="43.7665%" y="533" width="1.0854%" height="15" fill="rgb(224,6,22)" fg:x="1492" fg:w="37"/><text x="43.8837%" y="543.50">d..</text></g><g><title>x64_sys_call (36 samples, 1.06%)</title><rect x="43.7958%" y="517" width="1.0560%" height="15" fill="rgb(224,145,5)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="527.50">x..</text></g><g><title>__x64_sys_munmap (36 samples, 1.06%)</title><rect x="43.7958%" y="501" width="1.0560%" height="15" fill="rgb(234,130,49)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="511.50">_..</text></g><g><title>__vm_munmap (36 samples, 1.06%)</title><rect x="43.7958%" y="485" width="1.0560%" height="15" fill="rgb(254,6,2)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="495.50">_..</text></g><g><title>do_vmi_munmap (36 samples, 1.06%)</title><rect x="43.7958%" y="469" width="1.0560%" height="15" fill="rgb(208,96,46)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="479.50">d..</text></g><g><title>do_vmi_align_munmap (36 samples, 1.06%)</title><rect x="43.7958%" y="453" width="1.0560%" height="15" fill="rgb(239,3,39)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="463.50">d..</text></g><g><title>unmap_region (36 samples, 1.06%)</title><rect x="43.7958%" y="437" width="1.0560%" height="15" fill="rgb(233,210,1)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="447.50">u..</text></g><g><title>unmap_vmas (36 samples, 1.06%)</title><rect x="43.7958%" y="421" width="1.0560%" height="15" fill="rgb(244,137,37)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="431.50">u..</text></g><g><title>unmap_single_vma (36 samples, 1.06%)</title><rect x="43.7958%" y="405" width="1.0560%" height="15" fill="rgb(240,136,2)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="415.50">u..</text></g><g><title>unmap_page_range (36 samples, 1.06%)</title><rect x="43.7958%" y="389" width="1.0560%" height="15" fill="rgb(239,18,37)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="399.50">u..</text></g><g><title>zap_pmd_range.isra.0 (36 samples, 1.06%)</title><rect x="43.7958%" y="373" width="1.0560%" height="15" fill="rgb(218,185,22)" fg:x="1493" fg:w="36"/><text x="43.9130%" y="383.50">z..</text></g><g><title>zap_pte_range (32 samples, 0.94%)</title><rect x="43.9132%" y="357" width="0.9387%" height="15" fill="rgb(225,218,4)" fg:x="1497" fg:w="32"/><text x="44.0304%" y="367.50">z..</text></g><g><title>tlb_flush_mmu (24 samples, 0.70%)</title><rect x="44.1478%" y="341" width="0.7040%" height="15" fill="rgb(230,182,32)" fg:x="1505" fg:w="24"/><text x="44.2650%" y="351.50"></text></g><g><title>tlb_batch_pages_flush (24 samples, 0.70%)</title><rect x="44.1478%" y="325" width="0.7040%" height="15" fill="rgb(242,56,43)" fg:x="1505" fg:w="24"/><text x="44.2650%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (24 samples, 0.70%)</title><rect x="44.1478%" y="309" width="0.7040%" height="15" fill="rgb(233,99,24)" fg:x="1505" fg:w="24"/><text x="44.2650%" y="319.50"></text></g><g><title>release_pages (24 samples, 0.70%)</title><rect x="44.1478%" y="293" width="0.7040%" height="15" fill="rgb(234,209,42)" fg:x="1505" fg:w="24"/><text x="44.2650%" y="303.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="44.8225%" y="277" width="0.0293%" height="15" fill="rgb(227,7,12)" fg:x="1528" fg:w="1"/><text x="44.9397%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.56%)</title><rect x="44.8519%" y="581" width="0.5573%" height="15" fill="rgb(245,203,43)" fg:x="1529" fg:w="19"/><text x="44.9691%" y="591.50"></text></g><g><title>core::iter::adapters::copied::copy_fold::_{{closure}} (15 samples, 0.44%)</title><rect x="44.9692%" y="565" width="0.4400%" height="15" fill="rgb(238,205,33)" fg:x="1533" fg:w="15"/><text x="45.0864%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.44%)</title><rect x="44.9692%" y="549" width="0.4400%" height="15" fill="rgb(231,56,7)" fg:x="1533" fg:w="15"/><text x="45.0864%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (15 samples, 0.44%)</title><rect x="44.9692%" y="533" width="0.4400%" height="15" fill="rgb(244,186,29)" fg:x="1533" fg:w="15"/><text x="45.0864%" y="543.50"></text></g><g><title>core::ptr::write (15 samples, 0.44%)</title><rect x="44.9692%" y="517" width="0.4400%" height="15" fill="rgb(234,111,31)" fg:x="1533" fg:w="15"/><text x="45.0864%" y="527.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::later_to_now (25 samples, 0.73%)</title><rect x="44.8519%" y="677" width="0.7334%" height="15" fill="rgb(241,149,10)" fg:x="1529" fg:w="25"/><text x="44.9691%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (25 samples, 0.73%)</title><rect x="44.8519%" y="661" width="0.7334%" height="15" fill="rgb(249,206,44)" fg:x="1529" fg:w="25"/><text x="44.9691%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 0.73%)</title><rect x="44.8519%" y="645" width="0.7334%" height="15" fill="rgb(251,153,30)" fg:x="1529" fg:w="25"/><text x="44.9691%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (25 samples, 0.73%)</title><rect x="44.8519%" y="629" width="0.7334%" height="15" fill="rgb(239,152,38)" fg:x="1529" fg:w="25"/><text x="44.9691%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.73%)</title><rect x="44.8519%" y="613" width="0.7334%" height="15" fill="rgb(249,139,47)" fg:x="1529" fg:w="25"/><text x="44.9691%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.73%)</title><rect x="44.8519%" y="597" width="0.7334%" height="15" fill="rgb(244,64,35)" fg:x="1529" fg:w="25"/><text x="44.9691%" y="607.50"></text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (6 samples, 0.18%)</title><rect x="45.4092%" y="581" width="0.1760%" height="15" fill="rgb(216,46,15)" fg:x="1548" fg:w="6"/><text x="45.5264%" y="591.50"></text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::pop_now (43 samples, 1.26%)</title><rect x="45.5852%" y="677" width="1.2614%" height="15" fill="rgb(250,74,19)" fg:x="1554" fg:w="43"/><text x="45.7024%" y="687.50">fr..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (43 samples, 1.26%)</title><rect x="45.5852%" y="661" width="1.2614%" height="15" fill="rgb(249,42,33)" fg:x="1554" fg:w="43"/><text x="45.7024%" y="671.50">al..</text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="46.8172%" y="645" width="0.0293%" height="15" fill="rgb(242,149,17)" fg:x="1596" fg:w="1"/><text x="46.9344%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="46.8172%" y="629" width="0.0293%" height="15" fill="rgb(244,29,21)" fg:x="1596" fg:w="1"/><text x="46.9344%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="46.8172%" y="613" width="0.0293%" height="15" fill="rgb(220,130,37)" fg:x="1596" fg:w="1"/><text x="46.9344%" y="623.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="46.8172%" y="597" width="0.0293%" height="15" fill="rgb(211,67,2)" fg:x="1596" fg:w="1"/><text x="46.9344%" y="607.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="46.8172%" y="581" width="0.0293%" height="15" fill="rgb(235,68,52)" fg:x="1596" fg:w="1"/><text x="46.9344%" y="591.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="46.8172%" y="565" width="0.0293%" height="15" fill="rgb(246,142,3)" fg:x="1596" fg:w="1"/><text x="46.9344%" y="575.50"></text></g><g><title>fringe_vs_astar::context::Context::solve_mode (1,386 samples, 40.66%)</title><rect x="10.8243%" y="725" width="40.6571%" height="15" fill="rgb(241,25,7)" fg:x="369" fg:w="1386"/><text x="10.9415%" y="735.50">fringe_vs_astar::context::Context::solve_mode</text></g><g><title>fringe_vs_astar::context::Context::solve (1,178 samples, 34.56%)</title><rect x="16.9258%" y="709" width="34.5556%" height="15" fill="rgb(242,119,39)" fg:x="577" fg:w="1178"/><text x="17.0430%" y="719.50">fringe_vs_astar::context::Context::solve</text></g><g><title>fringe_vs_astar::algorithms::fringe::FringeSearch::solve (873 samples, 25.61%)</title><rect x="25.8727%" y="693" width="25.6087%" height="15" fill="rgb(241,98,45)" fg:x="882" fg:w="873"/><text x="25.9899%" y="703.50">fringe_vs_astar::algorithms::fringe::FringeSearch::solve</text></g><g><title>fringe_vs_astar::structures::fringe::Fringe::push_later (158 samples, 4.63%)</title><rect x="46.8466%" y="677" width="4.6348%" height="15" fill="rgb(254,28,30)" fg:x="1597" fg:w="158"/><text x="46.9638%" y="687.50">fringe_vs_asta..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (158 samples, 4.63%)</title><rect x="46.8466%" y="661" width="4.6348%" height="15" fill="rgb(241,142,54)" fg:x="1597" fg:w="158"/><text x="46.9638%" y="671.50">alloc::vec::Ve..</text></g><g><title>core::ptr::write (21 samples, 0.62%)</title><rect x="50.8654%" y="645" width="0.6160%" height="15" fill="rgb(222,85,15)" fg:x="1734" fg:w="21"/><text x="50.9825%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="52.0974%" y="693" width="0.0587%" height="15" fill="rgb(210,85,47)" fg:x="1776" fg:w="2"/><text x="52.2146%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.06%)</title><rect x="52.0974%" y="677" width="0.0587%" height="15" fill="rgb(224,206,25)" fg:x="1776" fg:w="2"/><text x="52.2146%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.06%)</title><rect x="52.0974%" y="661" width="0.0587%" height="15" fill="rgb(243,201,19)" fg:x="1776" fg:w="2"/><text x="52.2146%" y="671.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (12 samples, 0.35%)</title><rect x="52.1561%" y="693" width="0.3520%" height="15" fill="rgb(236,59,4)" fg:x="1778" fg:w="12"/><text x="52.2732%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (2 samples, 0.06%)</title><rect x="52.5081%" y="693" width="0.0587%" height="15" fill="rgb(254,179,45)" fg:x="1790" fg:w="2"/><text x="52.6253%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.06%)</title><rect x="52.5081%" y="677" width="0.0587%" height="15" fill="rgb(226,14,10)" fg:x="1790" fg:w="2"/><text x="52.6253%" y="687.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="53.8281%" y="613" width="0.0293%" height="15" fill="rgb(244,27,41)" fg:x="1835" fg:w="1"/><text x="53.9453%" y="623.50"></text></g><g><title>down_read_trylock (3 samples, 0.09%)</title><rect x="53.8574%" y="613" width="0.0880%" height="15" fill="rgb(235,35,32)" fg:x="1836" fg:w="3"/><text x="53.9746%" y="623.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="54.1801%" y="549" width="0.0293%" height="15" fill="rgb(218,68,31)" fg:x="1847" fg:w="1"/><text x="54.2973%" y="559.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="54.1801%" y="533" width="0.0293%" height="15" fill="rgb(207,120,37)" fg:x="1847" fg:w="1"/><text x="54.2973%" y="543.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.06%)</title><rect x="54.3561%" y="533" width="0.0587%" height="15" fill="rgb(227,98,0)" fg:x="1853" fg:w="2"/><text x="54.4733%" y="543.50"></text></g><g><title>__rcu_read_unlock (19 samples, 0.56%)</title><rect x="54.4148%" y="533" width="0.5573%" height="15" fill="rgb(207,7,3)" fg:x="1855" fg:w="19"/><text x="54.5320%" y="543.50"></text></g><g><title>__count_memcg_events (2 samples, 0.06%)</title><rect x="55.0895%" y="517" width="0.0587%" height="15" fill="rgb(206,98,19)" fg:x="1878" fg:w="2"/><text x="55.2067%" y="527.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="55.1188%" y="501" width="0.0293%" height="15" fill="rgb(217,5,26)" fg:x="1879" fg:w="1"/><text x="55.2360%" y="511.50"></text></g><g><title>consume_stock (1 samples, 0.03%)</title><rect x="55.1481%" y="517" width="0.0293%" height="15" fill="rgb(235,190,38)" fg:x="1880" fg:w="1"/><text x="55.2653%" y="527.50"></text></g><g><title>charge_memcg (12 samples, 0.35%)</title><rect x="54.9721%" y="533" width="0.3520%" height="15" fill="rgb(247,86,24)" fg:x="1874" fg:w="12"/><text x="55.0893%" y="543.50"></text></g><g><title>try_charge_memcg (5 samples, 0.15%)</title><rect x="55.1775%" y="517" width="0.1467%" height="15" fill="rgb(205,101,16)" fg:x="1881" fg:w="5"/><text x="55.2947%" y="527.50"></text></g><g><title>consume_stock (2 samples, 0.06%)</title><rect x="55.2655%" y="501" width="0.0587%" height="15" fill="rgb(246,168,33)" fg:x="1884" fg:w="2"/><text x="55.3827%" y="511.50"></text></g><g><title>__mem_cgroup_charge (47 samples, 1.38%)</title><rect x="54.2094%" y="549" width="1.3787%" height="15" fill="rgb(231,114,1)" fg:x="1848" fg:w="47"/><text x="54.3266%" y="559.50">__..</text></g><g><title>get_mem_cgroup_from_mm (9 samples, 0.26%)</title><rect x="55.3241%" y="533" width="0.2640%" height="15" fill="rgb(207,184,53)" fg:x="1886" fg:w="9"/><text x="55.4413%" y="543.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="55.5881%" y="549" width="0.0293%" height="15" fill="rgb(224,95,51)" fg:x="1895" fg:w="1"/><text x="55.7053%" y="559.50"></text></g><g><title>__pte_offset_map_lock (1 samples, 0.03%)</title><rect x="55.6175%" y="549" width="0.0293%" height="15" fill="rgb(212,188,45)" fg:x="1896" fg:w="1"/><text x="55.7347%" y="559.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="55.6175%" y="533" width="0.0293%" height="15" fill="rgb(223,154,38)" fg:x="1896" fg:w="1"/><text x="55.7347%" y="543.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="55.6468%" y="549" width="0.0293%" height="15" fill="rgb(251,22,52)" fg:x="1897" fg:w="1"/><text x="55.7640%" y="559.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="55.6762%" y="549" width="0.0587%" height="15" fill="rgb(229,209,22)" fg:x="1898" fg:w="2"/><text x="55.7933%" y="559.50"></text></g><g><title>charge_memcg (1 samples, 0.03%)</title><rect x="55.7348%" y="549" width="0.0293%" height="15" fill="rgb(234,138,34)" fg:x="1900" fg:w="1"/><text x="55.8520%" y="559.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.06%)</title><rect x="56.0868%" y="453" width="0.0587%" height="15" fill="rgb(212,95,11)" fg:x="1912" fg:w="2"/><text x="56.2040%" y="463.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="56.1162%" y="437" width="0.0293%" height="15" fill="rgb(240,179,47)" fg:x="1913" fg:w="1"/><text x="56.2334%" y="447.50"></text></g><g><title>lru_add_fn (6 samples, 0.18%)</title><rect x="55.9988%" y="501" width="0.1760%" height="15" fill="rgb(240,163,11)" fg:x="1909" fg:w="6"/><text x="56.1160%" y="511.50"></text></g><g><title>lru_gen_add_folio (6 samples, 0.18%)</title><rect x="55.9988%" y="485" width="0.1760%" height="15" fill="rgb(236,37,12)" fg:x="1909" fg:w="6"/><text x="56.1160%" y="495.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.09%)</title><rect x="56.0868%" y="469" width="0.0880%" height="15" fill="rgb(232,164,16)" fg:x="1912" fg:w="3"/><text x="56.2040%" y="479.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="56.1455%" y="453" width="0.0293%" height="15" fill="rgb(244,205,15)" fg:x="1914" fg:w="1"/><text x="56.2627%" y="463.50"></text></g><g><title>lru_gen_add_folio (2 samples, 0.06%)</title><rect x="56.1748%" y="501" width="0.0587%" height="15" fill="rgb(223,117,47)" fg:x="1915" fg:w="2"/><text x="56.2920%" y="511.50"></text></g><g><title>folio_add_lru_vma (17 samples, 0.50%)</title><rect x="55.7642%" y="549" width="0.4987%" height="15" fill="rgb(244,107,35)" fg:x="1901" fg:w="17"/><text x="55.8813%" y="559.50"></text></g><g><title>folio_add_lru (17 samples, 0.50%)</title><rect x="55.7642%" y="533" width="0.4987%" height="15" fill="rgb(205,140,8)" fg:x="1901" fg:w="17"/><text x="55.8813%" y="543.50"></text></g><g><title>folio_batch_move_lru (11 samples, 0.32%)</title><rect x="55.9402%" y="517" width="0.3227%" height="15" fill="rgb(228,84,46)" fg:x="1907" fg:w="11"/><text x="56.0573%" y="527.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="56.2335%" y="501" width="0.0293%" height="15" fill="rgb(254,188,9)" fg:x="1917" fg:w="1"/><text x="56.3507%" y="511.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.09%)</title><rect x="56.2628%" y="533" width="0.0880%" height="15" fill="rgb(206,112,54)" fg:x="1918" fg:w="3"/><text x="56.3800%" y="543.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.06%)</title><rect x="56.2922%" y="517" width="0.0587%" height="15" fill="rgb(216,84,49)" fg:x="1919" fg:w="2"/><text x="56.4094%" y="527.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="56.3215%" y="501" width="0.0293%" height="15" fill="rgb(214,194,35)" fg:x="1920" fg:w="1"/><text x="56.4387%" y="511.50"></text></g><g><title>folio_add_new_anon_rmap (4 samples, 0.12%)</title><rect x="56.2628%" y="549" width="0.1173%" height="15" fill="rgb(249,28,3)" fg:x="1918" fg:w="4"/><text x="56.3800%" y="559.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="56.3508%" y="533" width="0.0293%" height="15" fill="rgb(222,56,52)" fg:x="1921" fg:w="1"/><text x="56.4680%" y="543.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.06%)</title><rect x="56.6735%" y="485" width="0.0587%" height="15" fill="rgb(245,217,50)" fg:x="1932" fg:w="2"/><text x="56.7907%" y="495.50"></text></g><g><title>clear_page_erms (4 samples, 0.12%)</title><rect x="56.7322%" y="485" width="0.1173%" height="15" fill="rgb(213,201,24)" fg:x="1934" fg:w="4"/><text x="56.8494%" y="495.50"></text></g><g><title>__rmqueue_pcplist (8 samples, 0.23%)</title><rect x="56.9375%" y="469" width="0.2347%" height="15" fill="rgb(248,116,28)" fg:x="1941" fg:w="8"/><text x="57.0547%" y="479.50"></text></g><g><title>rmqueue_bulk (7 samples, 0.21%)</title><rect x="56.9669%" y="453" width="0.2053%" height="15" fill="rgb(219,72,43)" fg:x="1942" fg:w="7"/><text x="57.0840%" y="463.50"></text></g><g><title>get_page_from_freelist (18 samples, 0.53%)</title><rect x="56.6735%" y="501" width="0.5280%" height="15" fill="rgb(209,138,14)" fg:x="1932" fg:w="18"/><text x="56.7907%" y="511.50"></text></g><g><title>rmqueue (12 samples, 0.35%)</title><rect x="56.8495%" y="485" width="0.3520%" height="15" fill="rgb(222,18,33)" fg:x="1938" fg:w="12"/><text x="56.9667%" y="495.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="57.1722%" y="469" width="0.0293%" height="15" fill="rgb(213,199,7)" fg:x="1949" fg:w="1"/><text x="57.2894%" y="479.50"></text></g><g><title>__folio_alloc (25 samples, 0.73%)</title><rect x="56.4975%" y="533" width="0.7334%" height="15" fill="rgb(250,110,10)" fg:x="1926" fg:w="25"/><text x="56.6147%" y="543.50"></text></g><g><title>__alloc_pages (25 samples, 0.73%)</title><rect x="56.4975%" y="517" width="0.7334%" height="15" fill="rgb(248,123,6)" fg:x="1926" fg:w="25"/><text x="56.6147%" y="527.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="57.2015%" y="501" width="0.0293%" height="15" fill="rgb(206,91,31)" fg:x="1950" fg:w="1"/><text x="57.3187%" y="511.50"></text></g><g><title>do_anonymous_page (107 samples, 3.14%)</title><rect x="54.1214%" y="565" width="3.1388%" height="15" fill="rgb(211,154,13)" fg:x="1845" fg:w="107"/><text x="54.2386%" y="575.50">do_anonym..</text></g><g><title>vma_alloc_folio (30 samples, 0.88%)</title><rect x="56.3802%" y="549" width="0.8800%" height="15" fill="rgb(225,148,7)" fg:x="1922" fg:w="30"/><text x="56.4974%" y="559.50">v..</text></g><g><title>policy_nodemask (1 samples, 0.03%)</title><rect x="57.2309%" y="533" width="0.0293%" height="15" fill="rgb(220,160,43)" fg:x="1951" fg:w="1"/><text x="57.3480%" y="543.50"></text></g><g><title>handle_pte_fault (109 samples, 3.20%)</title><rect x="54.0921%" y="581" width="3.1974%" height="15" fill="rgb(213,52,39)" fg:x="1844" fg:w="109"/><text x="54.2093%" y="591.50">handle_pt..</text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="57.2602%" y="565" width="0.0293%" height="15" fill="rgb(243,137,7)" fg:x="1952" fg:w="1"/><text x="57.3774%" y="575.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="57.2602%" y="549" width="0.0293%" height="15" fill="rgb(230,79,13)" fg:x="1952" fg:w="1"/><text x="57.3774%" y="559.50"></text></g><g><title>__handle_mm_fault (113 samples, 3.31%)</title><rect x="54.0041%" y="597" width="3.3148%" height="15" fill="rgb(247,105,23)" fg:x="1841" fg:w="113"/><text x="54.1213%" y="607.50">__handle_..</text></g><g><title>pmd_val (1 samples, 0.03%)</title><rect x="57.2895%" y="581" width="0.0293%" height="15" fill="rgb(223,179,41)" fg:x="1953" fg:w="1"/><text x="57.4067%" y="591.50"></text></g><g><title>handle_mm_fault (116 samples, 3.40%)</title><rect x="53.9454%" y="613" width="3.4028%" height="15" fill="rgb(218,9,34)" fg:x="1839" fg:w="116"/><text x="54.0626%" y="623.50">handle_mm_..</text></g><g><title>pmd_val (1 samples, 0.03%)</title><rect x="57.3189%" y="597" width="0.0293%" height="15" fill="rgb(222,106,8)" fg:x="1954" fg:w="1"/><text x="57.4360%" y="607.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="57.3775%" y="597" width="0.0293%" height="15" fill="rgb(211,220,0)" fg:x="1956" fg:w="1"/><text x="57.4947%" y="607.50"></text></g><g><title>do_user_addr_fault (130 samples, 3.81%)</title><rect x="53.7694%" y="629" width="3.8134%" height="15" fill="rgb(229,52,16)" fg:x="1833" fg:w="130"/><text x="53.8866%" y="639.50">do_user_add..</text></g><g><title>lock_vma_under_rcu (8 samples, 0.23%)</title><rect x="57.3482%" y="613" width="0.2347%" height="15" fill="rgb(212,155,18)" fg:x="1955" fg:w="8"/><text x="57.4654%" y="623.50"></text></g><g><title>mas_walk (6 samples, 0.18%)</title><rect x="57.4069%" y="597" width="0.1760%" height="15" fill="rgb(242,21,14)" fg:x="1957" fg:w="6"/><text x="57.5241%" y="607.50"></text></g><g><title>mtree_range_walk (6 samples, 0.18%)</title><rect x="57.4069%" y="581" width="0.1760%" height="15" fill="rgb(222,19,48)" fg:x="1957" fg:w="6"/><text x="57.5241%" y="591.50"></text></g><g><title>asm_exc_page_fault (136 samples, 3.99%)</title><rect x="53.6814%" y="661" width="3.9894%" height="15" fill="rgb(232,45,27)" fg:x="1830" fg:w="136"/><text x="53.7986%" y="671.50">asm_exc_page..</text></g><g><title>exc_page_fault (135 samples, 3.96%)</title><rect x="53.7108%" y="645" width="3.9601%" height="15" fill="rgb(249,103,42)" fg:x="1831" fg:w="135"/><text x="53.8280%" y="655.50">exc_page_fau..</text></g><g><title>irqentry_exit (3 samples, 0.09%)</title><rect x="57.5829%" y="629" width="0.0880%" height="15" fill="rgb(246,81,33)" fg:x="1963" fg:w="3"/><text x="57.7001%" y="639.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.09%)</title><rect x="57.5829%" y="613" width="0.0880%" height="15" fill="rgb(252,33,42)" fg:x="1963" fg:w="3"/><text x="57.7001%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.09%)</title><rect x="57.5829%" y="597" width="0.0880%" height="15" fill="rgb(209,212,41)" fg:x="1963" fg:w="3"/><text x="57.7001%" y="607.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="57.6415%" y="581" width="0.0293%" height="15" fill="rgb(207,154,6)" fg:x="1965" fg:w="1"/><text x="57.7587%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (190 samples, 5.57%)</title><rect x="52.5667%" y="693" width="5.5735%" height="15" fill="rgb(223,64,47)" fg:x="1792" fg:w="190"/><text x="52.6839%" y="703.50">alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::write (175 samples, 5.13%)</title><rect x="53.0067%" y="677" width="5.1335%" height="15" fill="rgb(211,161,38)" fg:x="1807" fg:w="175"/><text x="53.1239%" y="687.50">core::ptr::write</text></g><g><title>sync_regs (16 samples, 0.47%)</title><rect x="57.6709%" y="661" width="0.4693%" height="15" fill="rgb(219,138,40)" fg:x="1966" fg:w="16"/><text x="57.7881%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="58.1402%" y="693" width="0.0293%" height="15" fill="rgb(241,228,46)" fg:x="1982" fg:w="1"/><text x="58.2574%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="58.1402%" y="677" width="0.0293%" height="15" fill="rgb(223,209,38)" fg:x="1982" fg:w="1"/><text x="58.2574%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="58.1402%" y="661" width="0.0293%" height="15" fill="rgb(236,164,45)" fg:x="1982" fg:w="1"/><text x="58.2574%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="58.5216%" y="597" width="0.0293%" height="15" fill="rgb(231,15,5)" fg:x="1995" fg:w="1"/><text x="58.6387%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="58.5216%" y="581" width="0.0293%" height="15" fill="rgb(252,35,15)" fg:x="1995" fg:w="1"/><text x="58.6387%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="58.5216%" y="565" width="0.0293%" height="15" fill="rgb(248,181,18)" fg:x="1995" fg:w="1"/><text x="58.6387%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="58.5216%" y="549" width="0.0293%" height="15" fill="rgb(233,39,42)" fg:x="1995" fg:w="1"/><text x="58.6387%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="58.5216%" y="533" width="0.0293%" height="15" fill="rgb(238,110,33)" fg:x="1995" fg:w="1"/><text x="58.6387%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="58.5509%" y="597" width="0.0587%" height="15" fill="rgb(233,195,10)" fg:x="1996" fg:w="2"/><text x="58.6681%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="58.5509%" y="581" width="0.0587%" height="15" fill="rgb(254,105,3)" fg:x="1996" fg:w="2"/><text x="58.6681%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.47%)</title><rect x="58.6096%" y="533" width="0.4693%" height="15" fill="rgb(221,225,9)" fg:x="1998" fg:w="16"/><text x="58.7268%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.65%)</title><rect x="59.0789%" y="533" width="0.6454%" height="15" fill="rgb(224,227,45)" fg:x="2014" fg:w="22"/><text x="59.1961%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.09%)</title><rect x="59.6363%" y="517" width="0.0880%" height="15" fill="rgb(229,198,43)" fg:x="2033" fg:w="3"/><text x="59.7534%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 1.26%)</title><rect x="58.6096%" y="549" width="1.2614%" height="15" fill="rgb(206,209,35)" fg:x="1998" fg:w="43"/><text x="58.7268%" y="559.50">&lt;a..</text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.15%)</title><rect x="59.7243%" y="533" width="0.1467%" height="15" fill="rgb(245,195,53)" fg:x="2036" fg:w="5"/><text x="59.8414%" y="543.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (10 samples, 0.29%)</title><rect x="59.8709%" y="501" width="0.2933%" height="15" fill="rgb(240,92,26)" fg:x="2041" fg:w="10"/><text x="59.9881%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (23 samples, 0.67%)</title><rect x="59.8709%" y="549" width="0.6747%" height="15" fill="rgb(207,40,23)" fg:x="2041" fg:w="23"/><text x="59.9881%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (23 samples, 0.67%)</title><rect x="59.8709%" y="533" width="0.6747%" height="15" fill="rgb(223,111,35)" fg:x="2041" fg:w="23"/><text x="59.9881%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (23 samples, 0.67%)</title><rect x="59.8709%" y="517" width="0.6747%" height="15" fill="rgb(229,147,28)" fg:x="2041" fg:w="23"/><text x="59.9881%" y="527.50"></text></g><g><title>core::ptr::write (13 samples, 0.38%)</title><rect x="60.1643%" y="501" width="0.3813%" height="15" fill="rgb(211,29,28)" fg:x="2051" fg:w="13"/><text x="60.2815%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77 samples, 2.26%)</title><rect x="58.3456%" y="629" width="2.2587%" height="15" fill="rgb(228,72,33)" fg:x="1989" fg:w="77"/><text x="58.4627%" y="639.50">&lt;alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (77 samples, 2.26%)</title><rect x="58.3456%" y="613" width="2.2587%" height="15" fill="rgb(205,214,31)" fg:x="1989" fg:w="77"/><text x="58.4627%" y="623.50">alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (68 samples, 1.99%)</title><rect x="58.6096%" y="597" width="1.9947%" height="15" fill="rgb(224,111,15)" fg:x="1998" fg:w="68"/><text x="58.7268%" y="607.50">core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 1.99%)</title><rect x="58.6096%" y="581" width="1.9947%" height="15" fill="rgb(253,21,26)" fg:x="1998" fg:w="68"/><text x="58.7268%" y="591.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 1.99%)</title><rect x="58.6096%" y="565" width="1.9947%" height="15" fill="rgb(245,139,43)" fg:x="1998" fg:w="68"/><text x="58.7268%" y="575.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;((usize,usize),f64)&gt;&gt; (2 samples, 0.06%)</title><rect x="60.5456%" y="549" width="0.0587%" height="15" fill="rgb(252,170,7)" fg:x="2064" fg:w="2"/><text x="60.6628%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="60.5456%" y="533" width="0.0587%" height="15" fill="rgb(231,118,14)" fg:x="2064" fg:w="2"/><text x="60.6628%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;((usize,usize),f64),alloc::alloc::Global&gt;&gt; (2 samples, 0.06%)</title><rect x="60.5456%" y="517" width="0.0587%" height="15" fill="rgb(238,83,0)" fg:x="2064" fg:w="2"/><text x="60.6628%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="60.5456%" y="501" width="0.0587%" height="15" fill="rgb(221,39,39)" fg:x="2064" fg:w="2"/><text x="60.6628%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.12%)</title><rect x="60.6043%" y="629" width="0.1173%" height="15" fill="rgb(222,119,46)" fg:x="2066" fg:w="4"/><text x="60.7215%" y="639.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.12%)</title><rect x="60.6043%" y="613" width="0.1173%" height="15" fill="rgb(222,165,49)" fg:x="2066" fg:w="4"/><text x="60.7215%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.12%)</title><rect x="60.6043%" y="597" width="0.1173%" height="15" fill="rgb(219,113,52)" fg:x="2066" fg:w="4"/><text x="60.7215%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (4 samples, 0.12%)</title><rect x="60.6043%" y="581" width="0.1173%" height="15" fill="rgb(214,7,15)" fg:x="2066" fg:w="4"/><text x="60.7215%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (4 samples, 0.12%)</title><rect x="60.6043%" y="565" width="0.1173%" height="15" fill="rgb(235,32,4)" fg:x="2066" fg:w="4"/><text x="60.7215%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="60.7216%" y="581" width="0.0587%" height="15" fill="rgb(238,90,54)" fg:x="2070" fg:w="2"/><text x="60.8388%" y="591.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="63.5084%" y="485" width="0.0293%" height="15" fill="rgb(213,208,19)" fg:x="2165" fg:w="1"/><text x="63.6255%" y="495.50"></text></g><g><title>alloc_perturb (2 samples, 0.06%)</title><rect x="63.5377%" y="485" width="0.0587%" height="15" fill="rgb(233,156,4)" fg:x="2166" fg:w="2"/><text x="63.6549%" y="495.50"></text></g><g><title>access_error (1 samples, 0.03%)</title><rect x="63.6550%" y="453" width="0.0293%" height="15" fill="rgb(207,194,5)" fg:x="2170" fg:w="1"/><text x="63.7722%" y="463.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="63.8310%" y="437" width="0.0293%" height="15" fill="rgb(206,111,30)" fg:x="2176" fg:w="1"/><text x="63.9482%" y="447.50"></text></g><g><title>down_read_trylock (5 samples, 0.15%)</title><rect x="63.8604%" y="437" width="0.1467%" height="15" fill="rgb(243,70,54)" fg:x="2177" fg:w="5"/><text x="63.9776%" y="447.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="64.1244%" y="421" width="0.0293%" height="15" fill="rgb(242,28,8)" fg:x="2186" fg:w="1"/><text x="64.2416%" y="431.50"></text></g><g><title>__folio_alloc (2 samples, 0.06%)</title><rect x="64.4764%" y="373" width="0.0587%" height="15" fill="rgb(219,106,18)" fg:x="2198" fg:w="2"/><text x="64.5936%" y="383.50"></text></g><g><title>__folio_throttle_swaprate (1 samples, 0.03%)</title><rect x="64.5351%" y="373" width="0.0293%" height="15" fill="rgb(244,222,10)" fg:x="2200" fg:w="1"/><text x="64.6522%" y="383.50"></text></g><g><title>blk_cgroup_congested (1 samples, 0.03%)</title><rect x="64.5351%" y="357" width="0.0293%" height="15" fill="rgb(236,179,52)" fg:x="2200" fg:w="1"/><text x="64.6522%" y="367.50"></text></g><g><title>__rcu_read_unlock (23 samples, 0.67%)</title><rect x="64.6817%" y="357" width="0.6747%" height="15" fill="rgb(213,23,39)" fg:x="2205" fg:w="23"/><text x="64.7989%" y="367.50"></text></g><g><title>__count_memcg_events (7 samples, 0.21%)</title><rect x="65.5911%" y="341" width="0.2053%" height="15" fill="rgb(238,48,10)" fg:x="2236" fg:w="7"/><text x="65.7083%" y="351.50"></text></g><g><title>cgroup_rstat_updated (4 samples, 0.12%)</title><rect x="65.6791%" y="325" width="0.1173%" height="15" fill="rgb(251,196,23)" fg:x="2239" fg:w="4"/><text x="65.7963%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="65.7964%" y="341" width="0.0293%" height="15" fill="rgb(250,152,24)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="65.7964%" y="325" width="0.0293%" height="15" fill="rgb(209,150,17)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="65.7964%" y="309" width="0.0293%" height="15" fill="rgb(234,202,34)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="319.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="65.7964%" y="293" width="0.0293%" height="15" fill="rgb(253,148,53)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="303.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="65.7964%" y="277" width="0.0293%" height="15" fill="rgb(218,129,16)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="287.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="65.7964%" y="261" width="0.0293%" height="15" fill="rgb(216,85,19)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="271.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="65.7964%" y="245" width="0.0293%" height="15" fill="rgb(235,228,7)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="255.50"></text></g><g><title>tick_do_update_jiffies64 (1 samples, 0.03%)</title><rect x="65.7964%" y="229" width="0.0293%" height="15" fill="rgb(245,175,0)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="239.50"></text></g><g><title>update_wall_time (1 samples, 0.03%)</title><rect x="65.7964%" y="213" width="0.0293%" height="15" fill="rgb(208,168,36)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="223.50"></text></g><g><title>timekeeping_advance (1 samples, 0.03%)</title><rect x="65.7964%" y="197" width="0.0293%" height="15" fill="rgb(246,171,24)" fg:x="2243" fg:w="1"/><text x="65.9136%" y="207.50"></text></g><g><title>charge_memcg (30 samples, 0.88%)</title><rect x="65.3564%" y="357" width="0.8800%" height="15" fill="rgb(215,142,24)" fg:x="2228" fg:w="30"/><text x="65.4736%" y="367.50">c..</text></g><g><title>try_charge_memcg (14 samples, 0.41%)</title><rect x="65.8258%" y="341" width="0.4107%" height="15" fill="rgb(250,187,7)" fg:x="2244" fg:w="14"/><text x="65.9429%" y="351.50"></text></g><g><title>consume_stock (4 samples, 0.12%)</title><rect x="66.1191%" y="325" width="0.1173%" height="15" fill="rgb(228,66,33)" fg:x="2254" fg:w="4"/><text x="66.2363%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (8 samples, 0.23%)</title><rect x="66.2364%" y="357" width="0.2347%" height="15" fill="rgb(234,215,21)" fg:x="2258" fg:w="8"/><text x="66.3536%" y="367.50"></text></g><g><title>__mem_cgroup_charge (66 samples, 1.94%)</title><rect x="64.5644%" y="373" width="1.9361%" height="15" fill="rgb(222,191,20)" fg:x="2201" fg:w="66"/><text x="64.6816%" y="383.50">__mem..</text></g><g><title>try_charge_memcg (1 samples, 0.03%)</title><rect x="66.4711%" y="357" width="0.0293%" height="15" fill="rgb(245,79,54)" fg:x="2266" fg:w="1"/><text x="66.5883%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="66.5004%" y="373" width="0.0293%" height="15" fill="rgb(240,10,37)" fg:x="2267" fg:w="1"/><text x="66.6176%" y="383.50"></text></g><g><title>__pte_alloc (1 samples, 0.03%)</title><rect x="66.5298%" y="373" width="0.0293%" height="15" fill="rgb(214,192,32)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="383.50"></text></g><g><title>pte_alloc_one (1 samples, 0.03%)</title><rect x="66.5298%" y="357" width="0.0293%" height="15" fill="rgb(209,36,54)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="367.50"></text></g><g><title>alloc_pages (1 samples, 0.03%)</title><rect x="66.5298%" y="341" width="0.0293%" height="15" fill="rgb(220,10,11)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="351.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="66.5298%" y="325" width="0.0293%" height="15" fill="rgb(221,106,17)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="335.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="66.5298%" y="309" width="0.0293%" height="15" fill="rgb(251,142,44)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="319.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="66.5298%" y="293" width="0.0293%" height="15" fill="rgb(238,13,15)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="303.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="66.5298%" y="277" width="0.0293%" height="15" fill="rgb(208,107,27)" fg:x="2268" fg:w="1"/><text x="66.6470%" y="287.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="66.5591%" y="373" width="0.0293%" height="15" fill="rgb(205,136,37)" fg:x="2269" fg:w="1"/><text x="66.6763%" y="383.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="66.5884%" y="373" width="0.0293%" height="15" fill="rgb(250,205,27)" fg:x="2270" fg:w="1"/><text x="66.7056%" y="383.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="66.6178%" y="373" width="0.0293%" height="15" fill="rgb(210,80,43)" fg:x="2271" fg:w="1"/><text x="66.7350%" y="383.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="66.6471%" y="373" width="0.0293%" height="15" fill="rgb(247,160,36)" fg:x="2272" fg:w="1"/><text x="66.7643%" y="383.50"></text></g><g><title>charge_memcg (3 samples, 0.09%)</title><rect x="66.6764%" y="373" width="0.0880%" height="15" fill="rgb(234,13,49)" fg:x="2273" fg:w="3"/><text x="66.7936%" y="383.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="66.7644%" y="373" width="0.0293%" height="15" fill="rgb(234,122,0)" fg:x="2276" fg:w="1"/><text x="66.8816%" y="383.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="66.9405%" y="325" width="0.0293%" height="15" fill="rgb(207,146,38)" fg:x="2282" fg:w="1"/><text x="67.0576%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="67.1751%" y="277" width="0.0293%" height="15" fill="rgb(207,177,25)" fg:x="2290" fg:w="1"/><text x="67.2923%" y="287.50"></text></g><g><title>__mod_lruvec_state (2 samples, 0.06%)</title><rect x="67.1751%" y="293" width="0.0587%" height="15" fill="rgb(211,178,42)" fg:x="2290" fg:w="2"/><text x="67.2923%" y="303.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="67.2045%" y="277" width="0.0293%" height="15" fill="rgb(230,69,54)" fg:x="2291" fg:w="1"/><text x="67.3216%" y="287.50"></text></g><g><title>lru_add_fn (10 samples, 0.29%)</title><rect x="66.9698%" y="325" width="0.2933%" height="15" fill="rgb(214,135,41)" fg:x="2283" fg:w="10"/><text x="67.0870%" y="335.50"></text></g><g><title>lru_gen_add_folio (8 samples, 0.23%)</title><rect x="67.0285%" y="309" width="0.2347%" height="15" fill="rgb(237,67,25)" fg:x="2285" fg:w="8"/><text x="67.1456%" y="319.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="67.2338%" y="293" width="0.0293%" height="15" fill="rgb(222,189,50)" fg:x="2292" fg:w="1"/><text x="67.3510%" y="303.50"></text></g><g><title>folio_batch_move_lru (16 samples, 0.47%)</title><rect x="66.8524%" y="341" width="0.4693%" height="15" fill="rgb(245,148,34)" fg:x="2279" fg:w="16"/><text x="66.9696%" y="351.50"></text></g><g><title>release_pages (2 samples, 0.06%)</title><rect x="67.2631%" y="325" width="0.0587%" height="15" fill="rgb(222,29,6)" fg:x="2293" fg:w="2"/><text x="67.3803%" y="335.50"></text></g><g><title>__mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="67.2925%" y="309" width="0.0293%" height="15" fill="rgb(221,189,43)" fg:x="2294" fg:w="1"/><text x="67.4096%" y="319.50"></text></g><g><title>folio_add_lru (19 samples, 0.56%)</title><rect x="66.7938%" y="357" width="0.5573%" height="15" fill="rgb(207,36,27)" fg:x="2277" fg:w="19"/><text x="66.9110%" y="367.50"></text></g><g><title>lru_add_fn (1 samples, 0.03%)</title><rect x="67.3218%" y="341" width="0.0293%" height="15" fill="rgb(217,90,24)" fg:x="2295" fg:w="1"/><text x="67.4390%" y="351.50"></text></g><g><title>folio_add_lru_vma (21 samples, 0.62%)</title><rect x="66.7938%" y="373" width="0.6160%" height="15" fill="rgb(224,66,35)" fg:x="2277" fg:w="21"/><text x="66.9110%" y="383.50"></text></g><g><title>folio_batch_move_lru (2 samples, 0.06%)</title><rect x="67.3511%" y="357" width="0.0587%" height="15" fill="rgb(221,13,50)" fg:x="2296" fg:w="2"/><text x="67.4683%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (3 samples, 0.09%)</title><rect x="67.4978%" y="325" width="0.0880%" height="15" fill="rgb(236,68,49)" fg:x="2301" fg:w="3"/><text x="67.6150%" y="335.50"></text></g><g><title>cgroup_rstat_updated (3 samples, 0.09%)</title><rect x="67.4978%" y="309" width="0.0880%" height="15" fill="rgb(229,146,28)" fg:x="2301" fg:w="3"/><text x="67.6150%" y="319.50"></text></g><g><title>folio_add_new_anon_rmap (7 samples, 0.21%)</title><rect x="67.4098%" y="373" width="0.2053%" height="15" fill="rgb(225,31,38)" fg:x="2298" fg:w="7"/><text x="67.5270%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (5 samples, 0.15%)</title><rect x="67.4685%" y="357" width="0.1467%" height="15" fill="rgb(250,208,3)" fg:x="2300" fg:w="5"/><text x="67.5857%" y="367.50"></text></g><g><title>__mod_lruvec_state (4 samples, 0.12%)</title><rect x="67.4978%" y="341" width="0.1173%" height="15" fill="rgb(246,54,23)" fg:x="2301" fg:w="4"/><text x="67.6150%" y="351.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="67.5858%" y="325" width="0.0293%" height="15" fill="rgb(243,76,11)" fg:x="2304" fg:w="1"/><text x="67.7030%" y="335.50"></text></g><g><title>inc_mm_counter (1 samples, 0.03%)</title><rect x="67.6151%" y="373" width="0.0293%" height="15" fill="rgb(245,21,50)" fg:x="2305" fg:w="1"/><text x="67.7323%" y="383.50"></text></g><g><title>native_set_pte (1 samples, 0.03%)</title><rect x="67.6445%" y="373" width="0.0293%" height="15" fill="rgb(228,9,43)" fg:x="2306" fg:w="1"/><text x="67.7617%" y="383.50"></text></g><g><title>pfn_pte (1 samples, 0.03%)</title><rect x="67.6738%" y="373" width="0.0293%" height="15" fill="rgb(208,100,47)" fg:x="2307" fg:w="1"/><text x="67.7910%" y="383.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.03%)</title><rect x="67.9378%" y="309" width="0.0293%" height="15" fill="rgb(232,26,8)" fg:x="2316" fg:w="1"/><text x="68.0550%" y="319.50"></text></g><g><title>clear_page_erms (3 samples, 0.09%)</title><rect x="67.9671%" y="309" width="0.0880%" height="15" fill="rgb(216,166,38)" fg:x="2317" fg:w="3"/><text x="68.0843%" y="319.50"></text></g><g><title>post_alloc_hook (4 samples, 0.12%)</title><rect x="68.0551%" y="309" width="0.1173%" height="15" fill="rgb(251,202,51)" fg:x="2320" fg:w="4"/><text x="68.1723%" y="319.50"></text></g><g><title>__alloc_pages (23 samples, 0.67%)</title><rect x="67.8498%" y="341" width="0.6747%" height="15" fill="rgb(254,216,34)" fg:x="2313" fg:w="23"/><text x="67.9670%" y="351.50"></text></g><g><title>get_page_from_freelist (20 samples, 0.59%)</title><rect x="67.9378%" y="325" width="0.5867%" height="15" fill="rgb(251,32,27)" fg:x="2316" fg:w="20"/><text x="68.0550%" y="335.50"></text></g><g><title>rmqueue (12 samples, 0.35%)</title><rect x="68.1725%" y="309" width="0.3520%" height="15" fill="rgb(208,127,28)" fg:x="2324" fg:w="12"/><text x="68.2897%" y="319.50"></text></g><g><title>__rmqueue_pcplist (11 samples, 0.32%)</title><rect x="68.2018%" y="293" width="0.3227%" height="15" fill="rgb(224,137,22)" fg:x="2325" fg:w="11"/><text x="68.3190%" y="303.50"></text></g><g><title>rmqueue_bulk (9 samples, 0.26%)</title><rect x="68.2605%" y="277" width="0.2640%" height="15" fill="rgb(254,70,32)" fg:x="2327" fg:w="9"/><text x="68.3777%" y="287.50"></text></g><g><title>do_anonymous_page (141 samples, 4.14%)</title><rect x="64.4177%" y="389" width="4.1361%" height="15" fill="rgb(229,75,37)" fg:x="2196" fg:w="141"/><text x="64.5349%" y="399.50">do_anonymous..</text></g><g><title>vma_alloc_folio (29 samples, 0.85%)</title><rect x="67.7031%" y="373" width="0.8507%" height="15" fill="rgb(252,64,23)" fg:x="2308" fg:w="29"/><text x="67.8203%" y="383.50">v..</text></g><g><title>__folio_alloc (25 samples, 0.73%)</title><rect x="67.8205%" y="357" width="0.7334%" height="15" fill="rgb(232,162,48)" fg:x="2312" fg:w="25"/><text x="67.9377%" y="367.50"></text></g><g><title>__next_zones_zonelist (1 samples, 0.03%)</title><rect x="68.5245%" y="341" width="0.0293%" height="15" fill="rgb(246,160,12)" fg:x="2336" fg:w="1"/><text x="68.6417%" y="351.50"></text></g><g><title>inc_mm_counter (1 samples, 0.03%)</title><rect x="68.5538%" y="389" width="0.0293%" height="15" fill="rgb(247,166,0)" fg:x="2337" fg:w="1"/><text x="68.6710%" y="399.50"></text></g><g><title>pte_offset_map_nolock (3 samples, 0.09%)</title><rect x="68.5832%" y="389" width="0.0880%" height="15" fill="rgb(249,219,21)" fg:x="2338" fg:w="3"/><text x="68.7003%" y="399.50"></text></g><g><title>__pte_offset_map (1 samples, 0.03%)</title><rect x="68.6418%" y="373" width="0.0293%" height="15" fill="rgb(205,209,3)" fg:x="2340" fg:w="1"/><text x="68.7590%" y="383.50"></text></g><g><title>handle_pte_fault (147 samples, 4.31%)</title><rect x="64.3884%" y="405" width="4.3121%" height="15" fill="rgb(243,44,1)" fg:x="2195" fg:w="147"/><text x="64.5056%" y="415.50">handle_pte_fa..</text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="68.6712%" y="389" width="0.0293%" height="15" fill="rgb(206,159,16)" fg:x="2341" fg:w="1"/><text x="68.7884%" y="399.50"></text></g><g><title>__handle_mm_fault (156 samples, 4.58%)</title><rect x="64.1537%" y="421" width="4.5761%" height="15" fill="rgb(244,77,30)" fg:x="2187" fg:w="156"/><text x="64.2709%" y="431.50">__handle_mm_fa..</text></g><g><title>pmd_val (1 samples, 0.03%)</title><rect x="68.7005%" y="405" width="0.0293%" height="15" fill="rgb(218,69,12)" fg:x="2342" fg:w="1"/><text x="68.8177%" y="415.50"></text></g><g><title>count_memcg_events.constprop.0 (2 samples, 0.06%)</title><rect x="68.7298%" y="421" width="0.0587%" height="15" fill="rgb(212,87,7)" fg:x="2343" fg:w="2"/><text x="68.8470%" y="431.50"></text></g><g><title>__count_memcg_events (2 samples, 0.06%)</title><rect x="68.7298%" y="405" width="0.0587%" height="15" fill="rgb(245,114,25)" fg:x="2343" fg:w="2"/><text x="68.8470%" y="415.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="68.7592%" y="389" width="0.0293%" height="15" fill="rgb(210,61,42)" fg:x="2344" fg:w="1"/><text x="68.8764%" y="399.50"></text></g><g><title>p4d_offset (1 samples, 0.03%)</title><rect x="68.7885%" y="421" width="0.0293%" height="15" fill="rgb(211,52,33)" fg:x="2345" fg:w="1"/><text x="68.9057%" y="431.50"></text></g><g><title>handle_mm_fault (165 samples, 4.84%)</title><rect x="64.0070%" y="437" width="4.8401%" height="15" fill="rgb(234,58,33)" fg:x="2182" fg:w="165"/><text x="64.1242%" y="447.50">handle_mm_fault</text></g><g><title>pud_val (1 samples, 0.03%)</title><rect x="68.8178%" y="421" width="0.0293%" height="15" fill="rgb(220,115,36)" fg:x="2346" fg:w="1"/><text x="68.9350%" y="431.50"></text></g><g><title>lock_vma_under_rcu (4 samples, 0.12%)</title><rect x="68.8472%" y="437" width="0.1173%" height="15" fill="rgb(243,153,54)" fg:x="2347" fg:w="4"/><text x="68.9644%" y="447.50"></text></g><g><title>mas_walk (4 samples, 0.12%)</title><rect x="68.8472%" y="421" width="0.1173%" height="15" fill="rgb(251,47,18)" fg:x="2347" fg:w="4"/><text x="68.9644%" y="431.50"></text></g><g><title>mtree_range_walk (4 samples, 0.12%)</title><rect x="68.8472%" y="405" width="0.1173%" height="15" fill="rgb(242,102,42)" fg:x="2347" fg:w="4"/><text x="68.9644%" y="415.50"></text></g><g><title>do_user_addr_fault (181 samples, 5.31%)</title><rect x="63.6844%" y="453" width="5.3095%" height="15" fill="rgb(234,31,38)" fg:x="2171" fg:w="181"/><text x="63.8016%" y="463.50">do_user_addr_fault</text></g><g><title>up_read (1 samples, 0.03%)</title><rect x="68.9645%" y="437" width="0.0293%" height="15" fill="rgb(221,117,51)" fg:x="2351" fg:w="1"/><text x="69.0817%" y="447.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="68.9938%" y="453" width="0.0293%" height="15" fill="rgb(212,20,18)" fg:x="2352" fg:w="1"/><text x="69.1110%" y="463.50"></text></g><g><title>amd_clear_divider (1 samples, 0.03%)</title><rect x="69.0525%" y="437" width="0.0293%" height="15" fill="rgb(245,133,36)" fg:x="2354" fg:w="1"/><text x="69.1697%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.06%)</title><rect x="69.0818%" y="421" width="0.0587%" height="15" fill="rgb(212,6,19)" fg:x="2355" fg:w="2"/><text x="69.1990%" y="431.50"></text></g><g><title>irqentry_exit (5 samples, 0.15%)</title><rect x="69.0232%" y="453" width="0.1467%" height="15" fill="rgb(218,1,36)" fg:x="2353" fg:w="5"/><text x="69.1404%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.09%)</title><rect x="69.0818%" y="437" width="0.0880%" height="15" fill="rgb(246,84,54)" fg:x="2355" fg:w="3"/><text x="69.1990%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="69.1405%" y="421" width="0.0293%" height="15" fill="rgb(242,110,6)" fg:x="2357" fg:w="1"/><text x="69.2577%" y="431.50"></text></g><g><title>asm_exc_page_fault (191 samples, 5.60%)</title><rect x="63.5964%" y="485" width="5.6028%" height="15" fill="rgb(214,47,5)" fg:x="2168" fg:w="191"/><text x="63.7136%" y="495.50">asm_exc_page_fault</text></g><g><title>exc_page_fault (189 samples, 5.54%)</title><rect x="63.6550%" y="469" width="5.5441%" height="15" fill="rgb(218,159,25)" fg:x="2170" fg:w="189"/><text x="63.7722%" y="479.50">exc_page_fault</text></g><g><title>up_read (1 samples, 0.03%)</title><rect x="69.1698%" y="453" width="0.0293%" height="15" fill="rgb(215,211,28)" fg:x="2358" fg:w="1"/><text x="69.2870%" y="463.50"></text></g><g><title>checked_request2size (7 samples, 0.21%)</title><rect x="69.1992%" y="485" width="0.2053%" height="15" fill="rgb(238,59,32)" fg:x="2359" fg:w="7"/><text x="69.3164%" y="495.50"></text></g><g><title>sync_regs (19 samples, 0.56%)</title><rect x="69.4045%" y="485" width="0.5573%" height="15" fill="rgb(226,82,3)" fg:x="2366" fg:w="19"/><text x="69.5217%" y="495.50"></text></g><g><title>check_brk_limits (1 samples, 0.03%)</title><rect x="69.9912%" y="325" width="0.0293%" height="15" fill="rgb(240,164,32)" fg:x="2386" fg:w="1"/><text x="70.1084%" y="335.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.03%)</title><rect x="69.9912%" y="309" width="0.0293%" height="15" fill="rgb(232,46,7)" fg:x="2386" fg:w="1"/><text x="70.1084%" y="319.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="70.0499%" y="261" width="0.0293%" height="15" fill="rgb(229,129,53)" fg:x="2388" fg:w="1"/><text x="70.1671%" y="271.50"></text></g><g><title>__glibc_morecore (4 samples, 0.12%)</title><rect x="69.9912%" y="469" width="0.1173%" height="15" fill="rgb(234,188,29)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="479.50"></text></g><g><title>__GI___sbrk (4 samples, 0.12%)</title><rect x="69.9912%" y="453" width="0.1173%" height="15" fill="rgb(246,141,4)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="463.50"></text></g><g><title>__GI___sbrk (4 samples, 0.12%)</title><rect x="69.9912%" y="437" width="0.1173%" height="15" fill="rgb(229,23,39)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="447.50"></text></g><g><title>__brk (4 samples, 0.12%)</title><rect x="69.9912%" y="421" width="0.1173%" height="15" fill="rgb(206,12,3)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="69.9912%" y="405" width="0.1173%" height="15" fill="rgb(252,226,20)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="415.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="69.9912%" y="389" width="0.1173%" height="15" fill="rgb(216,123,35)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="399.50"></text></g><g><title>x64_sys_call (4 samples, 0.12%)</title><rect x="69.9912%" y="373" width="0.1173%" height="15" fill="rgb(212,68,40)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="383.50"></text></g><g><title>__x64_sys_brk (4 samples, 0.12%)</title><rect x="69.9912%" y="357" width="0.1173%" height="15" fill="rgb(254,125,32)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="367.50"></text></g><g><title>__do_sys_brk (4 samples, 0.12%)</title><rect x="69.9912%" y="341" width="0.1173%" height="15" fill="rgb(253,97,22)" fg:x="2386" fg:w="4"/><text x="70.1084%" y="351.50"></text></g><g><title>do_brk_flags (3 samples, 0.09%)</title><rect x="70.0205%" y="325" width="0.0880%" height="15" fill="rgb(241,101,14)" fg:x="2387" fg:w="3"/><text x="70.1377%" y="335.50"></text></g><g><title>perf_event_mmap (3 samples, 0.09%)</title><rect x="70.0205%" y="309" width="0.0880%" height="15" fill="rgb(238,103,29)" fg:x="2387" fg:w="3"/><text x="70.1377%" y="319.50"></text></g><g><title>perf_event_mmap_event (3 samples, 0.09%)</title><rect x="70.0205%" y="293" width="0.0880%" height="15" fill="rgb(233,195,47)" fg:x="2387" fg:w="3"/><text x="70.1377%" y="303.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.06%)</title><rect x="70.0499%" y="277" width="0.0587%" height="15" fill="rgb(246,218,30)" fg:x="2388" fg:w="2"/><text x="70.1671%" y="287.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="70.0792%" y="261" width="0.0293%" height="15" fill="rgb(219,145,47)" fg:x="2389" fg:w="1"/><text x="70.1964%" y="271.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="70.1085%" y="421" width="0.0293%" height="15" fill="rgb(243,12,26)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="431.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="70.1085%" y="405" width="0.0293%" height="15" fill="rgb(214,87,16)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="415.50"></text></g><g><title>handle_pte_fault (1 samples, 0.03%)</title><rect x="70.1085%" y="389" width="0.0293%" height="15" fill="rgb(208,99,42)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="399.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="70.1085%" y="373" width="0.0293%" height="15" fill="rgb(253,99,2)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="383.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="70.1085%" y="357" width="0.0293%" height="15" fill="rgb(220,168,23)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="367.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="70.1085%" y="341" width="0.0293%" height="15" fill="rgb(242,38,24)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="351.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="70.1085%" y="325" width="0.0293%" height="15" fill="rgb(225,182,9)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="335.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="70.1085%" y="309" width="0.0293%" height="15" fill="rgb(243,178,37)" fg:x="2390" fg:w="1"/><text x="70.2257%" y="319.50"></text></g><g><title>_int_malloc (309 samples, 9.06%)</title><rect x="61.1030%" y="501" width="9.0642%" height="15" fill="rgb(232,139,19)" fg:x="2083" fg:w="309"/><text x="61.2202%" y="511.50">_int_malloc</text></g><g><title>sysmalloc (7 samples, 0.21%)</title><rect x="69.9619%" y="485" width="0.2053%" height="15" fill="rgb(225,201,24)" fg:x="2385" fg:w="7"/><text x="70.0791%" y="495.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="70.1085%" y="469" width="0.0587%" height="15" fill="rgb(221,47,46)" fg:x="2390" fg:w="2"/><text x="70.2257%" y="479.50"></text></g><g><title>exc_page_fault (2 samples, 0.06%)</title><rect x="70.1085%" y="453" width="0.0587%" height="15" fill="rgb(249,23,13)" fg:x="2390" fg:w="2"/><text x="70.2257%" y="463.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.06%)</title><rect x="70.1085%" y="437" width="0.0587%" height="15" fill="rgb(219,9,5)" fg:x="2390" fg:w="2"/><text x="70.2257%" y="447.50"></text></g><g><title>lock_vma_under_rcu (1 samples, 0.03%)</title><rect x="70.1379%" y="421" width="0.0293%" height="15" fill="rgb(254,171,16)" fg:x="2391" fg:w="1"/><text x="70.2551%" y="431.50"></text></g><g><title>arena_for_chunk (2 samples, 0.06%)</title><rect x="70.1672%" y="501" width="0.0587%" height="15" fill="rgb(230,171,20)" fg:x="2392" fg:w="2"/><text x="70.2844%" y="511.50"></text></g><g><title>__GI___libc_malloc (323 samples, 9.47%)</title><rect x="60.8976%" y="517" width="9.4749%" height="15" fill="rgb(210,71,41)" fg:x="2076" fg:w="323"/><text x="61.0148%" y="527.50">__GI___libc_malloc</text></g><g><title>checked_request2size (5 samples, 0.15%)</title><rect x="70.2259%" y="501" width="0.1467%" height="15" fill="rgb(206,173,20)" fg:x="2394" fg:w="5"/><text x="70.3431%" y="511.50"></text></g><g><title>__rdl_alloc (4 samples, 0.12%)</title><rect x="70.3725%" y="517" width="0.1173%" height="15" fill="rgb(233,88,34)" fg:x="2399" fg:w="4"/><text x="70.4897%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (425 samples, 12.47%)</title><rect x="58.1696%" y="693" width="12.4670%" height="15" fill="rgb(223,209,46)" fg:x="1983" fg:w="425"/><text x="58.2867%" y="703.50">core::iter::traits::iterator::Iterator::col..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (425 samples, 12.47%)</title><rect x="58.1696%" y="677" width="12.4670%" height="15" fill="rgb(250,43,18)" fg:x="1983" fg:w="425"/><text x="58.2867%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (424 samples, 12.44%)</title><rect x="58.1989%" y="661" width="12.4377%" height="15" fill="rgb(208,13,10)" fg:x="1984" fg:w="424"/><text x="58.3161%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (424 samples, 12.44%)</title><rect x="58.1989%" y="645" width="12.4377%" height="15" fill="rgb(212,200,36)" fg:x="1984" fg:w="424"/><text x="58.3161%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (338 samples, 9.91%)</title><rect x="60.7216%" y="629" width="9.9149%" height="15" fill="rgb(225,90,30)" fg:x="2070" fg:w="338"/><text x="60.8388%" y="639.50">alloc::vec::Vec&lt;T&gt;::with_capacity</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (338 samples, 9.91%)</title><rect x="60.7216%" y="613" width="9.9149%" height="15" fill="rgb(236,182,39)" fg:x="2070" fg:w="338"/><text x="60.8388%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::with_capaci..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (338 samples, 9.91%)</title><rect x="60.7216%" y="597" width="9.9149%" height="15" fill="rgb(212,144,35)" fg:x="2070" fg:w="338"/><text x="60.8388%" y="607.50">alloc::raw_vec::RawVec&lt;T,A&gt;::with..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (336 samples, 9.86%)</title><rect x="60.7803%" y="581" width="9.8563%" height="15" fill="rgb(228,63,44)" fg:x="2072" fg:w="336"/><text x="60.8975%" y="591.50">alloc::raw_vec::RawVec&lt;T,A&gt;::try_..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (335 samples, 9.83%)</title><rect x="60.8096%" y="565" width="9.8269%" height="15" fill="rgb(228,109,6)" fg:x="2073" fg:w="335"/><text x="60.9268%" y="575.50">&lt;alloc::alloc::Global as core::al..</text></g><g><title>alloc::alloc::Global::alloc_impl (335 samples, 9.83%)</title><rect x="60.8096%" y="549" width="9.8269%" height="15" fill="rgb(238,117,24)" fg:x="2073" fg:w="335"/><text x="60.9268%" y="559.50">alloc::alloc::Global::alloc_impl</text></g><g><title>alloc::alloc::alloc (335 samples, 9.83%)</title><rect x="60.8096%" y="533" width="9.8269%" height="15" fill="rgb(242,26,26)" fg:x="2073" fg:w="335"/><text x="60.9268%" y="543.50">alloc::alloc::alloc</text></g><g><title>__rust_alloc (5 samples, 0.15%)</title><rect x="70.4899%" y="517" width="0.1467%" height="15" fill="rgb(221,92,48)" fg:x="2403" fg:w="5"/><text x="70.6071%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (7 samples, 0.21%)</title><rect x="70.6366%" y="693" width="0.2053%" height="15" fill="rgb(209,209,32)" fg:x="2408" fg:w="7"/><text x="70.7537%" y="703.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (7 samples, 0.21%)</title><rect x="70.6366%" y="677" width="0.2053%" height="15" fill="rgb(221,70,22)" fg:x="2408" fg:w="7"/><text x="70.7537%" y="687.50"></text></g><g><title>_int_free (37 samples, 1.09%)</title><rect x="71.1352%" y="597" width="1.0854%" height="15" fill="rgb(248,145,5)" fg:x="2425" fg:w="37"/><text x="71.2524%" y="607.50">_..</text></g><g><title>__GI___libc_free (51 samples, 1.50%)</title><rect x="70.8419%" y="613" width="1.4960%" height="15" fill="rgb(226,116,26)" fg:x="2415" fg:w="51"/><text x="70.9591%" y="623.50">__G..</text></g><g><title>arena_for_chunk (4 samples, 0.12%)</title><rect x="72.2206%" y="597" width="0.1173%" height="15" fill="rgb(244,5,17)" fg:x="2462" fg:w="4"/><text x="72.3378%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 1.58%)</title><rect x="70.8419%" y="629" width="1.5840%" height="15" fill="rgb(252,159,33)" fg:x="2415" fg:w="54"/><text x="70.9591%" y="639.50">all..</text></g><g><title>__rdl_dealloc (3 samples, 0.09%)</title><rect x="72.3379%" y="613" width="0.0880%" height="15" fill="rgb(206,71,0)" fg:x="2466" fg:w="3"/><text x="72.4551%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 1.61%)</title><rect x="70.8419%" y="645" width="1.6134%" height="15" fill="rgb(233,118,54)" fg:x="2415" fg:w="55"/><text x="70.9591%" y="655.50">&lt;al..</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.03%)</title><rect x="72.4259%" y="629" width="0.0293%" height="15" fill="rgb(234,83,48)" fg:x="2469" fg:w="1"/><text x="72.5431%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;((usize,usize),f64)&gt;&gt; (58 samples, 1.70%)</title><rect x="70.8419%" y="693" width="1.7014%" height="15" fill="rgb(228,3,54)" fg:x="2415" fg:w="58"/><text x="70.9591%" y="703.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;((usize,usize),f64)&gt;&gt; (58 samples, 1.70%)</title><rect x="70.8419%" y="677" width="1.7014%" height="15" fill="rgb(226,155,13)" fg:x="2415" fg:w="58"/><text x="70.9591%" y="687.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 1.70%)</title><rect x="70.8419%" y="661" width="1.7014%" height="15" fill="rgb(241,28,37)" fg:x="2415" fg:w="58"/><text x="70.9591%" y="671.50">&lt;all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.09%)</title><rect x="72.4553%" y="645" width="0.0880%" height="15" fill="rgb(233,93,10)" fg:x="2470" fg:w="3"/><text x="72.5725%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.09%)</title><rect x="72.4553%" y="629" width="0.0880%" height="15" fill="rgb(225,113,19)" fg:x="2470" fg:w="3"/><text x="72.5725%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(usize,f64)&gt;&gt; (3 samples, 0.09%)</title><rect x="72.5433%" y="693" width="0.0880%" height="15" fill="rgb(241,2,18)" fg:x="2473" fg:w="3"/><text x="72.6605%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,f64)&gt;&gt; (3 samples, 0.09%)</title><rect x="72.5433%" y="677" width="0.0880%" height="15" fill="rgb(228,207,21)" fg:x="2473" fg:w="3"/><text x="72.6605%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.09%)</title><rect x="72.5433%" y="661" width="0.0880%" height="15" fill="rgb(213,211,35)" fg:x="2473" fg:w="3"/><text x="72.6605%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.09%)</title><rect x="72.5433%" y="645" width="0.0880%" height="15" fill="rgb(209,83,10)" fg:x="2473" fg:w="3"/><text x="72.6605%" y="655.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (11 samples, 0.32%)</title><rect x="73.8046%" y="677" width="0.3227%" height="15" fill="rgb(209,164,1)" fg:x="2516" fg:w="11"/><text x="73.9218%" y="687.50"></text></g><g><title>checked_request2size (6 samples, 0.18%)</title><rect x="74.6847%" y="597" width="0.1760%" height="15" fill="rgb(213,184,43)" fg:x="2546" fg:w="6"/><text x="74.8018%" y="607.50"></text></g><g><title>__GI___libc_malloc (34 samples, 1.00%)</title><rect x="74.2153%" y="613" width="0.9974%" height="15" fill="rgb(231,61,34)" fg:x="2530" fg:w="34"/><text x="74.3325%" y="623.50">_..</text></g><g><title>tcache_get (12 samples, 0.35%)</title><rect x="74.8607%" y="597" width="0.3520%" height="15" fill="rgb(235,75,3)" fg:x="2552" fg:w="12"/><text x="74.9779%" y="607.50"></text></g><g><title>__rdl_alloc (4 samples, 0.12%)</title><rect x="75.2127%" y="613" width="0.1173%" height="15" fill="rgb(220,106,47)" fg:x="2564" fg:w="4"/><text x="75.3299%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (46 samples, 1.35%)</title><rect x="74.1273%" y="677" width="1.3494%" height="15" fill="rgb(210,196,33)" fg:x="2527" fg:w="46"/><text x="74.2445%" y="687.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 1.35%)</title><rect x="74.1273%" y="661" width="1.3494%" height="15" fill="rgb(229,154,42)" fg:x="2527" fg:w="46"/><text x="74.2445%" y="671.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 1.35%)</title><rect x="74.1273%" y="645" width="1.3494%" height="15" fill="rgb(228,114,26)" fg:x="2527" fg:w="46"/><text x="74.2445%" y="655.50">al..</text></g><g><title>alloc::alloc::alloc (46 samples, 1.35%)</title><rect x="74.1273%" y="629" width="1.3494%" height="15" fill="rgb(208,144,1)" fg:x="2527" fg:w="46"/><text x="74.2445%" y="639.50">al..</text></g><g><title>__rust_alloc (5 samples, 0.15%)</title><rect x="75.3300%" y="613" width="0.1467%" height="15" fill="rgb(239,112,37)" fg:x="2568" fg:w="5"/><text x="75.4472%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.06%)</title><rect x="75.4767%" y="661" width="0.0587%" height="15" fill="rgb(210,96,50)" fg:x="2573" fg:w="2"/><text x="75.5939%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (3 samples, 0.09%)</title><rect x="75.4767%" y="677" width="0.0880%" height="15" fill="rgb(222,178,2)" fg:x="2573" fg:w="3"/><text x="75.5939%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="75.5353%" y="661" width="0.0293%" height="15" fill="rgb(226,74,18)" fg:x="2575" fg:w="1"/><text x="75.6525%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="75.5353%" y="645" width="0.0293%" height="15" fill="rgb(225,67,54)" fg:x="2575" fg:w="1"/><text x="75.6525%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="75.5353%" y="629" width="0.0293%" height="15" fill="rgb(251,92,32)" fg:x="2575" fg:w="1"/><text x="75.6525%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (8 samples, 0.23%)</title><rect x="75.5647%" y="677" width="0.2347%" height="15" fill="rgb(228,149,22)" fg:x="2576" fg:w="8"/><text x="75.6819%" y="687.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (8 samples, 0.23%)</title><rect x="75.5647%" y="661" width="0.2347%" height="15" fill="rgb(243,54,13)" fg:x="2576" fg:w="8"/><text x="75.6819%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.44%)</title><rect x="75.7994%" y="629" width="0.4400%" height="15" fill="rgb(243,180,28)" fg:x="2584" fg:w="15"/><text x="75.9165%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.09%)</title><rect x="76.3860%" y="597" width="0.0880%" height="15" fill="rgb(208,167,24)" fg:x="2604" fg:w="3"/><text x="76.5032%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="77.1781%" y="581" width="0.0293%" height="15" fill="rgb(245,73,45)" fg:x="2631" fg:w="1"/><text x="77.2952%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.35%)</title><rect x="77.2074%" y="533" width="0.3520%" height="15" fill="rgb(237,203,48)" fg:x="2632" fg:w="12"/><text x="77.3246%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.18%)</title><rect x="77.5594%" y="373" width="0.1760%" height="15" fill="rgb(211,197,16)" fg:x="2644" fg:w="6"/><text x="77.6766%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="77.7941%" y="357" width="0.0293%" height="15" fill="rgb(243,99,51)" fg:x="2652" fg:w="1"/><text x="77.9113%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.29%)</title><rect x="77.7354%" y="373" width="0.2933%" height="15" fill="rgb(215,123,29)" fg:x="2650" fg:w="10"/><text x="77.8526%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.21%)</title><rect x="77.8234%" y="357" width="0.2053%" height="15" fill="rgb(239,186,37)" fg:x="2653" fg:w="7"/><text x="77.9406%" y="367.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.50%)</title><rect x="77.5594%" y="389" width="0.4987%" height="15" fill="rgb(252,136,39)" fg:x="2644" fg:w="17"/><text x="77.6766%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="78.0287%" y="373" width="0.0293%" height="15" fill="rgb(223,213,32)" fg:x="2660" fg:w="1"/><text x="78.1459%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (22 samples, 0.65%)</title><rect x="77.5594%" y="517" width="0.6454%" height="15" fill="rgb(233,115,5)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (22 samples, 0.65%)</title><rect x="77.5594%" y="501" width="0.6454%" height="15" fill="rgb(207,226,44)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.65%)</title><rect x="77.5594%" y="485" width="0.6454%" height="15" fill="rgb(208,126,0)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.65%)</title><rect x="77.5594%" y="469" width="0.6454%" height="15" fill="rgb(244,66,21)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.65%)</title><rect x="77.5594%" y="453" width="0.6454%" height="15" fill="rgb(222,97,12)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.65%)</title><rect x="77.5594%" y="437" width="0.6454%" height="15" fill="rgb(219,213,19)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (22 samples, 0.65%)</title><rect x="77.5594%" y="421" width="0.6454%" height="15" fill="rgb(252,169,30)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.65%)</title><rect x="77.5594%" y="405" width="0.6454%" height="15" fill="rgb(206,32,51)" fg:x="2644" fg:w="22"/><text x="77.6766%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (5 samples, 0.15%)</title><rect x="78.0581%" y="389" width="0.1467%" height="15" fill="rgb(250,172,42)" fg:x="2661" fg:w="5"/><text x="78.1753%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (5 samples, 0.15%)</title><rect x="78.0581%" y="373" width="0.1467%" height="15" fill="rgb(209,34,43)" fg:x="2661" fg:w="5"/><text x="78.1753%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (5 samples, 0.15%)</title><rect x="78.0581%" y="357" width="0.1467%" height="15" fill="rgb(223,11,35)" fg:x="2661" fg:w="5"/><text x="78.1753%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (8 samples, 0.23%)</title><rect x="78.2048%" y="517" width="0.2347%" height="15" fill="rgb(251,219,26)" fg:x="2666" fg:w="8"/><text x="78.3219%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.09%)</title><rect x="78.4394%" y="405" width="0.0880%" height="15" fill="rgb(231,119,3)" fg:x="2674" fg:w="3"/><text x="78.5566%" y="415.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (34 samples, 1.00%)</title><rect x="77.5594%" y="533" width="0.9974%" height="15" fill="rgb(216,97,11)" fg:x="2644" fg:w="34"/><text x="77.6766%" y="543.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="517" width="0.1173%" height="15" fill="rgb(223,59,9)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="501" width="0.1173%" height="15" fill="rgb(233,93,31)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="485" width="0.1173%" height="15" fill="rgb(239,81,33)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="469" width="0.1173%" height="15" fill="rgb(213,120,34)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="453" width="0.1173%" height="15" fill="rgb(243,49,53)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="437" width="0.1173%" height="15" fill="rgb(247,216,33)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="78.4394%" y="421" width="0.1173%" height="15" fill="rgb(226,26,14)" fg:x="2674" fg:w="4"/><text x="78.5566%" y="431.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="78.5274%" y="405" width="0.0293%" height="15" fill="rgb(215,49,53)" fg:x="2677" fg:w="1"/><text x="78.6446%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.03%)</title><rect x="78.5274%" y="389" width="0.0293%" height="15" fill="rgb(245,162,40)" fg:x="2677" fg:w="1"/><text x="78.6446%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="78.5274%" y="373" width="0.0293%" height="15" fill="rgb(229,68,17)" fg:x="2677" fg:w="1"/><text x="78.6446%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.26%)</title><rect x="78.5568%" y="373" width="0.2640%" height="15" fill="rgb(213,182,10)" fg:x="2678" fg:w="9"/><text x="78.6739%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="78.8208%" y="373" width="0.1173%" height="15" fill="rgb(245,125,30)" fg:x="2687" fg:w="4"/><text x="78.9380%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.09%)</title><rect x="78.8501%" y="357" width="0.0880%" height="15" fill="rgb(232,202,2)" fg:x="2688" fg:w="3"/><text x="78.9673%" y="367.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.41%)</title><rect x="78.5568%" y="389" width="0.4107%" height="15" fill="rgb(237,140,51)" fg:x="2678" fg:w="14"/><text x="78.6739%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="78.9381%" y="373" width="0.0293%" height="15" fill="rgb(236,157,25)" fg:x="2691" fg:w="1"/><text x="79.0553%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 1.97%)</title><rect x="77.2074%" y="581" width="1.9654%" height="15" fill="rgb(219,209,0)" fg:x="2632" fg:w="67"/><text x="77.3246%" y="591.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 1.97%)</title><rect x="77.2074%" y="565" width="1.9654%" height="15" fill="rgb(240,116,54)" fg:x="2632" fg:w="67"/><text x="77.3246%" y="575.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (67 samples, 1.97%)</title><rect x="77.2074%" y="549" width="1.9654%" height="15" fill="rgb(216,10,36)" fg:x="2632" fg:w="67"/><text x="77.3246%" y="559.50">&lt;core..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (21 samples, 0.62%)</title><rect x="78.5568%" y="533" width="0.6160%" height="15" fill="rgb(222,72,44)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (21 samples, 0.62%)</title><rect x="78.5568%" y="517" width="0.6160%" height="15" fill="rgb(232,159,9)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (21 samples, 0.62%)</title><rect x="78.5568%" y="501" width="0.6160%" height="15" fill="rgb(210,39,32)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.62%)</title><rect x="78.5568%" y="485" width="0.6160%" height="15" fill="rgb(216,194,45)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.62%)</title><rect x="78.5568%" y="469" width="0.6160%" height="15" fill="rgb(218,18,35)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.62%)</title><rect x="78.5568%" y="453" width="0.6160%" height="15" fill="rgb(207,83,51)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.62%)</title><rect x="78.5568%" y="437" width="0.6160%" height="15" fill="rgb(225,63,43)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (21 samples, 0.62%)</title><rect x="78.5568%" y="421" width="0.6160%" height="15" fill="rgb(207,57,36)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.62%)</title><rect x="78.5568%" y="405" width="0.6160%" height="15" fill="rgb(216,99,33)" fg:x="2678" fg:w="21"/><text x="78.6739%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (7 samples, 0.21%)</title><rect x="78.9674%" y="389" width="0.2053%" height="15" fill="rgb(225,42,16)" fg:x="2692" fg:w="7"/><text x="79.0846%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (7 samples, 0.21%)</title><rect x="78.9674%" y="373" width="0.2053%" height="15" fill="rgb(220,201,45)" fg:x="2692" fg:w="7"/><text x="79.0846%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (7 samples, 0.21%)</title><rect x="78.9674%" y="357" width="0.2053%" height="15" fill="rgb(225,33,4)" fg:x="2692" fg:w="7"/><text x="79.0846%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.06%)</title><rect x="79.1728%" y="581" width="0.0587%" height="15" fill="rgb(224,33,50)" fg:x="2699" fg:w="2"/><text x="79.2900%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.06%)</title><rect x="79.1728%" y="565" width="0.0587%" height="15" fill="rgb(246,198,51)" fg:x="2699" fg:w="2"/><text x="79.2900%" y="575.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.16577877130995961443 (1 samples, 0.03%)</title><rect x="79.3781%" y="517" width="0.0293%" height="15" fill="rgb(205,22,4)" fg:x="2706" fg:w="1"/><text x="79.4953%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.12%)</title><rect x="79.4075%" y="517" width="0.1173%" height="15" fill="rgb(206,3,8)" fg:x="2707" fg:w="4"/><text x="79.5246%" y="527.50"></text></g><g><title>__memcpy_evex_unaligned_erms (16 samples, 0.47%)</title><rect x="80.8155%" y="421" width="0.4693%" height="15" fill="rgb(251,23,15)" fg:x="2755" fg:w="16"/><text x="80.9327%" y="431.50"></text></g><g><title>_int_free (26 samples, 0.76%)</title><rect x="81.2848%" y="421" width="0.7627%" height="15" fill="rgb(252,88,28)" fg:x="2771" fg:w="26"/><text x="81.4020%" y="431.50"></text></g><g><title>tcache_put (6 samples, 0.18%)</title><rect x="81.8715%" y="405" width="0.1760%" height="15" fill="rgb(212,127,14)" fg:x="2791" fg:w="6"/><text x="81.9887%" y="415.50"></text></g><g><title>alloc_perturb (4 samples, 0.12%)</title><rect x="83.9836%" y="405" width="0.1173%" height="15" fill="rgb(247,145,37)" fg:x="2863" fg:w="4"/><text x="84.1008%" y="415.50"></text></g><g><title>checked_request2size (2 samples, 0.06%)</title><rect x="84.1009%" y="405" width="0.0587%" height="15" fill="rgb(209,117,53)" fg:x="2867" fg:w="2"/><text x="84.2181%" y="415.50"></text></g><g><title>_int_malloc (75 samples, 2.20%)</title><rect x="82.0475%" y="421" width="2.2001%" height="15" fill="rgb(212,90,42)" fg:x="2797" fg:w="75"/><text x="82.1647%" y="431.50">_int_..</text></g><g><title>tcache_put (3 samples, 0.09%)</title><rect x="84.1596%" y="405" width="0.0880%" height="15" fill="rgb(218,164,37)" fg:x="2869" fg:w="3"/><text x="84.2768%" y="415.50"></text></g><g><title>_int_realloc (135 samples, 3.96%)</title><rect x="80.3755%" y="437" width="3.9601%" height="15" fill="rgb(246,65,34)" fg:x="2740" fg:w="135"/><text x="80.4927%" y="447.50">_int_realloc</text></g><g><title>memcpy@@GLIBC_2.14@plt (3 samples, 0.09%)</title><rect x="84.2476%" y="421" width="0.0880%" height="15" fill="rgb(231,100,33)" fg:x="2872" fg:w="3"/><text x="84.3648%" y="431.50"></text></g><g><title>arena_for_chunk (7 samples, 0.21%)</title><rect x="84.3356%" y="437" width="0.2053%" height="15" fill="rgb(228,126,14)" fg:x="2875" fg:w="7"/><text x="84.4528%" y="447.50"></text></g><g><title>__GI___libc_realloc (173 samples, 5.07%)</title><rect x="79.6715%" y="453" width="5.0748%" height="15" fill="rgb(215,173,21)" fg:x="2716" fg:w="173"/><text x="79.7886%" y="463.50">__GI___libc_real..</text></g><g><title>checked_request2size (7 samples, 0.21%)</title><rect x="84.5409%" y="437" width="0.2053%" height="15" fill="rgb(210,6,40)" fg:x="2882" fg:w="7"/><text x="84.6581%" y="447.50"></text></g><g><title>__rdl_realloc (5 samples, 0.15%)</title><rect x="84.7463%" y="453" width="0.1467%" height="15" fill="rgb(212,48,18)" fg:x="2889" fg:w="5"/><text x="84.8634%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (181 samples, 5.31%)</title><rect x="79.6421%" y="501" width="5.3095%" height="15" fill="rgb(230,214,11)" fg:x="2715" fg:w="181"/><text x="79.7593%" y="511.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::Global::grow_impl (181 samples, 5.31%)</title><rect x="79.6421%" y="485" width="5.3095%" height="15" fill="rgb(254,105,39)" fg:x="2715" fg:w="181"/><text x="79.7593%" y="495.50">alloc::alloc::Glo..</text></g><g><title>alloc::alloc::realloc (180 samples, 5.28%)</title><rect x="79.6715%" y="469" width="5.2801%" height="15" fill="rgb(245,158,5)" fg:x="2716" fg:w="180"/><text x="79.7886%" y="479.50">alloc::alloc::rea..</text></g><g><title>__rust_realloc (2 samples, 0.06%)</title><rect x="84.8929%" y="453" width="0.0587%" height="15" fill="rgb(249,208,11)" fg:x="2894" fg:w="2"/><text x="85.0101%" y="463.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hdd49911bdf5b8778E.llvm.16577877130995961443 (4 samples, 0.12%)</title><rect x="84.9516%" y="501" width="0.1173%" height="15" fill="rgb(210,39,28)" fg:x="2896" fg:w="4"/><text x="85.0688%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (190 samples, 5.57%)</title><rect x="79.5248%" y="517" width="5.5735%" height="15" fill="rgb(211,56,53)" fg:x="2711" fg:w="190"/><text x="79.6420%" y="527.50">alloc::raw_vec::fi..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="85.0689%" y="501" width="0.0293%" height="15" fill="rgb(226,201,30)" fg:x="2900" fg:w="1"/><text x="85.1861%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="85.0983%" y="517" width="0.0293%" height="15" fill="rgb(239,101,34)" fg:x="2901" fg:w="1"/><text x="85.2155%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="85.0983%" y="501" width="0.0293%" height="15" fill="rgb(226,209,5)" fg:x="2901" fg:w="1"/><text x="85.2155%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (204 samples, 5.98%)</title><rect x="79.2314%" y="581" width="5.9842%" height="15" fill="rgb(250,105,47)" fg:x="2701" fg:w="204"/><text x="79.3486%" y="591.50">alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (204 samples, 5.98%)</title><rect x="79.2314%" y="565" width="5.9842%" height="15" fill="rgb(230,72,3)" fg:x="2701" fg:w="204"/><text x="79.3486%" y="575.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (202 samples, 5.93%)</title><rect x="79.2901%" y="549" width="5.9255%" height="15" fill="rgb(232,218,39)" fg:x="2703" fg:w="202"/><text x="79.4073%" y="559.50">alloc::raw_vec::Raw..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (202 samples, 5.93%)</title><rect x="79.2901%" y="533" width="5.9255%" height="15" fill="rgb(248,166,6)" fg:x="2703" fg:w="202"/><text x="79.4073%" y="543.50">alloc::raw_vec::Raw..</text></g><g><title>core::cmp::max (3 samples, 0.09%)</title><rect x="85.1276%" y="517" width="0.0880%" height="15" fill="rgb(247,89,20)" fg:x="2902" fg:w="3"/><text x="85.2448%" y="527.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.09%)</title><rect x="85.1276%" y="501" width="0.0880%" height="15" fill="rgb(248,130,54)" fg:x="2902" fg:w="3"/><text x="85.2448%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.09%)</title><rect x="85.1276%" y="485" width="0.0880%" height="15" fill="rgb(234,196,4)" fg:x="2902" fg:w="3"/><text x="85.2448%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (11 samples, 0.32%)</title><rect x="85.2156%" y="581" width="0.3227%" height="15" fill="rgb(250,143,31)" fg:x="2905" fg:w="11"/><text x="85.3328%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="85.5383%" y="533" width="0.0293%" height="15" fill="rgb(211,110,34)" fg:x="2916" fg:w="1"/><text x="85.6555%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (5 samples, 0.15%)</title><rect x="85.5383%" y="581" width="0.1467%" height="15" fill="rgb(215,124,48)" fg:x="2916" fg:w="5"/><text x="85.6555%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (5 samples, 0.15%)</title><rect x="85.5383%" y="565" width="0.1467%" height="15" fill="rgb(216,46,13)" fg:x="2916" fg:w="5"/><text x="85.6555%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (5 samples, 0.15%)</title><rect x="85.5383%" y="549" width="0.1467%" height="15" fill="rgb(205,184,25)" fg:x="2916" fg:w="5"/><text x="85.6555%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="533" width="0.1173%" height="15" fill="rgb(228,1,10)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;,fringe_vs_astar::structures::graph::generate_neighbors::{{closure}}&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="517" width="0.1173%" height="15" fill="rgb(213,116,27)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="501" width="0.1173%" height="15" fill="rgb(241,95,50)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;,core::option::IntoIter&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="485" width="0.1173%" height="15" fill="rgb(238,48,32)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="469" width="0.1173%" height="15" fill="rgb(235,113,49)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="453" width="0.1173%" height="15" fill="rgb(205,127,43)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="437" width="0.1173%" height="15" fill="rgb(250,162,2)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="447.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.12%)</title><rect x="85.5676%" y="421" width="0.1173%" height="15" fill="rgb(220,13,41)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.12%)</title><rect x="85.5676%" y="405" width="0.1173%" height="15" fill="rgb(249,221,25)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.12%)</title><rect x="85.5676%" y="389" width="0.1173%" height="15" fill="rgb(215,208,19)" fg:x="2917" fg:w="4"/><text x="85.6848%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (330 samples, 9.68%)</title><rect x="76.3860%" y="613" width="9.6803%" height="15" fill="rgb(236,175,2)" fg:x="2604" fg:w="330"/><text x="76.5032%" y="623.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (327 samples, 9.59%)</title><rect x="76.4740%" y="597" width="9.5923%" height="15" fill="rgb(241,52,2)" fg:x="2607" fg:w="327"/><text x="76.5912%" y="607.50">alloc::vec::Vec&lt;T,A&gt;::extend_des..</text></g><g><title>core::ptr::write (13 samples, 0.38%)</title><rect x="85.6850%" y="581" width="0.3813%" height="15" fill="rgb(248,140,14)" fg:x="2921" fg:w="13"/><text x="85.8021%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="86.1543%" y="437" width="0.0587%" height="15" fill="rgb(253,22,42)" fg:x="2937" fg:w="2"/><text x="86.2715%" y="447.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.15%)</title><rect x="86.2423%" y="421" width="0.1467%" height="15" fill="rgb(234,61,47)" fg:x="2940" fg:w="5"/><text x="86.3595%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.15%)</title><rect x="86.2423%" y="405" width="0.1467%" height="15" fill="rgb(208,226,15)" fg:x="2940" fg:w="5"/><text x="86.3595%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="86.3303%" y="389" width="0.0587%" height="15" fill="rgb(217,221,4)" fg:x="2943" fg:w="2"/><text x="86.4475%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.35%)</title><rect x="86.0663%" y="613" width="0.3520%" height="15" fill="rgb(212,174,34)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.35%)</title><rect x="86.0663%" y="597" width="0.3520%" height="15" fill="rgb(253,83,4)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find (12 samples, 0.35%)</title><rect x="86.0663%" y="581" width="0.3520%" height="15" fill="rgb(250,195,49)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="591.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (12 samples, 0.35%)</title><rect x="86.0663%" y="565" width="0.3520%" height="15" fill="rgb(241,192,25)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::find::_{{closure}} (12 samples, 0.35%)</title><rect x="86.0663%" y="549" width="0.3520%" height="15" fill="rgb(208,124,10)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.35%)</title><rect x="86.0663%" y="533" width="0.3520%" height="15" fill="rgb(222,33,0)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.35%)</title><rect x="86.0663%" y="517" width="0.3520%" height="15" fill="rgb(234,209,28)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.35%)</title><rect x="86.0663%" y="501" width="0.3520%" height="15" fill="rgb(224,11,23)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.35%)</title><rect x="86.0663%" y="485" width="0.3520%" height="15" fill="rgb(232,99,1)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.35%)</title><rect x="86.0663%" y="469" width="0.3520%" height="15" fill="rgb(237,95,45)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (12 samples, 0.35%)</title><rect x="86.0663%" y="453" width="0.3520%" height="15" fill="rgb(208,109,11)" fg:x="2934" fg:w="12"/><text x="86.1835%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.21%)</title><rect x="86.2130%" y="437" width="0.2053%" height="15" fill="rgb(216,190,48)" fg:x="2939" fg:w="7"/><text x="86.3302%" y="447.50"></text></g><g><title>core::iter::adapters::flatten::try_flatten_one::_{{closure}} (1 samples, 0.03%)</title><rect x="86.3890%" y="421" width="0.0293%" height="15" fill="rgb(251,171,36)" fg:x="2945" fg:w="1"/><text x="86.5062%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="86.3890%" y="405" width="0.0293%" height="15" fill="rgb(230,62,22)" fg:x="2945" fg:w="1"/><text x="86.5062%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.03%)</title><rect x="86.3890%" y="389" width="0.0293%" height="15" fill="rgb(225,114,35)" fg:x="2945" fg:w="1"/><text x="86.5062%" y="399.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12 samples, 0.35%)</title><rect x="86.4183%" y="613" width="0.3520%" height="15" fill="rgb(215,118,42)" fg:x="2946" fg:w="12"/><text x="86.5355%" y="623.50"></text></g><g><title>checked_request2size (7 samples, 0.21%)</title><rect x="87.1810%" y="485" width="0.2053%" height="15" fill="rgb(243,119,21)" fg:x="2972" fg:w="7"/><text x="87.2982%" y="495.50"></text></g><g><title>__GI___libc_malloc (34 samples, 1.00%)</title><rect x="86.7996%" y="501" width="0.9974%" height="15" fill="rgb(252,177,53)" fg:x="2959" fg:w="34"/><text x="86.9168%" y="511.50">_..</text></g><g><title>tcache_get (14 samples, 0.41%)</title><rect x="87.3863%" y="485" width="0.4107%" height="15" fill="rgb(237,209,29)" fg:x="2979" fg:w="14"/><text x="87.5035%" y="495.50"></text></g><g><title>__rdl_alloc (4 samples, 0.12%)</title><rect x="87.7970%" y="501" width="0.1173%" height="15" fill="rgb(212,65,23)" fg:x="2993" fg:w="4"/><text x="87.9142%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (40 samples, 1.17%)</title><rect x="86.7703%" y="613" width="1.1734%" height="15" fill="rgb(230,222,46)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="623.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 1.17%)</title><rect x="86.7703%" y="597" width="1.1734%" height="15" fill="rgb(215,135,32)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="607.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 1.17%)</title><rect x="86.7703%" y="581" width="1.1734%" height="15" fill="rgb(246,101,22)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="591.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (40 samples, 1.17%)</title><rect x="86.7703%" y="565" width="1.1734%" height="15" fill="rgb(206,107,13)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="575.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 1.17%)</title><rect x="86.7703%" y="549" width="1.1734%" height="15" fill="rgb(250,100,44)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="559.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 1.17%)</title><rect x="86.7703%" y="533" width="1.1734%" height="15" fill="rgb(231,147,38)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="543.50">al..</text></g><g><title>alloc::alloc::alloc (40 samples, 1.17%)</title><rect x="86.7703%" y="517" width="1.1734%" height="15" fill="rgb(229,8,40)" fg:x="2958" fg:w="40"/><text x="86.8875%" y="527.50">al..</text></g><g><title>__rust_alloc (1 samples, 0.03%)</title><rect x="87.9143%" y="501" width="0.0293%" height="15" fill="rgb(221,135,30)" fg:x="2997" fg:w="1"/><text x="88.0315%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (416 samples, 12.20%)</title><rect x="75.7994%" y="677" width="12.2030%" height="15" fill="rgb(249,193,18)" fg:x="2584" fg:w="416"/><text x="75.9165%" y="687.50">core::iter::traits::iterator::Iterator::co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (416 samples, 12.20%)</title><rect x="75.7994%" y="661" width="12.2030%" height="15" fill="rgb(209,133,39)" fg:x="2584" fg:w="416"/><text x="75.9165%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (416 samples, 12.20%)</title><rect x="75.7994%" y="645" width="12.2030%" height="15" fill="rgb(232,100,14)" fg:x="2584" fg:w="416"/><text x="75.9165%" y="655.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_fr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (401 samples, 11.76%)</title><rect x="76.2394%" y="629" width="11.7630%" height="15" fill="rgb(224,185,1)" fg:x="2599" fg:w="401"/><text x="76.3566%" y="639.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_..</text></g><g><title>core::ptr::write (2 samples, 0.06%)</title><rect x="87.9437%" y="613" width="0.0587%" height="15" fill="rgb(223,139,8)" fg:x="2998" fg:w="2"/><text x="88.0609%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flatten (8 samples, 0.23%)</title><rect x="88.0023%" y="677" width="0.2347%" height="15" fill="rgb(232,213,38)" fg:x="3000" fg:w="8"/><text x="88.1195%" y="687.50"></text></g><g><title>core::iter::adapters::flatten::Flatten&lt;I&gt;::new (8 samples, 0.23%)</title><rect x="88.0023%" y="661" width="0.2347%" height="15" fill="rgb(207,94,22)" fg:x="3000" fg:w="8"/><text x="88.1195%" y="671.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::new (8 samples, 0.23%)</title><rect x="88.0023%" y="645" width="0.2347%" height="15" fill="rgb(219,183,54)" fg:x="3000" fg:w="8"/><text x="88.1195%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fuse (8 samples, 0.23%)</title><rect x="88.0023%" y="629" width="0.2347%" height="15" fill="rgb(216,185,54)" fg:x="3000" fg:w="8"/><text x="88.1195%" y="639.50"></text></g><g><title>core::iter::adapters::fuse::Fuse&lt;I&gt;::new (8 samples, 0.23%)</title><rect x="88.0023%" y="613" width="0.2347%" height="15" fill="rgb(254,217,39)" fg:x="3000" fg:w="8"/><text x="88.1195%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (3 samples, 0.09%)</title><rect x="88.2370%" y="677" width="0.0880%" height="15" fill="rgb(240,178,23)" fg:x="3008" fg:w="3"/><text x="88.3542%" y="687.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (3 samples, 0.09%)</title><rect x="88.2370%" y="661" width="0.0880%" height="15" fill="rgb(218,11,47)" fg:x="3008" fg:w="3"/><text x="88.3542%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (6 samples, 0.18%)</title><rect x="88.3250%" y="677" width="0.1760%" height="15" fill="rgb(218,51,51)" fg:x="3011" fg:w="6"/><text x="88.4422%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_sub (4 samples, 0.12%)</title><rect x="88.3837%" y="661" width="0.1173%" height="15" fill="rgb(238,126,27)" fg:x="3013" fg:w="4"/><text x="88.5009%" y="671.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (4 samples, 0.12%)</title><rect x="88.5010%" y="661" width="0.1173%" height="15" fill="rgb(249,202,22)" fg:x="3017" fg:w="4"/><text x="88.6182%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.12%)</title><rect x="88.5010%" y="645" width="0.1173%" height="15" fill="rgb(254,195,49)" fg:x="3017" fg:w="4"/><text x="88.6182%" y="655.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}}::_{{closure}} (4 samples, 0.12%)</title><rect x="88.5010%" y="629" width="0.1173%" height="15" fill="rgb(208,123,14)" fg:x="3017" fg:w="4"/><text x="88.6182%" y="639.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (4 samples, 0.12%)</title><rect x="88.5010%" y="613" width="0.1173%" height="15" fill="rgb(224,200,8)" fg:x="3017" fg:w="4"/><text x="88.6182%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.15%)</title><rect x="88.5010%" y="677" width="0.1467%" height="15" fill="rgb(217,61,36)" fg:x="3017" fg:w="5"/><text x="88.6182%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.03%)</title><rect x="88.6184%" y="661" width="0.0293%" height="15" fill="rgb(206,35,45)" fg:x="3021" fg:w="1"/><text x="88.7356%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.67%)</title><rect x="88.6477%" y="677" width="0.6747%" height="15" fill="rgb(217,65,33)" fg:x="3022" fg:w="23"/><text x="88.7649%" y="687.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors::_{{closure}} (23 samples, 0.67%)</title><rect x="88.6477%" y="661" width="0.6747%" height="15" fill="rgb(222,158,48)" fg:x="3022" fg:w="23"/><text x="88.7649%" y="671.50"></text></g><g><title>&lt;fringe_vs_astar::structures::map::ArrayMap as fringe_vs_astar::structures::map::Map&gt;::get_cell (23 samples, 0.67%)</title><rect x="88.6477%" y="645" width="0.6747%" height="15" fill="rgb(254,2,54)" fg:x="3022" fg:w="23"/><text x="88.7649%" y="655.50"></text></g><g><title>fringe_vs_astar::xy_to_index (1 samples, 0.03%)</title><rect x="89.2930%" y="629" width="0.0293%" height="15" fill="rgb(250,143,38)" fg:x="3044" fg:w="1"/><text x="89.4102%" y="639.50"></text></g><g><title>_int_free (61 samples, 1.79%)</title><rect x="89.6744%" y="581" width="1.7894%" height="15" fill="rgb(248,25,0)" fg:x="3057" fg:w="61"/><text x="89.7916%" y="591.50">_int..</text></g><g><title>tcache_put (9 samples, 0.26%)</title><rect x="91.1998%" y="565" width="0.2640%" height="15" fill="rgb(206,152,27)" fg:x="3109" fg:w="9"/><text x="91.3170%" y="575.50"></text></g><g><title>__GI___libc_free (76 samples, 2.23%)</title><rect x="89.3517%" y="597" width="2.2294%" height="15" fill="rgb(240,77,30)" fg:x="3046" fg:w="76"/><text x="89.4689%" y="607.50">__GI__..</text></g><g><title>arena_for_chunk (4 samples, 0.12%)</title><rect x="91.4638%" y="581" width="0.1173%" height="15" fill="rgb(231,5,3)" fg:x="3118" fg:w="4"/><text x="91.5810%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (87 samples, 2.55%)</title><rect x="89.3517%" y="629" width="2.5521%" height="15" fill="rgb(207,226,32)" fg:x="3046" fg:w="87"/><text x="89.4689%" y="639.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (87 samples, 2.55%)</title><rect x="89.3517%" y="613" width="2.5521%" height="15" fill="rgb(222,207,47)" fg:x="3046" fg:w="87"/><text x="89.4689%" y="623.50">alloc::..</text></g><g><title>__rdl_dealloc (11 samples, 0.32%)</title><rect x="91.5811%" y="597" width="0.3227%" height="15" fill="rgb(229,115,45)" fg:x="3122" fg:w="11"/><text x="91.6983%" y="607.50"></text></g><g><title>fringe_vs_astar::structures::graph::generate_neighbors (662 samples, 19.42%)</title><rect x="72.6313%" y="693" width="19.4192%" height="15" fill="rgb(224,191,6)" fg:x="2476" fg:w="662"/><text x="72.7485%" y="703.50">fringe_vs_astar::structures::graph::generate_neighbors</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (93 samples, 2.73%)</title><rect x="89.3224%" y="677" width="2.7281%" height="15" fill="rgb(230,227,24)" fg:x="3045" fg:w="93"/><text x="89.4396%" y="687.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;(core::option::Option&lt;bool&gt;,(usize,usize))&gt;&gt;&gt; (93 samples, 2.73%)</title><rect x="89.3224%" y="661" width="2.7281%" height="15" fill="rgb(228,80,19)" fg:x="3045" fg:w="93"/><text x="89.4396%" y="671.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 2.73%)</title><rect x="89.3224%" y="645" width="2.7281%" height="15" fill="rgb(247,229,0)" fg:x="3045" fg:w="93"/><text x="89.4396%" y="655.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.15%)</title><rect x="91.9038%" y="629" width="0.1467%" height="15" fill="rgb(237,194,15)" fg:x="3133" fg:w="5"/><text x="92.0210%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (4 samples, 0.12%)</title><rect x="91.9331%" y="613" width="0.1173%" height="15" fill="rgb(219,203,20)" fg:x="3134" fg:w="4"/><text x="92.0503%" y="623.50"></text></g><g><title>fringe_vs_astar::structures::graph::AdjacencyListGraph::new (1,409 samples, 41.33%)</title><rect x="51.4814%" y="709" width="41.3318%" height="15" fill="rgb(234,128,8)" fg:x="1755" fg:w="1409"/><text x="51.5986%" y="719.50">fringe_vs_astar::structures::graph::AdjacencyListGraph::new</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (26 samples, 0.76%)</title><rect x="92.0505%" y="693" width="0.7627%" height="15" fill="rgb(248,202,8)" fg:x="3138" fg:w="26"/><text x="92.1676%" y="703.50"></text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1,410 samples, 41.36%)</title><rect x="51.4814%" y="725" width="41.3611%" height="15" fill="rgb(206,104,37)" fg:x="1755" fg:w="1410"/><text x="51.5986%" y="735.50">fringe_vs_astar::structures::graph::graph_builder</text></g><g><title>fringe_vs_astar::structures::graph::graph_builder (1 samples, 0.03%)</title><rect x="92.8131%" y="709" width="0.0293%" height="15" fill="rgb(223,8,27)" fg:x="3164" fg:w="1"/><text x="92.9303%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.18%)</title><rect x="93.1652%" y="581" width="0.1760%" height="15" fill="rgb(216,217,28)" fg:x="3176" fg:w="6"/><text x="93.2823%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.09%)</title><rect x="93.3412%" y="549" width="0.0880%" height="15" fill="rgb(249,199,1)" fg:x="3182" fg:w="3"/><text x="93.4583%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="93.3412%" y="533" width="0.0880%" height="15" fill="rgb(240,85,17)" fg:x="3182" fg:w="3"/><text x="93.4583%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.06%)</title><rect x="93.3705%" y="517" width="0.0587%" height="15" fill="rgb(206,108,45)" fg:x="3183" fg:w="2"/><text x="93.4877%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (8 samples, 0.23%)</title><rect x="93.4292%" y="549" width="0.2347%" height="15" fill="rgb(245,210,41)" fg:x="3185" fg:w="8"/><text x="93.5463%" y="559.50"></text></g><g><title>_compound_head (2 samples, 0.06%)</title><rect x="93.6932%" y="117" width="0.0587%" height="15" fill="rgb(206,13,37)" fg:x="3194" fg:w="2"/><text x="93.8104%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.62%)</title><rect x="93.1652%" y="597" width="0.6160%" height="15" fill="rgb(250,61,18)" fg:x="3176" fg:w="21"/><text x="93.2823%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.44%)</title><rect x="93.3412%" y="581" width="0.4400%" height="15" fill="rgb(235,172,48)" fg:x="3182" fg:w="15"/><text x="93.4583%" y="591.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (15 samples, 0.44%)</title><rect x="93.3412%" y="565" width="0.4400%" height="15" fill="rgb(249,201,17)" fg:x="3182" fg:w="15"/><text x="93.4583%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt;&gt; (4 samples, 0.12%)</title><rect x="93.6638%" y="549" width="0.1173%" height="15" fill="rgb(219,208,6)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bool&gt;&gt; (4 samples, 0.12%)</title><rect x="93.6638%" y="533" width="0.1173%" height="15" fill="rgb(248,31,23)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.12%)</title><rect x="93.6638%" y="517" width="0.1173%" height="15" fill="rgb(245,15,42)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bool,alloc::alloc::Global&gt;&gt; (4 samples, 0.12%)</title><rect x="93.6638%" y="501" width="0.1173%" height="15" fill="rgb(222,217,39)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="511.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.12%)</title><rect x="93.6638%" y="485" width="0.1173%" height="15" fill="rgb(210,219,27)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (4 samples, 0.12%)</title><rect x="93.6638%" y="469" width="0.1173%" height="15" fill="rgb(252,166,36)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.12%)</title><rect x="93.6638%" y="453" width="0.1173%" height="15" fill="rgb(245,132,34)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.12%)</title><rect x="93.6638%" y="437" width="0.1173%" height="15" fill="rgb(236,54,3)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.12%)</title><rect x="93.6638%" y="421" width="0.1173%" height="15" fill="rgb(241,173,43)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="431.50"></text></g><g><title>__GI___libc_free (4 samples, 0.12%)</title><rect x="93.6638%" y="405" width="0.1173%" height="15" fill="rgb(215,190,9)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="415.50"></text></g><g><title>_int_free (4 samples, 0.12%)</title><rect x="93.6638%" y="389" width="0.1173%" height="15" fill="rgb(242,101,16)" fg:x="3193" fg:w="4"/><text x="93.7810%" y="399.50"></text></g><g><title>systrim (3 samples, 0.09%)</title><rect x="93.6932%" y="373" width="0.0880%" height="15" fill="rgb(223,190,21)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="383.50"></text></g><g><title>__glibc_morecore (3 samples, 0.09%)</title><rect x="93.6932%" y="357" width="0.0880%" height="15" fill="rgb(215,228,25)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="367.50"></text></g><g><title>__GI___sbrk (3 samples, 0.09%)</title><rect x="93.6932%" y="341" width="0.0880%" height="15" fill="rgb(225,36,22)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="351.50"></text></g><g><title>__GI___sbrk (3 samples, 0.09%)</title><rect x="93.6932%" y="325" width="0.0880%" height="15" fill="rgb(251,106,46)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="335.50"></text></g><g><title>__brk (3 samples, 0.09%)</title><rect x="93.6932%" y="309" width="0.0880%" height="15" fill="rgb(208,90,1)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.09%)</title><rect x="93.6932%" y="293" width="0.0880%" height="15" fill="rgb(243,10,4)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="303.50"></text></g><g><title>do_syscall_64 (3 samples, 0.09%)</title><rect x="93.6932%" y="277" width="0.0880%" height="15" fill="rgb(212,137,27)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="287.50"></text></g><g><title>x64_sys_call (3 samples, 0.09%)</title><rect x="93.6932%" y="261" width="0.0880%" height="15" fill="rgb(231,220,49)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="271.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.09%)</title><rect x="93.6932%" y="245" width="0.0880%" height="15" fill="rgb(237,96,20)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="255.50"></text></g><g><title>__do_sys_brk (3 samples, 0.09%)</title><rect x="93.6932%" y="229" width="0.0880%" height="15" fill="rgb(239,229,30)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="239.50"></text></g><g><title>do_vmi_align_munmap (3 samples, 0.09%)</title><rect x="93.6932%" y="213" width="0.0880%" height="15" fill="rgb(219,65,33)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="223.50"></text></g><g><title>unmap_region (3 samples, 0.09%)</title><rect x="93.6932%" y="197" width="0.0880%" height="15" fill="rgb(243,134,7)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="207.50"></text></g><g><title>unmap_vmas (3 samples, 0.09%)</title><rect x="93.6932%" y="181" width="0.0880%" height="15" fill="rgb(216,177,54)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="191.50"></text></g><g><title>unmap_single_vma (3 samples, 0.09%)</title><rect x="93.6932%" y="165" width="0.0880%" height="15" fill="rgb(211,160,20)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="175.50"></text></g><g><title>unmap_page_range (3 samples, 0.09%)</title><rect x="93.6932%" y="149" width="0.0880%" height="15" fill="rgb(239,85,39)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="159.50"></text></g><g><title>zap_pmd_range.isra.0 (3 samples, 0.09%)</title><rect x="93.6932%" y="133" width="0.0880%" height="15" fill="rgb(232,125,22)" fg:x="3194" fg:w="3"/><text x="93.8104%" y="143.50"></text></g><g><title>zap_pte_range (1 samples, 0.03%)</title><rect x="93.7518%" y="117" width="0.0293%" height="15" fill="rgb(244,57,34)" fg:x="3196" fg:w="1"/><text x="93.8690%" y="127.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.03%)</title><rect x="93.7518%" y="101" width="0.0293%" height="15" fill="rgb(214,203,32)" fg:x="3196" fg:w="1"/><text x="93.8690%" y="111.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.03%)</title><rect x="93.7518%" y="85" width="0.0293%" height="15" fill="rgb(207,58,43)" fg:x="3196" fg:w="1"/><text x="93.8690%" y="95.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="93.7518%" y="69" width="0.0293%" height="15" fill="rgb(215,193,15)" fg:x="3196" fg:w="1"/><text x="93.8690%" y="79.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="93.7518%" y="53" width="0.0293%" height="15" fill="rgb(232,15,44)" fg:x="3196" fg:w="1"/><text x="93.8690%" y="63.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (1 samples, 0.03%)</title><rect x="93.7518%" y="37" width="0.0293%" height="15" fill="rgb(212,3,48)" fg:x="3196" fg:w="1"/><text x="93.8690%" y="47.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="93.8985%" y="309" width="0.0293%" height="15" fill="rgb(218,128,7)" fg:x="3201" fg:w="1"/><text x="94.0157%" y="319.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="93.8985%" y="293" width="0.0293%" height="15" fill="rgb(226,216,39)" fg:x="3201" fg:w="1"/><text x="94.0157%" y="303.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="93.8985%" y="421" width="0.0587%" height="15" fill="rgb(243,47,51)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="431.50"></text></g><g><title>exc_page_fault (2 samples, 0.06%)</title><rect x="93.8985%" y="405" width="0.0587%" height="15" fill="rgb(241,183,40)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="415.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.06%)</title><rect x="93.8985%" y="389" width="0.0587%" height="15" fill="rgb(231,217,32)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="399.50"></text></g><g><title>handle_mm_fault (2 samples, 0.06%)</title><rect x="93.8985%" y="373" width="0.0587%" height="15" fill="rgb(229,61,38)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="383.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="93.8985%" y="357" width="0.0587%" height="15" fill="rgb(225,210,5)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="367.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="93.8985%" y="341" width="0.0587%" height="15" fill="rgb(231,79,45)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="351.50"></text></g><g><title>do_anonymous_page (2 samples, 0.06%)</title><rect x="93.8985%" y="325" width="0.0587%" height="15" fill="rgb(224,100,7)" fg:x="3201" fg:w="2"/><text x="94.0157%" y="335.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="93.9278%" y="309" width="0.0293%" height="15" fill="rgb(241,198,18)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="319.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="93.9278%" y="293" width="0.0293%" height="15" fill="rgb(252,97,53)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="303.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="93.9278%" y="277" width="0.0293%" height="15" fill="rgb(220,88,7)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="287.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="93.9278%" y="261" width="0.0293%" height="15" fill="rgb(213,176,14)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="271.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="93.9278%" y="245" width="0.0293%" height="15" fill="rgb(246,73,7)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="255.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="93.9278%" y="229" width="0.0293%" height="15" fill="rgb(245,64,36)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="239.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.03%)</title><rect x="93.9278%" y="213" width="0.0293%" height="15" fill="rgb(245,80,10)" fg:x="3202" fg:w="1"/><text x="94.0450%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.21%)</title><rect x="93.7812%" y="597" width="0.2053%" height="15" fill="rgb(232,107,50)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.21%)</title><rect x="93.7812%" y="581" width="0.2053%" height="15" fill="rgb(253,3,0)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.21%)</title><rect x="93.7812%" y="565" width="0.2053%" height="15" fill="rgb(212,99,53)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.21%)</title><rect x="93.7812%" y="549" width="0.2053%" height="15" fill="rgb(249,111,54)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.21%)</title><rect x="93.7812%" y="533" width="0.2053%" height="15" fill="rgb(249,55,30)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.21%)</title><rect x="93.7812%" y="517" width="0.2053%" height="15" fill="rgb(237,47,42)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.21%)</title><rect x="93.7812%" y="501" width="0.2053%" height="15" fill="rgb(211,20,18)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="511.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.21%)</title><rect x="93.7812%" y="485" width="0.2053%" height="15" fill="rgb(231,203,46)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="495.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.21%)</title><rect x="93.7812%" y="469" width="0.2053%" height="15" fill="rgb(237,142,3)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="479.50"></text></g><g><title>_int_realloc (7 samples, 0.21%)</title><rect x="93.7812%" y="453" width="0.2053%" height="15" fill="rgb(241,107,1)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="463.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7 samples, 0.21%)</title><rect x="93.7812%" y="437" width="0.2053%" height="15" fill="rgb(229,83,13)" fg:x="3197" fg:w="7"/><text x="93.8984%" y="447.50"></text></g><g><title>sync_regs (1 samples, 0.03%)</title><rect x="93.9572%" y="421" width="0.0293%" height="15" fill="rgb(241,91,40)" fg:x="3203" fg:w="1"/><text x="94.0744%" y="431.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="94.0745%" y="469" width="0.0293%" height="15" fill="rgb(225,3,45)" fg:x="3207" fg:w="1"/><text x="94.1917%" y="479.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="94.0745%" y="453" width="0.0293%" height="15" fill="rgb(244,223,14)" fg:x="3207" fg:w="1"/><text x="94.1917%" y="463.50"></text></g><g><title>fringe_vs_astar::structures::map::ArrayMap::new (44 samples, 1.29%)</title><rect x="92.8425%" y="709" width="1.2907%" height="15" fill="rgb(224,124,37)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="719.50">fr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 1.29%)</title><rect x="92.8425%" y="693" width="1.2907%" height="15" fill="rgb(251,171,30)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="703.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (44 samples, 1.29%)</title><rect x="92.8425%" y="677" width="1.2907%" height="15" fill="rgb(236,46,54)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="687.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44 samples, 1.29%)</title><rect x="92.8425%" y="661" width="1.2907%" height="15" fill="rgb(245,213,5)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="671.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (44 samples, 1.29%)</title><rect x="92.8425%" y="645" width="1.2907%" height="15" fill="rgb(230,144,27)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="655.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (44 samples, 1.29%)</title><rect x="92.8425%" y="629" width="1.2907%" height="15" fill="rgb(220,86,6)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="639.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (44 samples, 1.29%)</title><rect x="92.8425%" y="613" width="1.2907%" height="15" fill="rgb(240,20,13)" fg:x="3165" fg:w="44"/><text x="92.9597%" y="623.50">al..</text></g><g><title>core::ptr::write (5 samples, 0.15%)</title><rect x="93.9865%" y="597" width="0.1467%" height="15" fill="rgb(217,89,34)" fg:x="3204" fg:w="5"/><text x="94.1037%" y="607.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.09%)</title><rect x="94.0452%" y="581" width="0.0880%" height="15" fill="rgb(229,13,5)" fg:x="3206" fg:w="3"/><text x="94.1624%" y="591.50"></text></g><g><title>exc_page_fault (3 samples, 0.09%)</title><rect x="94.0452%" y="565" width="0.0880%" height="15" fill="rgb(244,67,35)" fg:x="3206" fg:w="3"/><text x="94.1624%" y="575.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.09%)</title><rect x="94.0452%" y="549" width="0.0880%" height="15" fill="rgb(221,40,2)" fg:x="3206" fg:w="3"/><text x="94.1624%" y="559.50"></text></g><g><title>handle_mm_fault (3 samples, 0.09%)</title><rect x="94.0452%" y="533" width="0.0880%" height="15" fill="rgb(237,157,21)" fg:x="3206" fg:w="3"/><text x="94.1624%" y="543.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="94.0745%" y="517" width="0.0587%" height="15" fill="rgb(222,94,11)" fg:x="3207" fg:w="2"/><text x="94.1917%" y="527.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="94.0745%" y="501" width="0.0587%" height="15" fill="rgb(249,113,6)" fg:x="3207" fg:w="2"/><text x="94.1917%" y="511.50"></text></g><g><title>do_anonymous_page (2 samples, 0.06%)</title><rect x="94.0745%" y="485" width="0.0587%" height="15" fill="rgb(238,137,36)" fg:x="3207" fg:w="2"/><text x="94.1917%" y="495.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="94.1038%" y="469" width="0.0293%" height="15" fill="rgb(210,102,26)" fg:x="3208" fg:w="1"/><text x="94.2210%" y="479.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="94.1038%" y="453" width="0.0293%" height="15" fill="rgb(218,30,30)" fg:x="3208" fg:w="1"/><text x="94.2210%" y="463.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="94.1038%" y="437" width="0.0293%" height="15" fill="rgb(214,67,26)" fg:x="3208" fg:w="1"/><text x="94.2210%" y="447.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="94.1332%" y="277" width="0.0293%" height="15" fill="rgb(251,9,53)" fg:x="3209" fg:w="1"/><text x="94.2504%" y="287.50"></text></g><g><title>_copy_to_iter (1 samples, 0.03%)</title><rect x="94.1332%" y="261" width="0.0293%" height="15" fill="rgb(228,204,25)" fg:x="3209" fg:w="1"/><text x="94.2504%" y="271.50"></text></g><g><title>copyout (1 samples, 0.03%)</title><rect x="94.1332%" y="245" width="0.0293%" height="15" fill="rgb(207,153,8)" fg:x="3209" fg:w="1"/><text x="94.2504%" y="255.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.06%)</title><rect x="94.1332%" y="501" width="0.0587%" height="15" fill="rgb(242,9,16)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="511.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (2 samples, 0.06%)</title><rect x="94.1332%" y="485" width="0.0587%" height="15" fill="rgb(217,211,10)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="495.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (2 samples, 0.06%)</title><rect x="94.1332%" y="469" width="0.0587%" height="15" fill="rgb(219,228,52)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="479.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 0.06%)</title><rect x="94.1332%" y="453" width="0.0587%" height="15" fill="rgb(231,92,29)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="463.50"></text></g><g><title>__GI___libc_read (2 samples, 0.06%)</title><rect x="94.1332%" y="437" width="0.0587%" height="15" fill="rgb(232,8,23)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="94.1332%" y="421" width="0.0587%" height="15" fill="rgb(216,211,34)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="431.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="94.1332%" y="405" width="0.0587%" height="15" fill="rgb(236,151,0)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="415.50"></text></g><g><title>x64_sys_call (2 samples, 0.06%)</title><rect x="94.1332%" y="389" width="0.0587%" height="15" fill="rgb(209,168,3)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="399.50"></text></g><g><title>__x64_sys_read (2 samples, 0.06%)</title><rect x="94.1332%" y="373" width="0.0587%" height="15" fill="rgb(208,129,28)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="383.50"></text></g><g><title>ksys_read (2 samples, 0.06%)</title><rect x="94.1332%" y="357" width="0.0587%" height="15" fill="rgb(229,78,22)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="367.50"></text></g><g><title>vfs_read (2 samples, 0.06%)</title><rect x="94.1332%" y="341" width="0.0587%" height="15" fill="rgb(228,187,13)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="351.50"></text></g><g><title>ext4_file_read_iter (2 samples, 0.06%)</title><rect x="94.1332%" y="325" width="0.0587%" height="15" fill="rgb(240,119,24)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="335.50"></text></g><g><title>generic_file_read_iter (2 samples, 0.06%)</title><rect x="94.1332%" y="309" width="0.0587%" height="15" fill="rgb(209,194,42)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="319.50"></text></g><g><title>filemap_read (2 samples, 0.06%)</title><rect x="94.1332%" y="293" width="0.0587%" height="15" fill="rgb(247,200,46)" fg:x="3209" fg:w="2"/><text x="94.2504%" y="303.50"></text></g><g><title>filemap_get_pages (1 samples, 0.03%)</title><rect x="94.1625%" y="277" width="0.0293%" height="15" fill="rgb(218,76,16)" fg:x="3210" fg:w="1"/><text x="94.2797%" y="287.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.03%)</title><rect x="94.1625%" y="261" width="0.0293%" height="15" fill="rgb(225,21,48)" fg:x="3210" fg:w="1"/><text x="94.2797%" y="271.50"></text></g><g><title>do_anonymous_page (1 samples, 0.03%)</title><rect x="94.1918%" y="197" width="0.0293%" height="15" fill="rgb(239,223,50)" fg:x="3211" fg:w="1"/><text x="94.3090%" y="207.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.03%)</title><rect x="94.1918%" y="181" width="0.0293%" height="15" fill="rgb(244,45,21)" fg:x="3211" fg:w="1"/><text x="94.3090%" y="191.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="94.1918%" y="165" width="0.0293%" height="15" fill="rgb(232,33,43)" fg:x="3211" fg:w="1"/><text x="94.3090%" y="175.50"></text></g><g><title>fringe_vs_astar::structures::map::read_map (4 samples, 0.12%)</title><rect x="94.1332%" y="709" width="0.1173%" height="15" fill="rgb(209,8,3)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.12%)</title><rect x="94.1332%" y="693" width="0.1173%" height="15" fill="rgb(214,25,53)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.12%)</title><rect x="94.1332%" y="677" width="0.1173%" height="15" fill="rgb(254,186,54)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.12%)</title><rect x="94.1332%" y="661" width="0.1173%" height="15" fill="rgb(208,174,49)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.12%)</title><rect x="94.1332%" y="645" width="0.1173%" height="15" fill="rgb(233,191,51)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.12%)</title><rect x="94.1332%" y="629" width="0.1173%" height="15" fill="rgb(222,134,10)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.12%)</title><rect x="94.1332%" y="613" width="0.1173%" height="15" fill="rgb(230,226,20)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="94.1332%" y="597" width="0.1173%" height="15" fill="rgb(251,111,25)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="607.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="94.1332%" y="581" width="0.1173%" height="15" fill="rgb(224,40,46)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="591.50"></text></g><g><title>std::io::BufRead::read_line (4 samples, 0.12%)</title><rect x="94.1332%" y="565" width="0.1173%" height="15" fill="rgb(236,108,47)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="575.50"></text></g><g><title>std::io::append_to_string (4 samples, 0.12%)</title><rect x="94.1332%" y="549" width="0.1173%" height="15" fill="rgb(234,93,0)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="559.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (4 samples, 0.12%)</title><rect x="94.1332%" y="533" width="0.1173%" height="15" fill="rgb(224,213,32)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="543.50"></text></g><g><title>std::io::read_until (4 samples, 0.12%)</title><rect x="94.1332%" y="517" width="0.1173%" height="15" fill="rgb(251,11,48)" fg:x="3209" fg:w="4"/><text x="94.2504%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.06%)</title><rect x="94.1918%" y="501" width="0.0587%" height="15" fill="rgb(236,173,5)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="94.1918%" y="485" width="0.0587%" height="15" fill="rgb(230,95,12)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="94.1918%" y="469" width="0.0587%" height="15" fill="rgb(232,209,1)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="94.1918%" y="453" width="0.0587%" height="15" fill="rgb(232,6,1)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="94.1918%" y="437" width="0.0587%" height="15" fill="rgb(210,224,50)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="94.1918%" y="421" width="0.0587%" height="15" fill="rgb(228,127,35)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="94.1918%" y="405" width="0.0587%" height="15" fill="rgb(245,102,45)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="94.1918%" y="389" width="0.0587%" height="15" fill="rgb(214,1,49)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.06%)</title><rect x="94.1918%" y="373" width="0.0587%" height="15" fill="rgb(226,163,40)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.06%)</title><rect x="94.1918%" y="357" width="0.0587%" height="15" fill="rgb(239,212,28)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="367.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.06%)</title><rect x="94.1918%" y="341" width="0.0587%" height="15" fill="rgb(220,20,13)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="351.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.06%)</title><rect x="94.1918%" y="325" width="0.0587%" height="15" fill="rgb(210,164,35)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="335.50"></text></g><g><title>_int_realloc (2 samples, 0.06%)</title><rect x="94.1918%" y="309" width="0.0587%" height="15" fill="rgb(248,109,41)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="319.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="94.1918%" y="293" width="0.0587%" height="15" fill="rgb(238,23,50)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="303.50"></text></g><g><title>exc_page_fault (2 samples, 0.06%)</title><rect x="94.1918%" y="277" width="0.0587%" height="15" fill="rgb(211,48,49)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="287.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.06%)</title><rect x="94.1918%" y="261" width="0.0587%" height="15" fill="rgb(223,36,21)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="271.50"></text></g><g><title>handle_mm_fault (2 samples, 0.06%)</title><rect x="94.1918%" y="245" width="0.0587%" height="15" fill="rgb(207,123,46)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="255.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="94.1918%" y="229" width="0.0587%" height="15" fill="rgb(240,218,32)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="239.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="94.1918%" y="213" width="0.0587%" height="15" fill="rgb(252,5,43)" fg:x="3211" fg:w="2"/><text x="94.3090%" y="223.50"></text></g><g><title>pte_offset_map_nolock (1 samples, 0.03%)</title><rect x="94.2212%" y="197" width="0.0293%" height="15" fill="rgb(252,84,19)" fg:x="3212" fg:w="1"/><text x="94.3384%" y="207.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.21%)</title><rect x="94.2798%" y="405" width="0.2053%" height="15" fill="rgb(243,152,39)" fg:x="3214" fg:w="7"/><text x="94.3970%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.21%)</title><rect x="94.2798%" y="389" width="0.2053%" height="15" fill="rgb(234,160,15)" fg:x="3214" fg:w="7"/><text x="94.3970%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.23%)</title><rect x="94.2798%" y="421" width="0.2347%" height="15" fill="rgb(237,34,20)" fg:x="3214" fg:w="8"/><text x="94.3970%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="94.4852%" y="405" width="0.0293%" height="15" fill="rgb(229,97,13)" fg:x="3221" fg:w="1"/><text x="94.6024%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.03%)</title><rect x="94.4852%" y="389" width="0.0293%" height="15" fill="rgb(234,71,50)" fg:x="3221" fg:w="1"/><text x="94.6024%" y="399.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}}::_{{closure}} (1 samples, 0.03%)</title><rect x="94.4852%" y="373" width="0.0293%" height="15" fill="rgb(253,155,4)" fg:x="3221" fg:w="1"/><text x="94.6024%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.03%)</title><rect x="94.5145%" y="261" width="0.0293%" height="15" fill="rgb(222,185,37)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="271.50"></text></g><g><title>systrim (1 samples, 0.03%)</title><rect x="94.5145%" y="245" width="0.0293%" height="15" fill="rgb(251,177,13)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="255.50"></text></g><g><title>__glibc_morecore (1 samples, 0.03%)</title><rect x="94.5145%" y="229" width="0.0293%" height="15" fill="rgb(250,179,40)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="239.50"></text></g><g><title>__GI___sbrk (1 samples, 0.03%)</title><rect x="94.5145%" y="213" width="0.0293%" height="15" fill="rgb(242,44,2)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="223.50"></text></g><g><title>__GI___sbrk (1 samples, 0.03%)</title><rect x="94.5145%" y="197" width="0.0293%" height="15" fill="rgb(216,177,13)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="207.50"></text></g><g><title>__brk (1 samples, 0.03%)</title><rect x="94.5145%" y="181" width="0.0293%" height="15" fill="rgb(216,106,43)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="191.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="94.5145%" y="165" width="0.0293%" height="15" fill="rgb(216,183,2)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="175.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="94.5145%" y="149" width="0.0293%" height="15" fill="rgb(249,75,3)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="159.50"></text></g><g><title>x64_sys_call (1 samples, 0.03%)</title><rect x="94.5145%" y="133" width="0.0293%" height="15" fill="rgb(219,67,39)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="143.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.03%)</title><rect x="94.5145%" y="117" width="0.0293%" height="15" fill="rgb(253,228,2)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="127.50"></text></g><g><title>__do_sys_brk (1 samples, 0.03%)</title><rect x="94.5145%" y="101" width="0.0293%" height="15" fill="rgb(235,138,27)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="111.50"></text></g><g><title>userfaultfd_unmap_complete (1 samples, 0.03%)</title><rect x="94.5145%" y="85" width="0.0293%" height="15" fill="rgb(236,97,51)" fg:x="3222" fg:w="1"/><text x="94.6317%" y="95.50"></text></g><g><title>folio_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="94.5732%" y="133" width="0.0293%" height="15" fill="rgb(240,80,30)" fg:x="3224" fg:w="1"/><text x="94.6904%" y="143.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="94.5732%" y="117" width="0.0293%" height="15" fill="rgb(230,178,19)" fg:x="3224" fg:w="1"/><text x="94.6904%" y="127.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.09%)</title><rect x="94.5439%" y="245" width="0.0880%" height="15" fill="rgb(210,190,27)" fg:x="3223" fg:w="3"/><text x="94.6610%" y="255.50"></text></g><g><title>exc_page_fault (3 samples, 0.09%)</title><rect x="94.5439%" y="229" width="0.0880%" height="15" fill="rgb(222,107,31)" fg:x="3223" fg:w="3"/><text x="94.6610%" y="239.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.09%)</title><rect x="94.5439%" y="213" width="0.0880%" height="15" fill="rgb(216,127,34)" fg:x="3223" fg:w="3"/><text x="94.6610%" y="223.50"></text></g><g><title>handle_mm_fault (3 samples, 0.09%)</title><rect x="94.5439%" y="197" width="0.0880%" height="15" fill="rgb(234,116,52)" fg:x="3223" fg:w="3"/><text x="94.6610%" y="207.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.06%)</title><rect x="94.5732%" y="181" width="0.0587%" height="15" fill="rgb(222,124,15)" fg:x="3224" fg:w="2"/><text x="94.6904%" y="191.50"></text></g><g><title>handle_pte_fault (2 samples, 0.06%)</title><rect x="94.5732%" y="165" width="0.0587%" height="15" fill="rgb(231,179,28)" fg:x="3224" fg:w="2"/><text x="94.6904%" y="175.50"></text></g><g><title>do_anonymous_page (2 samples, 0.06%)</title><rect x="94.5732%" y="149" width="0.0587%" height="15" fill="rgb(226,93,45)" fg:x="3224" fg:w="2"/><text x="94.6904%" y="159.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.03%)</title><rect x="94.6025%" y="133" width="0.0293%" height="15" fill="rgb(215,8,51)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="143.50"></text></g><g><title>__folio_alloc (1 samples, 0.03%)</title><rect x="94.6025%" y="117" width="0.0293%" height="15" fill="rgb(223,106,5)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="127.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="94.6025%" y="101" width="0.0293%" height="15" fill="rgb(250,191,5)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="111.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="94.6025%" y="85" width="0.0293%" height="15" fill="rgb(242,132,44)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="95.50"></text></g><g><title>rmqueue (1 samples, 0.03%)</title><rect x="94.6025%" y="69" width="0.0293%" height="15" fill="rgb(251,152,29)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="79.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.03%)</title><rect x="94.6025%" y="53" width="0.0293%" height="15" fill="rgb(218,179,5)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="63.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.03%)</title><rect x="94.6025%" y="37" width="0.0293%" height="15" fill="rgb(227,67,19)" fg:x="3225" fg:w="1"/><text x="94.7197%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.15%)</title><rect x="94.5145%" y="421" width="0.1467%" height="15" fill="rgb(233,119,31)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.15%)</title><rect x="94.5145%" y="405" width="0.1467%" height="15" fill="rgb(241,120,22)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.15%)</title><rect x="94.5145%" y="389" width="0.1467%" height="15" fill="rgb(224,102,30)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.15%)</title><rect x="94.5145%" y="373" width="0.1467%" height="15" fill="rgb(210,164,37)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.15%)</title><rect x="94.5145%" y="357" width="0.1467%" height="15" fill="rgb(226,191,16)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.15%)</title><rect x="94.5145%" y="341" width="0.1467%" height="15" fill="rgb(214,40,45)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.15%)</title><rect x="94.5145%" y="325" width="0.1467%" height="15" fill="rgb(244,29,26)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="335.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.15%)</title><rect x="94.5145%" y="309" width="0.1467%" height="15" fill="rgb(216,16,5)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="319.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.15%)</title><rect x="94.5145%" y="293" width="0.1467%" height="15" fill="rgb(249,76,35)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="303.50"></text></g><g><title>_int_realloc (5 samples, 0.15%)</title><rect x="94.5145%" y="277" width="0.1467%" height="15" fill="rgb(207,11,44)" fg:x="3222" fg:w="5"/><text x="94.6317%" y="287.50"></text></g><g><title>_int_malloc (4 samples, 0.12%)</title><rect x="94.5439%" y="261" width="0.1173%" height="15" fill="rgb(228,190,49)" fg:x="3223" fg:w="4"/><text x="94.6610%" y="271.50"></text></g><g><title>sync_regs (1 samples, 0.03%)</title><rect x="94.6319%" y="245" width="0.0293%" height="15" fill="rgb(214,173,12)" fg:x="3226" fg:w="1"/><text x="94.7490%" y="255.50"></text></g><g><title>_start (2,867 samples, 84.10%)</title><rect x="10.8243%" y="885" width="84.1009%" height="15" fill="rgb(218,26,35)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="895.50">_start</text></g><g><title>__libc_start_main_impl (2,867 samples, 84.10%)</title><rect x="10.8243%" y="869" width="84.1009%" height="15" fill="rgb(220,200,19)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="879.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (2,867 samples, 84.10%)</title><rect x="10.8243%" y="853" width="84.1009%" height="15" fill="rgb(239,95,49)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="863.50">__libc_start_call_main</text></g><g><title>main (2,867 samples, 84.10%)</title><rect x="10.8243%" y="837" width="84.1009%" height="15" fill="rgb(235,85,53)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (2,867 samples, 84.10%)</title><rect x="10.8243%" y="821" width="84.1009%" height="15" fill="rgb(233,133,31)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (2,867 samples, 84.10%)</title><rect x="10.8243%" y="805" width="84.1009%" height="15" fill="rgb(218,25,20)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="815.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,867 samples, 84.10%)</title><rect x="10.8243%" y="789" width="84.1009%" height="15" fill="rgb(252,210,38)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,867 samples, 84.10%)</title><rect x="10.8243%" y="773" width="84.1009%" height="15" fill="rgb(242,134,21)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="783.50">core::ops::function::FnOnce::call_once</text></g><g><title>fringe_vs_astar::main (2,867 samples, 84.10%)</title><rect x="10.8243%" y="757" width="84.1009%" height="15" fill="rgb(213,28,48)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="767.50">fringe_vs_astar::main</text></g><g><title>fringe_vs_astar::context::Context::run (2,867 samples, 84.10%)</title><rect x="10.8243%" y="741" width="84.1009%" height="15" fill="rgb(250,196,2)" fg:x="369" fg:w="2867"/><text x="10.9415%" y="751.50">fringe_vs_astar::context::Context::run</text></g><g><title>fringe_vs_astar::structures::map::map_builder (71 samples, 2.08%)</title><rect x="92.8425%" y="725" width="2.0827%" height="15" fill="rgb(227,5,17)" fg:x="3165" fg:w="71"/><text x="92.9597%" y="735.50">fring..</text></g><g><title>fringe_vs_astar::structures::map::simplify_map (23 samples, 0.67%)</title><rect x="94.2505%" y="709" width="0.6747%" height="15" fill="rgb(221,226,24)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.67%)</title><rect x="94.2505%" y="693" width="0.6747%" height="15" fill="rgb(211,5,48)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.67%)</title><rect x="94.2505%" y="677" width="0.6747%" height="15" fill="rgb(219,150,6)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.67%)</title><rect x="94.2505%" y="661" width="0.6747%" height="15" fill="rgb(251,46,16)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.67%)</title><rect x="94.2505%" y="645" width="0.6747%" height="15" fill="rgb(220,204,40)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.67%)</title><rect x="94.2505%" y="629" width="0.6747%" height="15" fill="rgb(211,85,2)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (23 samples, 0.67%)</title><rect x="94.2505%" y="613" width="0.6747%" height="15" fill="rgb(229,17,7)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23 samples, 0.67%)</title><rect x="94.2505%" y="597" width="0.6747%" height="15" fill="rgb(239,72,28)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.67%)</title><rect x="94.2505%" y="581" width="0.6747%" height="15" fill="rgb(230,47,54)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.67%)</title><rect x="94.2505%" y="565" width="0.6747%" height="15" fill="rgb(214,50,8)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (23 samples, 0.67%)</title><rect x="94.2505%" y="549" width="0.6747%" height="15" fill="rgb(216,198,43)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="559.50"></text></g><g><title>fringe_vs_astar::structures::map::simplify_map::_{{closure}} (23 samples, 0.67%)</title><rect x="94.2505%" y="533" width="0.6747%" height="15" fill="rgb(234,20,35)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.67%)</title><rect x="94.2505%" y="517" width="0.6747%" height="15" fill="rgb(254,45,19)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.67%)</title><rect x="94.2505%" y="501" width="0.6747%" height="15" fill="rgb(219,14,44)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.67%)</title><rect x="94.2505%" y="485" width="0.6747%" height="15" fill="rgb(217,220,26)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.67%)</title><rect x="94.2505%" y="469" width="0.6747%" height="15" fill="rgb(213,158,28)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.67%)</title><rect x="94.2505%" y="453" width="0.6747%" height="15" fill="rgb(252,51,52)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 0.67%)</title><rect x="94.2505%" y="437" width="0.6747%" height="15" fill="rgb(246,89,16)" fg:x="3213" fg:w="23"/><text x="94.3677%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (9 samples, 0.26%)</title><rect x="94.6612%" y="421" width="0.2640%" height="15" fill="rgb(216,158,49)" fg:x="3227" fg:w="9"/><text x="94.7784%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.15%)</title><rect x="94.7785%" y="405" width="0.1467%" height="15" fill="rgb(236,107,19)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.15%)</title><rect x="94.7785%" y="389" width="0.1467%" height="15" fill="rgb(228,185,30)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="399.50"></text></g><g><title>irqentry_exit (5 samples, 0.15%)</title><rect x="94.7785%" y="373" width="0.1467%" height="15" fill="rgb(246,134,8)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.15%)</title><rect x="94.7785%" y="357" width="0.1467%" height="15" fill="rgb(214,143,50)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.15%)</title><rect x="94.7785%" y="341" width="0.1467%" height="15" fill="rgb(228,75,8)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="351.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.15%)</title><rect x="94.7785%" y="325" width="0.1467%" height="15" fill="rgb(207,175,4)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="335.50"></text></g><g><title>schedule (5 samples, 0.15%)</title><rect x="94.7785%" y="309" width="0.1467%" height="15" fill="rgb(205,108,24)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="319.50"></text></g><g><title>__schedule (5 samples, 0.15%)</title><rect x="94.7785%" y="293" width="0.1467%" height="15" fill="rgb(244,120,49)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.15%)</title><rect x="94.7785%" y="277" width="0.1467%" height="15" fill="rgb(223,47,38)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.15%)</title><rect x="94.7785%" y="261" width="0.1467%" height="15" fill="rgb(229,179,11)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="271.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.15%)</title><rect x="94.7785%" y="245" width="0.1467%" height="15" fill="rgb(231,122,1)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="255.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.15%)</title><rect x="94.7785%" y="229" width="0.1467%" height="15" fill="rgb(245,119,9)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="239.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.15%)</title><rect x="94.7785%" y="213" width="0.1467%" height="15" fill="rgb(241,163,25)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="223.50"></text></g><g><title>native_write_msr (5 samples, 0.15%)</title><rect x="94.7785%" y="197" width="0.1467%" height="15" fill="rgb(217,214,3)" fg:x="3231" fg:w="5"/><text x="94.8957%" y="207.50"></text></g><g><title>asm_exc_page_fault (124 samples, 3.64%)</title><rect x="94.9252%" y="885" width="3.6374%" height="15" fill="rgb(240,86,28)" fg:x="3236" fg:w="124"/><text x="95.0424%" y="895.50">asm_exc_pag..</text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="98.5626%" y="837" width="0.0293%" height="15" fill="rgb(215,47,9)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="847.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="98.5626%" y="821" width="0.0293%" height="15" fill="rgb(252,25,45)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="831.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="98.5626%" y="805" width="0.0293%" height="15" fill="rgb(251,164,9)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="815.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.03%)</title><rect x="98.5626%" y="789" width="0.0293%" height="15" fill="rgb(233,194,0)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="799.50"></text></g><g><title>exec_binprm (1 samples, 0.03%)</title><rect x="98.5626%" y="773" width="0.0293%" height="15" fill="rgb(249,111,24)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="783.50"></text></g><g><title>search_binary_handler (1 samples, 0.03%)</title><rect x="98.5626%" y="757" width="0.0293%" height="15" fill="rgb(250,223,3)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="767.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="98.5626%" y="741" width="0.0293%" height="15" fill="rgb(236,178,37)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="751.50"></text></g><g><title>elf_map (1 samples, 0.03%)</title><rect x="98.5626%" y="725" width="0.0293%" height="15" fill="rgb(241,158,50)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="735.50"></text></g><g><title>vm_mmap (1 samples, 0.03%)</title><rect x="98.5626%" y="709" width="0.0293%" height="15" fill="rgb(213,121,41)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="719.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="98.5626%" y="693" width="0.0293%" height="15" fill="rgb(240,92,3)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="703.50"></text></g><g><title>do_mmap (1 samples, 0.03%)</title><rect x="98.5626%" y="677" width="0.0293%" height="15" fill="rgb(205,123,3)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="687.50"></text></g><g><title>mmap_region (1 samples, 0.03%)</title><rect x="98.5626%" y="661" width="0.0293%" height="15" fill="rgb(205,97,47)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="671.50"></text></g><g><title>vm_area_alloc (1 samples, 0.03%)</title><rect x="98.5626%" y="645" width="0.0293%" height="15" fill="rgb(247,152,14)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="655.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="98.5626%" y="629" width="0.0293%" height="15" fill="rgb(248,195,53)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="639.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.03%)</title><rect x="98.5626%" y="613" width="0.0293%" height="15" fill="rgb(226,201,16)" fg:x="3360" fg:w="1"/><text x="98.6798%" y="623.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.03%)</title><rect x="98.5920%" y="661" width="0.0293%" height="15" fill="rgb(205,98,0)" fg:x="3361" fg:w="1"/><text x="98.7091%" y="671.50"></text></g><g><title>_compound_head (5 samples, 0.15%)</title><rect x="98.6213%" y="661" width="0.1467%" height="15" fill="rgb(214,191,48)" fg:x="3362" fg:w="5"/><text x="98.7385%" y="671.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="98.7680%" y="629" width="0.0293%" height="15" fill="rgb(237,112,39)" fg:x="3367" fg:w="1"/><text x="98.8852%" y="639.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.03%)</title><rect x="98.7680%" y="613" width="0.0293%" height="15" fill="rgb(247,203,27)" fg:x="3367" fg:w="1"/><text x="98.8852%" y="623.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="98.7680%" y="597" width="0.0293%" height="15" fill="rgb(235,124,28)" fg:x="3367" fg:w="1"/><text x="98.8852%" y="607.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="98.7973%" y="629" width="0.0293%" height="15" fill="rgb(208,207,46)" fg:x="3368" fg:w="1"/><text x="98.9145%" y="639.50"></text></g><g><title>page_remove_rmap (3 samples, 0.09%)</title><rect x="98.7680%" y="645" width="0.0880%" height="15" fill="rgb(234,176,4)" fg:x="3367" fg:w="3"/><text x="98.8852%" y="655.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="98.8266%" y="629" width="0.0293%" height="15" fill="rgb(230,133,28)" fg:x="3369" fg:w="1"/><text x="98.9438%" y="639.50"></text></g><g><title>__mem_cgroup_uncharge_list (2 samples, 0.06%)</title><rect x="98.8853%" y="581" width="0.0587%" height="15" fill="rgb(211,137,40)" fg:x="3371" fg:w="2"/><text x="99.0025%" y="591.50"></text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="98.9146%" y="565" width="0.0293%" height="15" fill="rgb(254,35,13)" fg:x="3372" fg:w="1"/><text x="99.0318%" y="575.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="98.9440%" y="581" width="0.0293%" height="15" fill="rgb(225,49,51)" fg:x="3373" fg:w="1"/><text x="99.0612%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="98.9733%" y="581" width="0.0293%" height="15" fill="rgb(251,10,15)" fg:x="3374" fg:w="1"/><text x="99.0905%" y="591.50"></text></g><g><title>free_unref_page_commit (12 samples, 0.35%)</title><rect x="99.0026%" y="565" width="0.3520%" height="15" fill="rgb(228,207,15)" fg:x="3375" fg:w="12"/><text x="99.1198%" y="575.50"></text></g><g><title>free_pcppages_bulk (11 samples, 0.32%)</title><rect x="99.0320%" y="549" width="0.3227%" height="15" fill="rgb(241,99,19)" fg:x="3376" fg:w="11"/><text x="99.1492%" y="559.50"></text></g><g><title>__free_one_page (9 samples, 0.26%)</title><rect x="99.0906%" y="533" width="0.2640%" height="15" fill="rgb(207,104,49)" fg:x="3378" fg:w="9"/><text x="99.2078%" y="543.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="99.3253%" y="517" width="0.0293%" height="15" fill="rgb(234,99,18)" fg:x="3386" fg:w="1"/><text x="99.4425%" y="527.50"></text></g><g><title>free_unref_page_list (13 samples, 0.38%)</title><rect x="99.0026%" y="581" width="0.3813%" height="15" fill="rgb(213,191,49)" fg:x="3375" fg:w="13"/><text x="99.1198%" y="591.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="99.3546%" y="565" width="0.0293%" height="15" fill="rgb(210,226,19)" fg:x="3387" fg:w="1"/><text x="99.4718%" y="575.50"></text></g><g><title>free_unref_page_prepare (1 samples, 0.03%)</title><rect x="99.3840%" y="581" width="0.0293%" height="15" fill="rgb(229,97,18)" fg:x="3388" fg:w="1"/><text x="99.5012%" y="591.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.09%)</title><rect x="99.5600%" y="565" width="0.0880%" height="15" fill="rgb(211,167,15)" fg:x="3394" fg:w="3"/><text x="99.6772%" y="575.50"></text></g><g><title>cgroup_rstat_updated (2 samples, 0.06%)</title><rect x="99.5893%" y="549" width="0.0587%" height="15" fill="rgb(210,169,34)" fg:x="3395" fg:w="2"/><text x="99.7065%" y="559.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (9 samples, 0.26%)</title><rect x="99.4133%" y="581" width="0.2640%" height="15" fill="rgb(241,121,31)" fg:x="3389" fg:w="9"/><text x="99.5305%" y="591.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="99.6480%" y="565" width="0.0293%" height="15" fill="rgb(232,40,11)" fg:x="3397" fg:w="1"/><text x="99.7652%" y="575.50"></text></g><g><title>free_pages_and_swap_cache (29 samples, 0.85%)</title><rect x="98.8560%" y="613" width="0.8507%" height="15" fill="rgb(205,86,26)" fg:x="3370" fg:w="29"/><text x="98.9732%" y="623.50">f..</text></g><g><title>release_pages (29 samples, 0.85%)</title><rect x="98.8560%" y="597" width="0.8507%" height="15" fill="rgb(231,126,28)" fg:x="3370" fg:w="29"/><text x="98.9732%" y="607.50">r..</text></g><g><title>uncharge_folio (1 samples, 0.03%)</title><rect x="99.6773%" y="581" width="0.0293%" height="15" fill="rgb(219,221,18)" fg:x="3398" fg:w="1"/><text x="99.7945%" y="591.50"></text></g><g><title>tlb_flush_mmu (31 samples, 0.91%)</title><rect x="98.8560%" y="645" width="0.9094%" height="15" fill="rgb(211,40,0)" fg:x="3370" fg:w="31"/><text x="98.9732%" y="655.50">t..</text></g><g><title>tlb_batch_pages_flush (31 samples, 0.91%)</title><rect x="98.8560%" y="629" width="0.9094%" height="15" fill="rgb(239,85,43)" fg:x="3370" fg:w="31"/><text x="98.9732%" y="639.50">t..</text></g><g><title>free_swap_cache (2 samples, 0.06%)</title><rect x="99.7067%" y="613" width="0.0587%" height="15" fill="rgb(231,55,21)" fg:x="3399" fg:w="2"/><text x="99.8238%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (42 samples, 1.23%)</title><rect x="98.5626%" y="885" width="1.2320%" height="15" fill="rgb(225,184,43)" fg:x="3360" fg:w="42"/><text x="98.6798%" y="895.50">en..</text></g><g><title>do_syscall_64 (42 samples, 1.23%)</title><rect x="98.5626%" y="869" width="1.2320%" height="15" fill="rgb(251,158,41)" fg:x="3360" fg:w="42"/><text x="98.6798%" y="879.50">do..</text></g><g><title>x64_sys_call (42 samples, 1.23%)</title><rect x="98.5626%" y="853" width="1.2320%" height="15" fill="rgb(234,159,37)" fg:x="3360" fg:w="42"/><text x="98.6798%" y="863.50">x6..</text></g><g><title>__x64_sys_exit_group (41 samples, 1.20%)</title><rect x="98.5920%" y="837" width="1.2027%" height="15" fill="rgb(216,204,22)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="847.50">__..</text></g><g><title>do_group_exit (41 samples, 1.20%)</title><rect x="98.5920%" y="821" width="1.2027%" height="15" fill="rgb(214,17,3)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="831.50">do..</text></g><g><title>do_exit (41 samples, 1.20%)</title><rect x="98.5920%" y="805" width="1.2027%" height="15" fill="rgb(212,111,17)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="815.50">do..</text></g><g><title>exit_mm (41 samples, 1.20%)</title><rect x="98.5920%" y="789" width="1.2027%" height="15" fill="rgb(221,157,24)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="799.50">ex..</text></g><g><title>mmput (41 samples, 1.20%)</title><rect x="98.5920%" y="773" width="1.2027%" height="15" fill="rgb(252,16,13)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="783.50">mm..</text></g><g><title>__mmput (41 samples, 1.20%)</title><rect x="98.5920%" y="757" width="1.2027%" height="15" fill="rgb(221,62,2)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="767.50">__..</text></g><g><title>exit_mmap (41 samples, 1.20%)</title><rect x="98.5920%" y="741" width="1.2027%" height="15" fill="rgb(247,87,22)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="751.50">ex..</text></g><g><title>unmap_vmas (41 samples, 1.20%)</title><rect x="98.5920%" y="725" width="1.2027%" height="15" fill="rgb(215,73,9)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="735.50">un..</text></g><g><title>unmap_single_vma (41 samples, 1.20%)</title><rect x="98.5920%" y="709" width="1.2027%" height="15" fill="rgb(207,175,33)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="719.50">un..</text></g><g><title>unmap_page_range (41 samples, 1.20%)</title><rect x="98.5920%" y="693" width="1.2027%" height="15" fill="rgb(243,129,54)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="703.50">un..</text></g><g><title>zap_pmd_range.isra.0 (41 samples, 1.20%)</title><rect x="98.5920%" y="677" width="1.2027%" height="15" fill="rgb(227,119,45)" fg:x="3361" fg:w="41"/><text x="98.7091%" y="687.50">za..</text></g><g><title>zap_pte_range (35 samples, 1.03%)</title><rect x="98.7680%" y="661" width="1.0267%" height="15" fill="rgb(205,109,36)" fg:x="3367" fg:w="35"/><text x="98.8852%" y="671.50">z..</text></g><g><title>vm_normal_page (1 samples, 0.03%)</title><rect x="99.7653%" y="645" width="0.0293%" height="15" fill="rgb(205,6,39)" fg:x="3401" fg:w="1"/><text x="99.8825%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.03%)</title><rect x="99.7947%" y="869" width="0.0293%" height="15" fill="rgb(221,32,16)" fg:x="3402" fg:w="1"/><text x="99.9118%" y="879.50"></text></g><g><title>fringe-vs-astar (3,404 samples, 99.85%)</title><rect x="0.0000%" y="901" width="99.8533%" height="15" fill="rgb(228,144,50)" fg:x="0" fg:w="3404"/><text x="0.1172%" y="911.50">fringe-vs-astar</text></g><g><title>main_arena (2 samples, 0.06%)</title><rect x="99.7947%" y="885" width="0.0587%" height="15" fill="rgb(229,201,53)" fg:x="3402" fg:w="2"/><text x="99.9118%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.8240%" y="869" width="0.0293%" height="15" fill="rgb(249,153,27)" fg:x="3403" fg:w="1"/><text x="99.9412%" y="879.50"></text></g><g><title>all (3,409 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(227,106,25)" fg:x="0" fg:w="3409"/><text x="0.1172%" y="927.50"></text></g><g><title>perf-exec (5 samples, 0.15%)</title><rect x="99.8533%" y="901" width="0.1467%" height="15" fill="rgb(230,65,29)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.15%)</title><rect x="99.8533%" y="885" width="0.1467%" height="15" fill="rgb(221,57,46)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="895.50"></text></g><g><title>do_syscall_64 (5 samples, 0.15%)</title><rect x="99.8533%" y="869" width="0.1467%" height="15" fill="rgb(229,161,17)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="879.50"></text></g><g><title>x64_sys_call (5 samples, 0.15%)</title><rect x="99.8533%" y="853" width="0.1467%" height="15" fill="rgb(222,213,11)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="863.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.15%)</title><rect x="99.8533%" y="837" width="0.1467%" height="15" fill="rgb(235,35,13)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="847.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.15%)</title><rect x="99.8533%" y="821" width="0.1467%" height="15" fill="rgb(233,158,34)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="831.50"></text></g><g><title>bprm_execve (5 samples, 0.15%)</title><rect x="99.8533%" y="805" width="0.1467%" height="15" fill="rgb(215,151,48)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="815.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.15%)</title><rect x="99.8533%" y="789" width="0.1467%" height="15" fill="rgb(229,84,14)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="799.50"></text></g><g><title>exec_binprm (5 samples, 0.15%)</title><rect x="99.8533%" y="773" width="0.1467%" height="15" fill="rgb(229,68,14)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="783.50"></text></g><g><title>search_binary_handler (5 samples, 0.15%)</title><rect x="99.8533%" y="757" width="0.1467%" height="15" fill="rgb(243,106,26)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="767.50"></text></g><g><title>load_elf_binary (5 samples, 0.15%)</title><rect x="99.8533%" y="741" width="0.1467%" height="15" fill="rgb(206,45,38)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="751.50"></text></g><g><title>begin_new_exec (5 samples, 0.15%)</title><rect x="99.8533%" y="725" width="0.1467%" height="15" fill="rgb(226,6,15)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="735.50"></text></g><g><title>perf_event_exec (5 samples, 0.15%)</title><rect x="99.8533%" y="709" width="0.1467%" height="15" fill="rgb(232,22,54)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="719.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.15%)</title><rect x="99.8533%" y="693" width="0.1467%" height="15" fill="rgb(229,222,32)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="703.50"></text></g><g><title>ctx_resched (5 samples, 0.15%)</title><rect x="99.8533%" y="677" width="0.1467%" height="15" fill="rgb(228,62,29)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="687.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.15%)</title><rect x="99.8533%" y="661" width="0.1467%" height="15" fill="rgb(251,103,34)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="671.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.15%)</title><rect x="99.8533%" y="645" width="0.1467%" height="15" fill="rgb(233,12,30)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="655.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.15%)</title><rect x="99.8533%" y="629" width="0.1467%" height="15" fill="rgb(238,52,0)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="639.50"></text></g><g><title>native_write_msr (5 samples, 0.15%)</title><rect x="99.8533%" y="613" width="0.1467%" height="15" fill="rgb(223,98,5)" fg:x="3404" fg:w="5"/><text x="99.9705%" y="623.50"></text></g></svg></svg>